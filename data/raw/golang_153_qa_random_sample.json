[
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2419",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-25T04:59:02.889000",
                        "user": "Ariee",
                        "text": "hello?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-25T04:59:35.101000",
                        "user": "Ariee",
                        "text": "do anyone knowpascal's triangle\\\\"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-25T04:59:43.831000",
                        "user": "Ariee",
                        "text": "i need to create one"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-25T04:59:49.468000",
                        "user": "Ariee",
                        "text": "and me noob"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-25T04:59:52.052000",
                        "user": "Ariee",
                        "text": "lol"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-25T05:00:23.952000",
                        "user": "Ariee",
                        "text": "help?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-25T05:00:47.786000",
                        "user": "Maram",
                        "text": "first waiting more than 30 seconds for a response will be endearing to people who might give you help"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-25T05:01:18.032000",
                        "user": "Maram",
                        "text": "second"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-25T05:01:35.868000",
                        "user": "Maram",
                        "text": "golang pascals triangle turned up a worthwhile result https://www.golangprograms.com/programingolanguagetoprintpascalstriangle.html"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-25T05:02:10.201000",
                        "user": "Ariee",
                        "text": "I will do that"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-25T05:02:26.790000",
                        "user": "Maram",
                        "text": "google is your friend"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-25T05:02:40.867000",
                        "user": "Maram",
                        "text": "<programming language> <topic you\\'re interested in>"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2577",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-30T18:32:57.003000",
                        "user": "Celise",
                        "text": "Hi there can anyone help me with a nil pointer exception? Bene scratching my head for a while https://goplay.space/#8uBLH277Enr"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-30T18:33:59.124000",
                        "user": "Maram",
                        "text": "man"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-30T18:34:05.900000",
                        "user": "Maram",
                        "text": "well first off webgl is perfectly fine"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-30T18:34:15.844000",
                        "user": "Maram",
                        "text": "honestly gopherjs is just"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-30T18:34:26.400000",
                        "user": "Maram",
                        "text": "javascript with extra steps"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-30T18:38:02.681000",
                        "user": "Shritha",
                        "text": "damn"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-30T18:38:05.468000",
                        "user": "Shritha",
                        "text": "i forgot gopherjs is a thing"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-30T18:38:17.665000",
                        "user": "Maram",
                        "text": "you still have to know how to write javascript"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-30T18:38:29.045000",
                        "user": "Shritha",
                        "text": "I do?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-30T18:38:35.874000",
                        "user": "Maram",
                        "text": "if you wanna use gopherjs"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-30T18:38:59.312000",
                        "user": "Shritha",
                        "text": "I do know JavaScript though :Thonk:"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-30T18:39:01.729000",
                        "user": "Shritha",
                        "text": "I just don't like dealing with it"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-30T18:39:03.933000",
                        "user": "Maram",
                        "text": "i'm so sorry"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-30T18:41:51.953000",
                        "user": "Malaquias",
                        "text": "@Ainsley you arent checking the error from newmigrate"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-30T18:41:57.749000",
                        "user": "Mian",
                        "text": "goja is nice too"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-30T18:42:07.747000",
                        "user": "Malaquias",
                        "text": "how do you know if `m` is valid"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-30T18:43:14.782000",
                        "user": "Malaquias",
                        "text": "you also arent checking the error from NewWithDatabaseInstance"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-30T18:43:46.023000",
                        "user": "Shritha",
                        "text": "oof no setTimeout"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-30T18:43:48.241000",
                        "user": "Shritha",
                        "text": "in a Go impl no less"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-30T18:43:49.819000",
                        "user": "Shritha",
                        "text": "damn"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-30T18:43:53.762000",
                        "user": "Celise",
                        "text": "Thank you @Madxmike very much"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-30T18:44:51.759000",
                        "user": "Celise",
                        "text": "Fixing the error still yields a nil pointer \ud83d\ude26"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-30T18:46:06.580000",
                        "user": "Malaquias",
                        "text": "can you post the updated code"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-30T18:47:43.276000",
                        "user": "Celise",
                        "text": "Actually its working \ud83d\ude42"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-30T18:47:45.478000",
                        "user": "Celise",
                        "text": "Thank you"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "79",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-04T11:04:39.670000",
                        "user": "Baker",
                        "text": "Can thins channel be renamed to golang?? Golang is just the name of the website and people calling it golang isn't technically right \\\\o/"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-04T11:04:56.314000",
                        "user": "Baker",
                        "text": "Open to hearing reasons against it"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-04T11:05:38.848000",
                        "user": "Zulfiqar",
                        "text": "godiscussion"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-04T11:06:01.066000",
                        "user": "Baker",
                        "text": "Sure"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-04T11:08:58.914000",
                        "user": "Zlatko",
                        "text": "With there being only a handful of channels I don't think there can be any confusion here. But lets hear what other people think"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-04T11:09:23.301000",
                        "user": "Lourenco",
                        "text": "None"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-04T11:09:27.305000",
                        "user": "Lourenco",
                        "text": "I don't see a reason to change it myself."
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-04T11:09:44.528000",
                        "user": "Zulfiqar",
                        "text": "but it could change to godiscussion"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-04T11:11:41.771000",
                        "user": "Zulfiqar",
                        "text": "I actually got confused which is the general or discussion chat when I joined this server"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-04T11:12:14.344000",
                        "user": "Lourenco",
                        "text": "Honestly to me it matters little what the channel is named I think it's okay either way. But we'll see what others think."
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-04T11:14:05.000000",
                        "user": "Baker",
                        "text": "Strictly speaking #golang should be renamed to #go because there is no language called golang; golang.org is just the name of the website"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-04T11:14:42.987000",
                        "user": "Zulfiqar",
                        "text": "`#go` much shorter"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-04T11:21:30.929000",
                        "user": "Zlatko",
                        "text": "```Is the language called Go or Golang?The language is called Go. The golang moniker arose because the web site is golang.org not go.org which was not available to us. Many use the golang name though and it is handy as a label. For instance the Twitter tag for the language is #golang\". The language\\'s name is just plain Go regardless.A side note: Although the official logo has two capital letters the language name is written Go not GO.```source: <https://tip.golang.org/doc/faq#go_or_golang>"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-04T11:22:03.330000",
                        "user": "Zlatko",
                        "text": "\u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-04T11:23:19.538000",
                        "user": "Ameia",
                        "text": "it would be too unusual to see such short channel name speaking about people's perception (at least mine one)"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "95",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-05T10:35:53.020000",
                        "user": "Anshika",
                        "text": "Generic golang / grpc question.Let's say I have 2 modules: REST HTTP api which communicates to enduser with REST style HTTP messages (json) Backend which does some connection to db and interacts with the API over protocolbuffers (grpc)Which of these modules should contain the .proto files?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-05T10:51:43.520000",
                        "user": "Anshika",
                        "text": "Don't the proto things push out .go files? First timing this grpc and learning as I go \ud83d\ude04"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-05T10:58:08.028000",
                        "user": "Martins",
                        "text": "Yeah they do but when you have more then one API that uses the proto file in diffrent language then if you store it in a diffrent repo you wont have to update the API that holds the proto file for another API. Lets say golang API has the proto file v1. You have made a second nodejs API that needs a little mod in proto file. To do that you would need to update the golang API repo not just the proto file repo with the backward compatibility for golang API."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-05T10:59:15.543000",
                        "user": "Martins",
                        "text": "So the best option is a seperate repo with proto so in an update you don;t have to update each API that uses the proto file. Protofile are easy to maintain backward compatibility on each file update."
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-05T11:05:25.548000",
                        "user": "Anshika",
                        "text": "I'm also thinking about having a separate repo with proto files and on the API end try to marshal the requests / responses to json from pb variables"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-05T11:05:45.019000",
                        "user": "Anshika",
                        "text": "This is hurting my brain \ud83d\ude04"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-05T11:06:08.044000",
                        "user": "Bing",
                        "text": "Is this a bad pattern to follow in go? Say the `aumo` package is my main business logic but I want to split it down to more pieces. I'll be writing my models in the appropriate services and not in a `models` package. Could this lead to circular dependencies?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2460",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-26T15:29:32.696000",
                        "user": "Cael",
                        "text": "is someone using vscode?I just debugged and as I wanted to start a new debug session I get `could not launch process: not an executable file`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-26T15:30:10.103000",
                        "user": "Graelyn",
                        "text": "I used for a long time and never had a problem"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-26T15:31:07.342000",
                        "user": "Cael",
                        "text": "ah works now"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-26T15:31:15.472000",
                        "user": "Graelyn",
                        "text": "nice"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-26T15:33:22.130000",
                        "user": "Cael",
                        "text": "now I just need to find out why one of my deps panic \ud83d\ude05"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-26T15:44:26.232000",
                        "user": "Luka",
                        "text": "```gopackage eventsimport ( reflect\")//Handler is event handler global statevar Handler Events = map[reflect.Type][]func(interface{}){}// Events is datastructure that supports event system. you // can register event responces and then trigger them all from// different placetype Events map[reflect.Type][]func(interface{})//On registers event responcefunc (e Events) On(kind interface{} task func(interface{})) { ev := e tp := reflect.TypeOf(kind) if _ ok := ev[tp]; !ok { ev[tp] = []func(interface{}){} } ev[tp] = append(ev[tp] task)}//Fire triggers all event responces for given eventfunc (e Events) Fire(kind interface{} event interface{}) { val ok := (e)[reflect.TypeOf(kind)] if !ok { return } for _ i := range val { i(event) }}``` is there better way to implement event system in go?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-26T15:46:48.971000",
                        "user": "Layna",
                        "text": "I did some experiments with that ^"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-26T15:46:53.604000",
                        "user": "Layna",
                        "text": "but used some heavy reflection"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-26T15:47:07.903000",
                        "user": "Layna",
                        "text": "had a map[reflect.Type].. stuff too"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-26T15:54:56.354000",
                        "user": "Layna",
                        "text": "@mlokis https://play.golang.org/p/Tfw1RfyuNsb"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-26T15:55:09.702000",
                        "user": "Layna",
                        "text": "Although I believe in most cases interfaces would work better perhaps"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-26T15:55:47.347000",
                        "user": "Layna",
                        "text": "or just type switches"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-26T16:04:26.419000",
                        "user": "Layna",
                        "text": "https://go2goplay.golang.org/p/nuQNtGqjNZ with generics (no more reflect.Call)"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-26T18:17:20.776000",
                        "user": "Layna",
                        "text": "easier than that?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-26T18:20:19.957000",
                        "user": "Alyanna",
                        "text": "go chi gang"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-26T18:27:30.907000",
                        "user": "Shritha",
                        "text": "^"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-26T18:27:38.224000",
                        "user": "Shritha",
                        "text": "use go chi"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-26T18:27:46.468000",
                        "user": "Shritha",
                        "text": "ok this isn't important but it confuses me"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-26T18:27:51.159000",
                        "user": "Shritha",
                        "text": "I have this line: `for ok := true; ok; ok = renderer.EventWait() {`"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-26T18:27:55.868000",
                        "user": "Shritha",
                        "text": "as it is it works"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-26T18:28:02.606000",
                        "user": "Shritha",
                        "text": "but if I do `for renderer.EventWait() {` it doesn't work"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-26T18:28:06.382000",
                        "user": "Shritha",
                        "text": "I think the loop just breaks"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-26T18:28:16.854000",
                        "user": "Shritha",
                        "text": "yup"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-26T18:28:20.675000",
                        "user": "Shritha",
                        "text": "am I missing anything here?"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-26T18:28:37.311000",
                        "user": "Shritha",
                        "text": "does `for ok := true; ok` force the loop to iterate at least once?"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-26T18:31:12.580000",
                        "user": "Alyanna",
                        "text": "Yes"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-26T18:31:24.915000",
                        "user": "Alyanna",
                        "text": "The last part is evaluated at the end of every loop"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-26T19:03:04.811000",
                        "user": "Shritha",
                        "text": "figured"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-26T19:03:06.085000",
                        "user": "Shritha",
                        "text": "kinda wack tho"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2189",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-22T15:46:28.292000",
                        "user": "Yassin",
                        "text": "Hi there ```gotype ProfileForm struct { Name string `form:\"name binding:\"required\"` Avatar multipart.FileHeader `form:\"avatar binding:\"required\"`}router.POST(\"/profile func(c gin.Context) { var form ProfileForm // in this case proper binding will be automatically selected if err := c.ShouldBind(&form); err != nil { c.String(http.StatusBadRequest bad request\") return } err := c.SaveUploadedFile(form.Avatar form.Avatar.Filename) if err != nil { c.String(http.StatusInternalServerError unknown error\") return } // db.Save(&form) c.String(http.StatusOK ok\") })```I\\'m using Gin and have a file input in the html form which is image and optional.If I don\\'t select any image for that input file `c.ShouldBind(&form)` give me following error:`&json.SyntaxError{msg:\"unexpected end of JSON input Offset:0}`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-22T15:47:51.624000",
                        "user": "Hewitt",
                        "text": "you didnt paste the error"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-22T15:48:40.505000",
                        "user": "Yassin",
                        "text": "Edited just an accident Enter!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-22T15:50:32.257000",
                        "user": "Yassin",
                        "text": "Its fine if I put the image and it will be uploaded correctly but when its not provided show me that error"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-22T15:52:06.072000",
                        "user": "Olivia",
                        "text": "i mean"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-22T15:52:15.601000",
                        "user": "Olivia",
                        "text": "part of the problem is you're not doing anything with the error"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-22T15:52:28.834000",
                        "user": "Olivia",
                        "text": "it\\'s only an unknown error because you\\'re literally IGNORING THE ERROR go is giving you"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-22T15:57:07.000000",
                        "user": "Yassin",
                        "text": "I know what you are talking but first of all the aforementioned code is just a sample because I guess its somehow a bug or something wrong with Gin when you dont select an image"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-22T15:57:15.685000",
                        "user": "Olivia",
                        "text": "well"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-22T15:57:17.457000",
                        "user": "Olivia",
                        "text": "you can speculate"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-22T15:57:22.022000",
                        "user": "Olivia",
                        "text": "or you can actaully print the error out"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-22T15:57:25.893000",
                        "user": "Olivia",
                        "text": "and find out what's happening"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-22T15:57:30.974000",
                        "user": "Olivia",
                        "text": "\u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-22T15:59:09.894000",
                        "user": "Olivia",
                        "text": "ALSO"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-22T15:59:17.362000",
                        "user": "Olivia",
                        "text": "if you don't show real code you can't get real help"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-22T15:59:30.275000",
                        "user": "Aris",
                        "text": "hi @everyone"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-22T15:59:31.766000",
                        "user": "Olivia",
                        "text": "so there's that too"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-22T15:59:34.322000",
                        "user": "Olivia",
                        "text": "please don't do that"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-22T15:59:40.207000",
                        "user": "Aris",
                        "text": "its me again"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-22T15:59:50.410000",
                        "user": "Olivia",
                        "text": "greetings do not warrant alerting everyone in the server"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-22T16:00:00.672000",
                        "user": "Aris",
                        "text": "k"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-22T16:00:01.393000",
                        "user": "Olivia",
                        "text": "we're happy to have you"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-22T16:00:04.309000",
                        "user": "Olivia",
                        "text": "but not that happy"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-22T16:00:07.629000",
                        "user": "Aris",
                        "text": "ty"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-22T16:00:12.481000",
                        "user": "Aris",
                        "text": "i wanna ask man"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-22T16:00:16.846000",
                        "user": "Olivia",
                        "text": "go ahead"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-22T16:00:22.776000",
                        "user": "Aris",
                        "text": "im new so im gonna ask a lot"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-22T16:00:25.890000",
                        "user": "Olivia",
                        "text": "that's fine"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-22T16:00:27.225000",
                        "user": "Olivia",
                        "text": "just don't @ everyone"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-22T16:00:32.362000",
                        "user": "Aris",
                        "text": "ok chill"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-22T16:00:47.650000",
                        "user": "Hewitt",
                        "text": "> deezy: we're happy to have you> deezy: but not that happyneeds to be pinned somewhere lol"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-22T16:01:00.028000",
                        "user": "Aris",
                        "text": "so i setup vscode and i tried println"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-22T16:01:07.968000",
                        "user": "Aris",
                        "text": "but it doesn't work"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-22T16:01:21.148000",
                        "user": "Aris",
                        "text": "also codes not being colorful"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-22T16:01:31.053000",
                        "user": "Aris",
                        "text": "did i do something wrong"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-22T16:01:34.283000",
                        "user": "Hewitt",
                        "text": "did you install the go language extension"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-22T16:01:39.003000",
                        "user": "Aris",
                        "text": "yes"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-22T16:01:53.712000",
                        "user": "Hewitt",
                        "text": "are you in a .go file"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-22T16:02:04.482000",
                        "user": "Aris",
                        "text": "how will i do that"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-22T16:02:11.649000",
                        "user": "Aris",
                        "text": "i just opened folder and tried"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-22T16:02:21.785000",
                        "user": "Hewitt",
                        "text": "save the file as a .go file"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-22T16:02:29.653000",
                        "user": "Hewitt",
                        "text": "like `main.go`"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-22T16:02:39.505000",
                        "user": "Aris",
                        "text": "hmm"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-22T16:02:44.764000",
                        "user": "Aris",
                        "text": "hold on"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-22T16:03:15.165000",
                        "user": "Hewitt",
                        "text": "it cant highlight syntax if it doesnt know what language you are writing"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-22T16:05:52.614000",
                        "user": "Aris",
                        "text": "it worked"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-22T16:05:56.242000",
                        "user": "Aris",
                        "text": "thanks dude"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-22T16:06:12.858000",
                        "user": "Hewitt",
                        "text": "also are you using println or fmt.println"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-22T16:07:47.686000",
                        "user": "Jkari",
                        "text": "an unrelated tidbit: Go is perfectly readable without syntax highlighting"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-22T16:07:55.765000",
                        "user": "Jkari",
                        "text": "The documentations don't have highlighting"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-22T16:08:19.456000",
                        "user": "Olivia",
                        "text": ":robpike:"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-22T16:09:04.653000",
                        "user": "Aris",
                        "text": "fmt.Println"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-22T16:09:08.899000",
                        "user": "Hewitt",
                        "text": "okay cool"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2317",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-26T17:21:45.767000",
                        "user": "Phanuel",
                        "text": "how does one use local packages in go? say I want to have main package and a terminal package (or subpackage or whatever). go wiki only mentions vendoring but it's not that it's all my own code..."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-26T17:23:24.955000",
                        "user": "Hewitt",
                        "text": "`import <package name>/<subpoackage>`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-26T17:25:04.569000",
                        "user": "Phanuel",
                        "text": "ok so it does have to live in a subfolder right?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-26T17:29:47.382000",
                        "user": "Jkari",
                        "text": "eh"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-26T17:29:49.951000",
                        "user": "Jkari",
                        "text": "you can use a replace directive"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-26T17:30:07.446000",
                        "user": "Jkari",
                        "text": "but what you're doing sounds like subpackages"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-26T17:30:09.420000",
                        "user": "Jkari",
                        "text": "so yea"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2336",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-27T03:24:00.895000",
                        "user": "Godwin",
                        "text": "hi"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-27T03:24:21.621000",
                        "user": "Yitzchok",
                        "text": "hi"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-27T03:24:24.811000",
                        "user": "Godwin",
                        "text": "Can someone help me?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-27T03:26:03.485000",
                        "user": "Yitzchok",
                        "text": "not if you don't present something with which you need help \ud83d\ude42"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-27T03:26:22.584000",
                        "user": "Godwin",
                        "text": "\ud83d\ude02"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-27T03:27:11.173000",
                        "user": "Godwin",
                        "text": "how to print gorountine anonymous func?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-27T03:32:24.644000",
                        "user": "Godwin",
                        "text": "None"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-27T03:38:03.833000",
                        "user": "Lu",
                        "text": "Those goroutines are not guaranteed to run before your main function exits"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-27T03:38:28.212000",
                        "user": "Lu",
                        "text": "Or at the very least not guaranteed to complete"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-27T03:38:31.561000",
                        "user": "Godwin",
                        "text": "if i use channel?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-27T03:38:44.069000",
                        "user": "Lu",
                        "text": "You could use a channel"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-27T03:39:02.788000",
                        "user": "Lu",
                        "text": "You just need something to make sure your program doesn't exit before all goroutines complete"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-27T03:39:23.612000",
                        "user": "Godwin",
                        "text": "how would i do that?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-27T03:40:09.807000",
                        "user": "Lu",
                        "text": "With channels or a `sync.WaitGroup`"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-27T03:40:37.208000",
                        "user": "Lu",
                        "text": "https://golang.org/pkg/sync/#WaitGroup"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-27T03:40:43.281000",
                        "user": "Godwin",
                        "text": "and channel?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-27T03:41:02.743000",
                        "user": "Lu",
                        "text": "You only need a channel if you want to send data between goroutines"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-27T03:41:51.465000",
                        "user": "Godwin",
                        "text": "None"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-27T03:41:52.187000",
                        "user": "Godwin",
                        "text": "?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-27T03:42:15.839000",
                        "user": "Lu",
                        "text": "That basically defeats the purpose of the goroutine"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-27T03:42:24.422000",
                        "user": "Godwin",
                        "text": "yes"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-27T03:42:25.519000",
                        "user": "Godwin",
                        "text": "is low"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-27T03:42:28.076000",
                        "user": "Lu",
                        "text": "The loop won't continue until it reads the value"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-27T03:42:43.671000",
                        "user": "Lu",
                        "text": "Which is basically the same as not using concurrency in that case"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-27T03:42:47.167000",
                        "user": "Lu",
                        "text": "Just use a waitgroup"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-27T03:43:07.584000",
                        "user": "Godwin",
                        "text": "sync?"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-27T03:43:35.237000",
                        "user": "Lu",
                        "text": "`sync.WaitGroup` the thing I linked above"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-27T03:43:53.164000",
                        "user": "Godwin",
                        "text": "None"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-27T03:44:10.894000",
                        "user": "Godwin",
                        "text": "its work"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-27T03:46:35.454000",
                        "user": "Lu",
                        "text": "You could use a buffered channel too since you know how many times you'll send to it"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-27T03:47:10.416000",
                        "user": "Godwin",
                        "text": "is that right then?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-27T03:48:35.336000",
                        "user": "Lu",
                        "text": "I would just use a waitgroup though"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-27T03:48:50.523000",
                        "user": "Lu",
                        "text": "There's no reason you need to send the data out of the goroutine if you're just printing it"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-27T03:48:58.027000",
                        "user": "Lu",
                        "text": "You just need to wait for the goroutines to complete"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-27T03:50:01.297000",
                        "user": "Godwin",
                        "text": "is because i need a method to get a response from the instant server multi threading"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-27T03:52:23.999000",
                        "user": "Crispin",
                        "text": "```doc err := goquery.NewDocumentFromReader(resp.Body) if err != nil { log.Fatal(err) } log.Print(doc.Find(\".flproductsizeitem\"))```I want to get the sizes button on that page: `https://www.footlocker.fr/fr/p/nikekyrie6hommechaussures78053?v=314101528504`"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-27T03:56:32.586000",
                        "user": "Godwin",
                        "text": "@Doad okay?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2195",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-22T20:05:08.875000",
                        "user": "Stelian",
                        "text": "how can convert a slice to a []byte... i think something along these lines is close... https://play.golang.org/p/tx6wZHarb3j"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-22T20:08:39.455000",
                        "user": "Jkari",
                        "text": "[]byte is a slice lol"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-22T20:08:41.328000",
                        "user": "Jkari",
                        "text": "a slice of bytes"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-22T20:09:13.635000",
                        "user": "Stelian",
                        "text": "int slice `[]int`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-22T20:09:32.844000",
                        "user": "Jkari",
                        "text": "what's the format?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-22T20:09:39.244000",
                        "user": "Jkari",
                        "text": "do you want LE int64 of each of them?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-22T20:09:46.674000",
                        "user": "Jkari",
                        "text": "or do you want to cast it into bytes as is?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-22T20:09:58.994000",
                        "user": "Stelian",
                        "text": "LE int64"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-22T20:10:08.657000",
                        "user": "Jkari",
                        "text": "of each?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-22T20:11:05.220000",
                        "user": "Stelian",
                        "text": "yes... i think... in need a []byte to use with C.CBytes() and I am starting with an []int"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-22T20:12:58.283000",
                        "user": "Stelian",
                        "text": "i am thinking if i get LE int64's aligned in memory a pointer to that can be cast back out in C..."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-22T20:13:38.219000",
                        "user": "Stelian",
                        "text": "and C.CBytes() returns an unsafe.Pointer"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-22T20:14:25.869000",
                        "user": "Oshea",
                        "text": "app just passed 10k users"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-22T20:14:29.218000",
                        "user": "Oshea",
                        "text": ":sweats:"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-22T20:15:07.803000",
                        "user": "Jkari",
                        "text": "wtf are you even doing"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-22T20:15:09.575000",
                        "user": "Jkari",
                        "text": "feels XY man"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-22T20:23:16.555000",
                        "user": "Stelian",
                        "text": "i am exporting a go function to c. i cant return a []int so i found C.CBytes which converts a []byte to a C array"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-22T20:23:38.665000",
                        "user": "Stelian",
                        "text": "but i need to go from []int to []byte to use C.CBytes"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-22T20:23:59.671000",
                        "user": "Stelian",
                        "text": "and then i can return the C array"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-22T20:24:13.392000",
                        "user": "Stelian",
                        "text": "that is the plan at least..."
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-22T20:24:21.063000",
                        "user": "Stelian",
                        "text": "it may be a horrible one \ud83d\ude42"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-22T20:26:11.338000",
                        "user": "Jkari",
                        "text": "return int"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-22T20:26:15.119000",
                        "user": "Jkari",
                        "text": "that's how you do arrays in C"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-22T20:26:24.043000",
                        "user": "Jkari",
                        "text": "actually"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-22T20:26:25.500000",
                        "user": "Jkari",
                        "text": "not int"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-22T20:26:49.251000",
                        "user": "Stelian",
                        "text": "you can't return a go pointer that will panic at runtime"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-22T20:27:12.454000",
                        "user": "Jkari",
                        "text": "no you return a C pointer"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-22T20:27:47.510000",
                        "user": "Jkari",
                        "text": "maybe take in a `len int data int` ig"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-22T20:28:26.527000",
                        "user": "Jkari",
                        "text": "or take in `uint` and return `int`"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-22T20:47:07.568000",
                        "user": "Izna",
                        "text": "```type CSlice struct { len int data int}``` will it let u return that"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-22T20:48:03.937000",
                        "user": "Stelian",
                        "text": "you cant return structs but you can return multiple values and it will generate a c struct in the header for you"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-22T20:48:20.311000",
                        "user": "Izna",
                        "text": "so just return that with multiple values"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-22T20:48:40.887000",
                        "user": "Izna",
                        "text": "idk if it will work"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-22T20:49:41.340000",
                        "user": "Stelian",
                        "text": "how are you getting `int`. i dont think `&mySlice` is correct..."
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-22T20:50:23.435000",
                        "user": "Izna",
                        "text": "&myslice is ptr to the slice"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-22T20:50:29.431000",
                        "user": "Izna",
                        "text": "if u want ptr to underlying array"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-22T20:50:33.421000",
                        "user": "Izna",
                        "text": "&myslice[0]"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-22T20:50:34.884000",
                        "user": "Izna",
                        "text": "i believe"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-22T20:50:46.143000",
                        "user": "Stelian",
                        "text": "let me try that real quick..."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-22T20:52:13.576000",
                        "user": "Stelian",
                        "text": "nope. that panics: `panic: runtime error: cgo result has a Go pointer`"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-22T20:52:55.464000",
                        "user": "Izna",
                        "text": "try"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-22T20:53:14.410000",
                        "user": "Izna",
                        "text": "`unsafe.Pointer(&slice[0])`"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-22T20:53:57.507000",
                        "user": "Izna",
                        "text": "btw idk if any of this breaks the go unsafe guidelines so u will have to check urself"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-22T20:54:35.202000",
                        "user": "Stelian",
                        "text": "same panic"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-22T20:54:50.109000",
                        "user": "Izna",
                        "text": "does it want u to like malloc the data or soemthing"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-22T20:54:50.721000",
                        "user": "Izna",
                        "text": "idk"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-22T20:54:52.305000",
                        "user": "Stelian",
                        "text": "i dont think you can bypass the rule of not returning a go pointer"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-22T20:55:15.670000",
                        "user": "Izna",
                        "text": "i barely used cgo so i have no idea what the compiler wants"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-22T20:55:28.317000",
                        "user": "Stelian",
                        "text": "that is why i think i need to go from a []int to a []byte... because then there is a function available to make a C array"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-22T20:55:44.026000",
                        "user": "Izna",
                        "text": "link that function"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-22T20:57:07.577000",
                        "user": "Stelian",
                        "text": "https://golang.org/cmd/cgo/#hdrGo_references_to_C"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-22T20:57:23.580000",
                        "user": "Stelian",
                        "text": "search for C.CBytes"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-22T20:57:52.761000",
                        "user": "Jkari",
                        "text": "you can return structs"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-22T20:57:55.527000",
                        "user": "Jkari",
                        "text": "you just can't use the fields"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-22T20:58:00.510000",
                        "user": "Izna",
                        "text": ">The C array is allocated in the C heap using malloc."
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-22T20:58:04.207000",
                        "user": "Izna",
                        "text": "yeah"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-22T20:58:04.695000",
                        "user": "Izna",
                        "text": "so"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-22T20:58:19.691000",
                        "user": "Izna",
                        "text": "go probably dosent let u pass things heap allocated with go gc"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-04-22T20:58:30.143000",
                        "user": "Izna",
                        "text": "so u will probably have to malloc that slice"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-04-22T20:58:33.756000",
                        "user": "Izna",
                        "text": "idk if this is right"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-04-22T20:58:41.941000",
                        "user": "Jkari",
                        "text": "yea you'll have to"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-04-22T21:01:23.038000",
                        "user": "Jkari",
                        "text": "https://cdn.discordapp.com/attachments/361910177961738244/702624825000198165/Apr2220201600.jpg"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-04-22T21:01:29.912000",
                        "user": "Jkari",
                        "text": "@SeungheonOh"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-04-22T21:02:32.949000",
                        "user": "Izna",
                        "text": "reeeee not using xmalloc"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-04-22T21:04:29.429000",
                        "user": "Jkari",
                        "text": "@SeungheonOh"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-04-22T21:04:35.231000",
                        "user": "Zaily",
                        "text": "hey"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-04-22T21:29:56.957000",
                        "user": "Jkari",
                        "text": "that's what i told you to do but ok"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-04-22T21:31:49.874000",
                        "user": "Jkari",
                        "text": "yw"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "55",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-03T06:04:47.209000",
                        "user": "Anderson",
                        "text": "what would you suggest in case I would need to expose to another package some constants from another package?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-03T06:06:40.626000",
                        "user": "Anderson",
                        "text": "like my package `pkg` needs to export some `glfw` constants (e.g. key codes)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-03T06:07:13.134000",
                        "user": "Tyasia",
                        "text": "give them uppercase names?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-03T06:07:26.400000",
                        "user": "Tyasia",
                        "text": "that's the only way to export names"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-03T06:07:27.996000",
                        "user": "Tyasia",
                        "text": "so"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-03T06:07:41.165000",
                        "user": "Anderson",
                        "text": "and I have to redefine 200 constants in my pkg?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-03T06:07:48.615000",
                        "user": "Tyasia",
                        "text": "sounds like it"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-03T06:12:27.464000",
                        "user": "Leo",
                        "text": "use regex"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-03T06:12:38.020000",
                        "user": "Tyasia",
                        "text": "i mean yeah"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-03T06:12:53.449000",
                        "user": "Tyasia",
                        "text": "any good editor will let you do capitalize the first letter matching X pattern"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-03T06:13:07.210000",
                        "user": "Leo",
                        "text": "`:%s/const (^\\\\w)/const \\\\1/g`"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-03T06:13:08.995000",
                        "user": "Leo",
                        "text": "uhh"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-03T06:13:17.714000",
                        "user": "Leo",
                        "text": "How do you capitalize again"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-03T06:13:20.357000",
                        "user": "Lamnouar",
                        "text": "I think that's for vim."
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-03T06:13:21.332000",
                        "user": "Tyasia",
                        "text": "i forget"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-03T06:13:23.826000",
                        "user": "Anderson",
                        "text": "god bless Vim"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-03T06:13:24.085000",
                        "user": "Tyasia",
                        "text": "yes"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-03T06:13:24.240000",
                        "user": "Leo",
                        "text": "same"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-03T06:13:26.049000",
                        "user": "Lamnouar",
                        "text": "(hold shift?)"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-03T06:13:26.800000",
                        "user": "Tyasia",
                        "text": "vim is a good editor"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-03T06:13:36.277000",
                        "user": "Anderson",
                        "text": "yep used it to copy paste the constants"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-03T06:13:38.406000",
                        "user": "Anderson",
                        "text": "just finished"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-03T06:13:38.660000",
                        "user": "Lamnouar",
                        "text": "(hold shift and press key)"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-11-03T06:14:01.520000",
                        "user": "Leo",
                        "text": "It's `\\\\U\\\\1`"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-03T06:14:09.230000",
                        "user": "Leo",
                        "text": "Thanks vim fandom"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-03T06:14:17.567000",
                        "user": "Anderson",
                        "text": "finished in 6 minutes not bad... at least I didn't rewrite them manually"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-03T06:14:20.385000",
                        "user": "Tyasia",
                        "text": ":vim: life"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-11-03T06:15:00.943000",
                        "user": "Leo",
                        "text": "others would make vim macros then batch apply it to lines"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-11-03T06:15:07.349000",
                        "user": "Tyasia",
                        "text": "a macro could work too"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-11-03T06:15:08.310000",
                        "user": "Leo",
                        "text": "and here I\\'m like bruh just regex"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-11-03T06:15:11.048000",
                        "user": "Lamnouar",
                        "text": "I use vscode because otherwise people think I'm hackerman"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-11-03T06:15:12.212000",
                        "user": "Tyasia",
                        "text": "there's a lot of options"
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-11-03T06:15:23.782000",
                        "user": "Lamnouar",
                        "text": "(even with nano)"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2319",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-26T18:16:42.456000",
                        "user": "Malaina",
                        "text": "Hi! Writing code generator and need to know in which module package is. Is there some way to detect module name? Just find up to dir go.mod and parse it? Or some methods exists for it?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-26T18:18:27.188000",
                        "user": "Olivia",
                        "text": "why do you want this"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-26T18:20:04.649000",
                        "user": "Olivia",
                        "text": "https://github.com/therealfakemoot/gocollections anyways if you do genuinely need this make the user pass it as a flag"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-26T18:20:40.326000",
                        "user": "Olivia",
                        "text": "no magic"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-26T18:21:45.157000",
                        "user": "Olivia",
                        "text": "magic is bad"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-26T18:22:03.867000",
                        "user": "Randon",
                        "text": "is there a way to easily get the size of a byte slice in b kb mb etc?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-26T18:23:28.469000",
                        "user": "Malaina",
                        "text": "And what is dangerous if i walk up to directory where is `go.mod` stored and get package name from go.mod? If it not found  so panic..."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-26T18:24:24.733000",
                        "user": "Olivia",
                        "text": "it's generating code for an entirely different module"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-26T18:24:48.862000",
                        "user": "Jkari",
                        "text": "look into runtime/debug too"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-26T18:24:49.282000",
                        "user": "Olivia",
                        "text": "so unless you explicitly tell it what module you're generating it for the best you can do is guess"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-26T18:24:49.605000",
                        "user": "Jkari",
                        "text": "and pkger"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-26T18:26:33.098000",
                        "user": "Malaina",
                        "text": "In my case it generates for itself. In module I write domain logic and generator create a lot of stuff based on domainspecific stuf... But create it in another folder in same project."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-26T18:27:17.665000",
                        "user": "Olivia",
                        "text": "okay"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-26T18:27:23.041000",
                        "user": "Olivia",
                        "text": "then in that case you already know the name of the module"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-26T18:27:27.466000",
                        "user": "Olivia",
                        "text": "because"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-26T18:27:32.033000",
                        "user": "Olivia",
                        "text": "you did `go mod init whatever`"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-26T18:27:35.267000",
                        "user": "Olivia",
                        "text": "so just use that"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-26T18:28:14.573000",
                        "user": "Malaina",
                        "text": "Yes thanx"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-26T18:28:54.336000",
                        "user": "Malaina",
                        "text": "taking a look into markbates/pkger"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-26T18:29:57.956000",
                        "user": "Zehlani",
                        "text": "I've been writing some small programming challenges to get used to golang std lib. I've written a stdin input reader where first input is length of array of items given on 2nd line of stdin and i want to cast 2nd line items into single slice. Am I doing it right? What can be improved? ```golangfunc main() { var n int _ err := fmt.Scan(&n) if err != nil { panic(err) } k := make([]int 0 n) var tmp int for i := 0; i < n; i++ { fmt.Scan(&tmp) k = append(k tmp) } solve(k)}```"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-26T18:30:30.063000",
                        "user": "Olivia",
                        "text": "well"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-26T18:30:37.613000",
                        "user": "Olivia",
                        "text": "i wouldn't include the length at all"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-26T18:30:48.987000",
                        "user": "Zehlani",
                        "text": "what do you mean"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-26T18:30:53.442000",
                        "user": "Olivia",
                        "text": "you don't need it"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-26T18:31:05.436000",
                        "user": "Olivia",
                        "text": "``` var k []int var tmp int for i := 0; i < n; i++ { fmt.Scan(&tmp) k = append(k tmp) } solve(k)```"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-26T18:31:09.163000",
                        "user": "Olivia",
                        "text": "er"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-26T18:31:22.198000",
                        "user": "Olivia",
                        "text": "that code should work"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-26T18:31:57.040000",
                        "user": "Olivia",
                        "text": "there we go last revision"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-26T18:32:09.706000",
                        "user": "Zehlani",
                        "text": "ah yes it would but for memory optimizations i thought instead of making a new underlying array every 4 new children (I think that's how capacity scales in golang might be mistaking it with cpp vectors)"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-26T18:32:47.070000",
                        "user": "Olivia",
                        "text": "don't prematurely optimize"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-26T18:32:47.111000",
                        "user": "Zehlani",
                        "text": "but i guess you are right that'd work"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-26T18:32:49.581000",
                        "user": "Olivia",
                        "text": "but uh"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-26T18:33:09.722000",
                        "user": "Izna",
                        "text": "i think in this case its fine since hes already getting `n` either way"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-26T18:33:11.307000",
                        "user": "Zehlani",
                        "text": "what i wondered most was if i could cast the line directly into slice by cutting out the ``tmp``"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-26T18:33:27.019000",
                        "user": "Olivia",
                        "text": "probably not no"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-26T18:33:31.983000",
                        "user": "Olivia",
                        "text": "fmt.Scan() is not a parser"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-26T18:34:50.786000",
                        "user": "Zehlani",
                        "text": "alright is there another std function that would be of use for this case? I checked around geting the line as string then splitting into string array by splitting each   then iterating each item and parse each item to int but that seems even worse"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-26T18:35:34.463000",
                        "user": "Olivia",
                        "text": "i'd just use json"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-26T18:35:53.603000",
                        "user": "Izna",
                        "text": "is this for a user to input or what"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-26T18:35:54.260000",
                        "user": "Olivia",
                        "text": "simple universal unambiguous format"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-26T18:35:58.107000",
                        "user": "Zehlani",
                        "text": "it's an online programming problemset that just gives you strict stdin"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-26T18:36:04.986000",
                        "user": "Olivia",
                        "text": "oh"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-26T18:36:10.224000",
                        "user": "Olivia",
                        "text": "if you can't change the input then no you're hosed"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-26T18:36:42.086000",
                        "user": "Zehlani",
                        "text": "yeah alright. Really appreciate the immediate feedback. Thank you both alot"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-26T18:38:10.240000",
                        "user": "Olivia",
                        "text": "but yeah"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-26T18:38:21.726000",
                        "user": "Olivia",
                        "text": "if you could have the user just type `[1 2 3  4  5]` into stdin"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-26T18:38:26.680000",
                        "user": "Olivia",
                        "text": "you could do it in one go with json"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-26T18:38:52.294000",
                        "user": "Zehlani",
                        "text": "nop strict```31 2 3```"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-26T18:38:54.569000",
                        "user": "Olivia",
                        "text": "yep"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-26T18:42:57.742000",
                        "user": "Randon",
                        "text": "if i have a string that is the name of a struct how can i set a variable to that struct?"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-26T18:43:35.386000",
                        "user": "Olivia",
                        "text": "uhhhh"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-26T18:43:38.631000",
                        "user": "Olivia",
                        "text": "i'd use a map"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-26T18:44:00.373000",
                        "user": "Randon",
                        "text": "oh yeah thatd work"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-26T18:44:05.051000",
                        "user": "Olivia",
                        "text": "```govar StructMap map[string]interface{}{\"foo\":Foo}```"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-26T18:44:10.464000",
                        "user": "Randon",
                        "text": "yeah"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-26T18:44:23.458000",
                        "user": "Olivia",
                        "text": "you could also use an actual interface isntead of interface{}"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-26T18:44:25.688000",
                        "user": "Olivia",
                        "text": "possibly"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-26T18:44:31.748000",
                        "user": "Olivia",
                        "text": "you should if you can"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-04-26T18:51:01.975000",
                        "user": "Izna",
                        "text": "https://github.com/google/uuid"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-04-26T18:51:13.349000",
                        "user": "Izna",
                        "text": "is there anything like that but the uuid's are smaller"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-04-26T18:51:24.611000",
                        "user": "Olivia",
                        "text": "unlikely"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-04-26T18:53:01.127000",
                        "user": "Izna",
                        "text": "cause i want it to be displayable to the user so the smaller the better"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1790",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-26T08:08:46.115000",
                        "user": "Brenlee",
                        "text": "How can I read keypresses when the program isn't focused (if that makes sense)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-26T08:09:18.531000",
                        "user": "Brenlee",
                        "text": "Like I have my go program running in the background and when I am playing something else it will read keypresses"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-26T08:09:30.786000",
                        "user": "Brenlee",
                        "text": "and now that I am typing this I realise it sounds like I'm making a keylogger"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-26T08:09:33.720000",
                        "user": "Brenlee",
                        "text": "I'm not"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-26T08:10:53.778000",
                        "user": "Brenlee",
                        "text": "how can I change what each key does"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-26T08:11:07.316000",
                        "user": "Brenlee",
                        "text": "like I want to replace a with s and stuff like that"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-26T08:14:48.061000",
                        "user": "Yufan",
                        "text": "@superloach made something like that hope I'm not pinging for nothing sorry bud"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-26T08:14:51.151000",
                        "user": "Yufan",
                        "text": ":NanaBongo:"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-26T08:15:14.228000",
                        "user": "Samarie",
                        "text": "that might depend on the platform you're targeting"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-26T08:15:23.258000",
                        "user": "Samarie",
                        "text": "I know X can do it but idk any other"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-26T08:15:53.113000",
                        "user": "Brenlee",
                        "text": "I am on linux"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-26T08:16:01.793000",
                        "user": "Brenlee",
                        "text": "Can I read from `/dev/input`?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-26T08:16:11.641000",
                        "user": "Brenlee",
                        "text": "Yet I don't know how I can replace the keypresses"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-26T08:16:13.966000",
                        "user": "Brenlee",
                        "text": "or simulate one"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-26T08:19:40.667000",
                        "user": "Samarie",
                        "text": "you need root for dev input"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-26T08:19:55.203000",
                        "user": "Samarie",
                        "text": "using plain X library is the best way here"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "38",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T03:15:26.981000",
                        "user": "Yessia",
                        "text": "How can i unmarshal json like:```json{ hello\": world\"}``` into a struct where it\\'s just keyvalue pairs?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T03:15:39.066000",
                        "user": "Yessia",
                        "text": "or would i use a map for that?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-02T03:15:39.489000",
                        "user": "Josselin",
                        "text": "use a map"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-02T03:16:06.663000",
                        "user": "Josselin",
                        "text": "yeah it's exactly what you need"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-02T03:16:09.408000",
                        "user": "Josselin",
                        "text": "you're on the right track"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-02T03:16:13.210000",
                        "user": "Yessia",
                        "text": "got it so i would just unmarshal the json into the map?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-02T03:16:27.321000",
                        "user": "Yessia",
                        "text": "cool thanks!"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1837",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T03:35:40.670000",
                        "user": "Zakaria",
                        "text": "hmm"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-28T03:36:33.762000",
                        "user": "Zakaria",
                        "text": "am i the only one who want write go like that?```gofunc main(){ }```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-28T03:46:05.700000",
                        "user": "Samarie",
                        "text": "yeah you're the only one \ud83d\ude14"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-28T03:46:40.206000",
                        "user": "Simone",
                        "text": "@MiniApple you\\'re not the only one; the relevant quote is along the lines of gofmt\\'s style is no one\\'s favorite but gofmt is everyone\\'s favorite"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-28T03:46:55.279000",
                        "user": "Zakaria",
                        "text": "lol"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-28T03:47:10.408000",
                        "user": "Zakaria",
                        "text": "sometimes it is better"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-28T03:47:38.876000",
                        "user": "Simone",
                        "text": "though that particular rule is in place because of a syntax rule in go itself not just because of gofmt"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-28T03:47:56.891000",
                        "user": "Zakaria",
                        "text": "hmm"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-28T03:48:20.293000",
                        "user": "Simone",
                        "text": "it's due to the reason we don't have to write semicolons at the end of each line"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-28T03:48:50.704000",
                        "user": "Zakaria",
                        "text": "what is gofmt"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-28T03:49:05.494000",
                        "user": "Simone",
                        "text": "it's a program that rewrites your source code to conform to a global style"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-28T03:49:21.136000",
                        "user": "Simone",
                        "text": "there is a single style in go; no arguing over indentation or brace styles"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-28T03:50:06.744000",
                        "user": "Zakaria",
                        "text": "hmm"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-28T03:50:21.178000",
                        "user": "Zakaria",
                        "text": "~~will go 2?~~"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-28T03:50:41.263000",
                        "user": "Simone",
                        "text": "will go 2 what"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-28T03:51:04.899000",
                        "user": "Simone",
                        "text": "provide more arguing?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-28T03:51:08.309000",
                        "user": "Zakaria",
                        "text": "yes"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-28T03:51:15.400000",
                        "user": "Simone",
                        "text": "probably but it won't be over style"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2306",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-21T12:12:08.377000",
                        "user": "Courtney",
                        "text": "could a segmentation fault cause a program crash?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-21T12:12:15.815000",
                        "user": "Courtney",
                        "text": "There are multiple go routines"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-21T12:12:19.573000",
                        "user": "Courtney",
                        "text": "or a nil pointer call?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-21T12:12:43.254000",
                        "user": "Maram",
                        "text": "yes"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-21T12:12:45.238000",
                        "user": "Maram",
                        "text": "to all"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-21T12:12:57.518000",
                        "user": "Maram",
                        "text": "lots of things can cause your program to terminate in an unclean way"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-21T12:13:24.649000",
                        "user": "Maram",
                        "text": "don't rely on defer() to protect you from someone pulling the plug on the host machine"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-21T12:13:41.682000",
                        "user": "Ariel",
                        "text": "I'm learning Go by doing a simple project but sometimes I feel like I'm missing a few concepts and principles of Go.Do you have any recommendations for Books/lectures/talks about Go for beginners?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-21T12:14:03.297000",
                        "user": "Maram",
                        "text": "nothing general"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-21T12:14:17.106000",
                        "user": "Maram",
                        "text": "the go tour covers all of the language's features"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-21T12:14:32.804000",
                        "user": "Maram",
                        "text": "the language is way simpler than you think"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-21T12:14:50.807000",
                        "user": "Maram",
                        "text": "if you need info on a specific thing then you can find specialized resources"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-21T12:15:03.489000",
                        "user": "Ariel",
                        "text": "Yeah this is why I felt like i'm missing something XD"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-21T12:15:11.485000",
                        "user": "Ariel",
                        "text": "I will just finish the tour \ud83d\ude04"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-21T12:15:13.120000",
                        "user": "Ariel",
                        "text": "thanks"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-21T12:15:36.988000",
                        "user": "Maddyson",
                        "text": "https://asciinema.org/a/uaibjm840pJjr7xZVBv1QaHDr"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-21T12:16:07.894000",
                        "user": "Maddyson",
                        "text": "when the program uses os.Exit it pulls the plug _hard_"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-21T12:16:18.524000",
                        "user": "Maddyson",
                        "text": "when you catch a signal it will exit cleanly"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-21T12:16:44.912000",
                        "user": "Maddyson",
                        "text": "special sauce: https://hastebin.com/utiluqaqof.cs"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-21T12:28:10.005000",
                        "user": "Courtney",
                        "text": "Thats no problem. All os.Exits are surrounded with log.Println()..."
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-21T12:29:20.542000",
                        "user": "Courtney",
                        "text": "@Omri same thinking here. I become very mad about the go routines. Because some things you can't do with channels and then you are there with mutexs again \ud83d\ude26"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "89",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-04T22:38:12.873000",
                        "user": "Marceliano",
                        "text": "Anyone use mssql with golang on windows?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-04T22:38:16.562000",
                        "user": "Marceliano",
                        "text": "Really struggling here"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-04T22:45:25.513000",
                        "user": "Masud",
                        "text": "Post your question \ud83d\udc4d\ud83c\udffd"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-04T22:51:55.511000",
                        "user": "Marceliano",
                        "text": "Trying to use Microsoft SQL server express with golang => Using https://www.github.com/denisenkom/gomssqldb as the driver Got the setup right just can't ping my database"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-04T22:52:44.239000",
                        "user": "Marceliano",
                        "text": "Almost sure it's the fact database is hiding behind a firewall"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-04T22:53:21.424000",
                        "user": "Masud",
                        "text": "Or code. Or both."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-04T22:54:20.433000",
                        "user": "Marceliano",
                        "text": "Oh"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-04T22:54:21.745000",
                        "user": "Marceliano",
                        "text": "I suck"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-04T22:54:53.961000",
                        "user": "Marceliano",
                        "text": "Fixed it"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-04T22:57:23.865000",
                        "user": "Marceliano",
                        "text": "Ah nope lool it's still broken `Login Error : mssql: Login Failed. The login is from an untrusted domain and cannot be used with Integrated authentication.`"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-04T22:57:48.780000",
                        "user": "Marceliano",
                        "text": "But I have an error"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-04T22:57:50.277000",
                        "user": "Marceliano",
                        "text": "thats good"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-05T00:05:40.697000",
                        "user": "Marceliano",
                        "text": "Honestly given up will bother a principal dev tomorrow morning lol"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "1866",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-30T23:42:41.652000",
                        "user": "Rada",
                        "text": "When using VSCode debug (assuming delve) I get local_var: string+52 more\". Is there a way to see what the actual string is when debugging?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-30T23:43:25.652000",
                        "user": "Teodulo",
                        "text": "> I believe I've seen alphabetic order around tooImo its better for libs"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-30T23:45:09.810000",
                        "user": "Teodulo",
                        "text": "> Is there a way to see what the actual string is when debugging?log.Printf() :kappa:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-30T23:47:36.820000",
                        "user": "Rada",
                        "text": "@Camelva Eval error: function calls not allowed without using \\'call\\'Unable to eval expression: function calls not allowed without using \\'call\\"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-30T23:48:13.019000",
                        "user": "Aalaysia",
                        "text": "why reverse? \ud83e\udd14"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-30T23:48:26.442000",
                        "user": "Teodulo",
                        "text": "Where are you running it @brandonkal ?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-30T23:48:37.809000",
                        "user": "Rada",
                        "text": "Debug Console"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-30T23:48:58.472000",
                        "user": "Miloud",
                        "text": "Read the thread"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-30T23:49:52.884000",
                        "user": "Teodulo",
                        "text": "Not the best way but to try to just put log.Printf(\"%s var) for each variable you wanna know inside code"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-30T23:50:03.260000",
                        "user": "Teodulo",
                        "text": "You can delete this lines after"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-30T23:50:14.594000",
                        "user": "Miloud",
                        "text": "I usually use `%v`"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-30T23:50:31.087000",
                        "user": "Leo",
                        "text": "@codic made a comment"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-30T23:50:34.892000",
                        "user": "Leo",
                        "text": "and don't abuse %v lol"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-30T23:50:39.935000",
                        "user": "Miloud",
                        "text": "y tho"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-30T23:50:43.386000",
                        "user": "Leo",
                        "text": "if you know the type use %s"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-01-30T23:50:43.687000",
                        "user": "Miloud",
                        "text": "It works for everything lmao"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-01-30T23:50:47.374000",
                        "user": "Leo",
                        "text": "because %v is slower"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-01-30T23:50:49.548000",
                        "user": "Miloud",
                        "text": "Oh"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-01-30T23:50:55.974000",
                        "user": "Miloud",
                        "text": "%s also works for everything?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-01-30T23:50:56.124000",
                        "user": "Leo",
                        "text": "the runtime has to detect the type"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-01-30T23:50:59.912000",
                        "user": "Leo",
                        "text": "no %s is string only"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-01-30T23:51:07.301000",
                        "user": "Teodulo",
                        "text": "@codic if its bytes  it will show bytes. Not really helpful"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-01-30T23:51:09.531000",
                        "user": "Leo",
                        "text": "well it's technically all types"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-01-30T23:51:12.846000",
                        "user": "Leo",
                        "text": "but it'll pop an error in the string"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-01-30T23:51:41.289000",
                        "user": "Miloud",
                        "text": "also diamond i responded to your comment"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-01-30T23:53:22.893000",
                        "user": "Miloud",
                        "text": "Where tf do I add my function in https://github.com/golang/go/tree/master/src/strings"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-01-30T23:53:38.702000",
                        "user": "Leo",
                        "text": "https://github.com/golang/go/blob/master/src/strings/strings.go"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-01-30T23:53:44.979000",
                        "user": "Miloud",
                        "text": "I saw that"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-01-30T23:53:54.187000",
                        "user": "Miloud",
                        "text": "But none of the fucns are exported"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-01-30T23:53:57.060000",
                        "user": "Miloud",
                        "text": "They're all lowercase"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-01-30T23:53:58.721000",
                        "user": "Aalaysia",
                        "text": "I was about to say maybe a Round func would be better but then I realised they added math.Round in go 1.10 :p"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-01-30T23:53:59.409000",
                        "user": "Leo",
                        "text": "scroll down"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-01-30T23:54:01.578000",
                        "user": "Miloud",
                        "text": "ait"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-01-30T23:54:02.119000",
                        "user": "Miloud",
                        "text": "nvm"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-01-30T23:54:04.724000",
                        "user": "Miloud",
                        "text": "yeah i see"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-01-30T23:55:33.189000",
                        "user": "Miloud",
                        "text": "https://github.com/golang/go/pull/36913"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-01-30T23:58:27.409000",
                        "user": "Nader",
                        "text": "arent strings already bascially rune slices"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-01-30T23:58:38.753000",
                        "user": "Zadyn",
                        "text": "yes"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-01-30T23:59:13.332000",
                        "user": "Nader",
                        "text": "oh yeah but immutable"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-01-30T23:59:34.271000",
                        "user": "Leo",
                        "text": "nah byte slices"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-01-30T23:59:39.752000",
                        "user": "Miloud",
                        "text": "https://goreview.googlesource.com/c/go/+/217120"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-01-30T23:59:44.864000",
                        "user": "Leo",
                        "text": "range implicitly converts them to rune slices"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2492",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-27T22:40:07.434000",
                        "user": "Abriella",
                        "text": "Is there a way to make a channel global ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-27T22:40:22.346000",
                        "user": "Gwendolen",
                        "text": "Just declare it as a global"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-27T22:40:38.331000",
                        "user": "Abriella",
                        "text": "sorry is it advisable to do that"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-27T22:40:47.065000",
                        "user": "Gwendolen",
                        "text": "Depends what it's for"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-27T22:41:14.435000",
                        "user": "Shritha",
                        "text": "genreally no tbh"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-27T22:41:24.516000",
                        "user": "Shritha",
                        "text": "global variables in general"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-27T22:41:30.010000",
                        "user": "Shritha",
                        "text": "gah discord is so lsowowowo"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-27T22:44:15.729000",
                        "user": "Gwendolen",
                        "text": "Ye"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-27T22:45:15.646000",
                        "user": "Abriella",
                        "text": "it's so I can communicate and close a goroutine started by discordgo"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-27T22:45:33.439000",
                        "user": "Shritha",
                        "text": "use methods or closures and pass in the channel"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-27T22:46:07.717000",
                        "user": "Abriella",
                        "text": "wouldn't it create a new channel every time the code run (each message) ?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-27T22:46:16.344000",
                        "user": "Shritha",
                        "text": "depends on how you write it"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-27T22:47:08.260000",
                        "user": "Abriella",
                        "text": "i don't know how to write it without it overwriting every time"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-27T22:48:11.571000",
                        "user": "Abriella",
                        "text": "Could you point me in the right direction"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-27T22:48:12.357000",
                        "user": "Shritha",
                        "text": "```govar ch = make(chan struct{})session.AddHandler(func(s discordgo.Session m discordgo.MessageCreate) {\\tch < struct{}{}})```"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-27T22:48:28.558000",
                        "user": "Safiyya",
                        "text": "@_diamondburned_ tahnk you"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-27T22:48:31.663000",
                        "user": "Safiyya",
                        "text": "used sprintf"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-27T22:48:36.617000",
                        "user": "Shritha",
                        "text": "yea np"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-27T22:49:57.697000",
                        "user": "Safiyya",
                        "text": "```goif v.frequency > 120 && v.volumeGo{ lastQuote,err := restKey.LastQuoteForASymbol(symbol) if err != nil{ return } if v.marketAboveVwap {err := webhook.SendEmbedif err != nil{ return }```"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-27T22:50:03.667000",
                        "user": "Safiyya",
                        "text": "is my scope correct"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-27T22:50:17.327000",
                        "user": "Shritha",
                        "text": "pls format that properly"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-27T22:50:28.770000",
                        "user": "Safiyya",
                        "text": "do i need to do it myself? or does discord do it"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-27T22:50:38.022000",
                        "user": "Safiyya",
                        "text": "ill put it in"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-27T22:50:39.715000",
                        "user": "Safiyya",
                        "text": "go playground"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-27T22:51:12.052000",
                        "user": "Shritha",
                        "text": "doesn't look like Discord did it to me"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-27T22:51:29.189000",
                        "user": "Safiyya",
                        "text": "intersting"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-27T22:52:05.622000",
                        "user": "Safiyya",
                        "text": "https://play.golang.org/p/YXEwR3YYD63"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-27T22:52:10.202000",
                        "user": "Safiyya",
                        "text": "made it prettier"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-27T22:52:46.451000",
                        "user": "Safiyya",
                        "text": "in what scope does the first err live too"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-27T22:52:52.478000",
                        "user": "Safiyya",
                        "text": "so would it be proper to redeclare or assign"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-27T22:52:57.523000",
                        "user": "Shritha",
                        "text": "do you not have a formatter in yoru editor?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-27T22:53:31.221000",
                        "user": "Shritha",
                        "text": "redeclare is fine"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-27T22:53:53.446000",
                        "user": "Safiyya",
                        "text": "i guess not"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-27T22:53:55.982000",
                        "user": "Safiyya",
                        "text": ":"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-27T22:53:59.226000",
                        "user": "Safiyya",
                        "text": "idk why its like that"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-27T22:54:10.494000",
                        "user": "Safiyya",
                        "text": "igh ill declare"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-07-27T22:59:46.987000",
                        "user": "Shritha",
                        "text": "yes"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-07-27T22:59:50.418000",
                        "user": "Shritha",
                        "text": "closures or methods"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-07-27T23:03:11.169000",
                        "user": "Kenzli",
                        "text": "I am trying to get the current timestamp and using this"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-07-27T23:03:13.643000",
                        "user": "Kenzli",
                        "text": "`log.Println(time.Now().UnixNano())`"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-07-27T23:04:04.758000",
                        "user": "Shritha",
                        "text": "UnixNano is in nanoseconds"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-07-27T23:04:08.401000",
                        "user": "Shritha",
                        "text": "JS epoch is in seconds"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-07-27T23:04:42.536000",
                        "user": "Shritha",
                        "text": "nvm"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-07-27T23:04:45.692000",
                        "user": "Shritha",
                        "text": "it's milliseconds"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-07-27T23:04:52.802000",
                        "user": "Shritha",
                        "text": "None"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-07-27T23:05:18.409000",
                        "user": "Shritha",
                        "text": "@tfyl https://tour.golang.org/moretypes/25"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-07-27T23:08:57.484000",
                        "user": "Alyanna",
                        "text": "dg.AddHandler only takes 1 parameter"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-07-27T23:09:11.022000",
                        "user": "Alyanna",
                        "text": "so if you want your handler to have access to more stuff thats declared in main"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-07-27T23:22:30.262000",
                        "user": "Safiyya",
                        "text": "to show me 12 hour time"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-07-27T23:24:24.264000",
                        "user": "Shritha",
                        "text": "you can also use this that I forked from someone else: https://godate.diamondb.xyz/"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2370",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-23T15:00:43.544000",
                        "user": "Celise",
                        "text": "Can you see any SQL error with this code?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-23T15:00:47.492000",
                        "user": "Celise",
                        "text": "``` if err := s.Get(&u INSERT INTO users VALUES ($1 $2 $3 $4 $5 created_at=NOW() updated_at=NOW() RETURNING \", u.ID, u.FirstName, u.LastName, u.Email, u.Password); err != nil { return fmt.Errorf(\"error creating user: %w err) } return nil```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-23T15:01:22.168000",
                        "user": "Layna",
                        "text": "maybe"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-23T15:01:38.799000",
                        "user": "Celise",
                        "text": "```error creating user: Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'\\ at line 1\"```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-23T15:02:02.285000",
                        "user": "Celise",
                        "text": "User looks like:```type User struct { ID int `db:\"id json:\"id\"` FirstName string `db:\"first_name json:\"first_name binding:\"required\"` LastName string `db:\"last_name json:\"last_name binding:\"required\"` Email string `db:\"email json:\"email binding:\"required,email\"` Password string `db:\"password json:\"password binding:\"required\"` CreatedAt time.Time `db:\"created_at json:\"created_at\"` UpdatedAt time.Time `db:\"updated_at json:\"updated_at\"`}```"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-23T15:02:19.987000",
                        "user": "Layna",
                        "text": "does it support params like that? $1 $2 $3?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-23T15:02:34.338000",
                        "user": "Maddyson",
                        "text": "mysql doesn't"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-23T15:02:34.739000",
                        "user": "Celise",
                        "text": "It's sqlx its been working on get and getbyid"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-23T15:02:38.811000",
                        "user": "Maddyson",
                        "text": "that only does ?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-23T15:02:53.392000",
                        "user": "Celise",
                        "text": "I did take this from a postgres tutorial?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-23T15:03:24.174000",
                        "user": "Layna",
                        "text": "db's have differences even in it's own sql syntax \ud83e\udd14"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-23T15:03:28.732000",
                        "user": "Layna",
                        "text": "and go drivers"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-23T15:03:46.280000",
                        "user": "Maddyson",
                        "text": "Sure but what kind of database are you connecting to?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-23T15:03:53.821000",
                        "user": "Celise",
                        "text": "Ok that makes sense"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-23T15:03:59.691000",
                        "user": "Celise",
                        "text": "mysql mariadb"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-23T15:04:23.557000",
                        "user": "Maddyson",
                        "text": "@stdio Yes the database/sql packages doesn't know what format the driver does"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-23T15:04:32.449000",
                        "user": "Maddyson",
                        "text": "postgress/mysql have different formats"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-23T15:04:47.226000",
                        "user": "Layna",
                        "text": "does mysql have  RETURNING?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-23T15:04:51.765000",
                        "user": "Maddyson",
                        "text": "Nope"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-23T15:04:55.837000",
                        "user": "Celise",
                        "text": "Ahhh"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-23T15:04:57.004000",
                        "user": "Celise",
                        "text": "Ok"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-23T15:05:04.659000",
                        "user": "Celise",
                        "text": "Thanks v much guys"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-23T15:06:09.694000",
                        "user": "Layna",
                        "text": "@Sgt_Tailor I think there is some go stuff that translate those ?'?"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-23T15:06:16.439000",
                        "user": "Layna",
                        "text": "or at least I've seen named parameters in mysql stuff"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-23T15:06:31.149000",
                        "user": "Layna",
                        "text": "go..rm gorp dunno"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-23T15:07:00.688000",
                        "user": "Celise",
                        "text": "I was just about to ask if I had to specify the column names"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-23T15:07:02.870000",
                        "user": "Celise",
                        "text": "in Mysql"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-23T15:07:03.171000",
                        "user": "Maddyson",
                        "text": "Could be the driver or library providing a translation layer but stdlib doesn't do anything with it"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-23T15:08:44.786000",
                        "user": "Maddyson",
                        "text": "I think so Ainsley. ```sqlINSERT INTO `table` (col_a col_b col_c) VALUES (? ? ?)```"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-23T15:09:26.094000",
                        "user": "Maddyson",
                        "text": "Might be able to skip that if you provide all columns but I am not 100% sure"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-23T15:09:58.036000",
                        "user": "Celise",
                        "text": "Thats perfect thank you so much"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-23T15:10:16.601000",
                        "user": "Maddyson",
                        "text": "yeah should be able to skip the (col_a...)"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "236",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-13T10:14:58.284000",
                        "user": "Lathan",
                        "text": "Are struct reads concurrent safe? How does the runtime handle a read and write occurring at the same time?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-13T10:16:26.199000",
                        "user": "Kenmari",
                        "text": "yes and nohandle structs like primitives I suppose"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-13T10:17:03.630000",
                        "user": "Kenmari",
                        "text": "read/writing concurrently on a struct won't break everything like doing it on a map will"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-13T10:17:16.868000",
                        "user": "Kenmari",
                        "text": "but there's no implicit syncing or mutexes going on"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-13T10:18:19.544000",
                        "user": "Kenmari",
                        "text": "if a write and a read are happening at the same time the read could get the first or the second value"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-13T10:18:22.839000",
                        "user": "Kenmari",
                        "text": "don't rely on timings"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-13T10:20:40.856000",
                        "user": "Lathan",
                        "text": "Ah okay @Sobeston"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-13T10:20:45.941000",
                        "user": "Lathan",
                        "text": "Hmmm so"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-13T10:21:05.302000",
                        "user": "Lathan",
                        "text": "Yeah in my case I don't care if it gets the first or second value so will leave it at that"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-13T10:23:53.395000",
                        "user": "Lathan",
                        "text": "Actually sounds like a channel should be used"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-13T10:29:13.757000",
                        "user": "Kenmari",
                        "text": "var a = 1a := 1same thing"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-13T10:29:36.956000",
                        "user": "Illianna",
                        "text": "@>_\u2606 let = var in JS = var := in go"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-13T10:30:05.243000",
                        "user": "Kenmari",
                        "text": "except let and var are different in JSvar a = 1a := 1are the same in go"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-13T10:30:51.872000",
                        "user": "Kenmari",
                        "text": "var is function scoped let is block scoped (yay)"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-13T10:31:01.468000",
                        "user": "Kenmari",
                        "text": "using var isn't really recommended anymore"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-13T10:31:09.239000",
                        "user": "Kenmari",
                        "text": "it's kinda useless"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-13T10:31:12.897000",
                        "user": "Illianna",
                        "text": "I don't understand i'm Pythonist :robpike:"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-13T10:31:37.492000",
                        "user": "Antolino",
                        "text": "still confused between `:=` and `=`I come from Pythoncan you show me similarities"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-13T10:31:58.837000",
                        "user": "Kenmari",
                        "text": ":= is just shorthand variable declaration w/ a value"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-13T10:32:01.547000",
                        "user": "Kenmari",
                        "text": "= is assignment"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-13T10:32:06.593000",
                        "user": "Zulfiqar",
                        "text": "`:=` allows variable shadowing"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-13T10:32:19.586000",
                        "user": "Antolino",
                        "text": "what is variable shadowing"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-13T10:32:56.506000",
                        "user": "Illianna",
                        "text": "@>_\u2606 var a int = 1samea := 1"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-11-13T10:32:58.995000",
                        "user": "Illianna",
                        "text": "in go"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-13T10:33:15.575000",
                        "user": "Illianna",
                        "text": "I'm come from Python too"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-13T10:33:23.714000",
                        "user": "Antolino",
                        "text": "I thought Go was about being statically typed"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-13T10:33:29.449000",
                        "user": "Kenmari",
                        "text": "not the same thing."
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-11-13T10:33:56.442000",
                        "user": "Antolino",
                        "text": "can you show me use cases for the `:=`?"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-11-13T10:34:00.070000",
                        "user": "Rhen",
                        "text": "_ err := request().........._ err = newBanana()..."
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-11-13T10:34:09.626000",
                        "user": "Rhen",
                        "text": "That's variable shadowing"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-11-13T10:34:12.223000",
                        "user": "Kenmari",
                        "text": "variable shadowing is where one variable with the same name as another overrides the other"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-11-13T10:34:16.989000",
                        "user": "Kenmari",
                        "text": "```gofunc main() { a := 1 if true { a := hello\" fmt.Println(a) } fmt.Println(a)}```"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-11-13T10:34:24.923000",
                        "user": "Zulfiqar",
                        "text": "```gofunc main() { x := hello\" y := world\" if true { x := hi\" y = earth\" } fmt.Println(x) // hello fmt.Println(y) // earth}```"
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-11-13T10:34:37.511000",
                        "user": "Antolino",
                        "text": "so scopes?"
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-11-13T10:34:42.021000",
                        "user": "Kenmari",
                        "text": "no"
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-11-13T10:34:57.846000",
                        "user": "Antolino",
                        "text": "aah I see @neverRare"
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-11-13T10:35:08.416000",
                        "user": "Kenmari",
                        "text": "variable shadowing allows the more inner scoped variable to override that of another one of the same name"
                    },
                    {
                        "message_number": "38",
                        "ts": "2019-11-13T10:35:17.272000",
                        "user": "Antolino",
                        "text": "aah"
                    },
                    {
                        "message_number": "39",
                        "ts": "2019-11-13T10:35:24.304000",
                        "user": "Antolino",
                        "text": "so the inner variable gets preference"
                    },
                    {
                        "message_number": "40",
                        "ts": "2019-11-13T10:35:43.403000",
                        "user": "Kenmari",
                        "text": "```gofunc main() { var a = 1 if true { var a = hello\" fmt.Println(a) } fmt.Println(a)}```"
                    },
                    {
                        "message_number": "41",
                        "ts": "2019-11-13T10:35:50.429000",
                        "user": "Kenmari",
                        "text": "this is identical to the one I posted above"
                    },
                    {
                        "message_number": "42",
                        "ts": "2019-11-13T10:35:59.705000",
                        "user": "Kenmari",
                        "text": "mostly a style choice"
                    },
                    {
                        "message_number": "43",
                        "ts": "2019-11-13T10:36:06.944000",
                        "user": "Antolino",
                        "text": "oh"
                    },
                    {
                        "message_number": "44",
                        "ts": "2019-11-13T10:36:31.815000",
                        "user": "Kenmari",
                        "text": "yes it is said that the more inner one shadows the othera lot of languages disallow this"
                    },
                    {
                        "message_number": "45",
                        "ts": "2019-11-13T10:36:51.064000",
                        "user": "Antolino",
                        "text": "why was the `:=` invented"
                    },
                    {
                        "message_number": "46",
                        "ts": "2019-11-13T10:37:04.508000",
                        "user": "Zulfiqar",
                        "text": "`:=` is similar to `var`"
                    },
                    {
                        "message_number": "47",
                        "ts": "2019-11-13T10:37:08.307000",
                        "user": "Rhen",
                        "text": "Well gofmt remind you of shadowing errors"
                    },
                    {
                        "message_number": "48",
                        "ts": "2019-11-13T10:37:25.055000",
                        "user": "Antolino",
                        "text": "errors and not warnings\\'?"
                    },
                    {
                        "message_number": "50",
                        "ts": "2019-11-13T10:37:51.434000",
                        "user": "Rhen",
                        "text": "We can't compile our codebase with shadowing warnings"
                    },
                    {
                        "message_number": "51",
                        "ts": "2019-11-13T10:37:57.739000",
                        "user": "Antolino",
                        "text": "\ud83d\udc40"
                    },
                    {
                        "message_number": "52",
                        "ts": "2019-11-13T10:38:02.597000",
                        "user": "Rhen",
                        "text": "Dunno how it's made in the CI process"
                    },
                    {
                        "message_number": "53",
                        "ts": "2019-11-13T10:38:05.689000",
                        "user": "Rhen",
                        "text": "But doesn't work"
                    },
                    {
                        "message_number": "54",
                        "ts": "2019-11-13T10:38:07.434000",
                        "user": "Rhen",
                        "text": "lemme check"
                    },
                    {
                        "message_number": "55",
                        "ts": "2019-11-13T10:38:15.599000",
                        "user": "Antolino",
                        "text": "so it's almost impossible to write Go program without any warnings?"
                    },
                    {
                        "message_number": "56",
                        "ts": "2019-11-13T10:38:23.092000",
                        "user": "Kenmari",
                        "text": "no?"
                    },
                    {
                        "message_number": "57",
                        "ts": "2019-11-13T10:38:44.017000",
                        "user": "Antolino",
                        "text": "what I understand is that Go is strict in how it wants us to code"
                    },
                    {
                        "message_number": "58",
                        "ts": "2019-11-13T10:38:51.773000",
                        "user": "Piya",
                        "text": "lol whaat @>_\u2606"
                    },
                    {
                        "message_number": "59",
                        "ts": "2019-11-13T10:38:56.217000",
                        "user": "Zulfiqar",
                        "text": "Go is compiled"
                    },
                    {
                        "message_number": "60",
                        "ts": "2019-11-13T10:39:10.743000",
                        "user": "Antolino",
                        "text": "\ud83e\udd37\ud83c\udffe\\u200d\u2642\ufe0f oPiNiOnAtEd"
                    },
                    {
                        "message_number": "61",
                        "ts": "2019-11-13T10:40:16.567000",
                        "user": "Rhen",
                        "text": "> so it's almost impossible to write Go program without any warnings?That's not what I said"
                    },
                    {
                        "message_number": "62",
                        "ts": "2019-11-13T10:40:38.694000",
                        "user": "Rhen",
                        "text": "Well you could write bad golang it'll still compile"
                    },
                    {
                        "message_number": "63",
                        "ts": "2019-11-13T10:40:38.975000",
                        "user": "Zulfiqar",
                        "text": "being strict on compile time often reduces errors on run time"
                    },
                    {
                        "message_number": "64",
                        "ts": "2019-11-13T10:41:09.878000",
                        "user": "Rhen",
                        "text": "https://golang.org/cmd/vet/"
                    },
                    {
                        "message_number": "66",
                        "ts": "2019-11-13T10:41:37.693000",
                        "user": "Antolino",
                        "text": "alright thank you y'all"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "20",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-01T13:49:42.269000",
                        "user": "Enrike",
                        "text": "Hello. I have a for loop which iterates over a slice. When a specific criteria regarding an element is met I need to add an element just next to that element. How could I do that?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-01T13:52:24.076000",
                        "user": "Mingliang",
                        "text": "If statement and slice tricks"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-01T13:52:56.285000",
                        "user": "Josselin",
                        "text": "?go slices"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-01T13:57:13.400000",
                        "user": "Enrike",
                        "text": "I don\\'t understand how could I shift the other elements"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-01T13:57:18.770000",
                        "user": "Josselin",
                        "text": "you don't"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-01T13:57:23.810000",
                        "user": "Josselin",
                        "text": "you make a new slice"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-01T13:57:54.251000",
                        "user": "Josselin",
                        "text": "consisting of oldSliceHead newElement oldSliceTail"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-01T14:01:08.304000",
                        "user": "Josselin",
                        "text": "i mean that's the simplest solution"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-01T14:14:22.910000",
                        "user": "Enrike",
                        "text": "Tried and it works"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1891",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T23:55:56.645000",
                        "user": "Nishant",
                        "text": "hi everyone! wanted to hear people's insight regarding unit testing involving goroutines and channels? what is normally the extent you test them?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-29T23:57:06.708000",
                        "user": "Samarie",
                        "text": "as much as I feel like it lol"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-29T23:58:06.414000",
                        "user": "Nishant",
                        "text": "lmao thats where im at rn but was getting curious when a coworker wondered if its worth to test the actual start/stop of the goroutine existing etc!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-29T23:58:56.115000",
                        "user": "Samarie",
                        "text": "generally go APIs are expected to be synchronous and blocking so I'm assuming your function implicitly manages goroutines by itself"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-29T23:59:27.343000",
                        "user": "Nishant",
                        "text": "yep!"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T00:00:27.001000",
                        "user": "Samarie",
                        "text": "yeah just check the outputs then"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T00:00:33.321000",
                        "user": "Samarie",
                        "text": "run the test with the race detector too"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T00:05:32.572000",
                        "user": "Nishant",
                        "text": "got it! thanks! \ud83d\ude42"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T00:10:07.183000",
                        "user": "Samarie",
                        "text": "yeah np"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T00:34:37.025000",
                        "user": "Delphine",
                        "text": "turns out checkptr panic in bbolt was just an old version of bbolt \ud83e\udd14"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "208",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-12T09:25:59.488000",
                        "user": "Naszir",
                        "text": "I'm kind of confused started reading more into modules and one of the points seems to be moving away from `$GOPATH/src/`. Should I do that for my projects? The introductory docs still use the gopath approach"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-12T09:27:17.237000",
                        "user": "Lourenco",
                        "text": "Well moving away from GOPATH is optional as you can still use the GO111MODULE environment var to enforce module behaviour"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-12T09:27:22.949000",
                        "user": "Lourenco",
                        "text": "Some people might prefer it still"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-12T09:27:33.176000",
                        "user": "Lourenco",
                        "text": "But moving to modules even inside gopath is still a good thing to do"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-12T09:27:37.724000",
                        "user": "Lourenco",
                        "text": "As you'll be able to properly pin your dependencies"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-12T09:28:24.666000",
                        "user": "Naszir",
                        "text": "okay I was just confused as to what is best practice with modules"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-12T09:29:07.396000",
                        "user": "Naszir",
                        "text": "Im not experienced in go enough to have informed preference over where do I store my project files"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-12T09:35:42.911000",
                        "user": "Lourenco",
                        "text": "It used to be GOPATH but with modern projects using gomodules it doesn't matter anymore"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-12T09:36:02.381000",
                        "user": "Lourenco",
                        "text": "So there is no more best place"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-12T09:40:34.669000",
                        "user": "Leo",
                        "text": "It's more like prior to this there's only one place you should do it in"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2058",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-18T18:58:23.157000",
                        "user": "Jhan",
                        "text": "naming struct by small letter will make the struct private?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-18T18:58:35.306000",
                        "user": "Izna",
                        "text": "yes"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-18T18:58:36.003000",
                        "user": "Olivia",
                        "text": "yes"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-18T18:58:48.376000",
                        "user": "Olivia",
                        "text": "unexported is the idiomatic term in go"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-18T18:58:56.146000",
                        "user": "Olivia",
                        "text": "but yeah lowercase names can't be used outside their package"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-18T18:59:08.475000",
                        "user": "Jhan",
                        "text": "so private in objectoriented languages is unexported in golang?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-18T18:59:25.221000",
                        "user": "Olivia",
                        "text": "it's the same concept"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-18T18:59:29.047000",
                        "user": "Olivia",
                        "text": "in practice"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-18T19:00:48.008000",
                        "user": "Olivia",
                        "text": "don\\'t try too hard to draw direct lines between object oriented anything and Go."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-18T19:01:04.309000",
                        "user": "Olivia",
                        "text": "That's going to send you down the wrong path"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-18T19:04:38.942000",
                        "user": "Jhan",
                        "text": "oh okay"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-18T19:05:37.844000",
                        "user": "Jhan",
                        "text": "I got question is there any good alternative of selenium for golang? It'd be nice to have some examples im really beginner in this language and want to make nice things"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-18T19:05:44.772000",
                        "user": "Jhan",
                        "text": "but it's hard to do with only godoc available"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-18T19:05:55.732000",
                        "user": "Olivia",
                        "text": "i mean"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-18T19:05:57.039000",
                        "user": "Jkari",
                        "text": "selenium like the firefox thing?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-18T19:05:59.961000",
                        "user": "Olivia",
                        "text": "I googled golang selenium"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-18T19:06:00.847000",
                        "user": "Olivia",
                        "text": "https://github.com/tebeka/selenium"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-18T19:06:03.356000",
                        "user": "Olivia",
                        "text": "so"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-18T19:06:21.945000",
                        "user": "Olivia",
                        "text": "google still exists"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-18T19:06:22.894000",
                        "user": "Jhan",
                        "text": "I know but it doesn't have examples"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-18T19:06:29.979000",
                        "user": "Jkari",
                        "text": "https://godoc.org/github.com/tebeka/selenium"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-18T19:06:31.678000",
                        "user": "Jkari",
                        "text": "there's an example here"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-18T19:06:39.549000",
                        "user": "Jkari",
                        "text": "right on top"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-18T19:06:50.002000",
                        "user": "Olivia",
                        "text": "it defintiely does"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-18T19:06:50.461000",
                        "user": "Olivia",
                        "text": "https://godoc.org/github.com/tebeka/selenium"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-18T19:06:51.467000",
                        "user": "Jhan",
                        "text": "ergh okay i'll be honest  I didnt look anywhere else than reame.md punch me please"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-18T19:07:00.256000",
                        "user": "Olivia",
                        "text": "just"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-18T19:07:01.357000",
                        "user": "Olivia",
                        "text": "you know"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-18T19:07:02.555000",
                        "user": "Olivia",
                        "text": "read the docs"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-18T19:07:10.107000",
                        "user": "Olivia",
                        "text": "they exist they're there to help you"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-18T19:07:53.538000",
                        "user": "Brannon",
                        "text": "as for alternatives there's chromedp or similar for controlling chromium"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-18T19:08:13.185000",
                        "user": "Olivia",
                        "text": "and yeah"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-18T19:08:13.856000",
                        "user": "Olivia",
                        "text": "https://www.w3.org/TR/webdriver/"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-18T19:08:18.233000",
                        "user": "Olivia",
                        "text": "the tech is called webdriver"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-18T19:08:38.858000",
                        "user": "Olivia",
                        "text": "which is also googleable"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-18T19:08:43.972000",
                        "user": "Jhan",
                        "text": "thanks helpful info. And sorry for asking before looking docs won't do it again \ud83d\ude09"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-18T19:09:17.814000",
                        "user": "Jkari",
                        "text": "selenium is for both iirc"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-18T19:21:23.069000",
                        "user": "Olivia",
                        "text": "never seen that error before"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-18T19:21:44.477000",
                        "user": "Olivia",
                        "text": "boy"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-18T19:21:46.021000",
                        "user": "Olivia",
                        "text": "this is bad code"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-18T19:21:52.760000",
                        "user": "Olivia",
                        "text": "```func IsEmpty(data string) bool { if len(data) == 0 { return true } else { return false }}```"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-18T19:22:04.189000",
                        "user": "Olivia",
                        "text": "could be ```return len(data) == 0```"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-18T19:22:07.579000",
                        "user": "Olivia",
                        "text": "not a good sign"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-18T19:22:45.690000",
                        "user": "Olivia",
                        "text": "you probably want to use something else"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-18T19:23:17.559000",
                        "user": "Khianna",
                        "text": "Ty guys bad example it seems. Will try do it myself one step by the time"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-18T19:23:34.393000",
                        "user": "Olivia",
                        "text": "https://girishjoshi.io/post/implementinghttpbasicauthenticationingolang/https://www.sohamkamani.com/blog/2018/03/25/golangsessionauthentication/"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2062",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-18T20:18:33.292000",
                        "user": "Khianna",
                        "text": "Hello I'm creating web application with 3 different types of users. Each user would have different accessibilityti in application. The main idea of this application is to collect data store and display results. What kind of server would you recommend to me to set up for application proccess creation/testing?Best wishes MantasSil"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-18T20:19:44.630000",
                        "user": "Lu",
                        "text": "Generally you need to provide the users with accessability levels"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-18T20:19:54.373000",
                        "user": "Lu",
                        "text": "Or permissions for a different word"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-18T20:20:33.304000",
                        "user": "Lu",
                        "text": "A user account would have some sort of field indicating what permissions they have"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-18T20:20:51.971000",
                        "user": "Lu",
                        "text": "When a user tries to access a resource you would basically just check if they have the correct permissions"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-18T20:25:58.727000",
                        "user": "Lu",
                        "text": "Any specific questions relating to that concept?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2446",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-26T03:29:34.098000",
                        "user": "Fabrizzio",
                        "text": "how can i use the variable in a url with string formats"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-26T03:30:47.950000",
                        "user": "Malaquias",
                        "text": "to do a request or handle a response?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-26T03:31:06.937000",
                        "user": "Fabrizzio",
                        "text": "to do a request"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-26T03:31:41.484000",
                        "user": "Malaquias",
                        "text": "have you checked out https://golang.org/pkg/net/url/#URL"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-26T03:31:49.344000",
                        "user": "Malaquias",
                        "text": "it has the ability to build a compliant url"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-26T03:32:05.254000",
                        "user": "Fabrizzio",
                        "text": "Oh i will look into it"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-26T03:32:45.162000",
                        "user": "Shritha",
                        "text": "also Sprintf"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-26T03:33:00.394000",
                        "user": "Fabrizzio",
                        "text": "oh yea"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-26T03:33:43.688000",
                        "user": "Fabrizzio",
                        "text": "ty guys"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-26T03:35:48.251000",
                        "user": "Fabrizzio",
                        "text": "and is there any way to make optional arguments?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-26T03:36:47.310000",
                        "user": "Maram",
                        "text": "nope"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-26T03:36:54.944000",
                        "user": "Malaquias",
                        "text": "not in the way you probably want"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-26T03:37:23.540000",
                        "user": "Oceann",
                        "text": "you could just use \u2018_\u2019 to just not use the variable"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-26T03:37:58.903000",
                        "user": "Malaquias",
                        "text": "thats not what they were asking but yes that is true \ud83d\ude42"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-26T03:39:06.214000",
                        "user": "Fabrizzio",
                        "text": "OH ok"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-26T03:51:38.479000",
                        "user": "Mischa",
                        "text": "so uh is there any way to make gRPC's statuses return only the description in the `grpcmessage` trailer"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "42",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-02T20:49:33.101000",
                        "user": "Mariann",
                        "text": "Does Go support _explicit versioning_ ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-02T20:49:43.002000",
                        "user": "Lu",
                        "text": "yes"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-02T20:49:45.731000",
                        "user": "Lu",
                        "text": "?go modules"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-02T20:50:24.087000",
                        "user": "Lu",
                        "text": "yes"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-02T20:50:24.504000",
                        "user": "Olivia",
                        "text": "yes"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-02T20:50:26.812000",
                        "user": "Mariann",
                        "text": "oo"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-02T20:50:27.888000",
                        "user": "Olivia",
                        "text": "check the docs"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-02T20:50:38.721000",
                        "user": "Olivia",
                        "text": "it's amazing what you can find in them"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-02T20:50:49.271000",
                        "user": "Mariann",
                        "text": "yeah..."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-02T20:52:26.782000",
                        "user": "Jkari",
                        "text": "I just use semantic versioning"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-02T20:52:40.853000",
                        "user": "Mariann",
                        "text": "To be honest I have ~~read~~ skimmed that page in the past and I can't remember it mentioning explicit versioning explicitly and all the examples use threepart versions mostly."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-02T20:53:01.959000",
                        "user": "Lu",
                        "text": "for the most part that's what's used"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-02T20:53:10.251000",
                        "user": "Lu",
                        "text": "but it support a 4 number notation"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-02T20:53:35.084000",
                        "user": "Jkari",
                        "text": "I think it just supports any git tags tbh"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-02T20:53:39.105000",
                        "user": "Lu",
                        "text": "it really follows semantic versioning specifically"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-02T20:53:40.519000",
                        "user": "Jkari",
                        "text": "3 is just the most common"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-02-02T20:53:47.878000",
                        "user": "Lu",
                        "text": "which is compatible with 4 numbers"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-02-02T20:53:59.632000",
                        "user": "Lu",
                        "text": "but in semver the third digit is typically used for patches"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-02-02T20:54:42.630000",
                        "user": "Mariann",
                        "text": "In explicit versioning the fourth is for patches. I wonder if the fourth will count as the prerelease string?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-02-02T20:56:27.097000",
                        "user": "Jkari",
                        "text": "`v1.2.3rc1`"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-02-02T20:56:28.571000",
                        "user": "Jkari",
                        "text": ":StareNeutral:"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-02-02T20:56:56.896000",
                        "user": "Mariann",
                        "text": "I guess the best way to find out is to test."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2602",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-31T10:03:16.095000",
                        "user": "Celise",
                        "text": "How do I check if a table exists in sql? Ive been using select  from table but ovbiosuly it returns false if nothings there. I looked into this```IF (EXISTS (SELECT   FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_SCHEMA = TheSchema  AND TABLE_NAME = TheTable'))BEGIN Do StuffEND```But not sure what to pass to the schema"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-31T10:04:31.280000",
                        "user": "Maddyson",
                        "text": "depends on the driver"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-31T10:04:32.529000",
                        "user": "Maddyson",
                        "text": "mysql:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-31T10:04:37.249000",
                        "user": "Maddyson",
                        "text": "```SELECT  FROM information_schema.tablesWHERE table_schema = yourdb  AND table_name = testtable'LIMIT 1;```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-31T10:06:31.843000",
                        "user": "Celise",
                        "text": "Legend"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-31T10:06:35.232000",
                        "user": "Celise",
                        "text": "@Sgt_Tailor thanks"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-31T10:06:59.739000",
                        "user": "Maddyson",
                        "text": "I should make a stackoverflow bot that just yoinks the first result from the site"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-31T10:07:07.185000",
                        "user": "Maddyson",
                        "text": "legit all I do 70% of the time"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-31T10:07:39.720000",
                        "user": "Maddyson",
                        "text": "the remaining 30% is 28% godoc and 2% thinking"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-31T10:08:32.259000",
                        "user": "Celise",
                        "text": "Lol sorry I looked there but I couldnt understand the schema didnt think it was the db"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-31T10:08:40.365000",
                        "user": "Celise",
                        "text": "```test tableCheck := m.db.Query(\"SELECT  FROM information_schema.tables WHERE table_schema = \\'go_cms\\ AND table_name = \\'testtable\\ LIMIT 1;\")```"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-31T10:08:51.245000",
                        "user": "Celise",
                        "text": "So tablecheck will return nil if ithere is no table right?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-31T10:09:19.308000",
                        "user": "Maddyson",
                        "text": "if db is from the `database/sql` package then no"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-31T10:09:26.230000",
                        "user": "Maddyson",
                        "text": "It will return a Result"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-31T10:09:48.976000",
                        "user": "Maddyson",
                        "text": "which you to call next and scan on. That will return a error"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-31T10:10:23.345000",
                        "user": "Maddyson",
                        "text": "```var ErrNoRows = errors.New(\"sql: no rows in result set\")ErrNoRows is returned by Scan when QueryRow doesn\\'t return a row. In such a case QueryRow returns a placeholder Row value that defers this error until a Scan. ```"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-31T10:10:46.723000",
                        "user": "Maddyson",
                        "text": "> func (DB) QueryRow> > func (db DB) QueryRow(query string args ...interface{}) Row> > QueryRow executes a query that is expected to return at most one row. QueryRow always returns a nonnil value. Errors are deferred until Row's Scan method is called. If the query selects no rows the Row's Scan will return ErrNoRows. Otherwise the Row's Scan scans the first selected row and discards the rest."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-31T10:11:03.644000",
                        "user": "Maddyson",
                        "text": "So I would use QueryRow"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-31T10:11:19.120000",
                        "user": "Maddyson",
                        "text": "and then `Scan` to find the `ErrNoRows`"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-31T10:11:47.078000",
                        "user": "Celise",
                        "text": "Hmmmm I havent used that before it takes an interface as a second arg can it just be empty?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-31T10:13:21.235000",
                        "user": "Maddyson",
                        "text": "Check the godoc"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-31T10:13:32.056000",
                        "user": "Celise",
                        "text": "\ud83d\udc4d"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2221",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-23T21:17:46.923000",
                        "user": "Ansumana",
                        "text": "Hey I have a question how you can convert an interface into a type ? ```gofunc (cmp Comparator) Int(a interface{} b interface{}) bool { var ( aParsed int64 bParsed int64 ) switch t := a.(type) { case int int8 int16 int32 int64: aParsed = t.(int64) // panic: interface conversion: interface {} is int not int64 default: return false } ...}```There is a solution to that ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-23T21:21:37.085000",
                        "user": "Ansumana",
                        "text": "Oh i am wondering how ?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-23T21:25:11.344000",
                        "user": "Jkari",
                        "text": "^"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-23T21:25:14.251000",
                        "user": "Jkari",
                        "text": "why not?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-23T21:25:38.485000",
                        "user": "Jkari",
                        "text": "bruh"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-23T21:25:39.725000",
                        "user": "Ansumana",
                        "text": "Which represent tags"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-23T21:25:53.748000",
                        "user": "Jkari",
                        "text": "is it from json decode/unmarshal?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-23T21:26:34.061000",
                        "user": "Jkari",
                        "text": "feeks XY man"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-23T21:26:49.190000",
                        "user": "Ansumana",
                        "text": "A struct ?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-23T21:27:11.917000",
                        "user": "Jkari",
                        "text": "oh"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-23T21:27:17.197000",
                        "user": "Ansumana",
                        "text": "haha"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-23T21:27:17.998000",
                        "user": "Ansumana",
                        "text": "xD"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-23T21:27:25.990000",
                        "user": "Jkari",
                        "text": "OH COME ON"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-23T21:27:28.837000",
                        "user": "Hewitt",
                        "text": "lol"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-23T21:27:32.837000",
                        "user": "Jkari",
                        "text": "fyi"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-23T21:27:46.593000",
                        "user": "Jkari",
                        "text": "json only do these types when unmarshalling into an interface"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-23T21:28:04.082000",
                        "user": "Jkari",
                        "text": "so a number would always be a float64 from a json unmarshalled interface"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-23T21:28:13.292000",
                        "user": "Jkari",
                        "text": "you only have to type switch those types"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-23T21:28:13.699000",
                        "user": "Ansumana",
                        "text": "so if i am entering an uint64 this will panic ?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-23T21:28:22.677000",
                        "user": "Ansumana",
                        "text": "embarassing"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-23T21:28:43.401000",
                        "user": "Jkari",
                        "text": "this will give me ```gomap[string]interface{}{ a\": 1337.0,}```"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-23T21:29:32.654000",
                        "user": "Jkari",
                        "text": "heh"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-23T21:29:35.667000",
                        "user": "Jkari",
                        "text": "wanna see something funny?"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-23T21:29:36.109000",
                        "user": "Jkari",
                        "text": "None"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-23T21:29:42.084000",
                        "user": "Jkari",
                        "text": "here's your object typed into a JS interpreter"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-23T21:29:58.311000",
                        "user": "Jkari",
                        "text": "it's float64 because that's how JSON works that's how JS works"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-23T21:30:06.777000",
                        "user": "Jkari",
                        "text": "Go's encoding/json only adheres to that"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-23T21:30:20.187000",
                        "user": "Jkari",
                        "text": "that's why big numbers are usually quoted in JSON"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-23T21:30:24.232000",
                        "user": "Ansumana",
                        "text": "Okay fine I am learning something"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-23T21:30:41.016000",
                        "user": "Hewitt",
                        "text": "completely arbitrary json input sounds rough"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-23T21:30:56.313000",
                        "user": "Jkari",
                        "text": "arbitrary input of any format is already rough as it is lol"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-23T21:30:59.770000",
                        "user": "Ansumana",
                        "text": "I was thinking the unmarshal would be smart"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-23T21:31:06.856000",
                        "user": "Hewitt",
                        "text": "what are you making"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-23T21:31:09.816000",
                        "user": "Jkari",
                        "text": "you should also expect JSON to be smart"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-23T21:31:11.293000",
                        "user": "Jkari",
                        "text": "(it isn't)"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-23T21:31:21.803000",
                        "user": "Ansumana",
                        "text": "Kind of log streaming search"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-23T21:32:16.356000",
                        "user": "Ansumana",
                        "text": "Okay it's a good news for me haha"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-23T21:32:30.754000",
                        "user": "Ansumana",
                        "text": "I will not die in a 19348 switch cases of 892032 types of numbers"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-23T21:32:53.701000",
                        "user": "Hewitt",
                        "text": "if your just searching through text why convert it to values?"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-23T21:34:27.364000",
                        "user": "Ansumana",
                        "text": "In another scenario you can define statistics alerts on the fly with predefined threesold ect"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-23T21:35:07.380000",
                        "user": "Ansumana",
                        "text": "It's more complex than it look"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-23T21:36:11.707000",
                        "user": "Ansumana",
                        "text": "\ud83d\ude42"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-23T21:46:57.238000",
                        "user": "Chistian",
                        "text": "https://jsonschema.org/understandingjsonschema/reference/numeric.html"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-23T21:47:43.527000",
                        "user": "Jkari",
                        "text": "yeah?"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-23T22:06:13.422000",
                        "user": "Jkari",
                        "text": "i just wanted something different"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-23T22:06:15.536000",
                        "user": "Jkari",
                        "text": "also badger has TTL"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "1424",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-26T12:33:17.145000",
                        "user": "Reed",
                        "text": "Hey guys. I\\'m trying to decode JPG images using the `image/jpeg` package```img err := jpeg.Decode(file)if err != nil { fmt.Println(\"ERROR: Unable to decode image: imageName) fmt.Println(err) return err}```I\\'m always getting the following error: `missing SOI marker: FormatError null`Can anyone help me debug this and figure out if my image is actually corrupt or if there\\'s something wrong with my code? I\\'ve tried online decoders and they\\'re not giving me any errors with the same image"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-26T12:39:15.043000",
                        "user": "Reed",
                        "text": "the path to the jpeg file"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-26T12:39:20.980000",
                        "user": "Reed",
                        "text": "i copied and pasted a snippet of my code"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-26T12:39:44.042000",
                        "user": "Reed",
                        "text": "the thing is it was working just fine before and now all of a sudden it's not working. so im guessing my images have something wrong with them and i'm not sure how i can find out"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-26T12:40:56.199000",
                        "user": "Hayat",
                        "text": "Decode wants a reader \ud83e\udd14"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-26T12:42:34.643000",
                        "user": "Reed",
                        "text": "Elaborate please?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-26T12:44:01.126000",
                        "user": "Nazaret",
                        "text": "What type is `file`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-26T12:44:32.420000",
                        "user": "Hayat",
                        "text": "<https://golang.org/pkg/image/jpeg/#Decode>"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-26T12:44:56.187000",
                        "user": "Hayat",
                        "text": "or show a bit more code"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-26T12:48:33.730000",
                        "user": "Sabel",
                        "text": "A reader is returned by `file err := os.Open(pathToFile)` this is what you should pass to `jpeg.Decode(file)` (don't forget to use the `Close()` method on the reader once you're done using it. A good practice is to `defer file.Close()`)"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-03-26T12:54:18.529000",
                        "user": "Chadi",
                        "text": "As a sort of general question if im developing a module is it usually better practice with go to have less files (23 say) with a lot of code (12k lines) or more files (1015) with less code per file (200300 lines)?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-03-26T12:54:29.635000",
                        "user": "Chadi",
                        "text": "Seems to vary language to language so curious whats preferred with go"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-03-26T12:57:57.278000",
                        "user": "Chizaram",
                        "text": "there is no convention on this"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-03-26T12:58:10.208000",
                        "user": "Chizaram",
                        "text": "I prefer larger files myself and so does the standard library in some places (e.g. `net/http`)"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-03-26T12:58:13.638000",
                        "user": "Chizaram",
                        "text": "but there is no convention on this"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-03-26T12:58:25.615000",
                        "user": "Chizaram",
                        "text": "use your own judgement and the judgement of your team"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-03-26T13:01:31.392000",
                        "user": "Araiah",
                        "text": "guys decoding a gob is hella slow"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-03-26T13:01:39.125000",
                        "user": "Olivia",
                        "text": "is it"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-03-26T13:01:45.666000",
                        "user": "Araiah",
                        "text": "like 1 second"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-03-26T13:02:01.850000",
                        "user": "Araiah",
                        "text": "im sending image.RGBA"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-03-26T13:02:15.218000",
                        "user": "Araiah",
                        "text": "can anyone please tell me a faster way to send images through the net"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-03-26T13:02:19.245000",
                        "user": "Olivia",
                        "text": "not sure why you'd gob that"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-03-26T13:02:22.934000",
                        "user": "Olivia",
                        "text": "just send the bytes"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-03-26T13:02:36.652000",
                        "user": "Olivia",
                        "text": "it's a png or a jpeg or whatever"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-03-26T13:02:37.277000",
                        "user": "Olivia",
                        "text": "just"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-03-26T13:02:38.125000",
                        "user": "Olivia",
                        "text": "send that"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-03-26T13:02:43.081000",
                        "user": "Araiah",
                        "text": "encoding and decoding the bytes itself will take a while right"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-03-26T13:02:51.260000",
                        "user": "Olivia",
                        "text": "maybe"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-03-26T13:02:55.824000",
                        "user": "Araiah",
                        "text": "thats why i thought if we can send the whole thing as once it will be fast"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-03-26T13:02:59.350000",
                        "user": "Olivia",
                        "text": "but gob is doing more work on top of that"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-03-26T13:03:03.414000",
                        "user": "Araiah",
                        "text": "oh"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-03-26T13:03:04.550000",
                        "user": "Olivia",
                        "text": "because it's not just encoding the image data"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-03-26T13:03:08.656000",
                        "user": "Olivia",
                        "text": "it's encoding the Go type information"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-03-26T13:03:10.183000",
                        "user": "Olivia",
                        "text": "and so on"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-03-26T13:03:52.178000",
                        "user": "Araiah",
                        "text": "oh"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-03-26T13:04:03.542000",
                        "user": "Araiah",
                        "text": "thanks! ill try it"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-03-26T13:04:14.510000",
                        "user": "Olivia",
                        "text": "A stream of gobs is selfdescribing. Each data item in the stream is preceded by a specification of its type expressed in terms of a small set of predefined types. Pointers are not transmitted but the things they point to are transmitted; that is the values are flattened. Nil pointers are not permitted as they have no value. Recursive types work fine but recursive values (data with cycles) are problematic. This may change."
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-03-26T13:04:39.895000",
                        "user": "Olivia",
                        "text": "the docs literally say this is a selfcontained Go value including type data etc etc"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-03-26T13:11:13.102000",
                        "user": "Olivia",
                        "text": "BUT"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-03-26T13:11:16.531000",
                        "user": "Olivia",
                        "text": "ultimately"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-03-26T13:11:39.487000",
                        "user": "Olivia",
                        "text": "unless you're actually profiling your code it's...strictly speaking only speculation"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-03-26T13:13:44.627000",
                        "user": "Olivia",
                        "text": "uhhh"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-03-26T13:13:46.696000",
                        "user": "Olivia",
                        "text": "not super sure"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-03-26T13:13:57.133000",
                        "user": "Olivia",
                        "text": "i never messed with gob"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-03-26T13:14:11.698000",
                        "user": "Olivia",
                        "text": "to be blunt if i was going to do something like this i'd just use protobuf"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-03-26T13:14:23.606000",
                        "user": "Olivia",
                        "text": "or uh...msgpack or ikeapack if i was feeling frisky"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-03-26T13:14:50.833000",
                        "user": "Olivia",
                        "text": "Or JSON. Much more likely to use JSON"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-03-26T13:16:06.471000",
                        "user": "Sabel",
                        "text": "I mean anyway I don't see much of a use to transmit data as linked list anyway I'd probably process them into an array prior to transmission and if needed reconstruct the list upon reception"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-03-26T13:18:26.751000",
                        "user": "Olivia",
                        "text": "that isn't your real question presumably"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-03-26T13:18:33.694000",
                        "user": "Olivia",
                        "text": "just go ahead and ask about your code"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-03-26T13:19:22.844000",
                        "user": "Sabel",
                        "text": "I haven't but would love to someday"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-03-26T13:19:31.842000",
                        "user": "Theophilus",
                        "text": "I just want to know if they accept the strings package"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-03-26T13:19:39.115000",
                        "user": "Olivia",
                        "text": "it's in the standard library"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-03-26T13:19:39.935000",
                        "user": "Olivia",
                        "text": "so"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-03-26T13:19:51.166000",
                        "user": "Olivia",
                        "text": "it'd be really hard and stupid to forbid its usage"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-03-26T13:19:59.720000",
                        "user": "Olivia",
                        "text": "but you'd have to ask them"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-03-26T13:20:04.369000",
                        "user": "Olivia",
                        "text": "or just try it out"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-03-26T13:20:43.786000",
                        "user": "Theophilus",
                        "text": "well i know but after i sent the code i got a not recognized strings.Builder"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-03-26T13:20:52.060000",
                        "user": "Sabel",
                        "text": "Just allocate and bzero() a very long char array in C"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-03-26T13:20:53.974000",
                        "user": "Olivia",
                        "text": "sounds like an answer"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-03-26T13:21:11.835000",
                        "user": "Theophilus",
                        "text": "strings.Builder is on strings package"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-03-26T13:21:13.878000",
                        "user": "Theophilus",
                        "text": "XD"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-03-26T13:21:18.953000",
                        "user": "Olivia",
                        "text": "i'm familiar with it"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-03-26T13:21:25.261000",
                        "user": "Olivia",
                        "text": "sounds like a shitty code challenge"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-03-26T13:22:52.794000",
                        "user": "Theophilus",
                        "text": "https://play.golang.org/p/4bpdqT2Z8rG this is the code. and this is the challenge"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-03-26T13:22:53.480000",
                        "user": "Theophilus",
                        "text": "https://codingcompetitions.withgoogle.com/codejam/round/0000000000051705/0000000000088231"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-03-26T13:30:44.816000",
                        "user": "Olivia",
                        "text": "\u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-03-26T13:30:55.820000",
                        "user": "Olivia",
                        "text": "that's up to the code jam people"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-03-26T13:31:02.023000",
                        "user": "Olivia",
                        "text": "your code compiles"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-03-26T13:31:11.275000",
                        "user": "Olivia",
                        "text": "if they think that's not good enough they're the assholes"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-03-26T13:31:54.819000",
                        "user": "Theophilus",
                        "text": "On i found the problem. strings.ReplaceAll strings.Builder was add on GO after 1.7.3 version but Code jam is using 1.7.3"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-03-26T13:32:12.327000",
                        "user": "Olivia",
                        "text": "ahhhh"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-03-26T13:32:15.412000",
                        "user": "Olivia",
                        "text": "holy SHIT"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-03-26T13:32:19.106000",
                        "user": "Olivia",
                        "text": "1.7 is like"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-03-26T13:32:21.826000",
                        "user": "Theophilus",
                        "text": "so i pretty much have to do on hand thinking of do the Jam using C."
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-03-26T13:32:22.375000",
                        "user": "Olivia",
                        "text": "10 years old or something"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-03-26T13:32:28.815000",
                        "user": "Olivia",
                        "text": "that's awful"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-03-26T13:32:40.390000",
                        "user": "Theophilus",
                        "text": "at least they can't complain about C version of stuff"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-03-26T13:32:50.687000",
                        "user": "Theophilus",
                        "text": "since the last update is older than GO"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-03-26T13:33:31.361000",
                        "user": "Theophilus",
                        "text": "sorry they use: 1.7.4 (package: golanggo) go build Solution.go ./Solution"
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-03-26T13:33:40.792000",
                        "user": "Araiah",
                        "text": "codejam started?"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-03-26T13:33:44.408000",
                        "user": "Theophilus",
                        "text": "https://codingcompetitions.withgoogle.com/codejam/faq"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-03-26T13:33:55.636000",
                        "user": "Theophilus",
                        "text": "remains 8 days @pos1tr0n to start"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-03-26T13:34:05.118000",
                        "user": "Araiah",
                        "text": "oh you're doing the past problems"
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-03-26T13:34:55.435000",
                        "user": "Theophilus",
                        "text": "yes and have a problem with GO cause they use 1.7 version"
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-03-26T13:35:01.524000",
                        "user": "Theophilus",
                        "text": "and go is at 1.14 XD"
                    },
                    {
                        "message_number": "88",
                        "ts": "2020-03-26T13:35:33.608000",
                        "user": "Theophilus",
                        "text": "well i will use C now."
                    },
                    {
                        "message_number": "89",
                        "ts": "2020-03-26T13:46:53.852000",
                        "user": "Araiah",
                        "text": "ive used both gob and png. Even though png encoding/decoding is faster than gob it is slower overall"
                    },
                    {
                        "message_number": "90",
                        "ts": "2020-03-26T13:48:48.860000",
                        "user": "Araiah",
                        "text": "it takes about 0.15 seconds to transfer a full image and i want it even faster"
                    },
                    {
                        "message_number": "91",
                        "ts": "2020-03-26T13:50:19.331000",
                        "user": "Sabel",
                        "text": "> just send the bytes> it's a png or a jpeg or whatever> just> send that"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "1489",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-28T22:24:21.064000",
                        "user": "Lu",
                        "text": "The same way"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-28T22:24:34.127000",
                        "user": "Lu",
                        "text": "Anything that locks the mutex will be blocked if it's already locked"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-28T22:24:47.312000",
                        "user": "Lu",
                        "text": "It has nothing to do with what variables you access during the lock"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-28T22:25:47.590000",
                        "user": "Lu",
                        "text": "The `.Lock()` method will block if a lock is already held preventing that code path from running until it's unlocked"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-28T22:26:06.656000",
                        "user": "Lu",
                        "text": "It can hurt your concurrent performance though"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-28T22:26:12.494000",
                        "user": "Lu",
                        "text": "Since you need to synchronize access"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2244",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-24T15:25:16.677000",
                        "user": "Oshea",
                        "text": "Is there a way to rate limit logs or a logger which supports rate limiting available?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-24T15:25:29.478000",
                        "user": "Oshea",
                        "text": "like buffer and limit the number of console logs /s"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-24T15:26:31.696000",
                        "user": "Crispin",
                        "text": "why is more abstraction worse"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-24T15:26:41.867000",
                        "user": "Crispin",
                        "text": "with that statement you gotta use c and not go"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-24T15:34:41.347000",
                        "user": "Jkari",
                        "text": "not really"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-24T15:35:11.192000",
                        "user": "Chistian",
                        "text": "use asm and not c or go"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-24T15:35:13.052000",
                        "user": "Jkari",
                        "text": "but I'd recommend chi over gin too"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-24T15:35:27.914000",
                        "user": "Olivia",
                        "text": "real programmers use an abacus"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-24T15:37:46.883000",
                        "user": "Gavriel",
                        "text": "@mnhn yes I use builtin flags."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-24T15:39:19.834000",
                        "user": "Chistian",
                        "text": "fingers your fingers !"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-24T15:43:34.105000",
                        "user": "Crispin",
                        "text": "@_diamondburned_ why? they seem pretty similar"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-24T15:44:02.123000",
                        "user": "Jkari",
                        "text": "chi does less"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-24T15:47:10.114000",
                        "user": "Chistian",
                        "text": "what about https://github.com/labstack/echo ?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-24T15:47:25.004000",
                        "user": "Izna",
                        "text": "wasnt there some controversy about that"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-24T15:47:28.128000",
                        "user": "Izna",
                        "text": "or was it something else"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-24T15:48:26.936000",
                        "user": "Chistian",
                        "text": "opinions"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-24T15:49:23.823000",
                        "user": "Izna",
                        "text": "i have never used it but i wouldnt because i dont see a point in suing it"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-24T15:50:24.611000",
                        "user": "Joakim",
                        "text": "I have multiple websites that use the same front end and backend code just have different html templates so I created a new module for them all to share. Now when I upgrade this module I also have to upgrade every website with the new `go.mod` version and deploy to the docker registry does this sound like bad practice?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-24T15:50:50.279000",
                        "user": "Olivia",
                        "text": "no that's just regular management of shared dependencies"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-24T15:50:56.463000",
                        "user": "Joakim",
                        "text": "good \ud83d\ude42"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1908",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T13:35:42.776000",
                        "user": "Fidel",
                        "text": "Hei guys what's up?I decided to learn Go and my midterm objective is to move a personal project i've written in python/django to Go.It's a simple REST api server sql db and such"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T13:36:00.525000",
                        "user": "Fidel",
                        "text": "Any suggestion on which frameworks to use?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T13:36:07.244000",
                        "user": "Mingliang",
                        "text": "gochi gang"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T13:36:07.554000",
                        "user": "Jakub",
                        "text": "Does this look evil"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-30T13:36:11.185000",
                        "user": "Jakub",
                        "text": "```go allParticipants = append(allParticipants, append(participantsOfStatuses(threadStatuses), append(participantsOfMessage(&parentMessage), participantsOfMessage(threadedMessage)...)...)...) participantsSet := stringsutil.HashSet(allParticipants)```"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T13:36:12.788000",
                        "user": "Mingliang",
                        "text": "depends how much own work you wanna do"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T13:36:34.812000",
                        "user": "Yufan",
                        "text": "it does doggy"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T13:36:36.425000",
                        "user": "Jakub",
                        "text": "I need to concat lists together but i dont want to make"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T13:36:39.059000",
                        "user": "Jakub",
                        "text": "twenty for loops"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T13:36:51.759000",
                        "user": "Fidel",
                        "text": "@Str\u0153m Well Django is for perfectionists with deadlines so I was looking for an equivalent framework lol"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-30T13:37:43.202000",
                        "user": "Daisuke",
                        "text": "@Urinamara stdlib"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-30T13:37:57.592000",
                        "user": "Fidel",
                        "text": "is there any higher level rest framework?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-30T13:38:12.769000",
                        "user": "Daisuke",
                        "text": "start with the basics"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-30T13:38:25.634000",
                        "user": "Daisuke",
                        "text": "the stdlib is more than functional for REST APIs"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-30T13:38:35.080000",
                        "user": "Fidel",
                        "text": "I already know a bit of Go"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-30T13:39:06.974000",
                        "user": "Jakub",
                        "text": "```gofunc Concat(slices ...[]string) []string { concat := make([]string 0 len(slices)) for _ s := range slices { concat = append(concat s...) } return concat}```"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-30T13:39:08.211000",
                        "user": "Jakub",
                        "text": "Hows this"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-30T13:39:19.053000",
                        "user": "Fidel",
                        "text": "I've been looking at resty but I found several others on Github just need to know what goers like the most"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-30T13:39:29.565000",
                        "user": "Daisuke",
                        "text": "If you find yourself needing something a bit more than the stdlib gochi is a good router"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-30T13:39:45.406000",
                        "user": "Daisuke",
                        "text": "But you really should know how to make REST APIs with the standard libs"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-30T13:40:19.742000",
                        "user": "Fidel",
                        "text": "> But you really should know how to make REST APIs with the standard libsI already know that I asked a very precise question man XD"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-30T13:40:25.070000",
                        "user": "Fidel",
                        "text": "I will check out gochi thanks"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-30T13:40:36.176000",
                        "user": "Jakub",
                        "text": "```go allParticipants := stringsutil.Concat(threadStatuses.ProfileIDs() participantsOfMessage(&parentMessage) participantsOfMessage(threadedMessage)) participantsSet := stringsutil.HashSet(allParticipants)```"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-30T13:40:38.040000",
                        "user": "Jakub",
                        "text": "c:"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-30T13:41:52.662000",
                        "user": "Bayne",
                        "text": "@Urinamara the truth is most of the community advises against those higher level frameworks that are popular in other environments"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-30T13:42:09.767000",
                        "user": "Delphine",
                        "text": "I make rest apis with stdlib"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-30T13:42:12.797000",
                        "user": "Josi",
                        "text": "@mmacheerpuppy \ud83e\udd22"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-09-30T13:42:20.005000",
                        "user": "Bayne",
                        "text": "Reasons are many: the stdlib is fantastic and much better than what you have elsewhere"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-09-30T13:42:29.206000",
                        "user": "Jakub",
                        "text": "@Sgt_Tailor why :vomitblood:"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-09-30T13:42:30.572000",
                        "user": "Fidel",
                        "text": "> @Urinamara the truth is most of the community advises against those higher level frameworks that are popular in other environments@evandocarmo I see this makes kinda sense."
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-09-30T13:42:31.031000",
                        "user": "Delphine",
                        "text": "stdlib is love stdlib is life"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-09-30T13:42:53.112000",
                        "user": "Fidel",
                        "text": "ok next question"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-09-30T13:43:00.713000",
                        "user": "Fidel",
                        "text": "Is there anything that can compare to Django Admin?"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-09-30T13:43:09.917000",
                        "user": "Josi",
                        "text": "You hide the gore by shoving it in a different package. I would just have 3 consecutive calls to append"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-09-30T13:43:13.134000",
                        "user": "Bayne",
                        "text": "I think the dumpster fire that the Iris project is (stealing people's code bad ethics all around) also turned people off from those frameworks"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-09-30T13:43:37.221000",
                        "user": "Bayne",
                        "text": "What does Django admin do?"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-09-30T13:43:37.427000",
                        "user": "Jakub",
                        "text": "@Sgt_Tailor Well its not hiding the gore but creating a function that can deal with it more neatly"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-09-30T13:43:51.236000",
                        "user": "Delphine",
                        "text": "did Iris project actually do that wtf"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-09-30T13:43:54.817000",
                        "user": "Josi",
                        "text": "neatly xD"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-09-30T13:44:10.860000",
                        "user": "Bayne",
                        "text": "Just google `Iris golang reddit`"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-09-30T13:44:20.690000",
                        "user": "Josi",
                        "text": "Or as rob pike would say: code should be clear not clever"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-09-30T13:44:44.051000",
                        "user": "Delphine",
                        "text": "jesus lol"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-09-30T13:45:13.086000",
                        "user": "Jakub",
                        "text": "I have mixed feelings on rob pykes code style"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-09-30T13:45:36.257000",
                        "user": "Jakub",
                        "text": "I think that it reduces clarity when dealing with business logic"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-09-30T13:45:48.340000",
                        "user": "Jakub",
                        "text": "and its harder to write unit testable code"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-09-30T13:45:51.363000",
                        "user": "Jakub",
                        "text": "On the other hand"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-09-30T13:46:15.874000",
                        "user": "Jakub",
                        "text": "for loops are generally easier to read"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-09-30T13:46:38.125000",
                        "user": "Delphine",
                        "text": "i think his code is nice for his use cases"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-09-30T13:46:51.345000",
                        "user": "Josi",
                        "text": "`Concat` doesn't actually concatenate the strings does it?"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-09-30T13:46:55.622000",
                        "user": "Bayne",
                        "text": "If you need your business logic to be evident comment your loop or hide it in a wellnamed function"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-09-30T13:47:57.415000",
                        "user": "Josi",
                        "text": "@mmacheerpuppy If `stringutils.Concat` returns a slice the name is incorrect imo"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-09-30T13:48:20.178000",
                        "user": "Delphine",
                        "text": "You know what's nice? Having a test be commented in a narrative manner"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-09-30T13:49:28.073000",
                        "user": "Jakub",
                        "text": "Yeah but thats it you can quickly end up with thousands of lines of code due to the verbosity of loops when you could with the right functional data abstractions have hundreds"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-09-30T13:49:43.892000",
                        "user": "Bayne",
                        "text": "Lines are free /deezy"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-09-30T13:49:54.564000",
                        "user": "Josi",
                        "text": "What does the function actually do btw?"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-09-30T13:50:13.440000",
                        "user": "Josi",
                        "text": "when I read `Concat` I would expect the result to be a single string"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-09-30T13:50:14.704000",
                        "user": "Jakub",
                        "text": "The one being called?"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-09-30T13:50:37.543000",
                        "user": "Jakub",
                        "text": "Oh it just builds a superslice out of subslices"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-09-30T13:50:45.024000",
                        "user": "Jakub",
                        "text": "So it concatenates arrays of strings"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-09-30T13:50:51.741000",
                        "user": "Jakub",
                        "text": "it should be stringsutil.concat"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-09-30T13:51:34.010000",
                        "user": "Josi",
                        "text": "aka just appending them"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-09-30T13:52:09.829000",
                        "user": "Jakub",
                        "text": "It would be better to pass a function which does something like maps the given fun over enumerable and flattens the result. A flat map op"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-09-30T13:52:14.405000",
                        "user": "Jakub",
                        "text": "And then I pass into flat map"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-09-30T13:52:16.566000",
                        "user": "Jakub",
                        "text": "More reusable"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-09-30T13:53:42.916000",
                        "user": "Josi",
                        "text": "combining the slices makes sense but having it in `stringutils` is kinda weird. It just seems like a function what would accept multiple strings and concatenates them to return a single one"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-09-30T13:55:17.925000",
                        "user": "Jakub",
                        "text": "yea"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-09-30T13:55:19.817000",
                        "user": "Jakub",
                        "text": "i hear that"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-09-30T13:56:34.513000",
                        "user": "Josi",
                        "text": "Random helper function vs:```go allParticipants := make([]string 0) allParticipants = append(allParticipants threadStatuses.ProfileIDs()) allParticipants = append(allParticipants participantsOfMessage(&parentMessage)) allParticipants = append(allParticipants participantsOfMessage(threadedMessage))```"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1915",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T18:00:13.155000",
                        "user": "Cristofor",
                        "text": "Are now perhaps any Android developers using Go around? or does that breed not exist?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T18:04:55.767000",
                        "user": "Josselin",
                        "text": "weird"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T18:05:00.594000",
                        "user": "Cristofor",
                        "text": "i did ask 2 hours ago and before that"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T18:05:02.796000",
                        "user": "Simone",
                        "text": "you might have more success asking on the gio mailing list: <https://lists.sr.ht/~eliasnaur/gio>"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-30T18:05:09.488000",
                        "user": "Cristofor",
                        "text": "oh"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T18:05:14.792000",
                        "user": "Josselin",
                        "text": "did you think it changed in 2 hours?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T18:05:17.431000",
                        "user": "Cristofor",
                        "text": "i did make a little progress"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T18:05:18.793000",
                        "user": "Samarie",
                        "text": "mailing lists :Weary:\ud83d\udc4c"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T18:05:24.658000",
                        "user": "Josselin",
                        "text": ":thonk:"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T18:05:25.345000",
                        "user": "Samarie",
                        "text": "you can also get on Freenode and ask them"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-30T18:05:40.425000",
                        "user": "Simone",
                        "text": "there's also an official slack channel for gio"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-30T18:06:11.455000",
                        "user": "Mingliang",
                        "text": "ofc there is"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-30T18:06:13.071000",
                        "user": "Cristofor",
                        "text": "then ill check freenode later"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-30T18:16:02.925000",
                        "user": "Samarie",
                        "text": "I unironically prefer IRC over Slack"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-30T18:24:27.760000",
                        "user": "Cristofor",
                        "text": "i made my GUI build unchanged for Android! \ud83d\ude04"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-30T18:25:55.416000",
                        "user": "Cristofor",
                        "text": "it was the right combination of build tool (gogio instead of gomobile) build tags (nucular_gio there is no gio tag...) and not using the app.Main() function which is probably hidden in the GUI library..."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1898",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T07:38:56.569000",
                        "user": "Arani",
                        "text": "Hi I was going through Exercise: Images from A Tour of Go\". Link: https://tour.golang.org/methods/25 . But I don\\'t properly understand the problem statement and what am I expected to implement. Has anyone else implemented this? If so then can you just guide me what to do without explicitly telling the solution."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T07:44:00.063000",
                        "user": "Arani",
                        "text": "@Mansour You can write a method for this struct type (with pointer receiver). Use the range function to iterate over the []Time slice like this: `for index val := t.Timestamps` where t is the pointer to struct. And check for the conditions based on your use case. If true then use the same index variable to extract corresponding element from the values array."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T07:44:48.831000",
                        "user": "Arani",
                        "text": "Correction `for index val := range t.Timestamps`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T07:45:19.031000",
                        "user": "Mickel",
                        "text": "@Yash.Sc1ence create a struct that implements the `image.Image` interface"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-30T07:45:24.111000",
                        "user": "Mickel",
                        "text": "https://golang.org/pkg/image/#Image"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T07:45:27.150000",
                        "user": "Mickel",
                        "text": "this interface"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T07:46:57.298000",
                        "user": "Sebastien",
                        "text": "@Yash.Sc1ence why the ```make``` can you explain?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T07:48:07.547000",
                        "user": "Sebastien",
                        "text": "oh nvm"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T07:48:23.597000",
                        "user": "Sebastien",
                        "text": "you just mistyped xxD"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T07:48:30.993000",
                        "user": "Arani",
                        "text": "@Madxmike Yea that I understood but my problem was like when I am implementing the Bounds method then what values do I return ? Because the Image struct is empty when it's initialized in the main func and the problem statement says: return image.Rect(0 0 w h). What should be these w h values? Some arbitrary value of my choice?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-30T07:48:48.480000",
                        "user": "Mickel",
                        "text": "sure"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-30T07:48:55.776000",
                        "user": "Arani",
                        "text": "@Mansour  Yea my bad. lol range is what i meant"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-30T07:48:56.899000",
                        "user": "Mickel",
                        "text": "an image would have a width and height"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-30T07:49:28.616000",
                        "user": "Mickel",
                        "text": "presumably w and h would be fields of the image struct"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-30T07:50:08.984000",
                        "user": "Mickel",
                        "text": "@Mansour are these times : values 11? if so why not use a map"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-30T07:52:26.422000",
                        "user": "Arani",
                        "text": "@Mansour You can create a map by looping the Timestamps and then use this mapping to do the check. That would also work. But that would require 2 iterations. First to create a map and then to check the condition. So It's better if you can do it in 1 loop."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-30T07:52:34.144000",
                        "user": "Sebastien",
                        "text": "yes they been processed somewhere else and if the conditions are met they are put in chunk.timeStamp and chunk.values"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-30T07:52:59.042000",
                        "user": "Sebastien",
                        "text": "yeah less code i've to write the better :p"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2368",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T01:24:47.841000",
                        "user": "Kahleo",
                        "text": "Hello. I don\u2019t understand how `fmt.Println` implements the `Stringer` interface. `fmt.Println` returns `(n int err error)` while `Stringer` requires a `String()` method that returns `string`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-28T01:25:41.434000",
                        "user": "Jkari",
                        "text": "Println doesn't implement Stringer wdym"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-28T01:26:01.728000",
                        "user": "Jkari",
                        "text": "it has a case where if whatever is passed into Println implements Stringer then Println will use that instead"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-28T01:26:01.954000",
                        "user": "Hewitt",
                        "text": "Yeah I\u2019m not sure either diamond"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-28T01:26:10.212000",
                        "user": "Jkari",
                        "text": "Println itself doesn't implement Stringer"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-28T01:26:18.544000",
                        "user": "Kahleo",
                        "text": "Ok my mistake"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-28T01:30:08.961000",
                        "user": "Kahleo",
                        "text": "I think I got it."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-28T01:30:36.064000",
                        "user": "Jkari",
                        "text": "nice"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-28T01:32:05.130000",
                        "user": "Kahleo",
                        "text": "You can write a function that takes as an argument anything that satisfies the interface. And in your code you can send it whatever object implements those methods and go will just figure out which to run."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-28T01:33:12.081000",
                        "user": "Olivia",
                        "text": "eh pretty much close enough"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-28T01:33:15.771000",
                        "user": "Hewitt",
                        "text": "I mean it\u2019s not really figuring anything out"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-28T01:33:42.861000",
                        "user": "Hewitt",
                        "text": "But yeah it\u2019s close enough"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-28T01:34:16.796000",
                        "user": "Olivia",
                        "text": "```gotype Foo interface { Foo() string}func Butts(f Foo) {}```"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-28T01:34:51.103000",
                        "user": "Olivia",
                        "text": "this says the function butts will accept ANY struct which has a method with the name Foo that accepts zero arguments and returns one string"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-28T01:35:03.642000",
                        "user": "Olivia",
                        "text": "there\\'s no figuring out"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-28T01:35:09.945000",
                        "user": "Olivia",
                        "text": "you are explicitly defining what you need"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-28T01:35:39.695000",
                        "user": "Olivia",
                        "text": "by virtue of referencing the `Foo` interface"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-28T01:35:45.025000",
                        "user": "Kahleo",
                        "text": "Copy that. Thanks. Let me see if I can tie it back to printing stuff to the screen."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-28T01:36:27.186000",
                        "user": "Hewitt",
                        "text": "Which is a bit different than other languages you may have used that do have to \u201cfigure it out\u201d"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-28T01:36:32.026000",
                        "user": "Jkari",
                        "text": "fun fact"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-28T01:36:33.909000",
                        "user": "Jkari",
                        "text": "Foo is Stringer"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-28T01:37:04.768000",
                        "user": "Olivia",
                        "text": "that was the idea"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-28T01:38:36.792000",
                        "user": "Olivia",
                        "text": "i wanted my example to stand on its own"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-28T01:40:42.047000",
                        "user": "Olivia",
                        "text": "https://golang.org/src/fmt/print.go?s=7925:7974#L638"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-28T01:40:43.258000",
                        "user": "Olivia",
                        "text": "fun fact"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-28T01:40:52.681000",
                        "user": "Olivia",
                        "text": "from the godocs page you can view the source code"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-28T01:41:04.344000",
                        "user": "Olivia",
                        "text": "so you can see exactly how things work"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-28T01:41:43.630000",
                        "user": "Kahleo",
                        "text": "Println is really Fprintln. It accepts an io.Writer which is anything that has a Write() method."
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-28T01:42:04.093000",
                        "user": "Olivia",
                        "text": "but uh"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-28T01:42:11.904000",
                        "user": "Olivia",
                        "text": "Println is a very very nontrivial piece of code"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-28T01:42:20.828000",
                        "user": "Olivia",
                        "text": "you can dig into it if you want"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-28T01:42:23.221000",
                        "user": "Kahleo",
                        "text": "(It also accepts an empty interface which is any object)"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-28T01:42:30.171000",
                        "user": "Olivia",
                        "text": "but it will likely be a little overwhelming"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-28T01:42:38.884000",
                        "user": "Olivia",
                        "text": "knowing what's happening under the hood isn't a bad thing"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-28T01:42:41.429000",
                        "user": "Olivia",
                        "text": "but it's also okay to just"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-28T01:42:47.347000",
                        "user": "Olivia",
                        "text": "accept that it's a black box"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-28T01:42:52.753000",
                        "user": "Kahleo",
                        "text": "Yeah"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-28T01:42:55.261000",
                        "user": "Olivia",
                        "text": "i don't know how Println works"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-28T01:43:07.664000",
                        "user": "Olivia",
                        "text": "i know Stringer exists"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-28T01:43:14.204000",
                        "user": "Olivia",
                        "text": "that's about as far as you need to go"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-28T01:43:40.209000",
                        "user": "Kahleo",
                        "text": "Ok"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-28T01:43:52.510000",
                        "user": "Olivia",
                        "text": "there are better things to look at to learn about interfaces at least"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-28T01:44:04.564000",
                        "user": "Olivia",
                        "text": "more digestible at least"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-28T01:44:20.812000",
                        "user": "Kahleo",
                        "text": "I get the idea I just get intimidated when I see interfaces."
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-28T01:44:29.578000",
                        "user": "Olivia",
                        "text": "they're a nontrivial subject!"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-28T01:47:18.687000",
                        "user": "Olivia",
                        "text": "In the context of Println it just means that if you define a struct and then define a `String() string` method on that struct Println will use that in response to the `%s` verb"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-28T01:47:27.488000",
                        "user": "Olivia",
                        "text": "make sense?"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-28T01:48:20.630000",
                        "user": "Kahleo",
                        "text": "Yep  makes perfect sense. I like that a lot."
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-28T01:50:44.026000",
                        "user": "Olivia",
                        "text": "you got this"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-28T01:51:17.630000",
                        "user": "Kahleo",
                        "text": "I do appreciate it. Not the first time I\u2019ve asked in here lol."
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-28T01:51:32.929000",
                        "user": "Olivia",
                        "text": "as long as you don't ask the same question too many times you're gucci fam"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-28T01:51:50.545000",
                        "user": "Hewitt",
                        "text": "And check your errors \ud83d\ude24"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-28T01:51:54.780000",
                        "user": "Olivia",
                        "text": "correct"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-28T01:51:56.873000",
                        "user": "Olivia",
                        "text": "never ignore errors"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-28T01:51:57.352000",
                        "user": "Olivia",
                        "text": "ever"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-28T01:52:00.344000",
                        "user": "Kahleo",
                        "text": "Lolz. Alright I\u2019m gonna rest and do some more tomorrow. Yes indeed."
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-28T01:52:07.443000",
                        "user": "Olivia",
                        "text": "i don't care how certain you are that it will never error"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-28T01:52:33.285000",
                        "user": "Olivia",
                        "text": "that is precisely the moment you'll discover a scenario you NEVER imagined was possible"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2435",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-25T17:51:39.334000",
                        "user": "Rupert",
                        "text": "Hi All I am new to golang. I have tried a simple golang thread problem"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-25T17:51:40.854000",
                        "user": "Rupert",
                        "text": "```package mainimport ( fmt\" sync\")func worker2(wg sync.WaitGroup communicationChannel chan int) { defer wg.Done() for { fmt.Println(\"START : worker2\") value := <communicationChannel fmt.Printf(\"Value %d value) fmt.Println(\"END : worker2\") communicationChannel < (value + 1) }}func worker1(wg sync.WaitGroup communicationChannel chan int) { defer wg.Done() for { fmt.Println(\"START : worker1\") value := <communicationChannel fmt.Printf(\"Value %d value) fmt.Println(\"END : worker1\") communicationChannel < (value + 1) }}func main() { fmt.Println(\"Starting the main thread\") communicationChannel := make(chan int) var wg sync.WaitGroup go worker1(&wg communicationChannel) go worker2(&wg communicationChannel) wg.Add(2) wg.Wait() fmt.Println(\"Exiting main thread\")}```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-25T18:08:37.222000",
                        "user": "Ariya",
                        "text": "Does go not wait for all goroutines to be finished?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-25T18:10:11.991000",
                        "user": "Gwendolen",
                        "text": "no"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-25T18:10:16.832000",
                        "user": "Gwendolen",
                        "text": "if main exits everything exits"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "51",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-03T04:17:00.426000",
                        "user": "Amariyah",
                        "text": "so if a is done but b has 3 values left it's going to iterate over a 3 more times?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-03T04:17:39.691000",
                        "user": "Amariyah",
                        "text": "why infinite?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-03T04:17:45.803000",
                        "user": "Yitzchok",
                        "text": "because it's nondeterministic"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-03T04:18:06.931000",
                        "user": "Yitzchok",
                        "text": "realistically it won't be infinite but it will probably be many more than three times"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-03T04:18:26.413000",
                        "user": "Amariyah",
                        "text": "the goroutine for a will potentially loop 1000 times before b is ready?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-03T04:18:39.439000",
                        "user": "Yitzchok",
                        "text": "it has nothing to do with whether b is ready"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-03T04:20:12.270000",
                        "user": "Amariyah",
                        "text": "but the key point is a has a value even when closed"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-03T04:20:17.324000",
                        "user": "Yitzchok",
                        "text": "yes"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-03T04:20:43.721000",
                        "user": "Yitzchok",
                        "text": "receiving on a closed channel always immediately returns a zero value of the channel's element type"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-03T04:26:21.084000",
                        "user": "Amariyah",
                        "text": "thanks for clearing it up"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-03T04:26:53.121000",
                        "user": "Yitzchok",
                        "text": "certainly \ud83d\ude42"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2438",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T12:45:19.030000",
                        "user": "Oshea",
                        "text": "What's a good algorithm to remove all the strings in one list from another"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T12:45:32.692000",
                        "user": "Oshea",
                        "text": "from DS & A land"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T12:46:01.200000",
                        "user": "Oshea",
                        "text": "I could make a map of the strings and just check if they are in the map on a second loop"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T12:46:06.873000",
                        "user": "Oshea",
                        "text": "Not sure if there's a better way to do it"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T12:46:32.692000",
                        "user": "Olivia",
                        "text": "no that's the way"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-30T12:46:38.146000",
                        "user": "Olivia",
                        "text": "just use maps"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-30T12:46:47.540000",
                        "user": "Olivia",
                        "text": "`map[string]bool`"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-30T12:47:00.906000",
                        "user": "Olivia",
                        "text": "`map[string]struct{}` if you want to be absolutely needlessly neurotic about memory usage"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-30T12:47:41.368000",
                        "user": "Jhan",
                        "text": "I heard that I shouldn't use too much pointers. Is that true?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-30T12:47:56.710000",
                        "user": "Olivia",
                        "text": "well"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-30T12:48:07.961000",
                        "user": "Olivia",
                        "text": "people think of them as a cheat code for performance gains"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-30T12:48:11.100000",
                        "user": "Olivia",
                        "text": "they are not"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-30T12:48:14.772000",
                        "user": "Olivia",
                        "text": "they have valid uses"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-30T12:48:17.518000",
                        "user": "Olivia",
                        "text": "just"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-30T12:48:33.726000",
                        "user": "Olivia",
                        "text": "default to not using them unless you specifically need the functionality they offer"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-30T12:48:54.444000",
                        "user": "Jhan",
                        "text": "thank you \ud83d\ude42"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-30T12:50:26.539000",
                        "user": "Antwaun",
                        "text": "I seem to use pointers for literally everything"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-30T12:50:57.958000",
                        "user": "Olivia",
                        "text": "they're a valid thing to use"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-30T12:51:38.330000",
                        "user": "Olivia",
                        "text": "people just think oh pointers mean i\\'ll use less memory so i\\'ll shove them everywhere"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-30T12:51:56.637000",
                        "user": "Jhan",
                        "text": "Thats what I thought before \ud83d\ude04"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2516",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-28T16:02:48.700000",
                        "user": "Rosaleah",
                        "text": "Hello guys I'm not sure if this is the right place to ask (correct me if there is a more appropriate place)."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-28T16:03:28.349000",
                        "user": "Rosaleah",
                        "text": "On theory is it possible to launch a go instance through docker evaluate code from string get the result of the code and send it back to the requester\"?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-28T16:04:13.625000",
                        "user": "Rosaleah",
                        "text": "I\\'m trying to do a student project which would allow client side evaluation of golang code but I\\'m unsure how could I protect the server from infinite loops and stuff so I\\'m trying to come up with a more efficient way."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-28T16:04:28.746000",
                        "user": "Rosaleah",
                        "text": "something similar to the gotour"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-28T16:05:21.235000",
                        "user": "Shritha",
                        "text": "just start an nspawn container with a timeout probably"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-28T16:05:26.557000",
                        "user": "Shritha",
                        "text": "or use go wasm"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-28T16:05:28.132000",
                        "user": "Suhar",
                        "text": "you could have a http server launch `go run`"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-28T16:05:34.460000",
                        "user": "Shritha",
                        "text": "Docker isn't very secure though"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-28T16:05:39.305000",
                        "user": "Suhar",
                        "text": "and use firejail or something"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-28T16:05:41.506000",
                        "user": "Suhar",
                        "text": "with rlimits"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-28T16:07:31.620000",
                        "user": "Malaquias",
                        "text": "it really depends on how secure you want this stuff to be"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-28T16:07:49.916000",
                        "user": "Malaquias",
                        "text": "for just some silly school thing its very different than having this be a real playground"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-28T16:08:07.708000",
                        "user": "Rosaleah",
                        "text": "the project should be left for the university to be used"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-28T16:08:14.645000",
                        "user": "Rosaleah",
                        "text": "its a code editor with solutions and tests"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-28T16:08:18.054000",
                        "user": "Rosaleah",
                        "text": "available in js and c#"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-28T16:08:38.918000",
                        "user": "Rosaleah",
                        "text": "sadly i cannot show it since its not live yet (was going to be way easier for you to have a grasp)"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-28T16:08:48.915000",
                        "user": "Rosaleah",
                        "text": "so i cant use go wasm afaik"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-28T16:08:55.386000",
                        "user": "Malaquias",
                        "text": "is it always online"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-28T16:08:59.504000",
                        "user": "Rosaleah",
                        "text": "it is"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-28T16:08:59.718000",
                        "user": "Malaquias",
                        "text": "like a webapp"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-28T16:09:01.653000",
                        "user": "Rosaleah",
                        "text": "yeah"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-28T16:09:07.107000",
                        "user": "Malaquias",
                        "text": "then just have it send the request to the playground"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-28T16:09:10.993000",
                        "user": "Rosaleah",
                        "text": "its supposed to be used for data structures and algorithms classes"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-28T16:09:11.326000",
                        "user": "Malaquias",
                        "text": "and get the output back"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-28T16:09:26.937000",
                        "user": "Malaquias",
                        "text": "or run the playground locally on the server"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-28T16:09:27.438000",
                        "user": "Malaquias",
                        "text": "https://github.com/golang/playground"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-28T16:09:36.179000",
                        "user": "Rosaleah",
                        "text": "awww i didnt know about playground"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-28T16:09:40.673000",
                        "user": "Suhar",
                        "text": "yeah"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-28T16:09:44.295000",
                        "user": "Suhar",
                        "text": "it's pretty good"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-28T16:09:44.623000",
                        "user": "Rosaleah",
                        "text": "awesome"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-28T16:10:07.202000",
                        "user": "Malaquias",
                        "text": "i didnt want to say that at first because it looked like you were asking for help with some wierd homework thing"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-28T16:10:35.392000",
                        "user": "Rosaleah",
                        "text": "sadly many people come to discord for homework stuff nowadays"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-28T16:10:51.856000",
                        "user": "Rosaleah",
                        "text": "however in my case im trying to build a project which will be used for all the future students in the uni"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-28T16:10:56.249000",
                        "user": "Rosaleah",
                        "text": "https://giphy.com/gifs/mrwaccountpantiesinyqrgp9o3NUA"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-28T16:11:05.807000",
                        "user": "Malaquias",
                        "text": "sending the request straight from your js to the playground seems the best way to go about it"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-28T16:11:14.986000",
                        "user": "Malaquias",
                        "text": "then you dont have to worry about managing your own playground instance"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-07-28T16:11:29.813000",
                        "user": "Rosaleah",
                        "text": "awesome"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-07-28T16:11:38.509000",
                        "user": "Rosaleah",
                        "text": "thank you with all my heart for the quick response guys appreciate it"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-07-28T16:12:48.808000",
                        "user": "Malaquias",
                        "text": "https://blog.golang.org/playground"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-07-28T16:26:54.063000",
                        "user": "Safiyya",
                        "text": "hi. this link that has this systemd service"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-07-28T16:26:54.678000",
                        "user": "Safiyya",
                        "text": "https://fabianlee.org/2017/05/21/golangrunningagobinaryasasystemdserviceonubuntu1604/"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-07-28T16:32:49.463000",
                        "user": "Maram",
                        "text": "https://www.freedesktop.org/software/systemd/man/systemd.unit.html"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-07-28T16:33:55.196000",
                        "user": "Maram",
                        "text": "https://www.freedesktop.org/software/systemd/man/systemd.service.html#"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-07-28T16:49:02.712000",
                        "user": "Suhar",
                        "text": "@keyk learn the standard library. `sync` provides things like mutexes which will be important in a lot of code"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2447",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T17:00:32.128000",
                        "user": "Kahleo",
                        "text": "one of my issues is i am not great at navigating the golang docs. example  i want to use `bufio.NewReader`. Now that takes a `io.Reader`. I click on that and I see it's an interface and anything that implements a `Read(p []byte) (n int err error)` method signature I can send to `bufio.NewReader`. But how do I find out what implements that method?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T17:02:02.494000",
                        "user": "Daeshawn",
                        "text": "It depends on what do you want to read"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T17:03:32.773000",
                        "user": "Kahleo",
                        "text": "looks like `type File` implements a Read so I can do a `Open` get a (pointer to a) `type File` and send that to `bufio.NewReader`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T17:03:41.277000",
                        "user": "Kahleo",
                        "text": "just as an example i know there's easier ways to read a file"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T17:04:11.230000",
                        "user": "Daeshawn",
                        "text": "Yep that's right"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-30T17:04:24.033000",
                        "user": "Kahleo",
                        "text": "ok  getting there. thank you @r__d"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-30T17:04:41.521000",
                        "user": "Kahleo",
                        "text": "common to look in other packages for implementations"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-30T17:04:46.488000",
                        "user": "Kahleo",
                        "text": "getting there"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-30T17:05:54.897000",
                        "user": "Izna",
                        "text": "sometimes i grep but uslaly its in the same file"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-30T17:06:26.993000",
                        "user": "Daeshawn",
                        "text": "Yea and it really depends on what do you want to read and beauty is that if you do not find right package you can just implement your own Read function"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-30T17:07:31.493000",
                        "user": "Kahleo",
                        "text": "> Yea and it really depends on what do you want to read and beauty is that if you do not find right package you can just implement your own Read function@r__d that's exactly what i am moving towards wanting to be able to do"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-30T17:11:07.707000",
                        "user": "Kaspar",
                        "text": "Isn't there an option to pass a different go.mod filename to go build?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-30T17:12:28.364000",
                        "user": "Kaspar",
                        "text": "`modfile=file is a new flag that instructs the go command to read (and possibly write) an alternate go.mod file`"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-30T17:12:30.305000",
                        "user": "Hewitt",
                        "text": "It\u2019s in the 1.14 update notes if you can\u2019t find it elsewhere"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-30T17:12:32.257000",
                        "user": "Kaspar",
                        "text": "<https://golang.org/doc/go1.14>"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-30T17:13:15.632000",
                        "user": "Kaspar",
                        "text": "Thanks @Madxmike"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-30T17:18:00.432000",
                        "user": "Crispin",
                        "text": "Is there an easy way to generate a random sixdigit number?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-30T17:19:22.046000",
                        "user": "Jkari",
                        "text": "`rand.Intn(899999) + 100000`?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "29",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-01T21:22:57.303000",
                        "user": "Itali",
                        "text": "Hey I'm new to golang and am having trouble parsing this json response to a struct and was wondering if any of ya would be able to help me out?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-01T21:43:29.453000",
                        "user": "Reeves",
                        "text": "Hello I was reading the net/http go library and I found this: if n := t.connsPerHost[w.key]; n < t.MaxConnsPerHost {  if t.connsPerHost == nil {"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-01T21:44:46.283000",
                        "user": "Reeves",
                        "text": "how come condition (t.connsPerHost == nil ) ever be met. If that was the case wouldnt an error be raised in (n := t.connsPerHost[w.key])??"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-01T21:54:55.985000",
                        "user": "Josi",
                        "text": "no worries"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "1972",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-09T09:24:12.601000",
                        "user": "Joshlynn",
                        "text": "hey guys my tests detected a race condition in my code but i have no idea what the hell it means and would appreciate if someone can help me understand what it means"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-09T09:24:47.763000",
                        "user": "Joshlynn",
                        "text": "not sure how to go about doing this as it's a private project soooooo"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-09T09:30:19.793000",
                        "user": "Randy",
                        "text": "doesn't it usually say which line the race condition is on?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-09T09:30:49.584000",
                        "user": "Randy",
                        "text": "you're probably passing a pointer instead of a copy to something to your goroutines and have no mutex on that thing"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-09T09:31:39.323000",
                        "user": "Joshlynn",
                        "text": "hm"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-09T09:32:11.504000",
                        "user": "Joshlynn",
                        "text": "im making something like a travisCI where you have tests and they can be stopped and what not"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-09T09:32:21.880000",
                        "user": "Joshlynn",
                        "text": "how would i make a thing like that and make it not be racey"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-09T09:32:30.850000",
                        "user": "Joshlynn",
                        "text": "because like i want to be able to cancel tests while they are running"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-09T09:45:37.358000",
                        "user": "Avaiya",
                        "text": "Ah yes and `go get github.com/hashicorp/vault/api@v1.4.3` does is unrecognised revision \ud83d\ude42"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-09T09:47:13.705000",
                        "user": "Alyanna",
                        "text": "Do @v1.1.5"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-09T09:49:12.118000",
                        "user": "Avaiya",
                        "text": "`go get github.com/hashicorp/vault/api@v1.1.5: github.com/hashicorp/vault/api@v1.1.5: invalid version: unknown revision api/v1.1.5`"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-09T09:49:55.131000",
                        "user": "Avaiya",
                        "text": "And v1.1.5 version is from Jul 30 2019 \ud83d\ude42"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-09T09:50:15.253000",
                        "user": "Avaiya",
                        "text": "This works"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-09T09:50:25.518000",
                        "user": "Avaiya",
                        "text": "`go: github.com/hashicorp/vault/api master => v1.0.50.2020070819041199564f52d0e5`"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-09T09:51:00.721000",
                        "user": "Avaiya",
                        "text": "\ud83e\udd2f"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-09T10:08:19.961000",
                        "user": "Avaiya",
                        "text": "I found out why 1.0.5 is latest version because hashicorp is using special taging for api \ud83d\ude42"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-09T10:09:00.874000",
                        "user": "Avaiya",
                        "text": "https://github.com/hashicorp/vault/tags?after=v1.1.3"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-09T10:09:28.525000",
                        "user": "Avaiya",
                        "text": "an it lookslike tag `api/v1.0.5` is latest"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-09T10:09:53.541000",
                        "user": "Avaiya",
                        "text": "but where does 1.1.5 on pkg.dev come from I don't know"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "72",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-04T05:07:50.260000",
                        "user": "Jermari",
                        "text": "https://github.com/gen2brain/raylibgo/blob/8d36ebe392441e065d2d6cd54a64da54b039b66a/raylib/platform_desktop.go#L71Where did this author get the magic 1 << 24 from?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-04T05:08:02.431000",
                        "user": "Jermari",
                        "text": "`tmpslice := ([1 << 24]C.char)(unsafe.Pointer(ret))[:count:count]` for converting a C array to a go slice"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-04T05:08:22.614000",
                        "user": "Jermari",
                        "text": "`RLAPI char GetDroppedFiles(int count); ` is the C"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-04T05:09:37.407000",
                        "user": "Jermari",
                        "text": "oooh its allocating a really big array"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-04T05:09:42.127000",
                        "user": "Jermari",
                        "text": "that seems inefficient."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-04T05:14:26.419000",
                        "user": "Kenmari",
                        "text": "disgust"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-04T05:15:06.413000",
                        "user": "Jermari",
                        "text": "you say that but https://github.com/golang/go/wiki/cgo#turningcarraysintogoslices"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2053",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-18T16:29:45.564000",
                        "user": "Abdennabi",
                        "text": "Why I\\'m getting `compile: version go1.14.2 does not match go tool version go1.14\"`?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-18T16:31:10.597000",
                        "user": "Nazaret",
                        "text": "you have multiple go versions installed"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-18T16:31:38.982000",
                        "user": "Abdennabi",
                        "text": "GoLand installed latest"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-18T16:31:49.680000",
                        "user": "Nazaret",
                        "text": "you have a mismatch of go versions installed"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-18T16:31:54.400000",
                        "user": "Nazaret",
                        "text": "idc what goland did"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-18T16:32:00.325000",
                        "user": "Abdennabi",
                        "text": "How to fix this?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-18T16:32:08.326000",
                        "user": "Nazaret",
                        "text": "delete one of the two installs"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2556",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-30T01:07:58.958000",
                        "user": "Xabin",
                        "text": "anyone wanna help me with this stupid bug really quick and make like $20 btc"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-30T01:08:43.807000",
                        "user": "Maram",
                        "text": "i mean you gotta share your code first"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-30T01:08:46.949000",
                        "user": "Maram",
                        "text": "and describe the problem"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-30T01:08:55.647000",
                        "user": "Maram",
                        "text": "i one milllion percent promise your idea/code is not worth stealing"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-30T01:09:15.847000",
                        "user": "Maram",
                        "text": "you don't have to be shy about it"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-30T01:15:11.239000",
                        "user": "Shritha",
                        "text": "99% sure that's not where the error came from"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-30T01:15:36.457000",
                        "user": "Shritha",
                        "text": "oh i see"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-30T01:15:37.592000",
                        "user": "Shritha",
                        "text": "add string"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-30T01:16:08.331000",
                        "user": "Shritha",
                        "text": "``FirstSeen UnixEpoch `json:\"first_seen,string\"` ``"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-30T01:17:24.429000",
                        "user": "Xabin",
                        "text": "oh my f"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-30T01:17:42.493000",
                        "user": "Xabin",
                        "text": "if that works i'm going to freak out. one sec."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-30T01:19:22.467000",
                        "user": "Maram",
                        "text": "yeah go's json encoding is one of those things i was talking about"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-30T01:19:36.115000",
                        "user": "Maram",
                        "text": "it has an incredibly specific way it wants things handled"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-30T01:19:46.923000",
                        "user": "Maram",
                        "text": "but once you know it's embarassingly simple"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-30T01:23:17.991000",
                        "user": "Shritha",
                        "text": "hmm"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-30T01:23:21.219000",
                        "user": "Shritha",
                        "text": "i might be wrong"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-30T01:23:34.552000",
                        "user": "Shritha",
                        "text": "looking at the code again seems like `UnixEpoch` is of type `time.Time`"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-30T01:23:37.426000",
                        "user": "Shritha",
                        "text": "not int64"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-30T01:23:39.459000",
                        "user": "Xabin",
                        "text": "Yeah it didn't work that was the first thing i tried"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-30T01:23:51.982000",
                        "user": "Shritha",
                        "text": "maybe do `bytes.Trim(buf []byte{\\'\"\\'})`"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-30T01:24:06.867000",
                        "user": "Shritha",
                        "text": "then Unmarshal into the int"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-30T01:24:14.242000",
                        "user": "Xabin",
                        "text": "Okay let me try that ^^"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-30T01:24:44.384000",
                        "user": "Xabin",
                        "text": "i was thinking that since it does return strings in that format ``\"12348120411\"``"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-30T01:29:06.857000",
                        "user": "Xabin",
                        "text": "same thing"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-30T01:29:09.902000",
                        "user": "Xabin",
                        "text": "hmm"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-30T01:29:30.696000",
                        "user": "Shritha",
                        "text": "where is the trace pointing to"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-30T01:30:10.992000",
                        "user": "Xabin",
                        "text": "that chunk of code"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-30T01:30:45.636000",
                        "user": "Shritha",
                        "text": "can i have the struct decl"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-30T01:33:47.198000",
                        "user": "Xabin",
                        "text": "yup"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-30T01:34:38.847000",
                        "user": "Shritha",
                        "text": "ca n you add a log after ` json.Unmarshal(buf &epoch)`"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-30T01:34:50.214000",
                        "user": "Shritha",
                        "text": "do sth like `log.Println(\"custom unmarshal done err: err)`"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-30T01:34:55.169000",
                        "user": "Shritha",
                        "text": "see if the method is being called at all"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-30T01:34:57.292000",
                        "user": "Xabin",
                        "text": "yeah c: one sec"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-30T01:47:39.746000",
                        "user": "Xabin",
                        "text": "yeah it's fine ill figure it out eventually \ud83d\ude1b thank you for your helpo"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2324",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-22T02:41:23.326000",
                        "user": "Etziel",
                        "text": "Hey guys.. I am working with firebase but I am trying to create a mock implementation of it for some tests. In their methods they take an interface{}and return an error. The interface{} value is required to be a pointer. How can I assign a struct to this interface?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-22T02:41:42.819000",
                        "user": "Etziel",
                        "text": "I cannot seem to p = val"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-22T02:42:11.150000",
                        "user": "Layna",
                        "text": "```func (v interface{}) { reflect.ValueOf(v).Set(stuff)}```\ud83e\udd14"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-22T02:42:26.991000",
                        "user": "Etziel",
                        "text": "so you're a wizard yourself"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-22T02:44:02.388000",
                        "user": "Layna",
                        "text": "https://play.golang.org/p/lnPgeinz4o2"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-22T02:44:06.994000",
                        "user": "Layna",
                        "text": "that works too depends on your needs"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-22T02:44:31.884000",
                        "user": "Etziel",
                        "text": "s for me would be an interface{}"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-22T02:44:50.926000",
                        "user": "Etziel",
                        "text": "let me make a playground"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-22T02:45:23.884000",
                        "user": "Layna",
                        "text": "https://play.golang.org/p/lLNj5bAB9K5"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-22T02:45:33.543000",
                        "user": "Layna",
                        "text": "this is the reflect case and only works if it is same type anyway"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-22T02:45:39.937000",
                        "user": "Layna",
                        "text": "else .Set panics"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-22T02:47:21.276000",
                        "user": "Etziel",
                        "text": "https://play.golang.org/p/UPLwuxTLsaO"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-22T02:48:37.563000",
                        "user": "Layna",
                        "text": "yeah that's the case of the second example"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-22T02:49:30.988000",
                        "user": "Etziel",
                        "text": "Actually I had gotten it to work"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-22T02:49:33.791000",
                        "user": "Etziel",
                        "text": "thanks so much mate"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-22T03:13:08.303000",
                        "user": "Shritha",
                        "text": "if you already know the type of `stuff` then just assert lol"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-22T03:34:40.873000",
                        "user": "Layna",
                        "text": "true but I guess if we know stuff just pass func A(Stuff){}"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-22T03:34:47.762000",
                        "user": "Layna",
                        "text": "no asserting"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-22T03:35:04.446000",
                        "user": "Layna",
                        "text": "I guess reflect stuff and interfaces works better for serializers and stuff like that"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-22T03:35:55.400000",
                        "user": "Layna",
                        "text": "but still can be type switched and set indeed"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-22T03:44:35.323000",
                        "user": "Etziel",
                        "text": "The actually firebase sdk uses encoding/json and the mock that I had wrote really does not know the underlying type"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-22T03:44:56.398000",
                        "user": "Etziel",
                        "text": "sry... am tired"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-22T05:26:44.158000",
                        "user": "Uyi",
                        "text": "@_diamondburned_ I'm not trying to force everything I'm trying to figure out if I should use it or not"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-22T05:39:52.414000",
                        "user": "Uyi",
                        "text": "Ok"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-22T05:45:41.500000",
                        "user": "Uyi",
                        "text": "@_diamondburned_ so how should this example work without ioc? Should I import MySQL user manager to this interface with two methods Save and Remove? I'm completely new to go so sorry for that stupid question"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-22T05:50:30.936000",
                        "user": "Uyi",
                        "text": "https://discord.com/channels/118456055842734083/118456055842734083/735259421449388102"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-22T05:58:54.073000",
                        "user": "Uyi",
                        "text": "Oh I fight I get that here in ui/http/handlers I use container to get command bus"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-22T05:58:55.704000",
                        "user": "Uyi",
                        "text": "https://hastebin.com/wefaraxure.cs"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-22T05:59:03.066000",
                        "user": "Uyi",
                        "text": "So instead I just import it I guess?"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-22T06:10:34.421000",
                        "user": "Shritha",
                        "text": "oh wow"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-22T06:10:39.314000",
                        "user": "Shritha",
                        "text": "can't comment on that code; it's too generic"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-22T06:10:51.528000",
                        "user": "Shritha",
                        "text": "there's no specific purpose so I can't point anything out"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-22T06:42:23.336000",
                        "user": "Uyi",
                        "text": "Hm ok"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-22T06:42:41.521000",
                        "user": "Uyi",
                        "text": "Whole repo would help?"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-22T06:43:03.581000",
                        "user": "Shritha",
                        "text": "sure"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-22T07:07:23.555000",
                        "user": "Uyi",
                        "text": "@_diamondburned_ https://github.com/SerekKiri/orbibackend"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-07-22T07:09:40.370000",
                        "user": "Shritha",
                        "text": "woah"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-07-22T07:09:44.838000",
                        "user": "Shritha",
                        "text": "i've never seen anything like this before"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-07-22T07:11:33.951000",
                        "user": "Uyi",
                        "text": "you mean cqrs?"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-07-22T07:11:39.623000",
                        "user": "Uyi",
                        "text": "commands and queries"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-07-22T07:12:00.123000",
                        "user": "Uyi",
                        "text": "commands for managing database for example saving user and query to read from database for example login user"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-07-22T07:14:29.482000",
                        "user": "Shritha",
                        "text": "i mean the huge imports"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-07-22T07:14:46.391000",
                        "user": "Shritha",
                        "text": "i can't say anything tbh"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-07-22T07:14:49.016000",
                        "user": "Shritha",
                        "text": "i'll just link you this"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-07-22T07:14:50.248000",
                        "user": "Shritha",
                        "text": "?go layout"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-07-22T07:14:50.488000",
                        "user": "Japheth",
                        "text": "Standard Package Layout <https://medium.com/@benbjohnson/standardpackagelayout7cdbc8391fc1>  Skippy"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-07-22T07:15:03.216000",
                        "user": "Shritha",
                        "text": "this is too much for me sry"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-07-22T07:15:12.909000",
                        "user": "Uyi",
                        "text": "ok sure"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-07-22T07:15:14.452000",
                        "user": "Uyi",
                        "text": "thanks"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-07-22T07:15:33.356000",
                        "user": "Uyi",
                        "text": "I was looking for some rescourse about layouts so that should solve my issue"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2441",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T14:47:30.984000",
                        "user": "Averi",
                        "text": "how do y'all web developers like to do asset management"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T14:47:41.890000",
                        "user": "Averi",
                        "text": "e.g. elixir's phoenix framework has webpack/npm integration"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T14:49:18.068000",
                        "user": "Navia",
                        "text": "guys"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T14:49:22.764000",
                        "user": "Navia",
                        "text": "woops wrong chat"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T14:49:25.310000",
                        "user": "Navia",
                        "text": "apologies \u2764\ufe0f"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-30T14:54:36.250000",
                        "user": "Nazaret",
                        "text": ":kkk_CEREAL:"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1858",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T19:18:06.871000",
                        "user": "Loriann",
                        "text": "can math.Pow be used with integers in golang?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-28T19:18:26.701000",
                        "user": "Mingliang",
                        "text": "Not directly"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-28T19:21:20.575000",
                        "user": "Loriann",
                        "text": "oh how please?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-28T19:23:02.224000",
                        "user": "Codey",
                        "text": "i was bored in my cs class so i decided to check if the golang playground was not blocked and it wasn't and then the exact same day we were using chromebooks in physics and it was blocked"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-28T19:23:05.528000",
                        "user": "Codey",
                        "text": "so strict"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-28T19:23:40.341000",
                        "user": "Mingliang",
                        "text": "Cast the ints to floats lol"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-28T19:24:11.408000",
                        "user": "Mingliang",
                        "text": "Type assertion"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-28T19:24:21.778000",
                        "user": "Delphine",
                        "text": "https://tour.golang.org/methods/15"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-28T19:25:11.025000",
                        "user": "Calyse",
                        "text": "ahhh"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-28T19:25:31.185000",
                        "user": "Calyse",
                        "text": "thanks folks i'll go through the tour again"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "1053",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-26T17:47:17.933000",
                        "user": "Jonsi",
                        "text": "Why I can't get output from browser: https://hastebin.com/opavegagiv.cs ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-26T17:52:52.198000",
                        "user": "Kona",
                        "text": "Probably going to need to give us more context @ks123"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-26T17:54:39.383000",
                        "user": "Marva",
                        "text": "I'm not sure how you're expecting the code to come over standard input; that's not how OAuth works."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-26T17:55:12.851000",
                        "user": "Jonsi",
                        "text": "I used OAuth2 module example"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-26T17:55:15.924000",
                        "user": "Jonsi",
                        "text": "as base"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-26T17:55:27.540000",
                        "user": "Marva",
                        "text": "OAuth redirects the user's browser to a URL after the authorization happens which you'll then need to handle. You can do that with an embedded HTTP server or something like a custom protocol scheme (though I'm not really familiar with how that works with different operating systems)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-26T17:55:33.857000",
                        "user": "Marva",
                        "text": "Can you link to said example?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-26T17:55:39.395000",
                        "user": "Jonsi",
                        "text": "https://github.com/golang/oauth2/blob/master/example_test.go"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-26T17:57:41.751000",
                        "user": "Marva",
                        "text": "It seems like they want the user to manually copypaste the code into the terminal in that example."
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-26T17:58:10.034000",
                        "user": "Marva",
                        "text": "I don't see how they would get the URL into stdin and even then they're not doing any sort of parsing on it to extract the code so I don't really see any other explanation of how that would work."
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-26T17:58:52.012000",
                        "user": "Marva",
                        "text": "They even print the URL to go to in the terminal\u2014they don't open it for the user\u2014so it seems they're expecting the user to do the bulk of the work here."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-26T18:00:14.554000",
                        "user": "Marva",
                        "text": "You can have the user just copypaste the code or even the whole URL into your application (doing a bit of parsing to extract it in the latter case) but if you want the browser > application flow to be seamless then you'll need to handle the redirect in your application via HTTP."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2314",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-21T16:53:39.532000",
                        "user": "Dagmawi",
                        "text": "hey um just started learning go recently @_@how do i use a function from another package that is in a struct?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-21T16:54:25.221000",
                        "user": "Shritha",
                        "text": "a function in a struct?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-21T16:54:35.900000",
                        "user": "Shritha",
                        "text": "```govar thing Structthing.Function()```?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-21T16:55:30.938000",
                        "user": "Dagmawi",
                        "text": "like ```type YT struct { playing chan interface{} stop chan interface{}}func (y YT) Play(e dca.EncodeSession opusSend chan []byte) error {```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-21T16:55:52.807000",
                        "user": "Ilyan",
                        "text": "packageName.NameOfTheStructFromThatPackage{"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-21T16:56:06.081000",
                        "user": "Ilyan",
                        "text": "it needs to be exported"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-21T16:57:05.537000",
                        "user": "Leota",
                        "text": "```goy := &packageName.YT{}y.Play(...)```?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-21T16:58:35.402000",
                        "user": "Dagmawi",
                        "text": "oh"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-21T16:58:44.977000",
                        "user": "Dagmawi",
                        "text": "wait why's this work?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-21T16:59:20.708000",
                        "user": "Leota",
                        "text": "My code?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-21T16:59:26.293000",
                        "user": "Dagmawi",
                        "text": "mhm"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-21T16:59:47.949000",
                        "user": "Leota",
                        "text": "The first line creates a zerovalued struct of type `pkg.YT` (and stores a pointer to that type in `y`)"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-21T17:00:02.382000",
                        "user": "Leota",
                        "text": "The second calls that type's `Play` method"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-21T17:01:03.966000",
                        "user": "Dagmawi",
                        "text": "mmh so it creates the pointer reference?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-21T17:01:39.250000",
                        "user": "Leota",
                        "text": "It creates a `YT` object and stores a reference to it in the `y` pointer yes"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-21T17:02:14.181000",
                        "user": "Dagmawi",
                        "text": "alright thanks"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "29",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-02T05:36:25.559000",
                        "user": "Malaina",
                        "text": "Hi! Please help to understand go internals. Is this pseudo code safe? Can I simple return cache without coping if will run two goroutines in parallel first reader second  writer? Can some unexpected happened if reader returns slice of pointers when mutex will be unlocked and writer clean cache?```gotype A struct { sync.RWMutex cache []SomeObj}func(a A) reader() []SomeObj { a.RLock() defer a.RUnlock() return a.cache}func (a A) writer() { a.Lock() defer a.Unlock() // do somethig with cache}```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-02T05:45:42.998000",
                        "user": "Amariyah",
                        "text": "Can someone clarify that?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-02T05:46:36.243000",
                        "user": "Amariyah",
                        "text": "so why have a return value within a go func?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-02T05:48:19.044000",
                        "user": "Yitzchok",
                        "text": "you don't always have to write a function literal"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-02T05:49:35.508000",
                        "user": "Olivia",
                        "text": "that's what channels are for"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-02T05:49:53.913000",
                        "user": "Yitzchok",
                        "text": "not useless but unused"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-02T05:50:02.273000",
                        "user": "Amariyah",
                        "text": "potato potato :p"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-02T05:51:58.138000",
                        "user": "Jkari",
                        "text": "returns a value as a goroutine?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-02T05:52:02.022000",
                        "user": "Jkari",
                        "text": "what does that mean :Thonk:"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "8",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-01T07:23:14.738000",
                        "user": "Lathan",
                        "text": "Why is `http.Request.Header`'s type `type Header map[string][]string`?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-01T07:23:48.899000",
                        "user": "Lathan",
                        "text": "Why a `map[string][]string` instead of `map[string]string`?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-01T07:24:40.663000",
                        "user": "Lathan",
                        "text": "E.g. if I set a header of `ApiKey` to `a34la32` shouldn't `ApiKey` be the map key and `a34la32` the value?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-01T07:24:50.843000",
                        "user": "Lathan",
                        "text": "What is the purpose of the `[]string`?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-01T07:29:43.908000",
                        "user": "Naif",
                        "text": "@oskar yes"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-01T07:29:45.131000",
                        "user": "Lathan",
                        "text": "Oh weird"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-01T07:30:15.336000",
                        "user": "Lathan",
                        "text": "Just saw the docs and I think you can keep adding to the same header key and it will just keep being appended"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-01T07:47:19.919000",
                        "user": "Lathan",
                        "text": "Does anyone know how to check if a `req.Header` key exists?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-01T07:50:30.745000",
                        "user": "Piya",
                        "text": "https://github.com/golang/go/blob/master/src/net/http/header.go#L40"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-01T07:51:52.085000",
                        "user": "Lathan",
                        "text": "Ogey dangyu @oskar"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-01T08:39:09.674000",
                        "user": "Lathan",
                        "text": "Oh yeah did that initially but tests were still failing. So printed out all the `req.Header` key values and apparently even though I inserted the key as `\"AccountKey\"` it was changed to `\"Accountkey\"` before it was set to `req.Header`."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-01T08:40:08.849000",
                        "user": "Lathan",
                        "text": "In the end I am just going with a check to `req.Header.Get[<name of key>]` which takes in a caseinsensitive header key and returns the value of it if doesn\\'t exist returns `\"\"`."
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-01T08:42:33.828000",
                        "user": "Lathan",
                        "text": "```if req.Header.Get(\"AccountKey\") ==  { t.Errorf(\"expected account key to be set on Request but it was not\")}``` Part of the `req.Header`\\'s API so decided to roll with it"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-01T09:14:19.981000",
                        "user": "Lathan",
                        "text": "Hmmm I want to input some dummy data into `json.NewDecoder(<dummy>).Decode(&someStruct)` but don't know how to. Accepts an `io.ReadCloser` value."
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-01T09:14:49.953000",
                        "user": "Lathan",
                        "text": "Ohhhhhh thanks for the ref! @Sgt_Tailor"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-01T09:15:10.644000",
                        "user": "Lathan",
                        "text": "Is it possible to mock a stream of data?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-01T09:17:37.523000",
                        "user": "Zlatko",
                        "text": "```godataToStream := banana\"stringReader := strings.NewReader(dataToStream)readCloser := ioutil.NopCloser(stringReader)```"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-01T09:18:24.718000",
                        "user": "Zlatko",
                        "text": "refs: https://golang.org/pkg/io/ioutil/#NopCloserhttps://golang.org/pkg/strings/#NewReader"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-01T09:18:43.704000",
                        "user": "Zlatko",
                        "text": "\u2764 go interfaces"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-01T09:20:25.334000",
                        "user": "Lathan",
                        "text": "Thanks man \ud83d\ude4f\ud83c\udffc Will check em out @Sgt_Tailor"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1851",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T16:02:45.398000",
                        "user": "Jakub",
                        "text": "What are some alternatives to the strategy pattern I can consider or should I only consider the strategy pattern :THONK: ```gotype UpdateStrategy interface { apply(dao DAO memberId threadId string updates dynamo.TableAttributeValues) (status error)}type UpdateToLatest struct{}type UpdateIfLastMessageIDEqual struct{}```Is the implementation I\\'m currently playing with I\\'m not sure if I want to make the update functions themselves public (exposed from the package) so I think this is right (but I\\'m not sure if these structs are the best implementation.Example ....```gofunc (u UpdateToLatest) apply(dao DAO memberId threadId string updates dynamo.TableAttributeValues) (status error) { h := dynamo.TableAttributeValue{ AttributeName: SchemaHashKey, AttributeValue: memberId, } c := dynamo.TableAttributeValue{ AttributeName: SchemaRangeKey, AttributeValue: threadId, } updates = append(updates dynamo.TableAttributeValue{ AttributeName: updatedAt\", AttributeValue: strconv.FormatInt(time.Now().UnixNano() 10), }) updated := status{} var ( res map[string]dynamodb.AttributeValue err error ) res err = dao.table.UpdateItem(nil h c updates...) if err != nil { return status{} err } err = dynamodbattribute.UnmarshalMap(res &updated) if err != nil { _ = errors.New(\"failed to unmarshal updated item with:  + err.Error()) return status{} err } return updated err}```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-28T16:10:38.793000",
                        "user": "Mickel",
                        "text": "@mmacheerpuppy if the structs are literally just the apply function you could just make them functions"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-28T16:11:04.121000",
                        "user": "Mickel",
                        "text": "```gotype UpdateStrategy func(dao DAO memberId threadId string updates dynamo.TableAttributeValues) (status error)```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-28T16:11:28.190000",
                        "user": "Mickel",
                        "text": "then you can just change out functions that have that signature whever you need it"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-28T16:12:05.501000",
                        "user": "Mickel",
                        "text": "not saying thats good or bad way of doing things"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-28T16:12:22.843000",
                        "user": "Mickel",
                        "text": "but i have seen that way done a bit"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-28T16:18:36.507000",
                        "user": "Samarie",
                        "text": "@r3velated try using a screenwide css"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-28T16:18:41.477000",
                        "user": "Samarie",
                        "text": "also"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-28T16:18:45.324000",
                        "user": "Samarie",
                        "text": "`GTK_DEBUG=interactive go run .`"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-28T16:19:10.593000",
                        "user": "Samarie",
                        "text": "and you can inject CSS there"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "13",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-01T08:27:17.845000",
                        "user": "Janissa",
                        "text": "```go// CallDeferred delays call by delay in secondsfunc CallDeferred(delay float64 task func()) { go func() { time.Sleep(time.Duration(delay)  time.Second) task() }()}``` there is something horribly wrong with this function ca someone explane me what it is?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-01T08:28:29.926000",
                        "user": "Jocko",
                        "text": "I see no reason to time.sleep here"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-01T08:28:46.810000",
                        "user": "Jocko",
                        "text": "and if you rely on delay for synchronization this is bad use mutexes"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-01T08:29:56.228000",
                        "user": "Janissa",
                        "text": "```Exception 0xc00000fd 0x1 0x753000 0x7ffdd42e0cc7PC=0x7ffdd42e0cc7signal arrived during external code executiongithub.com/gogl/gl/v3.3core/gl._Cfunc_glowDrawArrays(0x7ffe0c333580 0x4 0xc000000006) _cgo_gotypes.go:6244 +0x4cgithub.com/gogl/gl/v3.3core/gl.DrawArrays(...) C:/Users/jakub/Documents/programming/golang/src/github.com/gogl/gl/v3.3core/gl/package.go:9274github.com/faiface/glhf.(vertexArray).draw(...) C:/Users/jakub/Documents/programming/golang/src/github.com/faiface/glhf/vertex.go:266github.com/faiface/glhf.(VertexSlice).Draw(0xc0001ed620) C:/Users/jakub/Documents/programming/golang/src/github.com/faiface/glhf/vertex.go:145 +0x54github.com/faiface/pixel/pixelgl.(canvasTriangles).draw.func1() C:/Users/jakub/Documents/programming/golang/src/github.com/faiface/pixel/pixelgl/canvas.go:330 +0x395github.com/faiface/mainthread.Run(0x5e73a8) C:/Users/jakub/Documents/programming/golang/src/github.com/faiface/mainthread/mainthread.go:44 +0xc4github.com/faiface/pixel/pixelgl.Run(0x5e73a8) C:/Users/jakub/Documents/programming/golang/src/github.com/faiface/pixel/pixelgl/run.go:32 +0x6bmain.main() C:/Users/jakub/Documents/programming/golang/src/myFirstProject/main.go:180 +0x34``` this happendse after a while"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-01T08:30:42.777000",
                        "user": "Janissa",
                        "text": "error is long and repetative this is just a beginning that differs"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-01T08:32:31.076000",
                        "user": "Jocko",
                        "text": "I'm not sure I'm supposed to guess what the error is without seing actual code"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-01T08:37:47.051000",
                        "user": "Kelvin",
                        "text": "Golang attempt to find the module on Github even it's not there. I've already inited the go module with github.com url."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-01T08:38:41.191000",
                        "user": "Kelvin",
                        "text": "I use `go mod init github.com/pontakornth/myprojectname` . There is no actual repo there for now."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-01T08:39:29.477000",
                        "user": "Mingliang",
                        "text": "?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-01T08:44:21.856000",
                        "user": "Janissa",
                        "text": "```goCallDeferred( t.ReloadSpeed func() {t.Unloaded = false})``` basicly just swithcing the boolean whenever gun needs to reload"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-01T08:50:20.210000",
                        "user": "Jocko",
                        "text": "You should just go mod init"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-01T09:00:19.624000",
                        "user": "Kelvin",
                        "text": "I tried but it need module path. (Edit: Change name to path)"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-01T09:11:27.713000",
                        "user": "Kelvin",
                        "text": "```go: cannot determine module path for source directory /mnt/d/Projects/Web/golang_bk (outside GOPATH module path must be specified)Example usage: go mod init example.com/m to initialize a v0 or v1 module go mod init example.com/m/v2 to initialize a v2 moduleRun go help mod init for more information.```"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-01T09:13:31.123000",
                        "user": "Mingliang",
                        "text": "Yes give it a module path name@mmknightx"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-08-01T09:13:33.790000",
                        "user": "Mingliang",
                        "text": "As it says"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-08-01T09:20:53.617000",
                        "user": "Riccardo",
                        "text": "just realized I could do ```gotype Chan chan chan chan chan chan chan chan chan chan Chan```"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-08-01T09:21:12.239000",
                        "user": "Riccardo",
                        "text": "im not sure if this is even creatable but im not getting an error"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-08-01T09:21:56.268000",
                        "user": "Gwenevere",
                        "text": "@mlokis lookup the readme of the package more carefully"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-08-01T09:29:29.603000",
                        "user": "Josi",
                        "text": "You can do that. The make statement is going to be nice"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-08-01T09:30:06.308000",
                        "user": "Josi",
                        "text": "But there aren't any limits there. Same reason you can make double and triple pointers"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-08-01T09:30:18.262000",
                        "user": "Josi",
                        "text": "Or even more of you wanted to"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-08-01T09:39:58.259000",
                        "user": "Alissandra",
                        "text": "it's so simple with C/C++ because all the values are given to you"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-08-01T09:40:35.695000",
                        "user": "Alissandra",
                        "text": "you can just call the function and parse it `TOKEN_QUERY` and it will work"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-08-01T09:40:48.862000",
                        "user": "Alissandra",
                        "text": "or you can simply create a variable with type `TOKEN_USER`"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-08-01T09:41:16.827000",
                        "user": "Alissandra",
                        "text": "having to reimplement all the structures and values in Go is a royal pain"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-08-01T09:41:22.518000",
                        "user": "Alissandra",
                        "text": "especially since sometimes I can't find the value"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-08-01T09:42:17.347000",
                        "user": "Alissandra",
                        "text": "for example it took me about 45 minutes of Googling to find out that `TOKEN_QUERY` is equal to 8. I had to dig into the source code of the C library to find that out"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-08-01T09:43:25.574000",
                        "user": "Alissandra",
                        "text": "there are some things about the WinAPI that are beautifully documented and make total sense and then there's other things where the only place I can find information about it is by digging through the source code of the library"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-08-01T09:44:26.846000",
                        "user": "Alissandra",
                        "text": "I guess no one else bothers to answer this question because most people using the Windows API are using C/C++ or any other language that has wrappers for these kinds of things. Or they're just smart enough and have enough experience to know these kinds of things"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-08-01T09:45:05.037000",
                        "user": "Alissandra",
                        "text": "and yes I know Go has the syscall library that contains a bunch of Go wrappers but I\\'m trying not to use them as this project is for educational purposes and I want to learn more about Windows internals. So I\\'m reimplementing everything myself."
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-08-01T09:45:09.571000",
                        "user": "Alissandra",
                        "text": "didn't think it would be this annoying though"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "1855",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-30T17:09:29.341000",
                        "user": "Kade",
                        "text": "how to i sleep after an iteration of a for loop?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-30T17:09:51.113000",
                        "user": "Kade",
                        "text": "```gofor range time.Tick(time.Duration(period)  time.Minute) { [....code]}```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-30T17:09:59.266000",
                        "user": "Kade",
                        "text": "this sleeps before each iteration"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-30T17:10:39.437000",
                        "user": "Zadyn",
                        "text": "i'd put a sleep at the end of the block"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-30T17:10:42.533000",
                        "user": "Maislyn",
                        "text": "Sleep after code execution?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-30T17:10:45.136000",
                        "user": "Kade",
                        "text": "this doesn't seem to sleep at all ```goticker := time.NewTicker(time.Duration(period)  time.Minute)for { defer ticker.Stop() [...code]}```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-30T17:10:51.039000",
                        "user": "Kade",
                        "text": "yes but how"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-30T17:10:56.277000",
                        "user": "Aalaysia",
                        "text": "time.Sleep()"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-30T17:11:09.657000",
                        "user": "Kade",
                        "text": "sleep doesn't really sleep how much i want it to"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-30T17:11:19.826000",
                        "user": "Zadyn",
                        "text": "what do you want then"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-30T17:11:21.861000",
                        "user": "Kade",
                        "text": "i think it's more like sleep for at least the time i provide"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-30T17:11:34.966000",
                        "user": "Aalaysia",
                        "text": "time.Sleep(providedDuration)"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-30T17:11:34.969000",
                        "user": "Kade",
                        "text": "sleep after each loop iteration"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-30T17:12:05.124000",
                        "user": "Maislyn",
                        "text": "Could you elaborate on what you want to achieve? As Sleep does sleep for the exact time provided."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-30T17:12:08.048000",
                        "user": "Zadyn",
                        "text": "oh I understand what you want"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-01-30T17:12:10.942000",
                        "user": "Zadyn",
                        "text": "ok wait lemme think"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-01-30T17:12:45.824000",
                        "user": "Zadyn",
                        "text": "just declare the ticker start the loop then at the end of the block read from ticker"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-01-30T17:12:59.680000",
                        "user": "Aalaysia",
                        "text": ":thinkingo:"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-01-30T17:13:00.877000",
                        "user": "Kade",
                        "text": "how do i read from it?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-01-30T17:13:06.374000",
                        "user": "Kade",
                        "text": "`ticker<`?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-01-30T17:13:33.470000",
                        "user": "Zadyn",
                        "text": "```goticker := blargdefer ticker.Stop()for { do() _ = <ticker}```"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-01-30T17:13:46.164000",
                        "user": "Aalaysia",
                        "text": "ch := time.After(duration)for {<ch}"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-01-30T17:13:53.600000",
                        "user": "Zadyn",
                        "text": "https://tour.golang.org/concurrency/2"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-01-30T17:14:52.790000",
                        "user": "Kade",
                        "text": "yeah this works"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-01-30T17:15:03.109000",
                        "user": "Kade",
                        "text": "well for my purpose i mean"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-01-30T17:15:08.956000",
                        "user": "Kade",
                        "text": "that's what i wanted thanks @dynam1c"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-01-30T17:15:12.899000",
                        "user": "Zadyn",
                        "text": "no problem"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-01-30T17:15:16.971000",
                        "user": "Kade",
                        "text": "thanks everyone else too :D"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-01-30T17:16:38.962000",
                        "user": "Harshini",
                        "text": "`defer` doesn't defer the call to the end of the loop"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-01-30T17:16:45.290000",
                        "user": "Harshini",
                        "text": "it defers it to the end of the function"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-01-30T17:17:33.238000",
                        "user": "Kade",
                        "text": "i removed it either way"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-01-30T17:17:51.327000",
                        "user": "Kade",
                        "text": "my script gets only cancelled when i cancel it either way"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-01-30T17:22:51.614000",
                        "user": "Kade",
                        "text": "another question: why do i get this`2020/01/30 18:22:14 Failed parsing date parsing time 11.06.2019. 12:51 as 31.12.2006. 15:55\": cannot parse .06.2019. 12:51 as 1\"`"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-01-30T17:23:05.542000",
                        "user": "Kade",
                        "text": "while trying to parse a date and time"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-01-30T17:23:13.046000",
                        "user": "Kade",
                        "text": "`parsedDate err := time.Parse(\"31.12.2006. 15:55 date)`"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-01-30T17:23:28.594000",
                        "user": "Kade",
                        "text": "my date and time have that kind of format"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-01-30T17:23:51.165000",
                        "user": "Aalaysia",
                        "text": "isn't 3.2.2006? god I hate go time stuff"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-01-30T17:24:00.689000",
                        "user": "Dreya",
                        "text": "yea thats not the format that it expects m8"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-01-30T17:24:05.632000",
                        "user": "Kade",
                        "text": "2.1.2006 actually"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-01-30T17:24:11.740000",
                        "user": "Kade",
                        "text": "but i think it struggled there too"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-01-30T17:24:29.534000",
                        "user": "Dreya",
                        "text": "show"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-01-30T17:24:46.509000",
                        "user": "Harshini",
                        "text": "it's `Mon Jan 2 15:04:05 0700 MST 2006`"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-01-30T17:24:59.331000",
                        "user": "Kade",
                        "text": "yes true but mine doesn't look like that"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-01-30T17:25:02.751000",
                        "user": "Kade",
                        "text": "the one i want to parse"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-01-30T17:25:09.283000",
                        "user": "Kade",
                        "text": "`11.06.2019. 12:51` it looks like this"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-01-30T17:25:10.435000",
                        "user": "Dreya",
                        "text": "you gotta use that timestamp and date"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-01-30T17:25:13.290000",
                        "user": "Dreya",
                        "text": "the numbers gotta match"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-01-30T17:25:49.966000",
                        "user": "Kade",
                        "text": "so i have to convert my date/time to follow that convention?"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-01-30T17:25:57.775000",
                        "user": "Harshini",
                        "text": "your format should be 2.1.2006. 15:04"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-01-30T17:26:09.191000",
                        "user": "Harshini",
                        "text": "The format is based on that reference datetime"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-01-30T17:26:18.009000",
                        "user": "Harshini",
                        "text": "you can reformat it but it has to be the same reference"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-01-30T17:26:27.413000",
                        "user": "Kade",
                        "text": "oooh"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-01-30T17:26:39.358000",
                        "user": "Kade",
                        "text": "yeah i tried that but with zeroes in day and month"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-01-30T17:26:44.243000",
                        "user": "Kade",
                        "text": "seems like it doesn't want those?"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-01-30T17:27:04.108000",
                        "user": "Dreya",
                        "text": "no it doesnt"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-01-30T17:27:13.204000",
                        "user": "Dreya",
                        "text": "it wants the numbers for the day time month year etc it expects"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-01-30T17:27:19.979000",
                        "user": "Kade",
                        "text": "that was the issue then"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-01-30T17:27:22.354000",
                        "user": "Kade",
                        "text": "thanks"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-01-30T17:27:24.035000",
                        "user": "Kade",
                        "text": "again"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-01-30T17:27:26.859000",
                        "user": "Dreya",
                        "text": "None"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-01-30T17:45:31.449000",
                        "user": "Nader",
                        "text": "https://tenor.com/view/bugsbunnytearscryingprettypleasegif14522321"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "4",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-01T09:35:11.286000",
                        "user": "Gabi",
                        "text": "hey guys can I see your Dockerfiles for your golang project?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-01T09:35:42.839000",
                        "user": "Gabi",
                        "text": "Do any of you do the dual thingy where you move the binary to alpine after compiling?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-01T09:36:19.028000",
                        "user": "Gabi",
                        "text": "are there any negatives?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-01T09:36:48.625000",
                        "user": "Gabi",
                        "text": "My Dockerfile is currently:```FROM golang:1.14RUN mkdir /appADD . /app/WORKDIR /appRUN go build o app .CMD [\"./app\"]```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-01T09:37:18.529000",
                        "user": "Maddyson",
                        "text": "I do the multistage dockerfile thing for all my Go projects"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-01T09:37:41.541000",
                        "user": "Maddyson",
                        "text": "Significantly reduces the image size because it doesn't include the go toolchain anymore"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-01T09:38:07.801000",
                        "user": "Maddyson",
                        "text": "Don't have any public files I think"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-01T09:38:08.423000",
                        "user": "Gabi",
                        "text": "like this:```#first stage  builderFROM golang:1.11.0stretch as builderCOPY . /MultiStageWORKDIR /MultiStageENV GO111MODULE=onRUN CGO_ENABLED=0 GOOS=linux go build o MultiStage#second stageFROM alpine:latestWORKDIR /root/COPY from=builder /MultiStage .CMD [\"./Multistage\"]```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-01T09:38:24.998000",
                        "user": "Gabi",
                        "text": "> Don't have any public files I think"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-01T09:38:26.053000",
                        "user": "Gabi",
                        "text": "?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-01T09:39:01.898000",
                        "user": "Gabi",
                        "text": "do you mean if my build is dependent on a static file what happens?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-01T09:39:15.014000",
                        "user": "Maddyson",
                        "text": "You asked for my Dockerfile. I don't have any publicly available on the internet"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-01T09:39:18.605000",
                        "user": "Gabi",
                        "text": "ohh"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-01T09:39:45.921000",
                        "user": "Gabi",
                        "text": "seen any good tutorials?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-01T09:40:06.183000",
                        "user": "Gabi",
                        "text": "> Reducing down to 8.15MB from 781MB is a huge size difference."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-05-01T09:40:11.726000",
                        "user": "Gabi",
                        "text": "quite impressive"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-05-01T09:40:18.580000",
                        "user": "Maddyson",
                        "text": "Boils down to this though:```# build stageFROM golang:1.14 AS buildenvADD . /srcRUN cd /src && go build o goapp# final stageFROM alpineWORKDIR /appCOPY from=buildenv /src/goapp /app/ENTRYPOINT ./goapp```"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-05-01T09:41:06.405000",
                        "user": "Gabi",
                        "text": "sorry this is a bit of a newb question but my project depends on static files will that be included?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-05-01T09:41:27.233000",
                        "user": "Maddyson",
                        "text": "> COPY from=buildenv /src/goapp /app/"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-05-01T09:41:35.171000",
                        "user": "Maddyson",
                        "text": "that only copies the binary"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-05-01T09:41:45.867000",
                        "user": "Maddyson",
                        "text": "You will have to add the other files still"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-05-01T09:41:48.932000",
                        "user": "Gabi",
                        "text": "yep so need to do both"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-05-01T09:42:23.862000",
                        "user": "Gabi",
                        "text": "thanks for that"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "1368",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-18T16:31:03.189000",
                        "user": "Kalysta",
                        "text": "Any code formatter extension in vscode?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-18T16:31:18.613000",
                        "user": "Kalysta",
                        "text": "Something like prettier"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-18T16:31:56.678000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "go fmt"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-18T16:32:36.855000",
                        "user": "Tillian",
                        "text": "Maybe does anyone respond to my question?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-18T16:35:05.661000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "a blocking cgo call will take a thread"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-18T16:35:27.924000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "the gopher runtime cant schedule it like normally"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-18T16:36:56.197000",
                        "user": "Tillian",
                        "text": "@\u20df\u20df Interesting is what happens if I will lock os thread permanently for a routine?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-18T16:37:14.313000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "idk what that mean"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-18T16:37:14.899000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "s"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-06-18T16:37:48.089000",
                        "user": "Tillian",
                        "text": "But where can I READ about CGO thread managing?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-06-18T16:38:21.743000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "idk"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2059",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-18T19:19:44.875000",
                        "user": "Khianna",
                        "text": "Hello I copied code letter to letter from http://www.cihanozhan.com/buildingloginandregisterapplicationwithgolang/ and I still get Any ideas what went wrong? This is for education purely (Used Solution 2)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-18T19:21:58.435000",
                        "user": "Lu",
                        "text": "._."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-18T19:34:20.571000",
                        "user": "Crispin",
                        "text": "string len being 0 doesnt mean its empty either"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-18T19:34:33.845000",
                        "user": "Crispin",
                        "text": "it just means it has a length of 0"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-18T19:34:43.948000",
                        "user": "Crispin",
                        "text": "depending on what you define as empty"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-18T19:35:00.326000",
                        "user": "Jkari",
                        "text": "bruh"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-18T19:35:23.233000",
                        "user": "Jkari",
                        "text": "I'd treat a len 0 string as empty"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-18T19:35:24.670000",
                        "user": "Jkari",
                        "text": "zerovalued"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-18T19:35:47.805000",
                        "user": "Jkari",
                        "text": "unless you're talking about string that's treated differently"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-18T19:35:49.525000",
                        "user": "Jkari",
                        "text": "but in Go that's that"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-18T19:36:04.640000",
                        "user": "Lu",
                        "text": "^^"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-18T19:37:03.462000",
                        "user": "Chidubem",
                        "text": "strings with the same contents but different capacities compare equal"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-18T19:37:11.485000",
                        "user": "Chidubem",
                        "text": "therefore it can be ignored for that"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-18T19:37:13.268000",
                        "user": "Jkari",
                        "text": "strings don't have capacities"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-18T19:37:23.108000",
                        "user": "Jkari",
                        "text": "at least not according to Go specs"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-18T19:37:24.229000",
                        "user": "Chidubem",
                        "text": "oh yeah"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2453",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T20:03:06.093000",
                        "user": "Envie",
                        "text": "How do I use the `type File` defined is `os`? I want to use it as a function parameter but I'm getting `undefined: File`."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T20:04:00.917000",
                        "user": "Izna",
                        "text": "import os"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T20:04:07.174000",
                        "user": "Izna",
                        "text": "if that dosent work"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T20:04:08.489000",
                        "user": "Izna",
                        "text": "post code"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T20:04:26.754000",
                        "user": "Izna",
                        "text": "oh"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-30T20:04:39.935000",
                        "user": "Izna",
                        "text": "idk if Go error messages remove the package"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-30T20:04:49.234000",
                        "user": "Izna",
                        "text": "u prob wrote `File` not `os.File`"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-30T20:05:01.646000",
                        "user": "Envie",
                        "text": "Oh that would do it."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-30T20:05:32.187000",
                        "user": "Envie",
                        "text": "Thanks."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "5",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-01T10:14:07.404000",
                        "user": "Espiridion",
                        "text": "Hi people ! I hope this is the right channel to ask for help about Go ;)So my question is about slices  Please have a look to https://play.golang.org/p/xPK9o2KXWxGAs expected the comparison of as1 and aslice[i] is TRUE if the elements are the sameBut in my first Go program where I use the same mechanism a bunch of time I always got FALSE when comparing a struct instance with a slice element despite their pointer value being the sameAnd I end writing ```reflect.ValueOf(l.entities[i]).Pointer() != reflect.ValueOf(entity).Pointer()```instead of```l.entities[i] != entity```And I really don\\'t understand why..."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-01T10:19:14.825000",
                        "user": "Maddyson",
                        "text": "do you want to compare values or pointers?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-01T10:19:31.392000",
                        "user": "Espiridion",
                        "text": "Pointers"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-01T10:20:02.812000",
                        "user": "Maddyson",
                        "text": "Can you show us code that doesn't behave as expected?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-01T10:20:08.567000",
                        "user": "Maddyson",
                        "text": "We now have to guess at the conditions"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-01T10:22:38.076000",
                        "user": "Espiridion",
                        "text": "```func (e Entity) setStateActiveSprite(state IState sprite_index int) Sprite { var found_state EntityStateEntry var result Sprite for i := range e.states { fmt.Printf(\"%p %p\\ state e.states[i].state) if e.states[i].state == state { found_state = &e.states[i] break } } if found_state != nil { result = e.sprites[found_state.sprites_indices[sprite_index]] e.active_sprite = result found_state.active_sprite = result } else { panic(fmt.Sprintf(\"State %v not found state)) } return result}``````if e.states[i].state == state``` is falsebut the previous line (println) shows two identical pointers"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-01T10:25:43.150000",
                        "user": "Maddyson",
                        "text": "You've got something funky going on but we still don't have enough context because we don't know what the types are. It would be easiest to help you if you create an example that we can run on play.golang.org"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-01T10:31:14.605000",
                        "user": "Espiridion",
                        "text": "I can't  I tried several times on the playground I always got the right result  I can't reproduce this on the playgroundBut I can say that it's not the only place in my code where I have this problem it appears with all my slices of interfaceIn the code above it's quite simple  e.states is a slice of ```type EntityStateEntry struct { id string state IState sprites_indices []int // Sprite index in Entity.sprites slice active_sprite Sprite // Sprite index in sprites_indices}```So I'm comparing IState with IStateAnd the function above is called as```func (st State) setActiveSprite(sprite_index int) Sprite { return st.entity.setStateActiveSprite(st sprite_index)}```So I'm calling the func setStateActiveSprite with a pointer to State as first parameterAnd of course State implements IState"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-01T10:35:44.377000",
                        "user": "Espiridion",
                        "text": "And to add more ```func (st State) setActiveSprite(sprite_index int) Sprite { return st.entity.setStateActiveSprite(st sprite_index)}```is called from a derived State declared as```type StatePlayerWalk struct { State}```So a compound one  Does Go consider that State and StatePlayerWalk are differents ? If so I don\\'t understand why"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-01T10:40:40.643000",
                        "user": "Espiridion",
                        "text": "Sorry it's not a compound one but an embedding one"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-01T11:00:30.462000",
                        "user": "Espiridion",
                        "text": "Nope"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-01T11:01:11.453000",
                        "user": "Espiridion",
                        "text": "I've updated the playground with embedded struct and more  everything is still okay : https://play.golang.org/p/tB4pwjdvCck"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-01T11:03:03.607000",
                        "user": "Espiridion",
                        "text": "Obviously I'm doing something wrong but I really don't understand where..."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-01T11:46:03.053000",
                        "user": "Espiridion",
                        "text": "@r__d What do you mean by zerosize ? Empty struct ?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-01T12:04:41.456000",
                        "user": "Aissa",
                        "text": "What's the convention for names like NOP"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2615",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-31T18:39:30.283000",
                        "user": "Tylie",
                        "text": "how can i pad an image properly in go?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-31T18:39:47.436000",
                        "user": "Tylie",
                        "text": "this is my current code"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-31T18:40:04.684000",
                        "user": "Tylie",
                        "text": "bounds is the bounds of the input image"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-31T18:40:23.326000",
                        "user": "Tylie",
                        "text": "the issue with it is uh"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-31T18:40:24.265000",
                        "user": "Tylie",
                        "text": "None"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-31T18:40:28.285000",
                        "user": "Tylie",
                        "text": "on the top left side it's correct"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-31T18:40:30.678000",
                        "user": "Tylie",
                        "text": "there's 1 pixel padding"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-31T18:40:47.382000",
                        "user": "Tylie",
                        "text": "on the right and bottom sides though"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-31T18:40:49.321000",
                        "user": "Tylie",
                        "text": "it's 3 pixel padding"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-31T18:40:52.013000",
                        "user": "Tylie",
                        "text": "what am i missing"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-31T18:41:40.097000",
                        "user": "Shritha",
                        "text": "it's a better idea to iterate over the image's dimensions and add the padding in padded.Set"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-31T18:41:45.694000",
                        "user": "Shritha",
                        "text": "rather than doing them in the loop"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-31T18:41:53.850000",
                        "user": "Shritha",
                        "text": "imo"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-31T18:42:25.560000",
                        "user": "Shritha",
                        "text": "and i'm assuming ouput{Width,Height} is derived from the original image's and added the pads"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-31T18:43:35.944000",
                        "user": "Tylie",
                        "text": "> and i'm assuming ouput{Width,Height} is derived from the original image's and added the padsye"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-31T18:44:45.523000",
                        "user": "Tylie",
                        "text": "yea this did it"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-31T18:45:13.829000",
                        "user": "Tylie",
                        "text": "thx"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-31T18:45:17.419000",
                        "user": "Tylie",
                        "text": "but idk why the other one didn't work"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-31T18:46:43.971000",
                        "user": "Shritha",
                        "text": "because img.At(x y) is wrong"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-31T18:46:47.131000",
                        "user": "Shritha",
                        "text": "you'd have to subtract the padding"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-31T18:46:59.052000",
                        "user": "Shritha",
                        "text": "the image you drew isn't actually the complete image"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-31T18:47:13.168000",
                        "user": "Shritha",
                        "text": "which is why I told you to rewrite the loop because it's easier to reason about"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-31T18:48:29.892000",
                        "user": "Ketch",
                        "text": ":ASwtf: oh god i was in a vc with a guy doing that in C++ that was uh"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-31T18:48:33.078000",
                        "user": "Ketch",
                        "text": "like hours of debugging"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-31T18:48:39.913000",
                        "user": "Ketch",
                        "text": "dude was trying to get his desktop to render to a terminal"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-31T18:53:20.586000",
                        "user": "Tylie",
                        "text": "i get like weird artifacts though"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-31T18:53:26.439000",
                        "user": "Tylie",
                        "text": "None"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-31T18:53:28.778000",
                        "user": "Tylie",
                        "text": "what am i missing"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-31T18:53:43.266000",
                        "user": "Rainer",
                        "text": "love"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-31T18:53:59.726000",
                        "user": "Shritha",
                        "text": "RGBA() returns uint32?"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-31T18:54:10.084000",
                        "user": "Shritha",
                        "text": "doesn't seem to be 65535"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-31T18:54:12.822000",
                        "user": "Shritha",
                        "text": "bah too lazy to check"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-31T18:54:49.490000",
                        "user": "Tylie",
                        "text": "> loveoof"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-31T18:55:01.226000",
                        "user": "Tylie",
                        "text": "None"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-31T18:55:39.524000",
                        "user": "Tylie",
                        "text": "wait"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-31T18:56:08.480000",
                        "user": "Tylie",
                        "text": "i tried dividing by 65536"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-07-31T18:56:10.565000",
                        "user": "Tylie",
                        "text": "even worse"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-07-31T18:57:13.674000",
                        "user": "Oceann",
                        "text": "i love him"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-07-31T18:57:46.696000",
                        "user": "Shritha",
                        "text": "what's /size"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-07-31T18:57:52.000000",
                        "user": "Shritha",
                        "text": "try commenting out filter and see if it's there"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-07-31T18:58:15.502000",
                        "user": "Shritha",
                        "text": "huh is size ever negative"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-07-31T18:58:18.359000",
                        "user": "Shritha",
                        "text": "is taht what abs is for"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-07-31T18:58:20.512000",
                        "user": "Shritha",
                        "text": "feels excessive"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-07-31T18:58:56.728000",
                        "user": "Tylie",
                        "text": "size of the image kernel"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-07-31T18:59:04.767000",
                        "user": "Rainer",
                        "text": "can you share your code and source data?"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-07-31T18:59:06.573000",
                        "user": "Rainer",
                        "text": "i wanna PLAY"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-07-31T18:59:08.747000",
                        "user": "Tylie",
                        "text": "abs is cuz the sum can be negative"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-07-31T18:59:10.099000",
                        "user": "Rainer",
                        "text": "c:"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-07-31T18:59:16.632000",
                        "user": "Rainer",
                        "text": "ive never played with raster images before"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-07-31T18:59:25.239000",
                        "user": "Tylie",
                        "text": "https://github.com/fr3fou/imago"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-07-31T18:59:38.721000",
                        "user": "Tylie",
                        "text": "@_diamondburned_"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-07-31T19:00:52.731000",
                        "user": "Shritha",
                        "text": "wack"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-07-31T19:01:04.036000",
                        "user": "Shritha",
                        "text": "i'd say that has to do with this but that's too obvious of an answer and it doesn't help much anyway"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-07-31T19:03:20.570000",
                        "user": "Tylie",
                        "text": "without the /size you'd get massive nums@_diamondburned_"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-07-31T19:06:56.150000",
                        "user": "Shritha",
                        "text": "idk that feels wrong"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-07-31T19:07:07.237000",
                        "user": "Shritha",
                        "text": "is the size max of the color flota or sth"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2296",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-26T03:28:20.001000",
                        "user": "Randon",
                        "text": "is there a way to format serialized json?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-26T03:28:39.623000",
                        "user": "Jkari",
                        "text": "json has an IndentMarshal fn"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-26T03:28:44.827000",
                        "user": "Randon",
                        "text": "ty"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-26T03:28:49.398000",
                        "user": "Jkari",
                        "text": "there's also just an Indent fn"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-26T03:28:50.560000",
                        "user": "Jkari",
                        "text": "yea yw"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-26T03:28:57.928000",
                        "user": "Jkari",
                        "text": "https://golang.org/pkg/encoding/json/#Indent"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-26T03:29:02.778000",
                        "user": "Jkari",
                        "text": "MarshalIndent is a bit below"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-26T03:32:14.855000",
                        "user": "Yitzchok",
                        "text": "!!!! i did not know of this and i need it very powerfully"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-26T03:33:12.608000",
                        "user": "Kaiyon",
                        "text": "I use it all the time lol"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-26T03:33:25.272000",
                        "user": "Kaiyon",
                        "text": "easy debug print"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-26T03:34:30.480000",
                        "user": "Yitzchok",
                        "text": "do i do this with just `json.MarshalIndent(b.chain  \\\\t\")`"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-26T03:34:46.567000",
                        "user": "Kaiyon",
                        "text": "yuh"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-26T03:34:49.568000",
                        "user": "Yitzchok",
                        "text": "this is so exciting i don't know what to do"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-26T03:37:05.274000",
                        "user": "Yitzchok",
                        "text": "it isn't one 45 megabyte line anymore i am saaaaaaaaaaaved"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-26T03:38:31.119000",
                        "user": "Kaiyon",
                        "text": "yes :)"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-26T03:41:45.974000",
                        "user": "Olivia",
                        "text": "i mean"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-26T03:41:54.444000",
                        "user": "Olivia",
                        "text": "`cat foo.json | jq .`"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-26T03:42:00.580000",
                        "user": "Kaiyon",
                        "text": "true"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-26T03:42:23.184000",
                        "user": "Olivia",
                        "text": "but if you need programmatic control yeah MarshalIndent is slick"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1765",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T13:41:23.229000",
                        "user": "Modi",
                        "text": "During some experimentation with what a release may look like for Go modules I did the following for a v2: (1) Branch v2; (2) Change go.mod to have a v2 extension for the name; (3) Tagged the commit at v2.0.0.When I tried to do the same for a v1 it wasn't possible. I couldn't create a v1 module name as above with v2 without `go get` complaining. It seemed like the semantics of v0 and v1 are somehow tied to whatever the HEAD of the default branch is. Is that true? Is there a way to release a `github.com/module/pkg/v1` ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-25T13:46:01.861000",
                        "user": "Delphine",
                        "text": "you can't do a `/v1` i think"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-25T13:46:22.952000",
                        "user": "Josi",
                        "text": "V0 and V1 must be without the suffix"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-25T13:49:12.211000",
                        "user": "Modi",
                        "text": "So it's embedded in the tooling that v0 and v1 are `github.com/module/pkg` ? I.e. if I want my main branch to be my latest copy of code common practice I can't do that with Go?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-25T13:50:58.797000",
                        "user": "Modi",
                        "text": "I suppose you could hack it a little and have your main branch use a module name of `github.com/module/pkg/dev` and then stick `github.com/module/pkg` on a `v1` branch?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-25T13:51:48.400000",
                        "user": "Josi",
                        "text": "You tag releases. So you can have a master branch be the last code. People who use your module will automatically use the latest tag not the last commit"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-25T13:52:18.869000",
                        "user": "Modi",
                        "text": "Righto. Yea that's far simpler. So on a v1 branch maintain the `github.com/module/pkg` name and start tagging v1.0.0 etc?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-25T13:52:29.134000",
                        "user": "Josi",
                        "text": "Exactly"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-25T13:52:39.078000",
                        "user": "Modi",
                        "text": "If the consumer doesn't specify a version  RTFM..."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-25T13:53:03.640000",
                        "user": "Modi",
                        "text": "Thanks for the input."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-25T13:53:03.920000",
                        "user": "Josi",
                        "text": "If they don't it automatically uses V0 or V1 whichever is the last version"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-25T13:53:24.350000",
                        "user": "Modi",
                        "text": "Oh of course. So it'll head over to the v1.0.x tag anyway"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-25T13:53:27.036000",
                        "user": "Josi",
                        "text": "When you then create your first v2 release you can simply change the module name in go.mod and keep working in the main branch"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-25T13:53:36.938000",
                        "user": "Josi",
                        "text": "Then tag with v2.x.x"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-25T13:54:01.900000",
                        "user": "Modi",
                        "text": "Sure. We want to use a v2 branch and tag that. Thanks a bunch."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-25T13:54:16.156000",
                        "user": "Josi",
                        "text": "Yeah that is the other option."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-25T13:54:18.540000",
                        "user": "Josi",
                        "text": "No problem \ud83d\ude42"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-25T14:16:54.266000",
                        "user": "Robert",
                        "text": "Using go modules <https://blog.golang.org/usinggomodules>  Sgt_Tailor"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-25T14:16:57.000000",
                        "user": "Robert",
                        "text": "Introduction to Go Modules <https://roberto.selbach.ca/introtogomodules/>  SkippyUsing go modules <https://blog.golang.org/usinggomodules>  Sgt_Tailor"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-25T14:31:28.546000",
                        "user": "Elyra",
                        "text": "@Deleted User is sending out scam bitcoin links to people in the server :GWseremePeepoThink:"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-25T14:31:31.323000",
                        "user": "Elyra",
                        "text": "anyone else get one?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-25T14:32:30.568000",
                        "user": "Kimon",
                        "text": "yep"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-25T14:32:33.417000",
                        "user": "Kimon",
                        "text": "from @Unknown"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-25T14:34:44.002000",
                        "user": "Siona",
                        "text": "same from nikita"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-25T14:35:46.791000",
                        "user": "Alanni",
                        "text": "Who to report to?"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-25T14:36:50.577000",
                        "user": "Kazi",
                        "text": "Just post user IDs in #offtopic"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-25T14:44:59.287000",
                        "user": "Levvy",
                        "text": "brb"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2554",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-29T22:50:58.689000",
                        "user": "Borja",
                        "text": "Hey i need make a translator with a GUI like a notepad (new open file save dont save if made a change) what would be the best framework for this?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-29T22:58:33.580000",
                        "user": "Borja",
                        "text": "electron?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-29T23:01:23.572000",
                        "user": "Borja",
                        "text": "please"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-29T23:05:05.335000",
                        "user": "Malaquias",
                        "text": "@xblooos yes"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-29T23:05:29.638000",
                        "user": "Rainer",
                        "text": "i use nil chans as part of control flow"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-29T23:05:32.971000",
                        "user": "Rainer",
                        "text": "cool"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-29T23:05:34.623000",
                        "user": "Rainer",
                        "text": "actually"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-29T23:05:37.655000",
                        "user": "Malaquias",
                        "text": "Sure"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-29T23:05:41.172000",
                        "user": "Safiyya",
                        "text": "THANK!"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-29T23:05:42.554000",
                        "user": "Safiyya",
                        "text": "U!"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-29T23:05:48.189000",
                        "user": "Rainer",
                        "text": "with channels"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-29T23:05:52.777000",
                        "user": "Borja",
                        "text": "thanks @Madxmike"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-29T23:05:54.803000",
                        "user": "Rainer",
                        "text": "like water control flow systems"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-29T23:06:02.712000",
                        "user": "Malaquias",
                        "text": "What"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-29T23:06:18.647000",
                        "user": "Shritha",
                        "text": "nil chans kinda wack"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-29T23:06:29.719000",
                        "user": "Shritha",
                        "text": "because setting chans isn't synchronized with the channel itself"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-29T23:06:33.764000",
                        "user": "Rainer",
                        "text": "yea"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-29T23:06:39.260000",
                        "user": "Rainer",
                        "text": "you need mutexes"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-29T23:06:42.485000",
                        "user": "Shritha",
                        "text": "yeah"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-29T23:06:43.235000",
                        "user": "Rainer",
                        "text": "if you wanna do memes"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-29T23:06:45.061000",
                        "user": "Rainer",
                        "text": "with it"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-29T23:07:06.976000",
                        "user": "Rainer",
                        "text": "Channels are fun though"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-29T23:07:07.157000",
                        "user": "Malaquias",
                        "text": "If you gotta put a mutex on your channel"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-29T23:07:09.788000",
                        "user": "Rainer",
                        "text": "if you have a use case on them"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-29T23:07:13.569000",
                        "user": "Malaquias",
                        "text": "Then just delete the code"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-29T23:07:20.449000",
                        "user": "Rainer",
                        "text": "naw not necessarily"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-29T23:07:37.885000",
                        "user": "Rainer",
                        "text": "It's about making passing to a channel optional"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-29T23:07:41.316000",
                        "user": "Rainer",
                        "text": "That requires a mutex"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-29T23:07:56.402000",
                        "user": "Rainer",
                        "text": "nil chan gang"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-29T23:08:31.997000",
                        "user": "Rainer",
                        "text": "these comments are excellent"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-29T23:15:16.723000",
                        "user": "Shritha",
                        "text": "@Madxmike agree tbh"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-29T23:15:27.454000",
                        "user": "Shritha",
                        "text": "@zephyrtronium BRUH"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-29T23:15:40.220000",
                        "user": "Shritha",
                        "text": "holdo n"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-29T23:16:07.079000",
                        "user": "Shritha",
                        "text": "the ch is used in the few lines above"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-29T23:16:16.419000",
                        "user": "Khalise",
                        "text": "yeah because you're modifying a struct field"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-29T23:17:44.527000",
                        "user": "Shritha",
                        "text": "thonk"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-07-29T23:18:38.558000",
                        "user": "Khalise",
                        "text": "like mike said if you have to use a mutex with your channel you're doing something wrong"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2400",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T02:04:58.727000",
                        "user": "Avree",
                        "text": "I guess my questions are does it make sense to listen with a single UDP socket or should I spawn multiple sockets all bound to `:53` using the `SO_REUSEPORT` option?And are there some better patterns I should be using for the server design?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-29T02:09:29.692000",
                        "user": "Olivia",
                        "text": "okay"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-29T02:10:12.273000",
                        "user": "Olivia",
                        "text": "`type SupremeProducts struct {`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-29T02:10:55.879000",
                        "user": "Crispin",
                        "text": "same thing if i make i do []struct"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-29T02:11:25.001000",
                        "user": "Crispin",
                        "text": "i just want to get all the childs of ProductsAndCategories"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-29T02:13:34.924000",
                        "user": "Nazaret",
                        "text": "@fraz single socket should be fine"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-29T02:13:48.854000",
                        "user": "Nazaret",
                        "text": "New goroutine per req if you wish"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-29T02:13:57.034000",
                        "user": "Nazaret",
                        "text": "If it doesnt already do it by definition"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-29T02:14:00.462000",
                        "user": "Nazaret",
                        "text": "default"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-29T02:14:38.256000",
                        "user": "Avree",
                        "text": "yup I'm running a new goroutine every time new data is read in"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-29T02:15:02.425000",
                        "user": "Avree",
                        "text": "I copy the packet into a new []byte slice and pass that to the goroutine"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-29T02:17:40.253000",
                        "user": "Yariel",
                        "text": "I thought servers create a new net.Conn for every client"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-29T02:17:56.099000",
                        "user": "Yariel",
                        "text": "maybe not for UDP"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-29T02:18:25.509000",
                        "user": "Crispin",
                        "text": "@deezy using reflect here would work?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-29T02:18:31.847000",
                        "user": "Olivia",
                        "text": "yes but don't"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-29T02:18:36.443000",
                        "user": "Olivia",
                        "text": "because you can do it the right way"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-29T02:18:43.723000",
                        "user": "Crispin",
                        "text": "I don't get it"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-29T02:18:47.067000",
                        "user": "Olivia",
                        "text": "you just need a map"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-29T02:18:57.899000",
                        "user": "Crispin",
                        "text": "but i made it"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-29T02:19:06.865000",
                        "user": "Crispin",
                        "text": "but it returns the JSON error"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-29T02:19:10.113000",
                        "user": "Avree",
                        "text": "err maybe I'm not doing what I should be. But essentially I have a `net.UDPConn` object and im just listening for new packets in a loop there arent any prescribed callbacks when it receives a packet"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-29T02:20:19.719000",
                        "user": "Crispin",
                        "text": "@deezy can you help me please"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-29T02:20:43.182000",
                        "user": "Avree",
                        "text": "so like in an infinite loop: ```gon addr err := c.ReadFromUDP(readBuffer)... error checking ...copy(originalPkt readbuffer[:n])go respondUDP(c ...```"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-29T02:21:15.389000",
                        "user": "Yariel",
                        "text": "@Deleted User what does it mean to get all the children of a struct? if you have the struct you already have the children.. they are defined"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-29T02:22:43.885000",
                        "user": "Yariel",
                        "text": "if you need to loop through the children and add more children on the fly.. then that data structure is a map use that instead of struct. I think is what deezy is saying"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-29T02:25:08.599000",
                        "user": "Yitzchok",
                        "text": "^"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-29T02:25:26.363000",
                        "user": "Yitzchok",
                        "text": "there are zero advantages to using a struct over a map here and there are many disadvantages"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-29T02:31:09.695000",
                        "user": "Avree",
                        "text": "yeah everything seems to be working"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-29T02:31:59.571000",
                        "user": "Avree",
                        "text": "I'm just worried there's some crazy race condition or something else I've overlooked that silently corrupts packets or something \ud83d\ude13"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-29T02:34:07.520000",
                        "user": "Avree",
                        "text": "just working with DNS"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-29T02:34:18.194000",
                        "user": "Avree",
                        "text": "Its a relatively simple well defined protocol"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-29T02:51:45.513000",
                        "user": "Crispin",
                        "text": "@Hammerspace Because I'm doing this right now:```for _ product := range supremeProducts.ProductsAndCategories.Bags { ... for _ style := range customProduct.Styles {  } for _ product := range supremeProducts.ProductsAndCategories.Pants { ... }```But it's way too long I want to refractor it."
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-29T02:52:39.380000",
                        "user": "Crispin",
                        "text": "it takes 389lines..."
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-29T03:24:27.541000",
                        "user": "Crispin",
                        "text": "```go[========>] Shirts = [map[CategoryName:Shirts ID:%!s(int=305049) ImageURL://d17ol771963kd3.cloudfront.net/185212/ca/1a8X9ICLPPE.jpg ImageURLHi://assets.supremenewyork.com/185212/rc/1a8X9ICLPPE.jpg Name:My Bloody Valentine/Supreme <br>Rayon S/SShirt NewItem:%!s(bool=true) Position:%!s(int=1) Price:%!s(int=13800) PriceEuro:%!s(int=14800) SalePrice:%!s(int=0) SalePriceEuro:%!s(int=0)] map[CategoryName:Shirts ID:%!s(int=305019) ImageURL://d17ol771963kd3.cloudfront.net/185441/ca/yHl3_5v9aA.jpg ImageURLHi://assets.supremenewyork.com/185441/rc/yHl3_5v9aA.jpg Name:Bowling Zip S/S Shirt NewItem:%!s(bool=false) Position:%!s(int=10) Price:%!s(int=11800) PriceEuro:%!s(int=12800) SalePrice:%!s(int=0) SalePriceEuro:%!s(int=0)] map[CategoryName:Shirts ID:%!s(int=305022) ImageURL://d17ol771963kd3.cloudfront.net/185149/ca/q68e3_cXQ4g.jpg ImageURLHi://assets.supremenewyork.com/185149/rc/q68e3_cXQ4g.jpg Name:Woven Toggle Shirt NewItem:%!s(bool=false) Position:%!s(int=11) Price:%!s(int=11800) PriceEuro:%!s(int=12800) SalePrice:%!s(int=0) SalePriceEuro:%!s(int=0)]]```I did this: ```gos := structs.Map(supremeProducts) // log.Print(yet) for _ record := range s { log.Printf( [===>] Record: %s record) if rec ok := record.(map[string]interface{}); ok { for key val := range rec { log.Printf( [========>] %s = %s key val) } } else { log.Printf(\"record not a map[string]interface{}: %v\\ record) } }```"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-29T03:24:46.183000",
                        "user": "Crispin",
                        "text": "how can I get the Categoryname for example?"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-29T03:52:36.184000",
                        "user": "Crispin",
                        "text": "They are."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1867",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T06:08:01.220000",
                        "user": "Basim",
                        "text": "if a function has too many parameters is make some of them to be a struct a good idea ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-29T06:08:21.322000",
                        "user": "Dreya",
                        "text": "What is too many parameters\"?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-29T06:09:08.803000",
                        "user": "Basim",
                        "text": "hmm like 7 or 8 parameters might be my preference but I don't want the definition of the function looks this long"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-29T06:10:08.474000",
                        "user": "Dreya",
                        "text": "I guess my first question is why do you need that many parameters? are you trying to do too many things in one function? But 78 isn't too bad imo"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-29T06:13:37.778000",
                        "user": "Samarie",
                        "text": "are they optional?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-29T06:13:39.585000",
                        "user": "Samarie",
                        "text": "if yes struct"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-29T06:21:51.712000",
                        "user": "Basim",
                        "text": "not optional but what if several functions all have these identical parameters ?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-29T06:24:23.175000",
                        "user": "Samarie",
                        "text": "then sure struct"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-29T06:24:28.147000",
                        "user": "Samarie",
                        "text": "or method even"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "39",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T06:53:49.304000",
                        "user": "Adamae",
                        "text": "hello can I make a map with value type map??"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T07:28:46.040000",
                        "user": "Dinesh",
                        "text": "Y is there so much overlap between rust and Go users"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-02T07:28:54.246000",
                        "user": "Dinesh",
                        "text": "they are like polar opposite languages"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-02T07:29:04.423000",
                        "user": "Dinesh",
                        "text": "also I'm learning rust"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-02T10:03:20.915000",
                        "user": "Houssine",
                        "text": "> Y is there so much overlap between rust and Go users> they are like polar opposite languages> also I'm learning rustBecause Go provides alot of utility for things that you might do with Rust but without the added annoyance of borrowing and lifetimes directlyIf you need actual native stuff with C Rust is better but in alot of cases Go can do the job aswell with alot less effort and less compile time"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "1055",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-26T19:22:08.723000",
                        "user": "Lamnouar",
                        "text": "I want to make a novelty discord bot that uses emotes as commands"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-26T19:22:17.616000",
                        "user": "Lamnouar",
                        "text": "And good discord bot library?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-26T19:23:22.589000",
                        "user": "Nader",
                        "text": "discordgo"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-26T19:23:23.283000",
                        "user": "Nader",
                        "text": "or"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-26T19:23:25.139000",
                        "user": "Nader",
                        "text": "disgord"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-26T19:23:29.851000",
                        "user": "Nader",
                        "text": "are the main ones used"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-26T19:23:37.026000",
                        "user": "Lamnouar",
                        "text": "Here is kinda what I have thought through completely,Use a flag to tell the bot what id to use...And will look at those."
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-26T19:45:21.233000",
                        "user": "Jonsi",
                        "text": "Imgur API"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2362",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-27T21:53:51.308000",
                        "user": "Elisardo",
                        "text": "Hey guys I\\'m trying to get all results from an unbuffered channel but it never completes the request. Would you be able to point me in the right direction and let me know what I should look at?```gofunc main() { c := make(chan int) var wg sync.WaitGroup arr := make([]int 600) wg.Add(600) for index := range arr { go func(c chan int wg sync.WaitGroup) { fmt.Printf(\"working on %v index) defer wg.Done() time.Sleep(1  time.Second) c < 1 }(c &wg) } wg.Wait() fmt.Println(\"done\")}```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-27T21:55:09.991000",
                        "user": "Elisardo",
                        "text": "If I set the channel size to `600` then everything works fine. I just don't understand the technical aspect behind why is this solution not working"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-27T21:56:27.738000",
                        "user": "Naphtali",
                        "text": "So I have a struct ```type Item struct {Name string `json: name\"`}tempItem := Item{Name: tempName\"}json.NewEncoder(w).Encode(tempItem)``` and variable w is the http response writer but when I run this the json shown on the browser is with a capital N in name so it is ignoring the `json: name\"` part what is going on"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-27T21:56:54.225000",
                        "user": "Hewitt",
                        "text": "@NotBootstrap where are you reading the channel at"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-27T21:57:28.475000",
                        "user": "Hewitt",
                        "text": "an unbuffered channel must be read for a write to advance"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-27T21:57:41.833000",
                        "user": "Chistian",
                        "text": "@NotBootstrap you need read the channel in unbuffered channel it blocks write until a read"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-27T21:58:12.800000",
                        "user": "Elisardo",
                        "text": "Ah! Damn. So should I create a producer and a consumer?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-27T21:58:24.912000",
                        "user": "Hewitt",
                        "text": "i mean you can just read it in your main routine"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-27T21:59:08.096000",
                        "user": "Elisardo",
                        "text": "would I read from the channel before the `wg.Wait()` statement?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-27T21:59:42.435000",
                        "user": "Hewitt",
                        "text": "after"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-27T22:00:05.946000",
                        "user": "Hewitt",
                        "text": "close the channel and then do ```go for i := range c { }}```"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-27T22:00:11.451000",
                        "user": "Hewitt",
                        "text": "and you will read all the values"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-27T22:00:22.236000",
                        "user": "Hewitt",
                        "text": "err"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-27T22:00:23.648000",
                        "user": "Hewitt",
                        "text": "actually"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-27T22:00:27.610000",
                        "user": "Hewitt",
                        "text": "your code is wrong too"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-27T22:02:17.724000",
                        "user": "Naphtali",
                        "text": "Like if I change `json: name\"` to something else `json: Notname\"` when I run json.NewEncoder(w).Encode(tempItem) it will still display the json with Name"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-27T22:02:50.727000",
                        "user": "Hewitt",
                        "text": "```gofunc main() { c := make(chan int) var wg sync.WaitGroup arr := make([]int 600) wg.Add(len(arr)) for index := range arr { go func(c chan int wg sync.WaitGroup) { fmt.Printf(\"working on %v index) time.Sleep(1  time.Second) wg.Done() c < 1 }(c &wg) } wg.Wait() //read from it fmt.Println(\"done\")}```"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-27T22:03:01.521000",
                        "user": "Hewitt",
                        "text": "you cant defer the done there"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-27T22:03:27.734000",
                        "user": "Hewitt",
                        "text": "because `wait` will never advance since the goroutines never return so the defer is never called"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-27T22:03:52.639000",
                        "user": "Hewitt",
                        "text": "once the channel is read the rotuines will all close out"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-27T22:04:35.182000",
                        "user": "Hewitt",
                        "text": "i just woke up from a nap so advice may be a little off so ymmv"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-27T22:05:17.839000",
                        "user": "Hewitt",
                        "text": "@notpaul are you checking that error from encode"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-27T22:05:47.932000",
                        "user": "Naphtali",
                        "text": "No but I never had to before"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-27T22:05:59.107000",
                        "user": "Hewitt",
                        "text": "always check your errors"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-27T22:06:02.437000",
                        "user": "Naphtali",
                        "text": "I rewrite the source code because it was a small project and it worked fine like I had it"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-27T22:06:09.251000",
                        "user": "Hewitt",
                        "text": "until it doesnt"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-27T22:06:19.658000",
                        "user": "Naphtali",
                        "text": "It's also not throwing an error"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-27T22:06:25.516000",
                        "user": "Hewitt",
                        "text": "its window.Window"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-27T22:06:29.314000",
                        "user": "Hewitt",
                        "text": "@Deleted User"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-27T22:06:40.395000",
                        "user": "Crispin",
                        "text": "and what's import line ?"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-27T22:06:47.676000",
                        "user": "Lu",
                        "text": "You're importing it to a throwaway line"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-27T22:06:58.674000",
                        "user": "Hewitt",
                        "text": "like where you are creating the object"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-27T22:07:01.354000",
                        "user": "Lu",
                        "text": "Remove the `_`"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-27T22:07:03.666000",
                        "user": "Hewitt",
                        "text": "and yeah that too"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-27T22:07:11.110000",
                        "user": "Lu",
                        "text": "Or replace it with `.`"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-27T22:07:19.187000",
                        "user": "Hewitt",
                        "text": "global namespace :notlikethis:"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-27T22:07:22.130000",
                        "user": "Yitzchok",
                        "text": "@notpaul `json:\"name\"` not `json: name\"`"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-27T22:07:23.131000",
                        "user": "Lu",
                        "text": "Or remove that entirely and use the package name for exports"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-27T22:07:25.691000",
                        "user": "Elisardo",
                        "text": "So I tried reading the values from the channel but no dice. Looks like it\\'s blocking on `c < 1` after a number of them execute```gofunc main() { c := make(chan int) var wg sync.WaitGroup arr := make([]int 600) wg.Add(len(arr) for index := range arr { go func(c chan int wg sync.WaitGroup index int) { fmt.Printf(\"working on %v\\ index) time.Sleep(1  time.Second) c < 1 wg.Done() }(c &wg index) } wg.Wait() close(c) for res := range c { fmt.Println(res) } fmt.Println(\"done\")}```"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-27T22:07:45.219000",
                        "user": "Hewitt",
                        "text": "move the done statement up a line"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-27T22:07:59.334000",
                        "user": "Lu",
                        "text": "You are waiting for goroutines before reading @NotBootstrap"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-27T22:08:09.864000",
                        "user": "Lu",
                        "text": "Your wait condition will not pass until all goroutines have completed"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-27T22:08:28.469000",
                        "user": "Lu",
                        "text": "But since you're using an unbuffered channel your goroutines will block until you read from them"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-27T22:08:44.293000",
                        "user": "Elisardo",
                        "text": "I'm getting panics because I'm sending to a closed channel"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-27T22:08:55.122000",
                        "user": "Hewitt",
                        "text": "yeah half alseep advice"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-27T22:09:25.240000",
                        "user": "Hewitt",
                        "text": "give ma second"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-27T22:09:33.429000",
                        "user": "Elisardo",
                        "text": "@Doad what would be the best approach to read them? Infinite for loop?"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-27T22:09:51.414000",
                        "user": "Lu",
                        "text": "In a separate goroutine"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-27T22:10:07.098000",
                        "user": "Lu",
                        "text": "And have your waitgroup wait for the writers AND the reader"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1904",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T11:30:52.426000",
                        "user": "Lillyth",
                        "text": "hi guys i have a problem with an 32bit (i686) nonPAE Linux System: All GOPrograms crush on startup with a segfault even the go command itself. If I crosscompile a GO Programm using GOOS=linux GOARCH=386 it runs fine on my AMD64 machine but if i copy it to the 32 bit machine the programm gets segfault immediatly. Someone had this before any compiler/linker options to try?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T11:35:31.576000",
                        "user": "Matheo",
                        "text": "```var withHttp string sc := bufio.NewScanner(os.Stdin) for sc.Scan() { domain := strings.ToLower(sc.Text()) //withHttps = https:// + domain withHttp = http:// + domain fmt.Println(withHttp) resp err := http.Get(withHttp) if err != nil { log.Fatal(err) } fmt.Println(\"Http Response: resp.StatusCode http.StatusText(resp.StatusCode)) }``` im trying to check every url with the status code  but it exit after the first one. Why?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T11:35:46.784000",
                        "user": "Matheo",
                        "text": "```http://synergy2.search.yahoo.com2020/09/30 17:04:14 Get http://synergy2.search.yahoo.com\": dial tcp: lookup synergy2.search.yahoo.com: no such hostexit status 1```OUtput"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T11:36:43.861000",
                        "user": "Daisuke",
                        "text": "`log.Fatal`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-30T11:36:54.740000",
                        "user": "Matheo",
                        "text": "ohh"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T11:37:18.111000",
                        "user": "Matheo",
                        "text": "instead of log.fatal what i can use?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T11:37:22.492000",
                        "user": "Matheo",
                        "text": "println?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T11:37:32.897000",
                        "user": "Daisuke",
                        "text": "Literally anything that won't exit your program lol"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T11:37:46.906000",
                        "user": "Daisuke",
                        "text": "You'll also want to `continue` there"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T11:38:30.354000",
                        "user": "Matheo",
                        "text": "yeh continue works thanks @Doad"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "1363",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-18T13:56:50.966000",
                        "user": "Ronald",
                        "text": "Hey guys i need help with gtk yet again im adding items to a `gtk.ListBox` but i am not sure why am i getting this```GtkCRITICAL : 15:55:38.055: gtk_list_box_row_get_index: assertion GTK_IS_LIST_BOX_ROW (row) failed```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-18T14:12:51.864000",
                        "user": "Espiridion",
                        "text": "```godata := []Job{ { Username: name, Date: dateTime, }, } marshal _ := json.MarshalIndent(data   ) file err := os.OpenFile(\"targets.json os.O_RDWR|os.O_CREATE 0755) if err != nil { log.Fatal(err) } n err := file.Write(marshal) if err != nil { log.Fatal(err) }```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-18T14:14:21.107000",
                        "user": "Gwendolen",
                        "text": "are you intending to append to the file instead?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-18T14:14:51.157000",
                        "user": "Gwendolen",
                        "text": "`os.O_APPEND`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-18T14:14:54.096000",
                        "user": "Gwendolen",
                        "text": "docs are so gud"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-18T14:15:00.874000",
                        "user": "Espiridion",
                        "text": "okay my bad"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-18T14:21:49.915000",
                        "user": "Espiridion",
                        "text": "Oh yeah"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-18T14:21:55.060000",
                        "user": "Espiridion",
                        "text": "unmarshal and append"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2457",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-26T14:12:31.781000",
                        "user": "Helaina",
                        "text": "Hello guys. Does someone know how to put in function any type like input argument? I know that Golang has static typing but maybe someone knows solution"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-26T14:22:34.727000",
                        "user": "Maram",
                        "text": "`interface{}` explicitly breaks the type system"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-26T14:23:45.018000",
                        "user": "Helaina",
                        "text": "okey I think I understood)"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-26T14:23:49.987000",
                        "user": "Helaina",
                        "text": "Thank you)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-26T14:26:19.970000",
                        "user": "Maram",
                        "text": "nope"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-26T14:26:21.002000",
                        "user": "Maram",
                        "text": "there isn't"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-26T14:26:27.645000",
                        "user": "Maram",
                        "text": "i super duper promise"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-26T14:26:32.626000",
                        "user": "Cael",
                        "text": "\ud83d\ude10"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-26T14:26:38.523000",
                        "user": "Maram",
                        "text": "it's repetitive but extremely clear"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-26T14:27:10.395000",
                        "user": "Maram",
                        "text": "so"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-26T14:29:25.201000",
                        "user": "Cael",
                        "text": "hm k. I cannot do something about the error at this point technically you should not be able to trigger them anyway.And if you somehow manage the procedure is fricked nontheless"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-26T14:29:40.823000",
                        "user": "Cael",
                        "text": "might as well just panic here aswell"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-26T14:29:45.586000",
                        "user": "Maram",
                        "text": "and let it sort things out"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-26T14:30:17.514000",
                        "user": "Maram",
                        "text": "strongly advise against panic"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-26T14:30:49.974000",
                        "user": "Maram",
                        "text": "panic is for when there is a 0% chance your program can proceed in any sane way and the only way to prevent catastrophic data corruption is to commit harikari"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-26T14:30:59.300000",
                        "user": "Emmerson",
                        "text": "``if deezySeesPanic() { panic(deezy) }``"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-26T14:31:20.761000",
                        "user": "Maram",
                        "text": "it's a well rehearsed dance routine"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-26T14:31:40.552000",
                        "user": "Maddyson",
                        "text": "same with unhandled errors"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-26T14:31:46.270000",
                        "user": "Maddyson",
                        "text": "or `handle(err)`"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-26T14:32:04.788000",
                        "user": "Maram",
                        "text": "yeah there's like a dozen of these that come in a week"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-26T14:34:43.791000",
                        "user": "Maddyson",
                        "text": "You are ignoring the error"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-26T14:35:09.189000",
                        "user": "Husam",
                        "text": "@Sgt_Tailor me? \ud83d\ude04"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-26T14:35:19.158000",
                        "user": "Maddyson",
                        "text": "os.OpenFile returns an error"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-26T14:35:24.592000",
                        "user": "Maddyson",
                        "text": "you are ignoring it"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-26T14:35:39.422000",
                        "user": "Husam",
                        "text": "yes I know in main code I dont do that but here I just wanted to talk about address \ud83d\ude04"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-26T14:36:01.356000",
                        "user": "Maddyson",
                        "text": "Don't think go expands the env variables"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-26T14:36:50.740000",
                        "user": "Emmerson",
                        "text": "If you handled the error it should tell you what it\\'s attempting to do which is open the literal folder called $HOME as opposed to expanding it out but to fix your error here you should be grabbing the environment variable using ``os.Getenv`` (iirc) and format that into your file path"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-26T14:37:19.569000",
                        "user": "Husam",
                        "text": "hmm Thanks."
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-26T14:39:13.587000",
                        "user": "Maram",
                        "text": "or `path/filepath` probably has stuff for expanding things"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-26T14:40:46.338000",
                        "user": "Husam",
                        "text": "anyway thank you all."
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-26T14:41:31.846000",
                        "user": "Emmerson",
                        "text": "technically deezy's suggestion is more native but \ud83e\udd37"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-26T14:41:54.021000",
                        "user": "Maram",
                        "text": "filepaths are not as trivial as string concatentation \ud83d\ude43"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-26T14:51:38.030000",
                        "user": "Kaze",
                        "text": "what do you guys think about the latest generics proposal btw"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-26T14:51:56.723000",
                        "user": "Maram",
                        "text": "it's a good feature but i have little skin in that game"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1889",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T22:26:54.915000",
                        "user": "Levvy",
                        "text": "hi all. if i have this structure ```\u251c\u2500\u2500\u2500client\u2502 \u2514\u2500\u2500\u2500client.go\u2514\u2500\u2500\u2500model \u2514\u2500\u2500\u2500model.go```how do I import `model.go` inside `client.go`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-29T22:42:24.627000",
                        "user": "Angelisa",
                        "text": "btw guys is that possible the tour go (excerises) are hard for newbies ?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-29T22:42:55.987000",
                        "user": "Angelisa",
                        "text": "i know its excerises but still my face is like"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-29T22:43:07.968000",
                        "user": "Yufan",
                        "text": "I've been doing go for 4 month"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-29T22:43:22.327000",
                        "user": "Yufan",
                        "text": "it's not a go problem I'm just dumb"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-29T22:43:42.374000",
                        "user": "Josselin",
                        "text": "there's a learning curve yes"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-29T22:43:46.171000",
                        "user": "Angelisa",
                        "text": "probably me too \ud83d\ude04 i have started 3 days ago"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-29T22:43:47.626000",
                        "user": "Josselin",
                        "text": "the first step is always the hardest"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-29T23:13:32.892000",
                        "user": "Levvy",
                        "text": "I thought the tour of go was hard. I use it as a litmus test now to test my own progress."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2217",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-23T19:26:20.553000",
                        "user": "Otter",
                        "text": "Ey so i\\'m about to get started with go and i\\'m trying to setup everything on my computer to get started. Using windows 10 and planning til use visual studio code. I need help with a couple of things. I want to install tools via GO extensions. If i use the go get command the git repository gets installed in my go\\\\src where all my project will be. But if use the install function in VScode the repository gets placed in the default GOPATH which i\\'ve changed in system variables. What i wanted to have was a directory go\\\\tools where all the tools would be installed. Is this a good practice or should i go with where go get installs my files?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-23T20:01:18.952000",
                        "user": "Oshea",
                        "text": "holy just spent ages tracking down a bug only to learn that even if you pass a slice into a function if that function mutates that slice in place (using slice[i]) then it will mutate all across the function calls (even if thats in its own goroutine)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-23T20:01:26.340000",
                        "user": "Oshea",
                        "text": "expected i guess but also not"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-23T20:02:21.073000",
                        "user": "Oshea",
                        "text": "@Oxano I'd get started with Goland on windows also the gopath installs all the tools to a bin path"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-23T20:02:23.289000",
                        "user": "Oshea",
                        "text": "You cant change that"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-23T20:02:34.466000",
                        "user": "Oshea",
                        "text": "goroot and gopath are as far as your influence extends"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-23T20:02:43.015000",
                        "user": "Oshea",
                        "text": "Everything else is dictated by the universe"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-23T20:04:27.265000",
                        "user": "Janet",
                        "text": "this is like semi broken dysfunctional pip I swear"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-23T20:04:59.067000",
                        "user": "Jkari",
                        "text": "I've had worse luck with pip"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-23T20:05:01.272000",
                        "user": "Jkari",
                        "text": "I use Linux though"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-23T20:05:05.484000",
                        "user": "Olivia",
                        "text": "pip is infinitely worse"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-23T20:05:20.073000",
                        "user": "Oshea",
                        "text": "@Oxano I use windows fwiw"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-23T20:05:41.192000",
                        "user": "Janet",
                        "text": "Idk man I've been trying to properly use this for like a week now. I had py3 setup in 15 minutes"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-23T20:06:30.414000",
                        "user": "Otter",
                        "text": "@mmacheerpuppy"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-23T20:06:33.336000",
                        "user": "Otter",
                        "text": "okey"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-23T20:06:37.223000",
                        "user": "Janet",
                        "text": "The language is nice don't get me wrong but these docs suck"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-23T20:06:50.668000",
                        "user": "Izna",
                        "text": "go?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-23T20:07:34.922000",
                        "user": "Crispin",
                        "text": "nevet experienced any issue"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-23T20:07:37.966000",
                        "user": "Crispin",
                        "text": "never"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-23T20:07:45.117000",
                        "user": "Otter",
                        "text": "by on windows do you mean as use notepad++ as IDE and no tools @mmacheerpuppy ?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-23T20:07:45.859000",
                        "user": "Olivia",
                        "text": "GOROOT points to where the go binary is installed"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-23T20:07:46.419000",
                        "user": "Crispin",
                        "text": "with the gopath"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-23T20:08:03.033000",
                        "user": "Olivia",
                        "text": "make an empty directory LITERALLY ANYWHERE and point GOPATH to it"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-23T20:08:06.143000",
                        "user": "Olivia",
                        "text": "done"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-23T20:09:52.990000",
                        "user": "Crispin",
                        "text": "he should rather learn how to use the gopath properly instead of changing it to point to different places constantly as that is redundant"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-23T20:10:04.025000",
                        "user": "Olivia",
                        "text": "i mean"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-23T20:10:06.853000",
                        "user": "Olivia",
                        "text": "thats what i'm talking about"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-23T20:10:10.597000",
                        "user": "Olivia",
                        "text": "set this up once"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-23T20:10:12.389000",
                        "user": "Olivia",
                        "text": "and just leave it"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-23T20:10:25.976000",
                        "user": "Olivia",
                        "text": "i've upgraded my vps through nine different go versions and used the same GOPATH dir the whole time"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-23T20:11:31.448000",
                        "user": "Jkari",
                        "text": "I had go set up in 3 seconds"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-23T20:11:49.649000",
                        "user": "Otter",
                        "text": "how does go build work? i get the can\\'t load package ?"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-23T20:11:57.032000",
                        "user": "Crispin",
                        "text": "not sure what he meant saying that there are no docs regarding setting it up as literally the first google search returned me a complete guide"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-23T20:12:01.795000",
                        "user": "Olivia",
                        "text": "i mean depends on what you did wrong"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-23T20:12:09.155000",
                        "user": "Olivia",
                        "text": "either your code is broken or your go environemnt is"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-23T20:12:25.526000",
                        "user": "Otter",
                        "text": "can you only do go build from the directory itself?"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-23T20:12:31.918000",
                        "user": "Aduen",
                        "text": "?go setup"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-23T20:12:32.115000",
                        "user": "Jocelyn",
                        "text": "How to write Go code <https://golang.org/doc/code.html>  IkkerensHow to set up your Go environment <https://golang.org/doc/install>  Ikkerens"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-23T20:12:35.145000",
                        "user": "Aduen",
                        "text": "first link"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-23T20:14:30.785000",
                        "user": "Oshea",
                        "text": "Set it up once and leave it is the best advice"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-23T20:14:38.398000",
                        "user": "Oshea",
                        "text": "Until you have straddled enough with it to whimsy around"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-23T20:15:15.714000",
                        "user": "Oshea",
                        "text": "@Oxano Use go modules. Learn go modules. Everything before it is depreciated."
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-23T20:15:40.898000",
                        "user": "Oshea",
                        "text": "Do not use dep and pass Go do not collect 200 dollars."
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-23T20:16:16.662000",
                        "user": "Otter",
                        "text": "so i read about modules but i dont really get what they are/do @mmacheerpuppy"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-23T20:17:10.319000",
                        "user": "Otter",
                        "text": "and how to use em"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-23T20:17:33.377000",
                        "user": "Oshea",
                        "text": "Then that's your first task"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-23T20:17:43.843000",
                        "user": "Oshea",
                        "text": "That's the first thing you have to do when writing Go"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-23T20:17:48.238000",
                        "user": "Olivia",
                        "text": "so uh"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-23T20:17:59.598000",
                        "user": "Olivia",
                        "text": "a lot of problems in go come from assuming things need to be more complex than they are"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-23T20:18:11.200000",
                        "user": "Oshea",
                        "text": "`go mod init`"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-23T20:18:28.070000",
                        "user": "Oshea",
                        "text": "main.go ```package mainmain () {// code}```"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-23T20:18:37.421000",
                        "user": "Oshea",
                        "text": "then in there you can go run ."
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-23T20:22:27.055000",
                        "user": "Aduen",
                        "text": "```bashmkdir hellocd hellogo mod init helloworldcat <<EOF > hello.gopackage mainimport fmt\"func main() { fmt.Println(\"Hello world.\")}EOFgo build ../helloworld```"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-23T20:26:13.372000",
                        "user": "Crispin",
                        "text": "go mod is good"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-23T20:28:50.696000",
                        "user": "Jkari",
                        "text": "and then I never used it"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-23T20:41:17.131000",
                        "user": "Anaaya",
                        "text": "What do most people use on windows to keep their go processes alive?"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-23T20:49:37.256000",
                        "user": "Jkari",
                        "text": "pop is just reslicinf right"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-23T20:54:10.886000",
                        "user": "Jayda",
                        "text": "keep in mind with append you have to reassign it back to the variable you're appending to so:myArr = append(myArr valueToAppend)right?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "9",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-01T04:57:40.797000",
                        "user": "Bryanna",
                        "text": "how i can split a string of numbers and letter ( A9\") and read separately the number and the character?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-01T04:59:50.902000",
                        "user": "Josselin",
                        "text": "couple ways i suppose"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-01T04:59:54.618000",
                        "user": "Josselin",
                        "text": "you can literally loop over strings"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-01T04:59:56.667000",
                        "user": "Josselin",
                        "text": "so"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-01T05:00:28.641000",
                        "user": "Josselin",
                        "text": "you probably want to start with that"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-01T05:00:31.061000",
                        "user": "Bryanna",
                        "text": "exist a native library similar to ctype ?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-01T05:00:43.776000",
                        "user": "Josselin",
                        "text": "go lets you interact with c code sure"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-01T05:00:44.716000",
                        "user": "Josselin",
                        "text": "cgo"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-01T05:00:50.096000",
                        "user": "Bryanna",
                        "text": "thanks"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-01T05:00:58.070000",
                        "user": "Bryanna",
                        "text": "but what is the Go way?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-01T05:01:05.954000",
                        "user": "Bryanna",
                        "text": ":thinkingo:"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-01T05:01:06.001000",
                        "user": "Josselin",
                        "text": "do what works"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-01T05:01:40.723000",
                        "user": "Samarie",
                        "text": "A9?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-01T05:01:47.249000",
                        "user": "Samarie",
                        "text": "that looks like hexadecimal"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-08-01T05:01:52.841000",
                        "user": "Bryanna",
                        "text": "no no"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-08-01T05:02:11.695000",
                        "user": "Samarie",
                        "text": "and why would there ever be a library to do this"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-08-01T05:02:12.210000",
                        "user": "Bryanna",
                        "text": "the string is similar A9 K10 and i need separte the character and the number"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-08-01T05:02:21.905000",
                        "user": "Josselin",
                        "text": "maybe a regex"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-08-01T05:02:26.730000",
                        "user": "Josselin",
                        "text": "depends on how reliable the patterns are"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-08-01T05:02:32.413000",
                        "user": "Samarie",
                        "text": "`a[0] + a[1:]`"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-08-01T05:02:38.911000",
                        "user": "Bryanna",
                        "text": "because in c++ exist ctype"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-08-01T05:02:42.233000",
                        "user": "Bryanna",
                        "text": "and i am new in go"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-08-01T05:02:47.664000",
                        "user": "Samarie",
                        "text": "what does ctype have to do"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-08-01T05:03:21.234000",
                        "user": "Bryanna",
                        "text": "classify characters"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-08-01T05:03:49.338000",
                        "user": "Samarie",
                        "text": "package unicode"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-08-01T05:04:02.747000",
                        "user": "Samarie",
                        "text": "https://godoc.org/unicode"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-08-01T05:04:12.809000",
                        "user": "Samarie",
                        "text": "or just use a regex"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-08-01T05:04:39.746000",
                        "user": "Bryanna",
                        "text": "thanks @deezy and @_diamondburned_ i will try"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-08-01T05:04:43.975000",
                        "user": "Samarie",
                        "text": "`([AZ])(\\\\d+)`"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-08-01T05:04:46.280000",
                        "user": "Samarie",
                        "text": "yeah np"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-08-01T05:04:51.272000",
                        "user": "Bryanna",
                        "text": ":hugged:"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-08-01T05:19:42.984000",
                        "user": "Cephas",
                        "text": "Yeah no trace of that one on the internet besides a github"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2355",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-23T01:47:05.964000",
                        "user": "Espiridion",
                        "text": "What's the fastest way to parse commands. I want to split on spaces unless there are quotes around the arg"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-23T01:47:53.564000",
                        "user": "Espiridion",
                        "text": "like `$say my message channel` would be split into the command say and then two arguments"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-23T01:48:31.173000",
                        "user": "Alinah",
                        "text": "sounds like you want something like"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-23T01:48:33.602000",
                        "user": "Alinah",
                        "text": "https://github.com/akamensky/argparse"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-23T01:48:45.453000",
                        "user": "Alinah",
                        "text": "or"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-23T01:48:47.117000",
                        "user": "Alinah",
                        "text": "https://github.com/alexflint/goarg"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-23T01:49:04.214000",
                        "user": "Alinah",
                        "text": "or just good old flag"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-23T01:49:11.132000",
                        "user": "Maram",
                        "text": "https://godoc.org/github.com/google/shlex exists"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-23T01:49:59.685000",
                        "user": "Espiridion",
                        "text": "Do those only take input from the command line or can I pass data from discord message objects?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-23T01:50:08.386000",
                        "user": "Maram",
                        "text": "https://godoc.org/github.com/google/shlex#Split"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-23T01:50:10.794000",
                        "user": "Maram",
                        "text": "check the docs"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-23T01:50:36.056000",
                        "user": "Maram",
                        "text": "see what Split() accepts as its parameter"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-23T01:51:19.939000",
                        "user": "Shritha",
                        "text": "+1 shlex"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-23T01:51:24.410000",
                        "user": "Shritha",
                        "text": "so overkill it parses comments"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-23T01:51:28.874000",
                        "user": "Shritha",
                        "text": "dunno if that's good or not lol"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-23T01:51:40.081000",
                        "user": "Espiridion",
                        "text": "Ooh I like this"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-23T01:51:43.254000",
                        "user": "Espiridion",
                        "text": "Thanks"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-23T01:51:45.354000",
                        "user": "Shritha",
                        "text": "mattn/shellwords is another one"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-23T01:51:55.591000",
                        "user": "Shritha",
                        "text": "this one allows command evals and env vars :KEKW:"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-23T01:51:59.698000",
                        "user": "Shritha",
                        "text": "only when enabled tho"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-23T02:02:43.982000",
                        "user": "Almamy",
                        "text": "My cursed thingy does work toohttps://github.com/LaevusDexter/statemachineplayground/blob/master/argumentparsing/argument_parser.go"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-23T02:28:03.017000",
                        "user": "Shritha",
                        "text": "goimap"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-23T02:28:15.168000",
                        "user": "Shritha",
                        "text": "by the one and only emersion"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2421",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T18:23:55.148000",
                        "user": "Sadrac",
                        "text": "Hey all i was wondering what\\'s the good way to handle channel replacement? I seem to be getting a data race but adding a lock would most likely lead to multiple replacements which I\\'d like to avoid if possible. ```gofunc channelReplace() { pubsub := redis.Subscribe(\"channelname\") pubsubChan := pubsub.Channel() for i := 0; i < 100; i++ { go func(i int) { for { select { case msg ok := <pubsubChan: if !ok { // If a ping is failed Redis automatically waits 30s (can\\'t config) // We want to kick it as 30s latency is kind of bad. // DATA RACE CONDITION HERE pubsub = redis.Subscribe(\"channelname\") pubsubChan = pubsub.Channel() continue } someOtherFunc(msg) } } }(i) }}```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-29T18:24:54.988000",
                        "user": "Crispin",
                        "text": "Hi ! I use GopherLua but i don't know how execute function as type LFunction```gofunc state(l lua.LState s int) func() { return func () { l.ToFunction(s) }}```how execute l.ToFunction(s) ?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-29T18:32:16.852000",
                        "user": "Kwynn",
                        "text": "Do you know any any go library which supports JWE (encrypted claims)?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-29T18:33:49.303000",
                        "user": "Nazaret",
                        "text": "have you tried"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-29T18:33:51.237000",
                        "user": "Nazaret",
                        "text": "googling"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-29T18:34:09.449000",
                        "user": "Nazaret",
                        "text": "None"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-29T18:35:51.430000",
                        "user": "Kwynn",
                        "text": "Yea I did but not successfully using some other terms lol"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-29T18:36:03.448000",
                        "user": "Nazaret",
                        "text": "why didnt you try jwe golang"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-29T18:36:11.706000",
                        "user": "Nazaret",
                        "text": "if youre looking for a go lib with jwe"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-29T18:36:18.924000",
                        "user": "Nazaret",
                        "text": ":bruh:"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-29T18:38:10.281000",
                        "user": "Kwynn",
                        "text": "Chill bro next time I won't be asking anything here anymore. I am sure you never did mistakes holy"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-29T18:38:44.671000",
                        "user": "Khianna",
                        "text": "Is this error handling is good? Or I\\'m doing wrong?```gologFile err := os.OpenFile(\"errorLog.txt os.O_APPEND|os.O_CREATE|os.O_RDWR 0666) if err != nil { errors.Wrap(err Failed to create/append errorLog file\") log.Println(\"Log.go function Loggin Error opening error errorLog file || err) }```"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-29T18:41:15.738000",
                        "user": "Jkari",
                        "text": "cHilL brO"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-29T18:41:17.297000",
                        "user": "Jkari",
                        "text": "why the log?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-29T18:41:23.684000",
                        "user": "Jkari",
                        "text": "just return the wrapped err"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-29T18:41:25.834000",
                        "user": "Jkari",
                        "text": "and log at top level"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-29T18:42:11.619000",
                        "user": "Nazaret",
                        "text": "errors.Wrap returns a new error that you should use instead @MantasSil"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-29T18:43:43.966000",
                        "user": "Khianna",
                        "text": "Idk I had log everyone before I watched dave video. Didn't wanted delete them before I asking in here"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2417",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T16:18:52.025000",
                        "user": "Salman",
                        "text": "Anyone know of some good resources for learning gRPC? Went through the tutorials on the website but still feeling a bit lost."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-29T16:29:55.616000",
                        "user": "Oshea",
                        "text": "Is it even possible to spawn too many goroutines"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-29T16:30:02.131000",
                        "user": "Oshea",
                        "text": "Or would that just be an OOM error on the heap"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-29T16:30:34.953000",
                        "user": "Jkari",
                        "text": "why don't you find out"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-29T16:30:48.422000",
                        "user": "Oshea",
                        "text": "um"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-29T16:30:52.507000",
                        "user": "Jkari",
                        "text": "```gofor { go time.Sleep(time.Minute)}```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-29T16:30:56.028000",
                        "user": "Oshea",
                        "text": "ah"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-29T16:30:59.543000",
                        "user": "Oshea",
                        "text": "good call"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-29T16:30:59.973000",
                        "user": "Oshea",
                        "text": "ty"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-29T16:34:34.533000",
                        "user": "Jianjun",
                        "text": "Which one is more preferred:```goif err := viper.ReadInConfig(); err != nil {}``````goerr := viper.ReadInConfig()if err != nil {}```"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-29T16:34:44.769000",
                        "user": "Jianjun",
                        "text": "And I mean the if statement in general"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-29T16:35:02.165000",
                        "user": "Jianjun",
                        "text": "Not sure what above is actually called \ud83d\ude1b"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-29T16:36:54.310000",
                        "user": "Braxtyn",
                        "text": "In this case when you only return an error there's really no reason not to do the first"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-29T16:37:05.528000",
                        "user": "Jkari",
                        "text": "yea I do the first"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-29T16:37:09.392000",
                        "user": "Jkari",
                        "text": "unless the line is really long"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-29T16:37:23.018000",
                        "user": "Braxtyn",
                        "text": "If the function returns more than just an error sometimes you can't do the first since it scopes all variables to the body of the `if`"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-29T16:38:05.783000",
                        "user": "Jkari",
                        "text": "^"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-29T16:38:12.457000",
                        "user": "Jkari",
                        "text": "sometimes if you don't need it then you can"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-29T16:38:18.913000",
                        "user": "Jkari",
                        "text": "```goif _ err := io.Copy()```"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-29T16:38:19.007000",
                        "user": "Jianjun",
                        "text": "Thanks \ud83d\udc4d"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-29T16:38:28.219000",
                        "user": "Jianjun",
                        "text": "Ahh yeah true. Thanks"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-29T16:43:16.004000",
                        "user": "Jianjun",
                        "text": "```gofunc (res resource) getUser(c gin.Context) { id := c.Param(\"id\") user := entity.User{}  err := res.db.Get(&user SELECT  FROM users WHERE userId = ? id)  if err != nil { c.String(http.StatusNotFound user with ID %s not found id) return } c.JSON(http.StatusOK user)}```I have this small handler for getting user with Id from db. Am I handling the error correctly here.I\\'ve seen people putting panic on those situations Ex where user is not found.If I understand panic correctly it should be the last resort?"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-29T16:44:19.756000",
                        "user": "Jkari",
                        "text": "lgtm"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-29T16:59:40.487000",
                        "user": "Oshea",
                        "text": "yeah that makes sense"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-29T17:11:40.405000",
                        "user": "Hewitt",
                        "text": "channels or mutexes"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-29T17:11:46.794000",
                        "user": "Hewitt",
                        "text": "depending on your usecase"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-29T17:18:26.635000",
                        "user": "Izna",
                        "text": "there are even more things you can do depending on the circumstances"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "9",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-01T14:56:33.527000",
                        "user": "Saif",
                        "text": "Hey I\u2019m playing with `sync.WaitGroup` right now and in my use case I have a channel lagging behind and I want to wait until everything finishes.Problem is that in my main program I run `wg.Wait()` before some operations even start and I want to keep increasing the waitgroup in other goroutines while the main function still waits. I can\u2019t do that because I get \u201cpanic: sync: WaitGroup is reused before previous Wait has returned\u201d.I could create a new channel for keeping my own account but is there a better solution with waitgroups?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-01T15:12:47.822000",
                        "user": "Louisa",
                        "text": "or should I opt for using go as a backend for a localhosted webapp and just using HTML & CSS for the gui part?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-01T15:13:09.123000",
                        "user": "Izna",
                        "text": "in windows how do i set GOOS"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-01T15:15:32.438000",
                        "user": "Izna",
                        "text": "i do `GOOS=darwin` and it not do anything"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-01T15:15:35.360000",
                        "user": "Izna",
                        "text": "give me error"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-01T15:15:49.171000",
                        "user": "Vin",
                        "text": "set GOOS=darwin"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-01T15:15:52.903000",
                        "user": "Vin",
                        "text": "in cmd"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-01T15:16:03.780000",
                        "user": "Vin",
                        "text": "not sure about powershel alternative"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-01T15:16:05.225000",
                        "user": "Reinhold",
                        "text": "Is this the place to ask about vscode integration for go?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-01T15:17:45.600000",
                        "user": "Izna",
                        "text": "yes"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-01T15:19:01.111000",
                        "user": "Reinhold",
                        "text": "Ok cool. I'm trying to clear up some confusion I have. Are the vscodego extension and the gopls language server alternatives to each other? Or is there overlap/requirements?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-01T15:19:14.603000",
                        "user": "Izna",
                        "text": "``` }<<<< }else{```"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-01T15:19:46.022000",
                        "user": "Izna",
                        "text": "can you even do an else for a for loop"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-01T15:19:52.269000",
                        "user": "Krisa",
                        "text": "oh man"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-01T15:20:24.400000",
                        "user": "Vin",
                        "text": "use gopls"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-02-01T15:20:29.535000",
                        "user": "Vin",
                        "text": "if you plan to use modules"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-02-01T15:20:41.179000",
                        "user": "Vin",
                        "text": "it's supposedly the new stanrd supported thing"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-02-01T15:20:50.205000",
                        "user": "Vin",
                        "text": "even if it's kinda garbage atm"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-02-01T15:20:57.365000",
                        "user": "Reinhold",
                        "text": "@luckcolors this is the reason I'm asking yeah. I will be using modules."
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-02-01T15:21:17.466000",
                        "user": "Vin",
                        "text": "sorry if i'm salty about this"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-02-01T15:21:37.707000",
                        "user": "Reinhold",
                        "text": "OK then it's not just mean. I have a fresh reinstall and I had a lot of problems with gopls on my last install. I thought I totally messed up the install at the time."
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-02-01T15:21:57.598000",
                        "user": "Vin",
                        "text": "it's just that in general it sometimes needs you to reopen files so that it understands that say u have imported something new or changed a import/package name"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-02-01T15:22:52.320000",
                        "user": "Vin",
                        "text": "@djacob also be sure to have a proper gomodule path"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-02-01T15:23:17.265000",
                        "user": "Vin",
                        "text": "for some reason it would give a criptic error that would totally break imports"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-02-01T15:23:36.832000",
                        "user": "Vin",
                        "text": "just noticed that there's an update hopefully that one is fixed now"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-02-01T15:23:48.039000",
                        "user": "Vin",
                        "text": "on any case now you know \ud83d\ude04"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-02-01T15:25:06.865000",
                        "user": "Reinhold",
                        "text": "Ok thanks. So I do not need to install the vscodego extension? Just install the language server and point vscode to it?"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-02-01T15:25:26.775000",
                        "user": "Vin",
                        "text": "no you do need the vscodego extension"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-02-01T15:25:41.230000",
                        "user": "Vin",
                        "text": "then you can configure the exstension to use use gopls"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-02-01T15:26:05.652000",
                        "user": "Vin",
                        "text": "atleast that's how i've done it"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-02-01T15:26:29.803000",
                        "user": "Vin",
                        "text": "it should ask you about switching to go pls if you open a go mod project"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-02-01T15:26:32.878000",
                        "user": "Vin",
                        "text": "if i remeber correctly"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-02-01T15:27:01.237000",
                        "user": "Reinhold",
                        "text": "Ok. I'll clone my repo and see what it says."
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-02-01T15:27:04.909000",
                        "user": "Vin",
                        "text": "ye"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-02-01T15:27:16.991000",
                        "user": "Reinhold",
                        "text": "I'm just confused about the overlap between the two."
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-02-01T15:27:28.800000",
                        "user": "Vin",
                        "text": "i honestly never checked"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-02-01T15:27:59.684000",
                        "user": "Vin",
                        "text": "it just went > look for go vscode ext in market > press install > extension installs required tools > done"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-02-01T15:28:52.952000",
                        "user": "Reinhold",
                        "text": "Ha that\\'s what I did last time. I just thought the reason I had all these issues was me blindly pressing yes install it! until it worked."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-02-01T15:30:23.319000",
                        "user": "Nazaret",
                        "text": "vscodego initializes gopls and is the interaction point for vscode to gopls @djacob"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-02-01T15:30:51.374000",
                        "user": "Vin",
                        "text": "@djacob nah that's how it's supposed to work"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-02-01T15:31:26.498000",
                        "user": "Vin",
                        "text": "btw fixed my import module shaningan"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-02-01T15:31:31.121000",
                        "user": "Vin",
                        "text": "thanks anyway"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-02-01T15:32:14.324000",
                        "user": "Reinhold",
                        "text": "@Str\u0153m ah super thanks."
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-02-01T15:35:39.512000",
                        "user": "Vin",
                        "text": "okay i haven't fixed my go mod version problem"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-02-01T15:35:44.311000",
                        "user": "Vin",
                        "text": "can someone help"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-02-01T15:35:45.925000",
                        "user": "Vin",
                        "text": "\ud83d\ude26"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-02-01T15:38:26.902000",
                        "user": "Olivia",
                        "text": "https://github.com/golang/go/wiki/Modules#releasingmodulesv2orhigher"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-02-01T15:41:00.938000",
                        "user": "Vin",
                        "text": "@deezy i've done just that"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-02-01T15:41:08.017000",
                        "user": "Vin",
                        "text": "added a /v2 in the go module path"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-02-01T15:41:15.451000",
                        "user": "Vin",
                        "text": "git commited"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-02-01T15:41:22.358000",
                        "user": "Vin",
                        "text": "git tagged v2.0.0 that commit"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-02-01T15:41:24.183000",
                        "user": "Olivia",
                        "text": "that's step 1"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-02-01T15:41:32.056000",
                        "user": "Vin",
                        "text": "synced the tags"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-02-01T15:41:45.980000",
                        "user": "Olivia",
                        "text": "wait"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-02-01T15:41:48.238000",
                        "user": "Olivia",
                        "text": "these are alternatives"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-02-01T15:41:50.494000",
                        "user": "Olivia",
                        "text": "\u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-02-01T15:41:52.119000",
                        "user": "Olivia",
                        "text": "beats me"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-02-01T15:41:56.878000",
                        "user": "Vin",
                        "text": "Update import statements within the module to also use"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-02-01T15:42:02.070000",
                        "user": "Olivia",
                        "text": "never had to release a v2 before"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-02-01T15:42:09.714000",
                        "user": "Vin",
                        "text": "i don't have any internal imports"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-02-01T15:42:14.453000",
                        "user": "Vin",
                        "text": "it's just a plain package"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-02-01T15:53:44.829000",
                        "user": "Vin",
                        "text": "solved by not using a v2"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2467",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-27T02:33:17.618000",
                        "user": "Amorae",
                        "text": "hi everybody I'm relatively new in programming. Could someone explain why Golang has both garbage collection and pointers? I thought languages with garbage collection didn't need pointers. Thanks in advance"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-27T02:46:47.412000",
                        "user": "Maram",
                        "text": "pointers are in no way mutually exclusive with garbage collection"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-27T02:47:26.934000",
                        "user": "Maram",
                        "text": "a pointer is just a memory location which is an extant Thing that can be tracked by a runtime if you design it to do so."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-27T02:47:47.394000",
                        "user": "Shritha",
                        "text": "wdym didn\\'t need pointers\"?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-27T02:47:58.419000",
                        "user": "Shritha",
                        "text": "they really don't have much to do with each other as deezy has pointed out"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-27T02:49:14.305000",
                        "user": "Maram",
                        "text": "the semantics of what pointers do may be affected by how/if garbage collection works"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-27T02:49:16.518000",
                        "user": "Maram",
                        "text": "but uh"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-27T02:49:48.146000",
                        "user": "Maram",
                        "text": "this is like saying hondas shouldn\\'t need red paint"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-27T02:49:58.639000",
                        "user": "Maram",
                        "text": "really crude metaphor"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-27T02:50:06.376000",
                        "user": "Maram",
                        "text": "i kinda choked but that's the gist"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-27T02:50:38.434000",
                        "user": "Emmerson",
                        "text": "unintentional pun but you said crude (oil) the message after talking about cars"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-27T02:50:41.156000",
                        "user": "Emmerson",
                        "text": "\ud83e\udd23 ...i find things too funny"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-27T03:03:09.784000",
                        "user": "Amorae",
                        "text": "oh ok"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-27T03:03:13.697000",
                        "user": "Amorae",
                        "text": "thanks guys!"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-27T03:03:21.426000",
                        "user": "Bram",
                        "text": "I'm a new person here"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-27T03:03:28.918000",
                        "user": "Alyanna",
                        "text": "I like your profile picture"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-27T03:03:41.307000",
                        "user": "Emmerson",
                        "text": "I like your name"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-27T03:03:45.891000",
                        "user": "Emmerson",
                        "text": "Kinda hungry atm I'd suggest to run."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-27T03:04:02.215000",
                        "user": "Alyanna",
                        "text": "Thanks hungry now"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-27T03:04:02.860000",
                        "user": "Shritha",
                        "text": "Hello donut"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-27T03:04:04.241000",
                        "user": "Shritha",
                        "text": "nice profile pic"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-27T03:04:13.225000",
                        "user": "Bram",
                        "text": "thank you"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-27T03:04:29.900000",
                        "user": "Bram",
                        "text": "I have omellete Much yummy than a 1month old donut"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-27T03:04:48.673000",
                        "user": "Emmerson",
                        "text": "(psss #offtopic join us)"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-27T03:04:58.948000",
                        "user": "Alyanna",
                        "text": "Gimme a block of cheese"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-27T03:05:23.060000",
                        "user": "Bram",
                        "text": "> (psss #offtopic join us)@aditya ok"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "32",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-02T09:07:48.386000",
                        "user": "Frederico",
                        "text": "Hey guys I'm not sure where to write this but I'm kind of in between projects and would like to work on a medium sized open source project. Does anyone want help or know of such a golang project?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-02T09:24:39.866000",
                        "user": "Gavriel",
                        "text": "Any thoughts why?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-02T09:29:58.348000",
                        "user": "Gavriel",
                        "text": "Expand a little bit?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-02T09:30:07.349000",
                        "user": "Jkari",
                        "text": "None"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-02T09:30:20.968000",
                        "user": "Jkari",
                        "text": "they're not exported"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-02T09:30:33.049000",
                        "user": "Gavriel",
                        "text": "Oh you mean the first letter isn't capitalised"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-02T09:30:36.794000",
                        "user": "Jkari",
                        "text": "yes"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-02T09:30:43.102000",
                        "user": "Gavriel",
                        "text": "I didn't know it would affected"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-02T09:30:45.789000",
                        "user": "Gavriel",
                        "text": "Okay thanks"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-02T09:31:04.717000",
                        "user": "Jkari",
                        "text": "other packages can't see unexported fields"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-02T09:31:06.111000",
                        "user": "Jkari",
                        "text": "yw"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-02T09:31:15.413000",
                        "user": "Gavriel",
                        "text": "Ah right."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-02T09:38:51.443000",
                        "user": "Kysen",
                        "text": "HiI'm implementing a client generated from thirftI wrapped the client with my own struct typebut what I want to add is the ability to check for a specific errorWithout the API user needs to check the error messageI mean for each API call I will first check the error and handle it"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "1461",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-27T17:57:27.325000",
                        "user": "Kellum",
                        "text": "has anyone ever tried using a `cgo` generated DLL in `MSVC`? Would that even be possible?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-27T18:00:34.879000",
                        "user": "Jorah",
                        "text": "Anyone know if there is a GNU Bison grammar for Go floating around on the internet out there? Haven't had luck finding yet and the version 1ish Go compiler's is pretty infernoy."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-27T18:00:55.647000",
                        "user": "Jorah",
                        "text": "\\\\before a potentially waste time remaking"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-27T18:01:29.409000",
                        "user": "Nazaret",
                        "text": "there isnt at least not official"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-27T18:01:34.924000",
                        "user": "Nazaret",
                        "text": "the go parser and lexer are hand written"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-27T18:01:41.407000",
                        "user": "Belle",
                        "text": "Just remembered that msvc is a compiler u can just build it with`CC=<path to msvc compiler>` env var but idk how to do this on windows"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-27T18:01:48.121000",
                        "user": "Belle",
                        "text": "@Fohlen"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-27T18:02:05.389000",
                        "user": "Olivia",
                        "text": "also what are you looking to do"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-27T18:02:13.678000",
                        "user": "Olivia",
                        "text": "cause go's parser is available in the standard library"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-27T18:02:55.034000",
                        "user": "Jorah",
                        "text": "Non official is totally fine. I have a lot of GNU Bison specific tooling I want to hook into so go/ast go/parser isn\\'t great here"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-27T18:02:56.664000",
                        "user": "Olivia",
                        "text": "`But taking in an argument as an int and casting it does not (it's ignored)`"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-03-27T18:03:05.497000",
                        "user": "Olivia",
                        "text": "yeah that's fine"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-03-27T18:03:12.930000",
                        "user": "Kellum",
                        "text": "@Laevus Dexter I will give it a try"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-03-27T18:03:13.117000",
                        "user": "Olivia",
                        "text": "just had to check if you were actually doing something bison specific"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-03-27T18:03:37.934000",
                        "user": "Olivia",
                        "text": "@Maximonee > But taking in an argument as an int and casting it does not (it's ignored)is it? did you print out the result of that expression?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-03-27T18:03:43.854000",
                        "user": "Olivia",
                        "text": "`Timeout: time.Duration(opts.Timeout)  time.Second,`"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-03-27T18:03:49.332000",
                        "user": "Kellum",
                        "text": "do you think it will build even?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-03-27T18:04:02.954000",
                        "user": "Kellum",
                        "text": "I thought there was a hell of a lot of issues with cgo and MSVC"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-03-27T18:04:08.222000",
                        "user": "Xiaolei",
                        "text": "i did it's printing the same way `5  time.Second` does (`5s`)"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-03-27T18:04:23.202000",
                        "user": "Olivia",
                        "text": "okay why do you think it's being ignored"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-03-27T18:04:51.170000",
                        "user": "Xiaolei",
                        "text": "because I have a sample URL im sending a request to that should hit the timeout. and it only does with `5  time.Second` and not the other. The other hangs indefinitely"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-03-27T18:05:05.060000",
                        "user": "Olivia",
                        "text": "well"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-03-27T18:05:12.931000",
                        "user": "Olivia",
                        "text": "the code snippets you've posted are correct"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-03-27T18:05:18.005000",
                        "user": "Olivia",
                        "text": "so you're doing something wrong somewhere else"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-03-27T18:05:41.050000",
                        "user": "Belle",
                        "text": "@Fohlen ye if msvc use a different from cygwin abi then it's oof"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-03-27T18:07:30.958000",
                        "user": "Kaiyon",
                        "text": "cgo expects gcc generally"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-03-27T18:07:41.915000",
                        "user": "Kaiyon",
                        "text": "clang is also supported"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-03-27T18:08:13.065000",
                        "user": "Xiaolei",
                        "text": "@deezy thanks  I'll take a look elsewhere but wouldn't it make sense that because replacing the int command line flag with an actual int fixes it it should be related to this? The flag is a simple `flag.IntVar`"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-03-27T18:08:17.174000",
                        "user": "Kaiyon",
                        "text": "but if you've got a dll that's been made by cgo I don't see why you couldn't link to that with msvc"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-03-27T18:08:56.421000",
                        "user": "Kaiyon",
                        "text": "@Maximonee can you show the lines related to the flag? are you remembering to parse?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-03-27T18:09:18.539000",
                        "user": "Olivia",
                        "text": "@Maximonee All I can say is check your assumptions"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-03-27T18:09:26.413000",
                        "user": "Kaiyon",
                        "text": "if you've forgotten to parse that'll give you 0 which won't time out \ud83d\ude1b"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-03-27T18:09:42.026000",
                        "user": "Olivia",
                        "text": "well they said it printed out with the 5s value"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-03-27T18:09:43.542000",
                        "user": "Olivia",
                        "text": "but yes"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-03-27T18:09:45.683000",
                        "user": "Kaiyon",
                        "text": "hmm"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-03-27T18:09:49.848000",
                        "user": "Kaiyon",
                        "text": "fair enough"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-03-27T18:09:51.148000",
                        "user": "Olivia",
                        "text": "it's entirely possible that your flag is being initialized to zero"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-03-27T18:09:53.509000",
                        "user": "Olivia",
                        "text": "and never being set"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-03-27T18:09:56.801000",
                        "user": "Olivia",
                        "text": "in the real code"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-03-27T18:10:03.357000",
                        "user": "Olivia",
                        "text": "and not the toy code they wrote for the channel"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-03-27T18:10:17.634000",
                        "user": "Xiaolei",
                        "text": "@superloach I believe I've parsed \ud83d\ude04 (https://github.com/ameenmaali/qsfuzz/blob/master/utils.go#L36)"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-03-27T18:10:39.698000",
                        "user": "Xiaolei",
                        "text": "It's very possible I'm doing something wrong I'm pretty new to Go in general..but i just cant seem to figure out why/what"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-03-27T18:11:07.304000",
                        "user": "Kaiyon",
                        "text": "are multiple flags on the same var valid? I can't recall never thought to try that"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-03-27T18:11:48.139000",
                        "user": "Olivia",
                        "text": "oh"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-03-27T18:11:55.942000",
                        "user": "Olivia",
                        "text": "duh"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-03-27T18:12:00.831000",
                        "user": "Olivia",
                        "text": "https://github.com/ameenmaali/qsfuzz/blob/master/httpUtils.go#L15"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-03-27T18:12:06.155000",
                        "user": "Olivia",
                        "text": "this is a package level variable"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-03-27T18:12:14.166000",
                        "user": "Olivia",
                        "text": "which means it's initialized at startup"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-03-27T18:12:24.936000",
                        "user": "Olivia",
                        "text": "you don't parse() until whatever function is called"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-03-27T18:12:25.867000",
                        "user": "Olivia",
                        "text": "so"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-03-27T18:12:27.499000",
                        "user": "Xiaolei",
                        "text": "\ud83d\ude2e  what is `opts`?"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-03-27T18:12:33.671000",
                        "user": "Olivia",
                        "text": "your transport"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-03-27T18:12:48.370000",
                        "user": "Kaiyon",
                        "text": "the transport is initialized before you parse"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-03-27T18:12:52.410000",
                        "user": "Olivia",
                        "text": "exactly"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-03-27T18:13:05.969000",
                        "user": "Kaiyon",
                        "text": "put the parse and the transport (in that order) into an `init()`"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-03-27T18:13:10.831000",
                        "user": "Olivia",
                        "text": "uh"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-03-27T18:13:13.997000",
                        "user": "Olivia",
                        "text": "i'd advise against init()"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-03-27T18:13:18.634000",
                        "user": "Kaiyon",
                        "text": "why's that"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-03-27T18:13:22.981000",
                        "user": "Olivia",
                        "text": "too spooky"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-03-27T18:13:35.893000",
                        "user": "Olivia",
                        "text": "just write a function that creates a Transport from your opts struct"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-03-27T18:13:40.293000",
                        "user": "Olivia",
                        "text": "call it after you parse your flags"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-03-27T18:13:43.747000",
                        "user": "Olivia",
                        "text": "easy"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-03-27T18:13:45.716000",
                        "user": "Olivia",
                        "text": "no magic"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-03-27T18:13:47.265000",
                        "user": "Olivia",
                        "text": "no globals"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-03-27T18:13:47.393000",
                        "user": "Kaiyon",
                        "text": "fair enough"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-03-27T18:13:50.048000",
                        "user": "Xiaolei",
                        "text": "ooh that's really interesting I probably would not have caught that haha  thanks I'll do that!"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-03-27T18:13:56.948000",
                        "user": "Olivia",
                        "text": "absolutely crystal clear flow control"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-03-27T18:14:09.668000",
                        "user": "Olivia",
                        "text": "I don't like things being created magically"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "37",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-02T18:08:26.041000",
                        "user": "Vin",
                        "text": "hey guys is there a time.Format() format string that returns what day of week it is in number form?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-02T18:08:28.173000",
                        "user": "Vin",
                        "text": "like"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-02T18:08:44.349000",
                        "user": "Vin",
                        "text": "monday ..0...sunday ...6"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-02T18:09:20.178000",
                        "user": "Vin",
                        "text": "relative to the week and not the week in month"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-02T18:09:31.424000",
                        "user": "Vin",
                        "text": "so that"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-02T18:10:03.533000",
                        "user": "Vin",
                        "text": "time.Format(time.Now format\") > 6"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-02T18:13:27.896000",
                        "user": "Vin",
                        "text": "understand that it is trivial to calculate but i was wondering if go had something like this already"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-02T18:14:16.178000",
                        "user": "Jamon",
                        "text": "Question any good git libs for golang?I am looking for `push pull commit,` and user management as multiple users will have access to the same directory"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-02T18:14:44.163000",
                        "user": "Jamon",
                        "text": "basically i plan on writing a tool to let a user Init a repo they clone with their own git config"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-02T18:16:14.762000",
                        "user": "Lu",
                        "text": "https://github.com/srcd/gogit"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-02T18:17:47.095000",
                        "user": "Jamon",
                        "text": "thanks"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-02T18:25:15.008000",
                        "user": "Vin",
                        "text": "@Gardod i'm blind lol that looks like it thanks \ud83d\ude42"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-02T18:25:49.957000",
                        "user": "Vin",
                        "text": "I was loking for a format string tho"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-02T18:25:58.134000",
                        "user": "Vin",
                        "text": "that would have been better but ye"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-02T18:26:22.749000",
                        "user": "Vin",
                        "text": "also what i need is weekday not Weekday().String()"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-02T18:27:46.066000",
                        "user": "Hazal",
                        "text": "yeah there is no notation for day of week. if you need an int its better to call weekday anyway instead of format and then converting"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "80",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-04T11:25:58.719000",
                        "user": "Vasyl",
                        "text": "is a way to check pressed key on gamepad in golang?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-04T11:26:35.860000",
                        "user": "Zlatko",
                        "text": "Do you need to support multiple platforms? Linux/windows/mac?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-04T11:28:55.193000",
                        "user": "Zlatko",
                        "text": "On linux for example the kernel creates a device in /dev/input/js which you can read. https://github.com/splace/joysticks does this"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-04T11:31:01.540000",
                        "user": "Vasyl",
                        "text": "@Sgt_Tailor WINDOWS ONLY"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-04T11:31:06.390000",
                        "user": "Vasyl",
                        "text": "sorry for caps"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-04T11:44:55.318000",
                        "user": "Alika",
                        "text": "@Szahid Maybe try this: https://github.com/simulatedsimian/joystick"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2291",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-25T21:37:17.313000",
                        "user": "Shazain",
                        "text": "How do you guys handle struct field comments? I've thought on two possibilities and I'm unsure of which to choose.Option A: Comment on top of each field similar to other languages the downside is that if someone else is using your package (and didn't look at the source code) most popular IDEs (and vscode) are not going to automatically print that message on top of the field (at least that's what happens on my machine).```type CoolStruct struct { // Set this value as high as you can the world needs more people with groove Groovy int}```On this case we'd lose the information on field Groovy unless someone opened the source code (which people will definitely do or do something familiar like reading the docs of the package).Option B: Do something Flutter/Dart like. You can comment on the top of each field (class methods or function parameters) using Dart/Flutter but also you can do something like this```// ChillStruct is just a struct that is very chill//// [ReallyVeryChill] if true this ChillStruct is not only chill but really// very chillalmost to the point of people thinking it has no other emotions// than the ones needed to keep its cool.type ChillStruct struct { ReallyVeryChill bool}```I'll be going to publish some packages soon and due to time constraints I'm unsure if I'll be able to properly document everything in a wiki or readme which is why I'm considering something more akin to Option B though I haven't seen it in go."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-25T21:38:19.665000",
                        "user": "Nazaret",
                        "text": "you want the former"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-25T21:38:29.228000",
                        "user": "Nazaret",
                        "text": "along with a comment above the struct that explains the struct"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-25T21:39:06.929000",
                        "user": "Shazain",
                        "text": "Yeah they are commented already I didn't commented here though"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-25T21:39:37.678000",
                        "user": "Nazaret",
                        "text": "also vscode does show field level comments"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-25T21:39:43.589000",
                        "user": "Shazain",
                        "text": "I knew it"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-25T21:39:48.414000",
                        "user": "Shazain",
                        "text": "Mine probably has something off"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-25T21:39:49.358000",
                        "user": "Nazaret",
                        "text": "None"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-25T21:40:23.666000",
                        "user": "Shazain",
                        "text": "Thanks for telling me that I'll probably recheck every PATH or things like that"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-25T21:40:30.272000",
                        "user": "Nazaret",
                        "text": "\ud83d\udc4d"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-25T21:40:37.508000",
                        "user": "Shazain",
                        "text": "Cause I remember that I used to see them"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-25T21:41:40.082000",
                        "user": "Nazaret",
                        "text": "if youre using go modules and gopls you should have them"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-25T21:41:58.585000",
                        "user": "Shazain",
                        "text": "So the default provider doesn't show them?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-25T21:42:18.891000",
                        "user": "Nazaret",
                        "text": "whats the default provider"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-25T21:42:39.088000",
                        "user": "Shazain",
                        "text": "The other thing besides gopls just forgot its name \ud83d\ude05"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-25T21:42:46.853000",
                        "user": "Nazaret",
                        "text": "havent a clue what it is :p"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-25T21:43:08.028000",
                        "user": "Shazain",
                        "text": "lol"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-25T21:43:45.379000",
                        "user": "Shazain",
                        "text": "language server just rechecked it:https://github.com/Microsoft/vscodego/wiki/GomodulessupportinVisualStudioCode"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-25T21:44:13.411000",
                        "user": "Shazain",
                        "text": "I mean"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-25T21:44:25.958000",
                        "user": "Shazain",
                        "text": "the pls is the language server the default go tools are used to feed vscode information"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-25T21:44:47.588000",
                        "user": "Nazaret",
                        "text": "vscodego uses gopls by default"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-25T21:44:55.016000",
                        "user": "Nazaret",
                        "text": "it hooks gopls into vscode as such"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-25T21:45:02.620000",
                        "user": "Nazaret",
                        "text": "(if you werent aware of how lang servers work)"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-25T21:46:05.230000",
                        "user": "Shazain",
                        "text": "Mine for some reason was false as default just set it to true now lol"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-25T21:46:48.791000",
                        "user": "Shazain",
                        "text": "But btw thanks for clarifying things up"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-25T21:47:18.472000",
                        "user": "Shazain",
                        "text": "I was about to commit the abomination of mixing language conventions because I just discovered my editor was messed up =v"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-25T21:47:36.221000",
                        "user": "Nazaret",
                        "text": ":^)"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2600",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-31T08:02:18.599000",
                        "user": "Jahleel",
                        "text": "any suggestion what I can do to add a return in this function?```func deleteSystemProperties() string { list := []string{ Solution + prod\", Solution + stag\", } for _ s := range list { client := &http.Client{} URL := https://domain/admin/drop/ + s v := url.Values{} req err := http.NewRequest(\"POST URL strings.NewReader(v.Encode())); req.SetBasicAuth(\"instanceproperties G4ez4uvw+d?5qh+V3Y9FeAGTA@rWwE\") resp err := client.Do(req) if err != nil { log.Fatal(err) } bodyText err := ioutil.ReadAll(resp.Body) r := string(bodyText) return r }}``` Goland is telling me i need a return after my for loop because if `string` i\\'m little confused what to do"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-31T08:39:10.960000",
                        "user": "Alyanna",
                        "text": "@zyxep you need to add a return afte the for loop as it says"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-31T08:39:36.728000",
                        "user": "Jahleel",
                        "text": "but i'm not exactly sure what to return since i have my return inside the loop"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-31T08:42:04.701000",
                        "user": "Alyanna",
                        "text": "Why do you have the return in the for loop"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-31T08:42:08.586000",
                        "user": "Alyanna",
                        "text": "That doesnt make any sense"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-31T08:42:31.990000",
                        "user": "Alyanna",
                        "text": "Youre only processing the very first item in the list that way"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-31T08:43:50.353000",
                        "user": "Jahleel",
                        "text": ":shrug:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-31T08:43:57.178000",
                        "user": "Jahleel",
                        "text": "no clue about that tbh"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-31T08:44:17.837000",
                        "user": "Alyanna",
                        "text": "Did you not write that code?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-31T08:44:27.677000",
                        "user": "Jahleel",
                        "text": "not completely no"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-31T08:44:42.063000",
                        "user": "Jahleel",
                        "text": "it's from the godocs for NewRequest"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-31T08:44:56.462000",
                        "user": "Alyanna",
                        "text": "Im sure they didnt put the return inside the for loop"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-31T08:45:06.721000",
                        "user": "Jahleel",
                        "text": "oh i put the code in the loop"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-31T08:45:17.385000",
                        "user": "Jahleel",
                        "text": "instead of having it twice"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-31T08:45:24.716000",
                        "user": "Alyanna",
                        "text": "Do you understand what return does"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-31T08:45:53.686000",
                        "user": "Jahleel",
                        "text": "yes more or less"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-31T08:46:09.967000",
                        "user": "Alyanna",
                        "text": "So do you see why having return in the loop doesnt make sense here"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-31T08:46:37.975000",
                        "user": "Jahleel",
                        "text": "ya"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-31T08:46:45.220000",
                        "user": "Alyanna",
                        "text": "Good lad"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-31T08:46:50.989000",
                        "user": "Alyanna",
                        "text": "Do you know what to do to fix it"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-31T08:47:46.278000",
                        "user": "Jahleel",
                        "text": "no tbh.. otherwise i wouldn't ask.i have tried to put it outside of the loop but ofc i can't access the response etc outside"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-31T08:48:15.692000",
                        "user": "Alyanna",
                        "text": "Well so theres multiple response bodies yes?"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-31T08:48:53.030000",
                        "user": "Jahleel",
                        "text": "yes for each request"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-31T08:49:58.771000",
                        "user": "Alyanna",
                        "text": "So what do you use when you have multiple of something"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-31T08:51:31.592000",
                        "user": "Jahleel",
                        "text": "well just a print ofc"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-31T08:52:46.228000",
                        "user": "Alyanna",
                        "text": "Uh"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-31T08:52:47.459000",
                        "user": "Alyanna",
                        "text": "No"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-31T08:53:00.626000",
                        "user": "Alyanna",
                        "text": "That doesnt store multiple things"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-31T08:53:14.344000",
                        "user": "Alyanna",
                        "text": "Do you even need the response bodies actually"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-31T08:55:04.150000",
                        "user": "Jahleel",
                        "text": "no it only returns http codes if it's okay or not"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-31T08:55:30.595000",
                        "user": "Alyanna",
                        "text": "And what do yoi wanna do if all are 200"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-31T08:55:49.599000",
                        "user": "Jahleel",
                        "text": "print out a message saying successfully <something>"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-31T09:02:23.560000",
                        "user": "Alyanna",
                        "text": "What if one or more is not 200 but not all"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-31T09:07:24.283000",
                        "user": "Jahleel",
                        "text": "Print another message"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-31T09:07:59.405000",
                        "user": "Alyanna",
                        "text": "So youll wanna keep track of if anything was not 200 right?"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-31T09:15:16.974000",
                        "user": "Alyanna",
                        "text": "Think you can figure that out? Dont think you need the response body for that"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1896",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T06:53:51.762000",
                        "user": "Baldiri",
                        "text": "Hi has anybody got experience with building a scratch docker image for a go rest API? I have built it but get an error when trying to run it..."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T07:01:58.152000",
                        "user": "Ramos",
                        "text": "@_diamondburned_ so it basically insures that all the modules have the init() called and I suppose bootstrapped. Then in the main call you'd simply import the all.go to make sure it's all invoked? Is that the idea?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T07:02:36.373000",
                        "user": "Samarie",
                        "text": "yeah but not sure about the all.go part"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T07:05:04.198000",
                        "user": "Josi",
                        "text": "What error @KiwiFPV ?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-30T07:05:18.649000",
                        "user": "Josi",
                        "text": "You probably didn't disable cgo"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T07:08:56.783000",
                        "user": "Baldiri",
                        "text": "It says OCI runtime create failed...container_linux.go:349 exec /binsh\\\\\": stat /bin/sh: no such file or directory"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T07:09:19.712000",
                        "user": "Yufan",
                        "text": "well you can exec things in a scratch container"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T07:09:21.973000",
                        "user": "Yufan",
                        "text": "there's no shell"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T07:09:32.006000",
                        "user": "Yufan",
                        "text": "that's the point of scratch"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T07:10:46.669000",
                        "user": "Baldiri",
                        "text": "The command unused was CGO_Enanked=0 GOOS=Linux go build a installsuffix Cgo o main"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-30T07:11:05.365000",
                        "user": "Baldiri",
                        "text": "I used..sorry typing from phone and fat fingers"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1859",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T19:23:48.900000",
                        "user": "Calyse",
                        "text": "Hi all! I\\'m reading <https://www.sohamkamani.com/blog/2017/10/18/parsingjsoningolang/> for dumping JSON into a map but I\\'m a bit lost on the following snippet ```gobirdJson := `{\"birds\":{\"pigeon\":\"likes to perch on rocks\",\"eagle\":\"bird of prey\"},\"animals\":\"none\"}`var result map[string]interface{}json.Unmarshal([]byte(birdJson) &result)// The object stored in the birds key is also stored as // a map[string]interface{} type and its type is asserted from// the interface{} typebirds := result[\"birds\"].(map[string]interface{})for key value := range birds { // Each value is an interface{} type that is type asserted as a string fmt.Println(key value.(string))}``` Specifically what the `.` operator does in `result[\"birds\"].(map[string]interface{})` and `value.(string)`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-28T19:38:00.255000",
                        "user": "Jair",
                        "text": "anyone got experience with cqrs and event sourcing? \ud83e\udd14 lets say you have an http endpoint which accepts commands serialized as json. this endpoint is used by a simple html frontend. it just creates a command based on input and sends it off.now how does the backend handle this? does it read the command push it into a queue for processing and return immediately?does it try to execute the command leaving the frontend waiting for the response?in the former you\\'d need some kind of x command failed event"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-28T19:44:36.177000",
                        "user": "Miryam",
                        "text": "There isn't really any right answer and to an extent probably depends on how long you expect commands to take. In the former case you'd need some OOB way to get the results of a command but leaving an HTTP request sitting for minutes probably isn't reasonable. Seconds? Maybe sure."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-28T19:45:31.912000",
                        "user": "Miryam",
                        "text": "There's nothing in HTTP itself that stops you from having it sit and spin but you don't control the entire path\u2014intermediate routers and clients often have timeouts in the order of tens of seconds."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-28T19:46:01.829000",
                        "user": "Samarie",
                        "text": "also are you going to use only HTML or with JS as well?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-28T19:53:11.936000",
                        "user": "Jair",
                        "text": "I expect commands to finish rather quickly in most cases. Mostly Created and Set events.> also are you going to use only HTML or with JS as well?HTML+JS."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-28T19:57:13.118000",
                        "user": "Samarie",
                        "text": "oh"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-28T19:57:30.643000",
                        "user": "Samarie",
                        "text": "if it's within seconds I'd use HTTP"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2338",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-27T04:48:52.643000",
                        "user": "Margery",
                        "text": "Can you explain why in go you need to write the keyword func before declaring a function? Why it was impossible to do without it and do it like in C? Pls ping"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-27T04:51:49.030000",
                        "user": "Olivia",
                        "text": "> keyword func\\\\"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-27T04:51:51.093000",
                        "user": "Olivia",
                        "text": "wut"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-27T04:53:06.018000",
                        "user": "Larry",
                        "text": "https://github.com/mojodojo101/c2bins so i got my first golang project in a useable state now may i ask which of the sins i commited here should be fixed first"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-27T04:53:37.398000",
                        "user": "Larry",
                        "text": "the c2server is the interesting part"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-27T04:54:27.619000",
                        "user": "Margery",
                        "text": "> wut@deezy func main() {}  like this"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-27T04:54:41.044000",
                        "user": "Margery",
                        "text": "why not main() {}"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-27T04:55:00.599000",
                        "user": "Olivia",
                        "text": "i don't follow"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-27T04:55:19.091000",
                        "user": "Olivia",
                        "text": "None"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-27T04:55:26.862000",
                        "user": "Olivia",
                        "text": "those are identical"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-27T04:57:20.989000",
                        "user": "Yitzchok",
                        "text": "their question is why do you have to write `func` to declare a function when in c you just write the prototype"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-27T04:57:40.405000",
                        "user": "Larry",
                        "text": "i ll probably move the setup stuff in my main to sth else aswell"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-27T04:57:44.708000",
                        "user": "Larry",
                        "text": "looks very ugly atm"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-27T04:57:56.742000",
                        "user": "Yitzchok",
                        "text": "and the reason is because go is designed such that you must write `func` to declare a function"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-27T04:58:11.600000",
                        "user": "Yitzchok",
                        "text": "it probably simplifies parsing by a lot"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-27T04:59:14.216000",
                        "user": "Margery",
                        "text": "thx"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-27T04:59:42.861000",
                        "user": "Larry",
                        "text": "my main question would be"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-27T04:59:55.978000",
                        "user": "Larry",
                        "text": "does it make any sense to import different usecases"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-27T04:59:57.294000",
                        "user": "Larry",
                        "text": "https://github.com/mojodojo101/c2bins/blob/master/c2server/pkg/client/cusecase/client_usecase.go"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-27T04:59:59.579000",
                        "user": "Larry",
                        "text": "here"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-27T05:00:17.257000",
                        "user": "Larry",
                        "text": "or should i rewirte this all and just directly access the repositorys"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-27T05:07:38.850000",
                        "user": "Athelia",
                        "text": "cannot refer to unexported name math.floor"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-27T05:07:44.495000",
                        "user": "Athelia",
                        "text": "undefined: math.floor"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-27T05:08:02.087000",
                        "user": "Larry",
                        "text": ".F"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-27T05:08:18.122000",
                        "user": "Larry",
                        "text": "no lowercase allowed in golang ^^"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-27T05:12:58.901000",
                        "user": "Athelia",
                        "text": "got lots to learn"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-27T05:14:26.727000",
                        "user": "Yitzchok",
                        "text": "if you haven't already i really recommend you do the tour"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-27T05:14:28.163000",
                        "user": "Jocelyn",
                        "text": "A Tour of Go <https://tour.golang.org/welcome/1>  Skippy"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-27T05:16:51.351000",
                        "user": "Jkari",
                        "text": "also worth mentioning that Go has return types after function arguments not before"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-27T05:36:06.365000",
                        "user": "Hershy",
                        "text": "Can a type implement an interface if some of the required methods take a pointer receiver?"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-27T05:37:59.243000",
                        "user": "Marwa",
                        "text": "is there a stream of someone building some small go apps"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-27T05:38:23.446000",
                        "user": "Jkari",
                        "text": "that interface q is a good one"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-27T05:38:25.113000",
                        "user": "Jkari",
                        "text": "I remember answering this"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-27T05:38:37.755000",
                        "user": "Jkari",
                        "text": "afaik it automatically dereferences but not references so you use &T{}"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-27T05:39:42.812000",
                        "user": "Jkari",
                        "text": "shown here: https://play.golang.org/p/zRA5KnIdrf"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-27T05:39:51.551000",
                        "user": "Jkari",
                        "text": "change `&Type{}` to `Type{}` and it won't compile"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2439",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T13:25:57.083000",
                        "user": "Pascale",
                        "text": "Hi all!,\\rI am struggling with a very basic snippet where I am not able to see where the problem is. I am coming from Python to Go. Does any one can spot the problem ? \\r\\rThe compiler says:\\r./main.go:29:14: too many arguments to conversion to render.JSON: render.JSON(w r articles literal)\\r./main.go:31:13: too many arguments to conversion to render.XML: render.XML(w r articles literal)\\r./main.go:33:14: too many arguments to conversion to render.JSON: render.JSON(w r articles literal)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T13:26:34.918000",
                        "user": "Pascale",
                        "text": "But the signature is this AFAIK it should be fines (JSON(w http.ResponseWriter r http.Request v interface{})"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T13:31:19.821000",
                        "user": "Hewitt",
                        "text": "Can you post in pastebin or something"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T13:31:21.315000",
                        "user": "Izna",
                        "text": "can you paste the code in chat"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T13:31:49.365000",
                        "user": "Belle",
                        "text": "Viruses"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-30T13:37:48.263000",
                        "user": "Pascale",
                        "text": "```package mainimport ( net/http\" github.com/gingonic/gin/render\" github.com/gochi/chi\" github.com/gochi/chi/middleware\")type articles struct { Name string `json:\"name xml:\"name\"`}func routes() http.Handler { r := chi.NewRouter() r.Use(middleware.URLFormat) r.Get(\"/articles/{id} listArticles) return r}func listArticles(w http.ResponseWriter r http.Request) { urlFormat _ := r.Context().Value(middleware.URLFormatCtxKey).(string) switch urlFormat { case json\": render.JSON(w r articles{\"json\"}) case xml\": render.XML(w r articles{\"xml\"}) default: render.JSON(w r articles{\"default\"}) }}func main() { r := chi.NewRouter() r.Use(middleware.Logger) r.Mount(\"/ routes()) http.ListenAndServe(\":3333 r)}```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-30T13:38:19.213000",
                        "user": "Nazaret",
                        "text": "why are you using gin render with gochi :fellas:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-30T13:38:32.700000",
                        "user": "Pascale",
                        "text": "gin?m I am not using gin"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-30T13:38:39.020000",
                        "user": "Nazaret",
                        "text": "github.com/gingonic/gin/render"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-30T13:38:39.754000",
                        "user": "Pascale",
                        "text": "oh!!"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-30T13:38:40.392000",
                        "user": "Nazaret",
                        "text": "yes you ar e"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-30T13:38:52.382000",
                        "user": "Pascale",
                        "text": "aarrgh"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-30T13:38:55.603000",
                        "user": "Pascale",
                        "text": "xDD sorry"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-30T13:38:55.679000",
                        "user": "Nazaret",
                        "text": "wrong import?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-30T13:39:16.364000",
                        "user": "Izna",
                        "text": "`https://godoc.org/github.com/gingonic/gin/render#JSON.Render`"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-30T13:39:38.636000",
                        "user": "Pascale",
                        "text": "yes you were right"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-30T13:39:47.244000",
                        "user": "Pascale",
                        "text": "apologise"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-30T13:39:55.114000",
                        "user": "Pascale",
                        "text": "thanks a lot for your time"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-30T13:40:02.400000",
                        "user": "Izna",
                        "text": "i think it would still work"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-30T13:40:14.005000",
                        "user": "Nazaret",
                        "text": "sure itl work"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-30T13:40:17.797000",
                        "user": "Pascale",
                        "text": "I don't to use gin though"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-30T13:40:18.147000",
                        "user": "Izna",
                        "text": "cuz it takes responsewriter not gin stuff"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-30T13:40:18.201000",
                        "user": "Nazaret",
                        "text": "but its now what they wanted to use"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-30T13:47:14.053000",
                        "user": "Hewitt",
                        "text": "Are they in the same package"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-30T13:51:23.545000",
                        "user": "Dhanvin",
                        "text": "the code builds... just the editor is giving me grief about it"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2287",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-25T19:31:27.968000",
                        "user": "Yared",
                        "text": "is there anyone who can help me with the issue?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-25T19:31:49.267000",
                        "user": "Yared",
                        "text": "n addr err := c.ReadFromUDP(buffer)causes the error: panic: too many concurrent operations on a single file or socket (max 1048575)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-25T19:32:11.755000",
                        "user": "Izna",
                        "text": "well"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-25T19:32:12.783000",
                        "user": "Izna",
                        "text": "does"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-25T19:32:31.028000",
                        "user": "Yared",
                        "text": "no"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-25T19:32:58.244000",
                        "user": "Izna",
                        "text": "hoenstly idk why its happening i dont see any concurrent operations"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-25T19:33:17.393000",
                        "user": "Yared",
                        "text": "\ud83d\ude26"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-25T19:33:25.169000",
                        "user": "Yared",
                        "text": "is there a documentation about the issue"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-25T19:33:38.847000",
                        "user": "Yared",
                        "text": "like concurrent ops in port"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-25T19:35:18.909000",
                        "user": "Jkari",
                        "text": "seems like you reached kernel limit or sth"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-25T19:35:19.752000",
                        "user": "Jkari",
                        "text": "ulimit"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-25T19:35:45.872000",
                        "user": "Yared",
                        "text": "what may cause it?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-25T19:36:31.836000",
                        "user": "Jkari",
                        "text": "> The limit is pretty high as the error message says. If it makes a difference for a real program you'll need to use a semaphore of some sort to restrict the number of concurrent writes."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-25T19:36:33.998000",
                        "user": "Jkari",
                        "text": "ye"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-25T19:37:37.041000",
                        "user": "Yared",
                        "text": "the funny thing is"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-25T19:38:14.633000",
                        "user": "Yared",
                        "text": "I\\'ve just started to golang and I am trying to create a basic udp server and the biggest message i send to server is hi"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-25T19:38:42.000000",
                        "user": "Izna",
                        "text": "i feel ur not showing all ur code"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-25T19:38:46.905000",
                        "user": "Izna",
                        "text": "post the whole thing"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-25T19:38:50.137000",
                        "user": "Yared",
                        "text": "package mainimport ( fmt\" net\"// os\" //\"strconv\" strings\"// time\")func main() { PORT := :1234\" s err := net.ResolveUDPAddr(\"udp4 PORT) if err != nil { fmt.Println(err) return } connection err := net.ListenUDP(\"udp4 s) if err != nil { fmt.Println(err) return } fmt.Println(\"Server Started!\") defer connection.Close() for { go handleUdpConnection(connection) }}func handleUdpConnection(c net.UDPConn) { for { buffer := make([]byte 8) n addr err := c.ReadFromUDP(buffer) if err !=nil { fmt.Println(err) fmt.Println(buffer) } fmt.Print(\">  string(buffer[0:n1])) if strings.TrimSpace(string(buffer[0:n])) == STOP { fmt.Println(\"Exiting UDP server!\") return } fmt.Println(\"address addr) data := []byte(\"la\"); _ err = c.WriteToUDP(data addr) if err != nil{ fmt.Println(err) } }}"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-25T19:39:06.085000",
                        "user": "Izna",
                        "text": "```go for { go handleUdpConnection(connection) }```"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-25T19:39:08.799000",
                        "user": "Izna",
                        "text": "theres ur problem"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-25T19:39:13.288000",
                        "user": "Jkari",
                        "text": "lmao"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-25T19:39:25.832000",
                        "user": "Jkari",
                        "text": "feels XY man"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-25T19:40:14.569000",
                        "user": "Yared",
                        "text": "https://www.linode.com/docs/development/go/developingudpandtcpclientsandserversingo/"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-25T19:40:34.340000",
                        "user": "Yared",
                        "text": "there is a code which is concurrent tcp server"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-25T19:40:45.876000",
                        "user": "Yared",
                        "text": "and it runs handleConnection in for loop"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-25T19:40:49.985000",
                        "user": "Yared",
                        "text": "i did the same in udp"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-25T19:41:04.390000",
                        "user": "Yared",
                        "text": "tcp code works also i tried"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-25T19:41:13.936000",
                        "user": "Yared",
                        "text": "why does it cause problem in udp"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-25T19:41:25.333000",
                        "user": "Izna",
                        "text": "its not the same code"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-25T19:41:39.789000",
                        "user": "Izna",
                        "text": "```go c err := l.Accept() if err != nil { fmt.Println(err) return } go handleConnection(c)```"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-25T19:41:43.441000",
                        "user": "Izna",
                        "text": "compare that to how you do it"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-25T19:41:43.982000",
                        "user": "Jkari",
                        "text": "^"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-25T19:41:49.232000",
                        "user": "Jkari",
                        "text": "Accept blocks until there's something connecting to it"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-25T19:41:57.703000",
                        "user": "Jkari",
                        "text": "`go anything()` doesn't block"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-25T19:41:58.785000",
                        "user": "Yared",
                        "text": "hmmm"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-25T19:42:01.109000",
                        "user": "Yared",
                        "text": "that makes sense"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-25T19:44:17.289000",
                        "user": "Yared",
                        "text": "may you recommend a comprehensive resource about socket programming in go"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-25T20:02:58.465000",
                        "user": "Hewitt",
                        "text": "the go docs are pretty good at explaning it all"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "70",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-04T03:37:25.371000",
                        "user": "Lathan",
                        "text": "Anyone knows how to make `json.Marshal` produce an error? I can't think of how"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-04T03:37:47.156000",
                        "user": "Harshini",
                        "text": "why would it produce an error?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-04T03:38:12.293000",
                        "user": "Harshini",
                        "text": "oh it does already"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-04T03:38:45.399000",
                        "user": "Tyasia",
                        "text": "yeah it returns an error"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-04T03:39:06.690000",
                        "user": "Lathan",
                        "text": "Yeah I\\'m not sure in what circumstances. Cause the argument given to it is clean in the sense that the type is already known at compile time"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-04T03:39:07.806000",
                        "user": "Tyasia",
                        "text": "the question is underspecified"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-04T03:39:32.572000",
                        "user": "Lathan",
                        "text": "Oh"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-04T03:39:44.376000",
                        "user": "Lathan",
                        "text": "Sorry just saw it takes an interface{}"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-04T03:39:47.670000",
                        "user": "Harshini",
                        "text": "cyclical pointer loops"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-04T03:39:54.546000",
                        "user": "Harshini",
                        "text": "invalid types"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-04T03:39:55.021000",
                        "user": "Harshini",
                        "text": "etc"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-04T03:40:21.493000",
                        "user": "Lathan",
                        "text": "Oh ok ok"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-04T03:41:09.970000",
                        "user": "Harshini",
                        "text": "``` Interface values encode as the value contained in the interface. A nil interface value encodes as the null JSON value.Channel complex and function values cannot be encoded in JSON. Attempting to encode such a value causes Marshal to return an UnsupportedTypeError.JSON cannot represent cyclic data structures and Marshal does not handle them. Passing cyclic structures to Marshal will result in an infinite recursion. ```"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-04T03:42:00.934000",
                        "user": "Lathan",
                        "text": "Oooo"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-04T03:42:23.718000",
                        "user": "Lathan",
                        "text": "Okay thanks will keep in mind @Doad"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-04T03:47:40.408000",
                        "user": "Lathan",
                        "text": "Oh"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-04T03:48:09.565000",
                        "user": "Lathan",
                        "text": "Then the error isn't returned during marshalling but instead during type checking"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-04T03:48:31.696000",
                        "user": "Tyasia",
                        "text": "well type checking is part of marhsalling"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-04T03:48:48.675000",
                        "user": "Lathan",
                        "text": "Ohhhhh"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-04T03:49:18.561000",
                        "user": "Tyasia",
                        "text": "you don't do```err := json.TypeCheck(yourThing)```"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-04T03:50:24.268000",
                        "user": "Lathan",
                        "text": "Wait I am making a wrapper over `json.Marshal` which takes in a struct and marshals it with `json.Marshal` if no error return the marshalled if there's error just return a `[]byte{}`. So does that mean the wrapper function is useless since the struct is a valid value and the error will never be returned?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-04T03:50:30.908000",
                        "user": "Lathan",
                        "text": "Sorry meaning? @deezy"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-04T03:50:49.962000",
                        "user": "Lathan",
                        "text": "In response to @Doad s definition"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-11-04T03:50:50.660000",
                        "user": "Tyasia",
                        "text": "meaning that the marshaling process intrinsically includes the type checking"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-04T03:51:05.815000",
                        "user": "Tyasia",
                        "text": "they're not distinct from each other logically"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-04T03:51:05.826000",
                        "user": "Lathan",
                        "text": "Oh okay so don't do that outside of marshalling noted"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-04T03:51:24.474000",
                        "user": "Tyasia",
                        "text": "if you have cyclical references marshalling fails"
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-11-04T03:51:32.426000",
                        "user": "Tyasia",
                        "text": "just by nature"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-11-04T03:51:50.297000",
                        "user": "Lathan",
                        "text": "```func handleMarshalling(services models.BusServices) []byte { marshalled err := json.Marshal(services) if err != nil { return make([]byte 0) } return marshalled}``` So this is useless right? `services` is just a struct with a few fields of slices"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-11-04T03:52:03.801000",
                        "user": "Tyasia",
                        "text": "well"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-11-04T03:52:13.415000",
                        "user": "Tyasia",
                        "text": "i'd say it's useless because it doesn't return the error"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-11-04T03:52:31.200000",
                        "user": "Tyasia",
                        "text": "rather than any other reason"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-11-04T03:52:42.940000",
                        "user": "Tyasia",
                        "text": "or at least"
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-11-04T03:52:50.443000",
                        "user": "Tyasia",
                        "text": "idk"
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-11-04T03:53:17.377000",
                        "user": "Tyasia",
                        "text": "the error handling is suspect"
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-11-04T03:53:20.795000",
                        "user": "Tyasia",
                        "text": "basically"
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-11-04T03:54:23.543000",
                        "user": "Lathan",
                        "text": "Lol \ud83d\ude02 The error handling for the function I posted? @deezy"
                    },
                    {
                        "message_number": "38",
                        "ts": "2019-11-04T03:54:52.687000",
                        "user": "Tyasia",
                        "text": "It just seems to ignore the error"
                    },
                    {
                        "message_number": "39",
                        "ts": "2019-11-04T03:55:09.500000",
                        "user": "Tyasia",
                        "text": "Doesn't log it or report it in any meaningful way"
                    },
                    {
                        "message_number": "40",
                        "ts": "2019-11-04T03:55:20.865000",
                        "user": "Lathan",
                        "text": "Oh okay"
                    },
                    {
                        "message_number": "41",
                        "ts": "2019-11-04T03:55:29.946000",
                        "user": "Tyasia",
                        "text": "that function wouldn't indicate in any noticable way what actually went wrong"
                    },
                    {
                        "message_number": "43",
                        "ts": "2019-11-04T03:55:41.724000",
                        "user": "Tyasia",
                        "text": "you either get a nonzero []byte or a zeroed []byte"
                    },
                    {
                        "message_number": "44",
                        "ts": "2019-11-04T03:55:56.898000",
                        "user": "Tyasia",
                        "text": "it doesn't let you know if you pass in bad input or not"
                    },
                    {
                        "message_number": "45",
                        "ts": "2019-11-04T03:56:22.533000",
                        "user": "Tyasia",
                        "text": "what if hypothetically the input provided actually legitimately evaluates to a zeroed []byte"
                    },
                    {
                        "message_number": "46",
                        "ts": "2019-11-04T03:56:33.808000",
                        "user": "Tyasia",
                        "text": "in a nonbroken scenario"
                    },
                    {
                        "message_number": "47",
                        "ts": "2019-11-04T03:56:40.507000",
                        "user": "Lathan",
                        "text": "Oh yeah didn't think about that"
                    },
                    {
                        "message_number": "48",
                        "ts": "2019-11-04T03:56:53.675000",
                        "user": "Tyasia",
                        "text": "Now it's entirely possible that you can be 100% sure that a zeroed []byte is non legiitimate"
                    },
                    {
                        "message_number": "49",
                        "ts": "2019-11-04T03:57:06.186000",
                        "user": "Tyasia",
                        "text": "That's totally possible"
                    },
                    {
                        "message_number": "50",
                        "ts": "2019-11-04T03:57:31.849000",
                        "user": "Tyasia",
                        "text": "But there\\'s a big difference between here\\'s a zero value and here\\'s a zero value and an error"
                    },
                    {
                        "message_number": "51",
                        "ts": "2019-11-04T03:58:42.587000",
                        "user": "Tyasia",
                        "text": "in all fairness i can't think of anything of the top of my head that would in a nonerror state evaluate to a []byte json representation"
                    },
                    {
                        "message_number": "52",
                        "ts": "2019-11-04T03:59:00.695000",
                        "user": "Tyasia",
                        "text": "closest you can get is an empty string array etc"
                    },
                    {
                        "message_number": "53",
                        "ts": "2019-11-04T03:59:10.946000",
                        "user": "Lathan",
                        "text": "oh yeah"
                    },
                    {
                        "message_number": "54",
                        "ts": "2019-11-04T03:59:14.785000",
                        "user": "Tyasia",
                        "text": "But it's an important thing to keep in mind"
                    },
                    {
                        "message_number": "55",
                        "ts": "2019-11-04T03:59:28.729000",
                        "user": "Lathan",
                        "text": "Okay thanks man"
                    },
                    {
                        "message_number": "56",
                        "ts": "2019-11-04T03:59:33.751000",
                        "user": "Tyasia",
                        "text": "There may very well be valid nonbroken inputs that evaluate to empty outputs."
                    },
                    {
                        "message_number": "57",
                        "ts": "2019-11-04T03:59:53.280000",
                        "user": "Tyasia",
                        "text": "So you have to distinguish between broken input and empty input"
                    },
                    {
                        "message_number": "58",
                        "ts": "2019-11-04T04:00:01.762000",
                        "user": "Lathan",
                        "text": "Btw would you know why this value is being printed? https://play.golang.org/p/RIWcI8uvTnK @deezy"
                    },
                    {
                        "message_number": "59",
                        "ts": "2019-11-04T04:00:16.985000",
                        "user": "Lathan",
                        "text": "Aight noted"
                    },
                    {
                        "message_number": "60",
                        "ts": "2019-11-04T04:00:33.409000",
                        "user": "Lathan",
                        "text": "Sorry the value is `[110 117 108 108]`"
                    },
                    {
                        "message_number": "61",
                        "ts": "2019-11-04T04:00:59.425000",
                        "user": "Tyasia",
                        "text": "https://play.golang.org/p/fF33jedkQm"
                    },
                    {
                        "message_number": "62",
                        "ts": "2019-11-04T04:01:03.309000",
                        "user": "Lathan",
                        "text": "Wait is that the value of `nil`???"
                    },
                    {
                        "message_number": "63",
                        "ts": "2019-11-04T04:01:16.326000",
                        "user": "Tyasia",
                        "text": "when you marshal a `nil` value to json it becomes `null`"
                    },
                    {
                        "message_number": "64",
                        "ts": "2019-11-04T04:01:22.836000",
                        "user": "Tyasia",
                        "text": "n u l l"
                    },
                    {
                        "message_number": "65",
                        "ts": "2019-11-04T04:01:43.473000",
                        "user": "Tyasia",
                        "text": "and you're printing the bytes from that string"
                    },
                    {
                        "message_number": "66",
                        "ts": "2019-11-04T04:01:44.907000",
                        "user": "Lathan",
                        "text": "Oh..."
                    },
                    {
                        "message_number": "67",
                        "ts": "2019-11-04T04:01:52.423000",
                        "user": "Lathan",
                        "text": "I didn't know there was such thing as null"
                    },
                    {
                        "message_number": "68",
                        "ts": "2019-11-04T04:01:58.255000",
                        "user": "Lathan",
                        "text": "I thought it was `nil` only in Go"
                    },
                    {
                        "message_number": "69",
                        "ts": "2019-11-04T04:02:00.734000",
                        "user": "Tyasia",
                        "text": "yes null is a json type"
                    },
                    {
                        "message_number": "70",
                        "ts": "2019-11-04T04:02:11.415000",
                        "user": "Lathan",
                        "text": "Oh.. okay I think I get it"
                    },
                    {
                        "message_number": "71",
                        "ts": "2019-11-04T04:02:19.983000",
                        "user": "Lathan",
                        "text": "So it's nothing to do with Go"
                    },
                    {
                        "message_number": "72",
                        "ts": "2019-11-04T04:02:26.015000",
                        "user": "Tyasia",
                        "text": "https://restfulapi.net/jsondatatypes/"
                    },
                    {
                        "message_number": "73",
                        "ts": "2019-11-04T04:02:35.826000",
                        "user": "Lathan",
                        "text": "Yep that makes sense"
                    },
                    {
                        "message_number": "74",
                        "ts": "2019-11-04T04:02:46.740000",
                        "user": "Tyasia",
                        "text": "string number boolean null object array"
                    },
                    {
                        "message_number": "75",
                        "ts": "2019-11-04T04:02:56.377000",
                        "user": "Tyasia",
                        "text": "those are the things that json can represent"
                    },
                    {
                        "message_number": "76",
                        "ts": "2019-11-04T04:03:30.842000",
                        "user": "Tyasia",
                        "text": "anything being marshalled or converted to json is being converted to one of those"
                    },
                    {
                        "message_number": "77",
                        "ts": "2019-11-04T04:06:26.993000",
                        "user": "Lathan",
                        "text": "Oh okay I see thanks @deezy"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "44",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-02T23:08:26.103000",
                        "user": "Silas",
                        "text": "is there some buffer that is not consumed but can be reset to its initial state?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-02T23:08:47.050000",
                        "user": "Jkari",
                        "text": "bytes.Buffer?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-02T23:08:52.540000",
                        "user": "Silas",
                        "text": "is consumed"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-02T23:08:59.733000",
                        "user": "Izna",
                        "text": "wdym initial state"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-02T23:09:21.876000",
                        "user": "Silas",
                        "text": "like when I write some bytes I'd like them to stay where they are after a reset"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-02T23:09:37.125000",
                        "user": "Silas",
                        "text": "while still supporting the io.Reader interface"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-02T23:09:46.692000",
                        "user": "Lu",
                        "text": "wdym stay where they are?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-02T23:10:03.875000",
                        "user": "Crispin",
                        "text": "im assuming he means back to the original buffer"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-02T23:10:05.532000",
                        "user": "Silas",
                        "text": "I want to have a reusable UDP packet buffer"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-02T23:10:09.231000",
                        "user": "Crispin",
                        "text": "before modification"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-02T23:10:28.246000",
                        "user": "Silas",
                        "text": "but the content is consumed after a read"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-02T23:10:31.428000",
                        "user": "Lu",
                        "text": "https://golang.org/pkg/bytes/#Buffer.Reset ?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-02T23:10:44.819000",
                        "user": "Izna",
                        "text": "store the initial size then re slice it ?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-02T23:10:56.286000",
                        "user": "Izna",
                        "text": "can u give us an example"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-02T23:11:00.183000",
                        "user": "Izna",
                        "text": "ur explanations are cnofusing"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-02T23:12:06.186000",
                        "user": "Nazaret",
                        "text": "use a TeeReader to write back into the original buffer : )"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-02-02T23:12:12.745000",
                        "user": "Nazaret",
                        "text": "terrible idea probably wouldnt work"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-02-02T23:13:23.096000",
                        "user": "Silas",
                        "text": "I construct a udp packet that contains specific bytes. when sending it the underlying content is kind of flushed. e.g. ```io.Copy(conn r)```. I want the flushed content to be somehow reset to its initial state where the constructed bytes are not flushed."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-02-02T23:16:19.433000",
                        "user": "Nazaret",
                        "text": "@jxsl13 bytes.Reader ?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-02-02T23:16:23.347000",
                        "user": "Nazaret",
                        "text": "it implements the io.Seeker interface with which you could reset to 0"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-02-02T23:17:42.926000",
                        "user": "Jkari",
                        "text": "I don't understand the point"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-02-02T23:18:01.178000",
                        "user": "Jkari",
                        "text": "read bytes will be there even after resetting"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-02-02T23:18:45.894000",
                        "user": "Silas",
                        "text": "the packet is empty after it has been sent. I want to reset it to a state where the bytes within the packet remain the same after a read/sending to a destination."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-02-02T23:19:12.615000",
                        "user": "Olivia",
                        "text": ":thonk:"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-02-02T23:19:20.119000",
                        "user": "Izna",
                        "text": "what is the reader type"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-02-02T23:19:20.630000",
                        "user": "Nazaret",
                        "text": "bytes.Reader"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-02-02T23:20:01.839000",
                        "user": "Silas",
                        "text": "Packet implements the Reader interface by using an embedded bytes.Buffer"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-02-02T23:20:10.861000",
                        "user": "Yitzchok",
                        "text": "so you want to send the same udp packet many times?"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-02-02T23:20:15.784000",
                        "user": "Silas",
                        "text": "yes"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-02-02T23:20:17.642000",
                        "user": "Nazaret",
                        "text": "can you change it to a bytes.Reader instead"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-02-02T23:20:39.982000",
                        "user": "Yitzchok",
                        "text": "just use `conn.WriteTo(packet)`?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-02-02T23:20:58.349000",
                        "user": "Nazaret",
                        "text": "https://golang.org/pkg/bytes/#Reader"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-02-02T23:21:13.189000",
                        "user": "Nazaret",
                        "text": "`A Reader implements the io.Reader io.ReaderAt io.WriterTo io.Seeker io.ByteScanner and io.RuneScanner interfaces by reading from a byte slice. Unlike a Buffer a Reader is readonly and supports seeking. The zero value for Reader operates like a Reader of an empty slice.`"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-02-02T23:21:23.154000",
                        "user": "Olivia",
                        "text": "yeah it does everything"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-02-02T23:21:26.102000",
                        "user": "Silas",
                        "text": "yeah reader seems to do the job"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-02-02T23:21:31.231000",
                        "user": "Nazaret",
                        "text": "good lad"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-02-02T23:21:42.122000",
                        "user": "Izna",
                        "text": "u would read until EOF then seek 0 righ"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-02-02T23:21:42.876000",
                        "user": "Izna",
                        "text": "t"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-02-02T23:21:44.781000",
                        "user": "Lu",
                        "text": "Strum and Deezy save the day yet again"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-02-02T23:21:48.294000",
                        "user": "Lu",
                        "text": "\ud83d\ude4f"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-02-02T23:22:01.615000",
                        "user": "Izna",
                        "text": "oh wait u would reset i guess"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-02-02T23:22:02.881000",
                        "user": "Nazaret",
                        "text": ":googlemuscleL: :kkk_happytourist: :googlemuscleR:"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-02-02T23:22:09.959000",
                        "user": "Nazaret",
                        "text": "seek 0 vasily"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-02-02T23:26:08.289000",
                        "user": "Jkari",
                        "text": "> yeah reader seems to do the job:StareNeutral:"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-02-02T23:26:52.270000",
                        "user": "Silas",
                        "text": "I wonder if there is something like Reader that also supports the io.Writer interface ._."
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-02-02T23:27:14.478000",
                        "user": "Jkari",
                        "text": "I wonder too"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-02-02T23:48:57.036000",
                        "user": "Nazaret",
                        "text": "https://github.com/golang/go/wiki/Modules"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "49",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-03T03:29:59.214000",
                        "user": "Amariyah",
                        "text": "```godone := make(chan struct{})done < struct{}{}```why is an empty struct being used here over for example a boolean?is it simply to save the memory that storing a boolean would otherwise take up?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-03T03:30:33.341000",
                        "user": "Olivia",
                        "text": "pretty much"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-03T03:31:04.730000",
                        "user": "Olivia",
                        "text": "struct{} is the smallest possible thing"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-03T03:36:34.802000",
                        "user": "Amariyah",
                        "text": "is this a common idea to expect to see? it is only saving 1 byte"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-03T03:37:15.344000",
                        "user": "Jkari",
                        "text": "it is a common idea"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-03T03:37:21.230000",
                        "user": "Olivia",
                        "text": "relatively common yeah"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-03T03:37:24.965000",
                        "user": "Jkari",
                        "text": "and not sure about the 1 byte part I think it has to do with more"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-03T03:38:23.016000",
                        "user": "Amariyah",
                        "text": "Could it possibly affect GC if you have multiple channels?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-03T03:41:25.034000",
                        "user": "Balaj",
                        "text": "Anyone have experience working with ble on Pi Zeros?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-03T03:44:01.316000",
                        "user": "Lu",
                        "text": "@atthesunrise it's really just to indicate that it doesn't take a value"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-03T03:45:06.106000",
                        "user": "Amariyah",
                        "text": "I can see the use of that"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-03T03:45:11.203000",
                        "user": "Amariyah",
                        "text": "thank you for pointing that out"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2431",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-25T14:08:09.989000",
                        "user": "Ameliana",
                        "text": "does cgo slow down a program down a lot?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-25T14:08:33.051000",
                        "user": "Ameliana",
                        "text": "I wrote something in go and out of curiosity rewrote it in C to see how much faster it would be"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-25T14:08:37.202000",
                        "user": "Ameliana",
                        "text": "its 7.35 times faster in C"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-25T14:08:56.842000",
                        "user": "Alyanna",
                        "text": "Theres overhead between Go and C in cgo"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-25T14:09:07.858000",
                        "user": "Ameliana",
                        "text": "I'm thinking I could try and use cgo for what I wrote in C"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-25T14:09:37.398000",
                        "user": "Alyanna",
                        "text": "whatd you write?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-25T14:09:42.756000",
                        "user": "Ameliana",
                        "text": "neural network"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-25T14:09:51.154000",
                        "user": "Ameliana",
                        "text": "its still kinda WIP cuz im trash at C"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-25T14:09:51.758000",
                        "user": "Ameliana",
                        "text": "but"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-25T14:09:58.291000",
                        "user": "Ameliana",
                        "text": "it is a lot faster"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-25T14:10:16.141000",
                        "user": "Ameliana",
                        "text": "But writing a NN in c was pain"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-25T14:10:25.944000",
                        "user": "Ameliana",
                        "text": "I really don't want to do the rest of this project in C lol"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-25T14:10:59.014000",
                        "user": "Alyanna",
                        "text": "Could be that your translation was inefficient"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-25T14:11:09.564000",
                        "user": "Alyanna",
                        "text": "Idk how good you are at go"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-25T14:11:17.939000",
                        "user": "Ameliana",
                        "text": "was literally my first project in go"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-25T14:11:21.495000",
                        "user": "Ameliana",
                        "text": "could be i suck at go i dunno"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-25T14:11:32.176000",
                        "user": "Ameliana",
                        "text": "I'm not sure how to write efficent go code tbh"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-25T14:12:55.726000",
                        "user": "Alyanna",
                        "text": "If you showed us what you have thatd be a start"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-25T14:13:14.445000",
                        "user": "Ameliana",
                        "text": "https://github.com/IanPoggers/neat/blob/master/neat.go"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-25T14:13:31.002000",
                        "user": "Ameliana",
                        "text": "right now all it can do is generate a random network and run it"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-25T14:13:56.844000",
                        "user": "Ameliana",
                        "text": "I am going to make it so they can mutate so I can use genetic algorithms to make them better at things"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-25T14:18:15.162000",
                        "user": "Graelyn",
                        "text": "cgo has a high cust in overhead because memory model of go is really differentyou only must to call c from go when you really need. Pure go code is way faster then using cgo"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-25T14:20:16.274000",
                        "user": "Ameliana",
                        "text": "rna'?"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-25T14:20:19.800000",
                        "user": "Ameliana",
                        "text": "what do you mean by that"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-25T14:20:26.263000",
                        "user": "Ameliana",
                        "text": "i dunno what that means"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-25T14:22:01.535000",
                        "user": "Graelyn",
                        "text": "> rna'?@Ian Poggers means artificial neural network. I wrote in portuguese. Sorry"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-25T14:22:34.427000",
                        "user": "Ameliana",
                        "text": "O"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-25T14:22:38.575000",
                        "user": "Ameliana",
                        "text": "I did write it in go"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-25T14:23:03.169000",
                        "user": "Ameliana",
                        "text": "then rewrote it in C out of curiosity (also as a challenge cuz C is really no ideal for writing NNs)"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-25T14:23:10.963000",
                        "user": "Ameliana",
                        "text": "and the c implementation was a lot faster"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-25T14:23:22.418000",
                        "user": "Ameliana",
                        "text": "maybe I made a lot of mistakes in my go implementation"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-25T14:23:37.767000",
                        "user": "Maram",
                        "text": "c is not ideal for anything but it is the best at everything"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-25T14:23:46.256000",
                        "user": "Maram",
                        "text": "with an appropriate budget"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-25T14:24:24.707000",
                        "user": "Ameliana",
                        "text": "I was able to pump it out pretty fast in Go"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-25T14:24:29.154000",
                        "user": "Ameliana",
                        "text": "but god C was such a pain lol"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-25T14:24:33.634000",
                        "user": "Ameliana",
                        "text": "I am very new to both languages"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-07-25T14:24:34.655000",
                        "user": "Graelyn",
                        "text": "you can acquire performance doing parallel processing"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-07-25T14:24:34.904000",
                        "user": "Graelyn",
                        "text": "> c is not ideal for anything but it is the best at everything@deezy now we have rust huehuehue"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-07-25T14:24:57.398000",
                        "user": "Ameliana",
                        "text": "Rust seems really cool"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-07-25T14:25:01.558000",
                        "user": "Ameliana",
                        "text": "I was looking over its documentation"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-07-25T14:25:09.294000",
                        "user": "Ameliana",
                        "text": "I am amazed it can be so fast while having so many features"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-07-25T14:25:20.469000",
                        "user": "Ameliana",
                        "text": "its on my list of languages to learn"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-07-25T14:26:31.219000",
                        "user": "Graelyn",
                        "text": "go is good for parallel processing. You can get near c performance by parallelizing"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-07-25T14:27:34.561000",
                        "user": "Ameliana",
                        "text": "Yeah async is super easy in go"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-07-25T14:27:41.429000",
                        "user": "Maram",
                        "text": "that's the beauty of go"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-07-25T14:27:41.629000",
                        "user": "Ameliana",
                        "text": "I have never tried async in C"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-07-25T14:27:58.014000",
                        "user": "Graelyn",
                        "text": "the only thing I cant program in go for unix is write a kernel module."
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-07-25T14:28:01.629000",
                        "user": "Maram",
                        "text": "the skill floor for an equivalently fast program is much lower in Go"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-07-25T14:29:25.851000",
                        "user": "Graelyn",
                        "text": "> I have never tried async in C@Ian Poggers pthreads are hard to get and are very error prone."
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-07-25T14:45:37.857000",
                        "user": "Layna",
                        "text": "the cmd/root.go should be `package cmd`"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-07-25T15:28:42.024000",
                        "user": "Varick",
                        "text": "ok"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2348",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-27T12:30:16.197000",
                        "user": "Georgia",
                        "text": "Why does golang think that this is an invalid command line arg?`config=\"..\\\\api_config.toml\"`Edit: using flag btw"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-27T12:31:16.250000",
                        "user": "Olivia",
                        "text": "needs more context"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-27T12:31:21.681000",
                        "user": "Olivia",
                        "text": "generally speaking"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-27T12:31:25.405000",
                        "user": "Olivia",
                        "text": "if you're getting an error"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-27T12:31:28.720000",
                        "user": "Olivia",
                        "text": "show us the error"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-27T12:31:34.269000",
                        "user": "Olivia",
                        "text": "don\\'t just say code no work"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-27T12:31:47.470000",
                        "user": "Georgia",
                        "text": "`Invalid command line arg config=..\\\\api_config.toml` I practically said the error"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-27T12:31:48.553000",
                        "user": "Georgia",
                        "text": "\u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-27T12:31:55.153000",
                        "user": "Olivia",
                        "text": "but you didn't"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-27T12:32:00.519000",
                        "user": "Olivia",
                        "text": "anyways"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-27T12:32:04.387000",
                        "user": "Olivia",
                        "text": "now show your code"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-27T12:32:11.889000",
                        "user": "Izna",
                        "text": "well its good to show it anyway so people know they dont need to ask for it"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-27T12:32:14.923000",
                        "user": "Olivia",
                        "text": "because that flag is valid"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-27T12:32:24.516000",
                        "user": "Olivia",
                        "text": "which means yo udefined it incorrectly"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-27T12:32:44.473000",
                        "user": "Crispin",
                        "text": "is there a way to parse a dynamic page?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-27T12:33:28.252000",
                        "user": "Georgia",
                        "text": "it doesn't occur at a specific point in the code as far as I can tell  it just happens after the program runs after the whole program is finished."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-27T12:33:38.881000",
                        "user": "Olivia",
                        "text": "well"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-27T12:33:41.394000",
                        "user": "Olivia",
                        "text": "the problem is with the flag"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-27T12:33:42.860000",
                        "user": "Olivia",
                        "text": "so"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-27T12:33:50.901000",
                        "user": "Olivia",
                        "text": "which section of code do you think might be relevant?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-27T12:33:55.577000",
                        "user": "Olivia",
                        "text": "maybe the part where you define your flags?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-27T12:33:59.239000",
                        "user": "Olivia",
                        "text": ":thonk:"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-27T12:34:17.947000",
                        "user": "Georgia",
                        "text": "```goconfigPath := flag.String(\"config  the file where the config is stored\") flag.Parse()```"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-27T12:35:12.911000",
                        "user": "Olivia",
                        "text": "hm"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-27T12:35:14.700000",
                        "user": "Olivia",
                        "text": "well"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-27T12:35:23.049000",
                        "user": "Olivia",
                        "text": "there's some sort of disconnect"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-27T12:35:40.274000",
                        "user": "Olivia",
                        "text": "write a minimal reproducing sample"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-27T12:35:44.934000",
                        "user": "Georgia",
                        "text": "okay"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-27T12:36:02.457000",
                        "user": "Olivia",
                        "text": "because 1) that snippet defining the flag is correct2) you're still getting that error"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-27T12:36:27.071000",
                        "user": "Olivia",
                        "text": "so either you're not running the code you think you are or you're not providing the flag you think you are or something else i'm still not awake enough to enumerate"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-27T12:37:17.188000",
                        "user": "Sabel",
                        "text": "Could it be you need to use `` instead of ``?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-27T12:37:23.567000",
                        "user": "Olivia",
                        "text": "nah"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-27T12:37:31.365000",
                        "user": "Olivia",
                        "text": "stdlib flags are explicitly only `whatever`"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-27T12:38:05.117000",
                        "user": "Sabel",
                        "text": "Ah okay. I'm used to pflag sorry"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-27T12:38:13.803000",
                        "user": "Olivia",
                        "text": "maybe the terminal is doing weird/dumb parsing/escaping stuff"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-27T12:41:55.784000",
                        "user": "Belle",
                        "text": "Afaik no need in quotes"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-27T12:42:08.917000",
                        "user": "Olivia",
                        "text": "but it shouldn't hurt"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-27T12:42:35.884000",
                        "user": "Olivia",
                        "text": "`config=\"..\\\\api_config.toml\"`"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-27T12:42:38.437000",
                        "user": "Olivia",
                        "text": "also"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-27T12:42:40.329000",
                        "user": "Olivia",
                        "text": "you're on windows"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-27T12:42:46.864000",
                        "user": "Olivia",
                        "text": "so uh"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-27T12:42:54.107000",
                        "user": "Olivia",
                        "text": "a whole bunch of stuff goes out the window there"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-27T12:43:08.934000",
                        "user": "Georgia",
                        "text": "Is it possible that because I run the program with `main api config=\"..\\\\api.config.toml\"`?"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-27T12:43:27.126000",
                        "user": "Olivia",
                        "text": "idk man"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-27T12:43:35.151000",
                        "user": "Olivia",
                        "text": "you keep providing these tiny snippets of info"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-27T12:43:36.560000",
                        "user": "Georgia",
                        "text": "I'm trying to make a reproduceable example but I can't get it to work"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-27T12:43:39.071000",
                        "user": "Olivia",
                        "text": "not enough to work with"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-27T12:43:41.477000",
                        "user": "Belle",
                        "text": "Isn't in windows a slash thingy turned in another direction"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-27T12:43:44.282000",
                        "user": "Olivia",
                        "text": "just"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-27T12:43:56.544000",
                        "user": "Olivia",
                        "text": "copy paste the ENTIRE section where you RUN the code AND the error it spits out"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-27T12:43:57.224000",
                        "user": "Olivia",
                        "text": "like"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-27T12:44:08.357000",
                        "user": "Olivia",
                        "text": "discord doesn't charge you perletter like a telegram"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-27T12:47:05.630000",
                        "user": "Georgia",
                        "text": "I think something that\\'s using the configPath variable is throwing the error. It looks like configPath is an empty string in the following example```gofunc main() { switch os.Args[1] { case api\": configPath := flag.String(\"config  the file where the config is stored\") flag.Parse() log.Print(configPath) }}```"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-27T12:47:31.063000",
                        "user": "Olivia",
                        "text": "yeah"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-27T12:47:34.087000",
                        "user": "Olivia",
                        "text": "flag doesn't do that"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-27T12:47:36.532000",
                        "user": "Olivia",
                        "text": "flag just does flags"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-27T12:48:12.685000",
                        "user": "Olivia",
                        "text": "you have to do extra legwork"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-27T12:48:13.214000",
                        "user": "Olivia",
                        "text": "https://golang.org/pkg/flag/#FlagSet.Parse"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-04-27T12:49:05.461000",
                        "user": "Olivia",
                        "text": "see how long it took for me to help you because you kept showing tiny little pieces?"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-04-27T12:49:53.685000",
                        "user": "Georgia",
                        "text": "I could not show you my entire program sorry. It's way too big."
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-04-27T12:49:58.502000",
                        "user": "Olivia",
                        "text": "i know"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-04-27T12:50:18.148000",
                        "user": "Olivia",
                        "text": "i didn't ask for that. i asked for the section where you defined your flags and the full invocation of your program with the error output"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-04-27T12:50:20.607000",
                        "user": "Olivia",
                        "text": "explicitly"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-04-27T12:50:58.683000",
                        "user": "Olivia",
                        "text": "i had a feeling this was the problem"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-04-27T12:51:00.640000",
                        "user": "Olivia",
                        "text": "but i couldn't be sure"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-04-27T12:51:08.457000",
                        "user": "Georgia",
                        "text": "I showed the entirety of my flags portion: https://ptb.discordapp.com/channels/118456055842734083/118456055842734083/704309448449064971"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-04-27T12:51:21.960000",
                        "user": "Olivia",
                        "text": "``` switch os.Args[1] { case api\": configPath := flag.String(\"config  the file where the config is stored\") flag.Parse() log.Print(configPath)```"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-04-27T12:51:23.153000",
                        "user": "Olivia",
                        "text": "but you didn't"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-04-27T12:51:26.944000",
                        "user": "Olivia",
                        "text": "you showed one line"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-04-27T12:51:30.180000",
                        "user": "Georgia",
                        "text": "That was my minimal version"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-04-27T12:51:33.377000",
                        "user": "Olivia",
                        "text": "right"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-04-27T12:51:36.294000",
                        "user": "Olivia",
                        "text": "and it's relevant"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-04-27T12:51:42.331000",
                        "user": "Olivia",
                        "text": "because it's part of your argument handling/definition"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-04-27T12:51:51.998000",
                        "user": "Georgia",
                        "text": "Yes I sent it to you as soon as I figured that bit out"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-04-27T12:51:54.396000",
                        "user": "Olivia",
                        "text": "anyways i'm not trying to yell at you or anything"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-04-27T12:51:57.068000",
                        "user": "Georgia",
                        "text": "anyway thanks \u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-04-27T12:52:02.935000",
                        "user": "Olivia",
                        "text": "just trying to make a point about"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-04-27T12:52:08.071000",
                        "user": "Olivia",
                        "text": "providing context for your questions"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-04-27T12:52:08.986000",
                        "user": "Georgia",
                        "text": ":heartrotate:"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "1856",
                "List of text": [
                    {
                        "message_number": "2",
                        "ts": "2020-01-30T17:46:05.452000",
                        "user": "Amarra",
                        "text": "```func Foo(b bool) int { if !b { return 0 } else { return 42 }}func Bar(b bool) int { if !b { return 0 } return 42}```Hey guys in such instances where `else` is redundant would you prefer `Foo` or `Bar`?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-30T17:46:16.128000",
                        "user": "Zadyn",
                        "text": "I do bar"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-30T17:46:20.177000",
                        "user": "Dreya",
                        "text": "bar"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-30T17:46:23.717000",
                        "user": "Amarra",
                        "text": "I'm leaning toward Bar but would love to hear opinions"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-30T17:46:38.058000",
                        "user": "Kalonni",
                        "text": "bar"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-30T17:46:38.788000",
                        "user": "Zadyn",
                        "text": "it feels more pure"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-30T17:46:54.683000",
                        "user": "Zlatko",
                        "text": "Bar. Happy paths and early returns :)"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-30T17:47:13.583000",
                        "user": "Nader",
                        "text": "foo if its actually that simple"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-30T17:47:16.075000",
                        "user": "Amarra",
                        "text": "a happy path is an interesting term i like that"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-30T17:47:27.105000",
                        "user": "Dreya",
                        "text": "vasily confirmed enemy of the state"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-30T17:47:39.523000",
                        "user": "Kalonni",
                        "text": "I wonder how long until the NSA is on Vasily"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-30T17:47:45.315000",
                        "user": "Zadyn",
                        "text": "gopher gulag"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-30T17:48:12.090000",
                        "user": "Zadyn",
                        "text": "jk you do you"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-30T17:48:30.472000",
                        "user": "Masud",
                        "text": "I feel like go lint actually tells you to use Bar right?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-01-30T17:48:35.770000",
                        "user": "Dreya",
                        "text": "yes"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-01-30T17:48:47.227000",
                        "user": "Amarra",
                        "text": "this is actually picked up by a linter?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-01-30T17:49:01.310000",
                        "user": "Masud",
                        "text": "yes"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-01-30T17:49:17.932000",
                        "user": "Nader",
                        "text": "u should see what rusts clippy picks up or that haskell linter"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-01-30T17:49:18.068000",
                        "user": "Zadyn",
                        "text": "does fmt do anything?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-01-30T17:49:21.394000",
                        "user": "Nader",
                        "text": "yes"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-01-30T17:49:24.342000",
                        "user": "Nader",
                        "text": "it formats ur go code"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-01-30T17:49:28.507000",
                        "user": "Zadyn",
                        "text": "not like that"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-01-30T17:49:39.899000",
                        "user": "Zadyn",
                        "text": "does fmt do anything about the previously mentioned formatting choice"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-01-30T17:50:09.638000",
                        "user": "Amarra",
                        "text": "is it not enough that they've taken away my newlines from conditionals? now i have lost my choice to add a redundant else \ud83d\ude31"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-01-30T17:50:23.886000",
                        "user": "Zadyn",
                        "text": "newlines from conditionals?"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-01-30T17:52:59.271000",
                        "user": "Amarra",
                        "text": "https://play.golang.org/p/A0mmc1VDcx7"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-01-30T17:53:20.602000",
                        "user": "Amarra",
                        "text": "minor annoyance"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-01-30T17:53:48.932000",
                        "user": "Zadyn",
                        "text": "uhh"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-01-30T17:53:49.575000",
                        "user": "Zadyn",
                        "text": "https://play.golang.org/p/O52Vl6ng8cj"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-01-30T17:55:11.365000",
                        "user": "Amarra",
                        "text": "that's pretty hard to read tho"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-01-30T17:55:31.834000",
                        "user": "Zadyn",
                        "text": "because they are misaligned?"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-01-30T17:55:56.110000",
                        "user": "Zadyn",
                        "text": "i just didn't bother to align them most likely almost all go autoindenters align those"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-01-30T17:56:36.430000",
                        "user": "Zadyn",
                        "text": "and also you don't need to put parantheses around if conditions"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-01-30T17:57:49.786000",
                        "user": "Amarra",
                        "text": "i still don't find it as clear"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-01-30T17:57:55.198000",
                        "user": "Amarra",
                        "text": "as i said minor annoyance"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-01-30T17:57:58.154000",
                        "user": "Amarra",
                        "text": "i can live with it"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-01-30T17:58:22.824000",
                        "user": "Zadyn",
                        "text": "alright everyone has their own taste"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-01-30T17:58:32.216000",
                        "user": "Kenmari",
                        "text": "@atthesunrise I hate unnecessary elses"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-01-30T17:58:54.908000",
                        "user": "Kenmari",
                        "text": "Why use if else if they're mutually exclusive conditions anyway"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-01-30T17:59:17.843000",
                        "user": "Zadyn",
                        "text": "i think you can do that like so: https://play.golang.org/p/xKMwaSArrd"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-01-30T17:59:26.702000",
                        "user": "Zadyn",
                        "text": "idk if you would find the not not annoying"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-01-30T17:59:31.813000",
                        "user": "Amarra",
                        "text": "loads of people do it in loads of languages for some reason \u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-01-30T17:59:40.420000",
                        "user": "Amarra",
                        "text": "i just wanted this channel's opinion"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-01-30T18:00:29.220000",
                        "user": "Amarra",
                        "text": "@dynam1c interesting solution but a bit hacky"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-01-30T18:01:16.232000",
                        "user": "Zadyn",
                        "text": "another idea: put a tabstop after the if so that you don't have to put in spaces to align"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-01-30T18:01:33.733000",
                        "user": "Zadyn",
                        "text": "https://play.golang.org/p/qJrV_uwVGUj"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-01-30T18:01:46.755000",
                        "user": "Amarra",
                        "text": "that's what i've been doing"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-01-30T18:01:57.581000",
                        "user": "Amarra",
                        "text": "it's the best compromise"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-01-30T18:01:58.866000",
                        "user": "Amarra",
                        "text": "imo"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-01-30T18:02:10.915000",
                        "user": "Zadyn",
                        "text": "it seems go fmt removes the tabstop tho"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-01-30T18:02:29.960000",
                        "user": "Amarra",
                        "text": "hah interesting"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-01-30T18:03:36.367000",
                        "user": "Dreya",
                        "text": "i hate all of these"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-01-30T18:03:37.597000",
                        "user": "Amarra",
                        "text": "I could always break up really long conditionals before the if statement and keep it on one line"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-01-30T18:03:48.576000",
                        "user": "Zadyn",
                        "text": "https://groups.google.com/forum/#!topic/golangnuts/DHs7FmiPzKU"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-01-30T18:03:57.178000",
                        "user": "Zadyn",
                        "text": "here is a thread where they discuss what you want"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-01-30T18:04:34.058000",
                        "user": "Zadyn",
                        "text": "@Str\u0153m i didn't write those with my taste i prefer to just break it up the line before"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-01-30T18:06:44.445000",
                        "user": "Amarra",
                        "text": "the funny thing is go format is rejecting most of their suggestions"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-01-30T18:07:03.679000",
                        "user": "Zadyn",
                        "text": "but as one guy said one suboptimal solution beats multiple optimal solutions"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-01-30T18:07:06.997000",
                        "user": "Zadyn",
                        "text": "its a standard"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-01-30T18:07:14.080000",
                        "user": "Harshini",
                        "text": "that thread is 8 years old"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-01-30T18:07:16.492000",
                        "user": "Zadyn",
                        "text": "thats why everyone uses it to know what to expect"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-01-30T18:07:32.583000",
                        "user": "Zadyn",
                        "text": "but fmt still does the same thing"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-01-30T18:07:42.100000",
                        "user": "Harshini",
                        "text": "~2 years after the release of Go"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-01-30T18:07:53.155000",
                        "user": "Amarra",
                        "text": "so they've had 8 years to implement it \ud83d\ude1b"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-01-30T18:07:55.811000",
                        "user": "Harshini",
                        "text": "a lot has happened over the past decade hah"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-01-30T18:08:23.515000",
                        "user": "Kenmari",
                        "text": "if a language's fmt rules are crap I just don't use them"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-01-30T18:08:27.111000",
                        "user": "Kenmari",
                        "text": "I'm a monster"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-01-30T18:08:41.848000",
                        "user": "Zadyn",
                        "text": "you don't fmt your code? bad practice man"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-01-30T18:08:45.189000",
                        "user": "Dreya",
                        "text": "\ud83c\udd71\ufe0fython be like 89 chars :duhhhh:"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-01-30T18:08:56.325000",
                        "user": "Zadyn",
                        "text": "lol"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-01-30T18:09:11.253000",
                        "user": "Amarra",
                        "text": "I guess from now on I'll get into the habit of ```a b c d := true false true truecheck := (a && b) || c || dif (check) { ...}```something like that"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-01-30T18:09:12.828000",
                        "user": "Kenmari",
                        "text": "yeah I'm not going to follow PEP8"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-01-30T18:09:16.142000",
                        "user": "Harshini",
                        "text": "\ud83c\udd71\ufe0fased \ud83c\udd71\ufe0fython"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-01-30T18:09:32.163000",
                        "user": "Zadyn",
                        "text": "no put the check into the if"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-01-30T18:09:37.418000",
                        "user": "Dreya",
                        "text": "pep8 is the worst"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-01-30T18:09:39.585000",
                        "user": "Zadyn",
                        "text": "and declare conditionals before"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-01-30T18:10:06.462000",
                        "user": "Amarra",
                        "text": "consider a really long oneliner conditional"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-01-30T18:10:21.839000",
                        "user": "Zadyn",
                        "text": "what im saying is make the long conditionals variables"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-01-30T18:10:27.084000",
                        "user": "Zadyn",
                        "text": "and do the logic on the if"
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-01-30T18:11:32.092000",
                        "user": "Amarra",
                        "text": "```isAB := a && bif (isAB || c || d) {}```you mean something like that?"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-01-30T18:12:42.684000",
                        "user": "Zadyn",
                        "text": "i mean:```goa := blargblargblarg_really_long_conditional_blahblahblahb := blargblargblarg_really_long_conditional_blahblahblahc := blargblargblarg_really_long_conditional_blahblahblahd := blargblargblarg_really_long_conditional_blahblahblahif (a && b) || c || d { do()}```"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-01-30T18:13:01.763000",
                        "user": "Zadyn",
                        "text": "lol"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-01-30T18:13:19.774000",
                        "user": "Zadyn",
                        "text": "and also the standard format discourages parentheses around conditionals"
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-01-30T18:13:29.782000",
                        "user": "Rhen",
                        "text": "but c and d are not lazy evaluated"
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-01-30T18:13:34.485000",
                        "user": "Amarra",
                        "text": "that's just a habit as i've been watching a javascript video sorry :p"
                    },
                    {
                        "message_number": "88",
                        "ts": "2020-01-30T18:13:46.771000",
                        "user": "Zadyn",
                        "text": "@Deleted User my life is a lie"
                    },
                    {
                        "message_number": "89",
                        "ts": "2020-01-30T18:14:43.941000",
                        "user": "Rhen",
                        "text": "c and d must be placed inside functions"
                    },
                    {
                        "message_number": "90",
                        "ts": "2020-01-30T18:14:52.125000",
                        "user": "Zadyn",
                        "text": "imo just use ```if blargblargblarg && blargblargblarg {}```"
                    },
                    {
                        "message_number": "91",
                        "ts": "2020-01-30T18:14:52.685000",
                        "user": "Rhen",
                        "text": "for the sake of lazy evaluation"
                    },
                    {
                        "message_number": "92",
                        "ts": "2020-01-30T18:15:03.232000",
                        "user": "Zadyn",
                        "text": "that would look ugly imo"
                    },
                    {
                        "message_number": "93",
                        "ts": "2020-01-30T18:16:04.048000",
                        "user": "Zadyn",
                        "text": "```goa := blargblargblarg_really_long_conditional_blahblahblah b := func() bool { return blargblargblarg_really_long_conditional_blahblahblah }c := func() bool { return blargblargblarg_really_long_conditional_blahblahblah }d := func() bool { return blargblargblarg_really_long_conditional_blahblahblah }if this that```"
                    },
                    {
                        "message_number": "94",
                        "ts": "2020-01-30T18:16:37.154000",
                        "user": "Kenmari",
                        "text": "you just made it slower"
                    },
                    {
                        "message_number": "95",
                        "ts": "2020-01-30T18:16:39.256000",
                        "user": "Kenmari",
                        "text": "0/10"
                    },
                    {
                        "message_number": "96",
                        "ts": "2020-01-30T18:16:43.720000",
                        "user": "Amarra",
                        "text": "add a goroutine"
                    },
                    {
                        "message_number": "97",
                        "ts": "2020-01-30T18:16:49.227000",
                        "user": "Kenmari",
                        "text": "bad idea"
                    },
                    {
                        "message_number": "98",
                        "ts": "2020-01-30T18:16:53.362000",
                        "user": "Zadyn",
                        "text": "its not my idea"
                    },
                    {
                        "message_number": "99",
                        "ts": "2020-01-30T18:16:53.513000",
                        "user": "Amarra",
                        "text": "add 2 goroutines"
                    },
                    {
                        "message_number": "100",
                        "ts": "2020-01-30T18:17:10.317000",
                        "user": "Kalonni",
                        "text": "add a goroutine for each value"
                    },
                    {
                        "message_number": "101",
                        "ts": "2020-01-30T18:17:14.426000",
                        "user": "Kalonni",
                        "text": "then use a channel to return those values"
                    },
                    {
                        "message_number": "102",
                        "ts": "2020-01-30T18:17:19.097000",
                        "user": "Kenmari",
                        "text": "nobad"
                    },
                    {
                        "message_number": "103",
                        "ts": "2020-01-30T18:17:20.892000",
                        "user": "Zadyn",
                        "text": "goroutine would cross the line that functions got close to"
                    },
                    {
                        "message_number": "104",
                        "ts": "2020-01-30T18:17:31.188000",
                        "user": "Amarra",
                        "text": "then wrap it in an anonymous func a a goroutine"
                    },
                    {
                        "message_number": "105",
                        "ts": "2020-01-30T18:17:31.453000",
                        "user": "Zadyn",
                        "text": "cant you just newline after the and"
                    },
                    {
                        "message_number": "106",
                        "ts": "2020-01-30T18:17:43.013000",
                        "user": "Kenmari",
                        "text": "launching a go routine isn't free"
                    },
                    {
                        "message_number": "107",
                        "ts": "2020-01-30T18:17:46.692000",
                        "user": "Kenmari",
                        "text": "smh my head"
                    },
                    {
                        "message_number": "108",
                        "ts": "2020-01-30T18:17:52.727000",
                        "user": "Zadyn",
                        "text": "shaking my head my head"
                    },
                    {
                        "message_number": "109",
                        "ts": "2020-01-30T18:17:56.155000",
                        "user": "Dreya",
                        "text": "basically free :aylmao:"
                    },
                    {
                        "message_number": "110",
                        "ts": "2020-01-30T18:17:59.896000",
                        "user": "Dreya",
                        "text": "i kid"
                    },
                    {
                        "message_number": "111",
                        "ts": "2020-01-30T18:18:03.439000",
                        "user": "Kenmari",
                        "text": "shaking my smh my smh"
                    },
                    {
                        "message_number": "113",
                        "ts": "2020-01-30T18:18:16.311000",
                        "user": "Harshini",
                        "text": "\ud83c\udd71\ufe0froroutines"
                    },
                    {
                        "message_number": "114",
                        "ts": "2020-01-30T18:18:16.710000",
                        "user": "Zadyn",
                        "text": "smh = smh my head"
                    },
                    {
                        "message_number": "115",
                        "ts": "2020-01-30T18:18:17.955000",
                        "user": "Zadyn",
                        "text": "smh"
                    },
                    {
                        "message_number": "116",
                        "ts": "2020-01-30T18:18:21.709000",
                        "user": "Zadyn",
                        "text": "runtime error"
                    },
                    {
                        "message_number": "117",
                        "ts": "2020-01-30T18:19:13.701000",
                        "user": "Zadyn",
                        "text": "just do ```goif blargblargblarg && blargblargblarg {}```"
                    },
                    {
                        "message_number": "118",
                        "ts": "2020-01-30T18:19:19.653000",
                        "user": "Zadyn",
                        "text": "imo case closed"
                    },
                    {
                        "message_number": "119",
                        "ts": "2020-01-30T18:19:25.250000",
                        "user": "Rhen",
                        "text": "\ud83c\udf60"
                    },
                    {
                        "message_number": "120",
                        "ts": "2020-01-30T18:27:35.170000",
                        "user": "Zadyn",
                        "text": "Rob Pike wants to know your location"
                    },
                    {
                        "message_number": "121",
                        "ts": "2020-01-30T18:28:25.420000",
                        "user": "Jalena",
                        "text": "https://tenor.com/view/spanishmontypythonexpectsunexpectedsassgif5284798"
                    },
                    {
                        "message_number": "122",
                        "ts": "2020-01-30T19:52:54.500000",
                        "user": "Zlatko",
                        "text": "They both aren't valid I think"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "43",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T12:34:33.864000",
                        "user": "Macia",
                        "text": "Are http requests also covered in the go tour?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T12:42:28.277000",
                        "user": "Mingliang",
                        "text": "no afaik"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-02T12:43:44.376000",
                        "user": "Briley",
                        "text": "How I can delete a defer without a return/panic?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-02T12:44:31.299000",
                        "user": "Mickel",
                        "text": "?xy"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-02T12:44:50.476000",
                        "user": "Mickel",
                        "text": "http://xyproblem.info/"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-02T12:45:53.440000",
                        "user": "Briley",
                        "text": "?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-02T12:46:18.838000",
                        "user": "Mickel",
                        "text": "what are you actually trying to do"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-02T12:46:23.826000",
                        "user": "Mickel",
                        "text": "that you need to delete a defer"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-02T12:47:07.387000",
                        "user": "Briley",
                        "text": "I have some function that need to recover a panic but in a seperate way"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-02T12:47:16.961000",
                        "user": "Mingliang",
                        "text": "why are there panics in the first place"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-02T12:47:19.054000",
                        "user": "Mingliang",
                        "text": "\ud83d\ude42"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-02T12:47:45.688000",
                        "user": "Mickel",
                        "text": "@Str\u0153m tbf panics are used to unroll things"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-02T12:47:48.735000",
                        "user": "Mickel",
                        "text": "like in encoding/json"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-02T12:47:49.115000",
                        "user": "Briley",
                        "text": "errors"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-08-02T12:47:51.207000",
                        "user": "Briley",
                        "text": "yes"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-08-02T12:47:53.466000",
                        "user": "Mingliang",
                        "text": "ill unroll you"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-08-02T12:47:56.694000",
                        "user": "Mickel",
                        "text": "pls do"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-08-02T12:48:09.326000",
                        "user": "Mingliang",
                        "text": "@minish i hope youre not using panics because you prefer exceptions"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-08-02T12:48:14.895000",
                        "user": "Mickel",
                        "text": "can you post a small sample of what you are trying to do"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-08-02T12:48:33.866000",
                        "user": "Briley",
                        "text": "``` buf := strings.Split(self.URL .com/\")[1] self.lang = strings.Split(buf /\")[0]```"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-08-02T12:48:37.710000",
                        "user": "Briley",
                        "text": "this is an example"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-08-02T12:48:48.486000",
                        "user": "Briley",
                        "text": "if in the string there are not .com/"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-08-02T12:48:52.609000",
                        "user": "Mingliang",
                        "text": "please dont name things `self` or `this`"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-08-02T12:49:05.133000",
                        "user": "Mingliang",
                        "text": "> if in the string there are not .com/\"@minish then you should do a length check before indexing"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-08-02T12:49:07.594000",
                        "user": "Mingliang",
                        "text": "then you wont get a panic"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-08-02T12:49:44.157000",
                        "user": "Briley",
                        "text": "ok ok thanks i'm a python dev i'm trying to learn go"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-08-02T12:49:54.429000",
                        "user": "Mingliang",
                        "text": "youre probably used to exceptions right?"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-08-02T12:50:03.559000",
                        "user": "Mingliang",
                        "text": "in Go things are done a bit differently"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-08-02T12:50:14.935000",
                        "user": "Mingliang",
                        "text": "exceptions are rarely used only in exceptional circumstances"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-08-02T12:50:48.335000",
                        "user": "Briley",
                        "text": "ok thanks"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-08-02T12:52:48.278000",
                        "user": "Mickel",
                        "text": "knew it was xy \ud83d\ude06"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2535",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-29T10:47:09.849000",
                        "user": "Suhar",
                        "text": "does anyone find themselves implementing serialization helpers?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-29T10:47:58.986000",
                        "user": "Varick",
                        "text": "I defined this utility function:```gofunc handle_error(error error) { if error != nil { log.Fatalln(\"Fatal error: %v\\%v error) }}```which fails with `error is not a type`. I don\\'t understand because I thought that `error` was actually a type that can be used everywhere... Any help?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-29T10:48:27.864000",
                        "user": "Suhar",
                        "text": "don't use `error` as a name it's a type"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-29T10:48:36.469000",
                        "user": "Suhar",
                        "text": "somthing like `err error`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-29T10:48:41.220000",
                        "user": "Suhar",
                        "text": "should work"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-29T10:50:20.461000",
                        "user": "Varick",
                        "text": "Nope it doesn't."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-29T10:50:26.623000",
                        "user": "Suhar",
                        "text": "ok"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-29T10:52:01.088000",
                        "user": "Varick",
                        "text": "`func handle_error(message string err error)` > error is not a type"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-29T10:52:48.928000",
                        "user": "Suhar",
                        "text": "https://play.golang.org/p/x6_Ggh6QM5k"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-29T10:52:51.882000",
                        "user": "Suhar",
                        "text": "works"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-29T10:57:25.826000",
                        "user": "Varick",
                        "text": "Got it there was a function called error() in my code \ud83d\ude04"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-29T10:57:32.783000",
                        "user": "Suhar",
                        "text": "yo"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-29T10:58:08.527000",
                        "user": "Suhar",
                        "text": "what ide you using? I'm sure golint could catch something like that"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-29T10:58:23.695000",
                        "user": "Alyanna",
                        "text": "@Roipoussiere please no underscore :robpike:"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-29T10:58:32.177000",
                        "user": "Alyanna",
                        "text": "Theres a single style guide for a reason"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-29T10:58:45.209000",
                        "user": "Torrin",
                        "text": "I'm writing a lexer in go. Should I use source as a string a slice of bytes or slice of runes?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-29T10:58:45.746000",
                        "user": "Varick",
                        "text": "Oh yes I forgot"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-29T10:58:51.674000",
                        "user": "Alyanna",
                        "text": "Also such error handling functions are an anti pattern"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-29T10:58:55.242000",
                        "user": "Suhar",
                        "text": "yeah"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-29T10:59:04.272000",
                        "user": "Shanti",
                        "text": "anyone know why I can't use proxies with dialtls? (http transport)"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-29T10:59:36.922000",
                        "user": "Suhar",
                        "text": ":robpike:"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-29T11:00:29.539000",
                        "user": "Alyanna",
                        "text": "At the least i wouldnt call it handle_error maybe failOnError or something like that"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-29T11:01:28.556000",
                        "user": "Varick",
                        "text": "> Also such error handling functions are an anti patternI didn\\'t share the whole code. This function is also used to print and log the error:```go if err != nil { fmt.Println(message) log.Fatalln(\"Fatal error: %v\\%v message err) }```"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-29T11:02:01.178000",
                        "user": "Alyanna",
                        "text": "@vnki runes are a Unicode point if thats what your input is you could use runes"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-29T11:02:08.546000",
                        "user": "Alyanna",
                        "text": "Iterating over a string yields runes iirc"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-29T11:06:25.741000",
                        "user": "Ilyan",
                        "text": "Yes"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-29T11:07:51.893000",
                        "user": "Alyanna",
                        "text": "@Karitham"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-29T11:10:31.147000",
                        "user": "Ilyan",
                        "text": "PobRikes makes me"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-29T11:10:54.524000",
                        "user": "Ilyan",
                        "text": "Forget that caption I can't bother to crop"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-29T11:15:19.331000",
                        "user": "Makeen",
                        "text": "can anyone help pls https://stackoverflow.com/questions/63150705/logrusmatefilehooknologswrittentofile"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2432",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T02:14:47.201000",
                        "user": "Abdellah",
                        "text": "Any web framework recommendations? I started with Revel but seems gingonic is pretty popular for reasons."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T02:15:35.232000",
                        "user": "Jkari",
                        "text": "gochi gang"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T02:18:23.779000",
                        "user": "Midori",
                        "text": "i thought the go way was to build your own using the standard apis"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T02:19:41.853000",
                        "user": "Jkari",
                        "text": "yeah"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T02:19:45.600000",
                        "user": "Jkari",
                        "text": "but gochi is too good"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-30T02:19:51.122000",
                        "user": "Jkari",
                        "text": "it's also pretty small and very stdlib friendly"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-30T02:20:56.000000",
                        "user": "Olivia",
                        "text": "start wit hthe standard library"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-30T02:21:19.447000",
                        "user": "Abdellah",
                        "text": "Is this a sane approach even for golang? Creating web apps without training wheels?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-30T02:21:21.211000",
                        "user": "Olivia",
                        "text": "upgrade when you find it's lacking a feature"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-30T02:21:24.696000",
                        "user": "Olivia",
                        "text": "yeah"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-30T02:21:26.229000",
                        "user": "Olivia",
                        "text": "absolutely"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-30T02:44:34.347000",
                        "user": "Averi",
                        "text": "wat"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-30T02:44:36.478000",
                        "user": "Averi",
                        "text": "```cannot use middleware.BasicAuth((func(username password string c echo.Context) (bool error) literal)) (value of type echo.MiddlewareFunc) as echo.MiddlewareFunc value in argument to app.Use```"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-30T02:44:58.752000",
                        "user": "Averi",
                        "text": "```cannot use ... type echo.MiddlewareFunc ... as echo.MiddlewareFunc value in argument to app.Use```"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-30T02:45:42.399000",
                        "user": "Olivia",
                        "text": "well"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-30T02:45:44.375000",
                        "user": "Olivia",
                        "text": "that's not what it is"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-30T02:46:04.388000",
                        "user": "Olivia",
                        "text": "`middleware.BasicAuth((func(username password string c echo.Context) (bool error) literal))`errr"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-30T02:46:06.757000",
                        "user": "Olivia",
                        "text": "hm"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-30T02:46:17.360000",
                        "user": "Olivia",
                        "text": "i don't know `echo.MiddlewareFunc`'s signature offhand"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-30T02:46:30.760000",
                        "user": "Olivia",
                        "text": "but"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-30T02:46:36.244000",
                        "user": "Olivia",
                        "text": "your summary isn\\'t what the error says"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-30T02:46:57.058000",
                        "user": "Olivia",
                        "text": "```cannot use middleware.BasicAuth((func(username password string c echo.Context) (bool error) literal))```"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-30T02:47:08.516000",
                        "user": "Olivia",
                        "text": "that\\'s the type of your actual func"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-30T02:47:38.035000",
                        "user": "Averi",
                        "text": "actually wait this tooling derped the automatic import detection"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-30T02:47:47.169000",
                        "user": "Averi",
                        "text": "that explains the obtuse error"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-30T02:47:52.678000",
                        "user": "Averi",
                        "text": "it's using the non v4 middleware with the v4 echo"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-30T02:47:53.130000",
                        "user": "Olivia",
                        "text": "in all fairness yes"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-30T02:47:54.773000",
                        "user": "Olivia",
                        "text": "that's a real"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-30T02:48:00.612000",
                        "user": "Olivia",
                        "text": "deep error"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-30T02:48:07.986000",
                        "user": "Averi",
                        "text": "fixing the derp makes this work"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-30T02:48:50.218000",
                        "user": "Olivia",
                        "text": "oof"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-30T02:48:58.218000",
                        "user": "Olivia",
                        "text": "see i don't really trust tooling to write code for me"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-30T02:50:00.556000",
                        "user": "Olivia",
                        "text": "gofmt is one thing"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2437",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-25T19:32:03.339000",
                        "user": "Dayce",
                        "text": "hey guys i decided i wanted to try my hand at rerouting `Stdin`/`Stdout` of a `exec.Command` right and it went alright with simple tests like calling a python script that asks for input and prints it out and i used a buffer just fine to write to the input and read the output to a separate file. now out of fun i tried doing this with ssh\\'ing into my VPS. for some reason though no matter what i\\'ve tried it isn\\'t reading anything I send from the buffer?```gofunc main() { cmd := exec.Command(\"ssh root@not.my.ip.here\") input := bytes.NewBuffer(nil) cmd.Stdin = input cmd.Stdout = os.Stdout _ = cmd.Start() input.Write([]byte(\"wrongpass\")) _ = cmd.Wait()}```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-25T19:34:33.942000",
                        "user": "Shritha",
                        "text": "maybe it's reading the password?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-25T19:35:12.414000",
                        "user": "Shritha",
                        "text": "also you're ignoring error AND stderr"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-25T19:35:14.196000",
                        "user": "Shritha",
                        "text": "don't do that"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-25T19:35:48.173000",
                        "user": "Dayce",
                        "text": "i know they're not erroring as i'm testing i'm not bothering with them right now. i know not to in a full app"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-25T19:35:55.498000",
                        "user": "Dayce",
                        "text": "and it's not reading it"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-25T19:37:15.624000",
                        "user": "Alyanna",
                        "text": "How do you know theyre not erroring"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-25T19:37:22.269000",
                        "user": "Dayce",
                        "text": "i've checked several times before"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-25T19:37:56.098000",
                        "user": "Dayce",
                        "text": "with this exact code and various ways of writing to the buffer"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-25T19:39:36.969000",
                        "user": "Dayce",
                        "text": "i'm just entirely stumped on why it's not receiving anything from the buffer"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-25T19:40:43.559000",
                        "user": "Maddyson",
                        "text": "you aren't checking stderr"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-25T19:41:20.534000",
                        "user": "Maddyson",
                        "text": "start and wait also return an error"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-25T19:41:28.790000",
                        "user": "Dayce",
                        "text": "yes the errors are nil"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-25T19:41:49.308000",
                        "user": "Dayce",
                        "text": "and now i added the connection to stderr this is all it returns `Pseudoterminal will not be allocated because stdin is not a terminal.`"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-25T19:42:24.023000",
                        "user": "Maddyson",
                        "text": "Might actually have to send a newline to submit the line"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-25T19:43:02.626000",
                        "user": "Dayce",
                        "text": "i believe i tried that before let's see though"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-25T19:43:30.555000",
                        "user": "Dayce",
                        "text": "i believe it's the pseudoterminal though. seems that ssh doesn't allow (any?) stdin when executed from a script"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-25T19:44:14.286000",
                        "user": "Maddyson",
                        "text": "Instead of shelling out you could use the ssh package as well"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-25T19:44:20.074000",
                        "user": "Maddyson",
                        "text": "https://godoc.org/golang.org/x/crypto/ssh"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-25T19:44:43.697000",
                        "user": "Dayce",
                        "text": "yeah i know of it but i'm doing this for a reason"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-25T19:45:16.779000",
                        "user": "Dayce",
                        "text": "i won't end up having a server half of the application"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-25T19:47:21.052000",
                        "user": "Maddyson",
                        "text": "the package does both client and server. But apart from the help we gave I don't think there is anything we can do for you"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-25T19:59:52.371000",
                        "user": "Shritha",
                        "text": "you need a flag to make ssh not prompt for a password afaik"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-25T19:59:58.178000",
                        "user": "Shritha",
                        "text": "it's required for prompting password"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-25T20:10:17.061000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "dont you need a new line"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-25T20:12:32.300000",
                        "user": "Shritha",
                        "text": "it doesn't read from the stdin itself"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-25T20:12:45.593000",
                        "user": "Shritha",
                        "text": "it uses some weird syscall so the stuff you enter doesn't show up"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "44",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-02T23:21:48.213000",
                        "user": "Jermari",
                        "text": "is there a way to speed up cgo build times? Like is it possible to tell go to cache a C build so it doesnt redo it every time"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-02T23:24:57.821000",
                        "user": "Tyasia",
                        "text": "i think cgo just calls out to gcc under the hood"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-02T23:25:23.537000",
                        "user": "Tyasia",
                        "text": "so ccache might help"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-02T23:25:36.474000",
                        "user": "Tyasia",
                        "text": "not super confident in that tho"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-02T23:29:20.340000",
                        "user": "Jermari",
                        "text": "thanks is there a way to tell go to use ccache or do I need to create a sumbolic link / change compiler path variables"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-02T23:29:33.426000",
                        "user": "Tyasia",
                        "text": "back when i was messing with ccache i just installed the package"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-02T23:29:41.029000",
                        "user": "Tyasia",
                        "text": "and it handled all the wiring under the hood for me"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-02T23:29:46.134000",
                        "user": "Tyasia",
                        "text": "but obviously refer to documentation"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-02T23:29:48.246000",
                        "user": "Tyasia",
                        "text": "to be sure"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-02T23:29:52.885000",
                        "user": "Jermari",
                        "text": "oh there is a go lib?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-02T23:30:02.127000",
                        "user": "Tyasia",
                        "text": "no i mean"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-02T23:30:09.047000",
                        "user": "Tyasia",
                        "text": "`pacman S ccache`"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-02T23:30:21.086000",
                        "user": "Jermari",
                        "text": "ah im windows so fuck me i guess :JUSTLOL:"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-02T23:30:21.170000",
                        "user": "Tyasia",
                        "text": "or whatever is appropriate for your os"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-02T23:30:25.366000",
                        "user": "Tyasia",
                        "text": "oh rip"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-02T23:30:37.538000",
                        "user": "Tyasia",
                        "text": "i mean if you use WSL ( and you should ) you'll probably be on debian"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-02T23:30:39.186000",
                        "user": "Tyasia",
                        "text": "or something"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-02T23:31:20.836000",
                        "user": "Tyasia",
                        "text": "i'd recommend debian over any of the other garbage options"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-02T23:43:15.672000",
                        "user": "Tyasia",
                        "text": "i mean given the choice between like...mint centos and debian"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-02T23:43:18.966000",
                        "user": "Tyasia",
                        "text": "debian wins every time"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "14",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-01T19:05:07.959000",
                        "user": "Averi",
                        "text": "where does go mod get versions from?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-01T19:05:31.961000",
                        "user": "Averi",
                        "text": "i.e. I look at a versioned dependency like `github.com/BurntSushi/toml v0.3.1`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-01T19:05:43.994000",
                        "user": "Averi",
                        "text": "but if I go to that gh repo I don't see anything that would indicate that it's version 0.3.1"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-01T19:06:30.372000",
                        "user": "Braxtyn",
                        "text": "It's based on Git tags"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-01T19:06:32.501000",
                        "user": "Braxtyn",
                        "text": "None"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-01T19:14:25.554000",
                        "user": "Averi",
                        "text": "i notice some versions look like this:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-01T19:14:27.426000",
                        "user": "Averi",
                        "text": "`v0.0.020181204163529d75b2dcb6bc8`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-01T19:14:33.993000",
                        "user": "Averi",
                        "text": "it looks like a timestamp of some sort and then a commit"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-01T19:15:03.436000",
                        "user": "Jkari",
                        "text": "\ufffcyeah"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-01T19:15:07.199000",
                        "user": "Jkari",
                        "text": "it's autogenerated"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-01T19:15:11.341000",
                        "user": "Ianna",
                        "text": "@deezy okay i wrote that https://git.io/Jv3AR"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-01T19:15:41.635000",
                        "user": "Averi",
                        "text": "hmm i should figure out what kind of timestamp the timestamp is then"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-01T19:16:03.078000",
                        "user": "Braxtyn",
                        "text": "https://golang.org/cmd/go/#hdrPseudo_versions"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-01T19:17:07.499000",
                        "user": "Jkari",
                        "text": "just throw the commit hash there"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-01T19:17:09.446000",
                        "user": "Jkari",
                        "text": "it'll autogen"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-02-01T19:17:58.495000",
                        "user": "Averi",
                        "text": "well i'm not using this information for the `go` command"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-02-01T19:18:28.667000",
                        "user": "Averi",
                        "text": "so knowing how to put it together myself will be needed"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-02-01T19:24:20.129000",
                        "user": "Lu",
                        "text": "The link from LethalClips has everything you need to know"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-02-01T19:30:48.242000",
                        "user": "Amariyah",
                        "text": "If I'm off base please point me in the right direction"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-02-01T19:30:51.450000",
                        "user": "Jkari",
                        "text": "I do it in init"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-02-01T19:30:56.973000",
                        "user": "Lu",
                        "text": "Yeah in init()"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-02-01T19:31:00.699000",
                        "user": "Jkari",
                        "text": "usually in main though not in a package"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-02-01T19:31:05.615000",
                        "user": "Jkari",
                        "text": "I just use rand in the package asis"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-02-01T19:31:09.882000",
                        "user": "Lu",
                        "text": "No need to call anything to generate the seed"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-02-01T19:31:49.313000",
                        "user": "Amariyah",
                        "text": "NotFoo > imports Foo > Foo uses math/rand but has no main()= inside NotFoo.main() or Foo.Init()?"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-02-01T19:32:05.980000",
                        "user": "Olivia",
                        "text": "doesn't it default to Now() anyways"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-02-01T19:32:21.858000",
                        "user": "Amariyah",
                        "text": "I could always demand Foo.NewFoo() takes a seed as a dependency or sth"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-02-01T19:32:23.726000",
                        "user": "Jkari",
                        "text": "is NotFoo package main?"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-02-01T19:32:32.559000",
                        "user": "Amariyah",
                        "text": "NotFoo is main func yeah"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-02-01T19:32:40.681000",
                        "user": "Jkari",
                        "text": "so inside NotFoo.main then"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-02-01T19:32:47.579000",
                        "user": "Jkari",
                        "text": "seed isn't required why add it?"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-02-01T19:33:22.258000",
                        "user": "Amariyah",
                        "text": "everything I'm reading says it's required I've not written the code yet"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-02-01T19:33:48.363000",
                        "user": "Olivia",
                        "text": "it's required if you're instantiating a Random struct or whatever it's called"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-02-01T19:33:59.589000",
                        "user": "Olivia",
                        "text": "if you just call the top level rand functions i think it seeds itself"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-02-01T19:34:38.354000",
                        "user": "Jkari",
                        "text": "you should call those"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-02-01T19:35:18.305000",
                        "user": "Amariyah",
                        "text": "i'm not sure what's meant by random struct"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-02-01T19:35:52.500000",
                        "user": "Jkari",
                        "text": "Source struct"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-02-01T19:35:53.550000",
                        "user": "Jkari",
                        "text": "probably"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-02-01T19:35:55.504000",
                        "user": "Jkari",
                        "text": "not sure"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-02-01T19:35:57.636000",
                        "user": "Olivia",
                        "text": "i capitalized it"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-02-01T19:36:05.884000",
                        "user": "Olivia",
                        "text": "https://golang.org/pkg/math/rand/#Rand"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-02-01T19:36:11.817000",
                        "user": "Olivia",
                        "text": "indicating it's a proper name"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-02-01T19:36:24.701000",
                        "user": "Olivia",
                        "text": "if you're creating a Rand yes you need to seed"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-02-01T19:36:38.363000",
                        "user": "Olivia",
                        "text": "if you're calling the top level functions they seed themselves"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-02-01T19:36:58.650000",
                        "user": "Olivia",
                        "text": "and at this point i've become uncomfortable with how much i've said seed"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-02-01T19:39:43.846000",
                        "user": "Amariyah",
                        "text": "> Int returns a nonnegative pseudorandom int from the default Source"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-02-01T19:40:19.418000",
                        "user": "Amariyah",
                        "text": "Means I can't use this for true randomness or?"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-02-01T19:42:04.391000",
                        "user": "Olivia",
                        "text": "well no it's a prng"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-02-01T19:42:23.754000",
                        "user": "Olivia",
                        "text": "but it's adequate for noncrypto purposes"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-02-01T19:46:04.737000",
                        "user": "Lu",
                        "text": "deezy seed"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-02-01T19:47:03.740000",
                        "user": "Olivia",
                        "text": "s e e d"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-02-01T19:48:23.434000",
                        "user": "Amariyah",
                        "text": "```import math/rand\"fmt.Println(rand.Intn(10))```this is always returning 1 and it\\'s a top level func"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-02-01T19:48:50.185000",
                        "user": "Yitzchok",
                        "text": "needs seed"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-02-01T19:49:08.559000",
                        "user": "Amariyah",
                        "text": "so when do I not need to seed? that's thrown me off"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-02-01T19:49:17.286000",
                        "user": "Jkari",
                        "text": "you always have to seed"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-02-01T19:49:29.384000",
                        "user": "Jkari",
                        "text": "but you'd preferably do that in main o rsth"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-02-01T19:54:16.241000",
                        "user": "Amariyah",
                        "text": "```Bootstrap > import Foo\"Bootstrap.Main() > rand.Seed(time.Now().UnixNano())Foo.Bar() > fmt.Println(rand.Intn(10))```Foo.Bar seems to be random. That\\'s because it\\'s using the seed from the parent pkg?"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-02-01T19:55:22.426000",
                        "user": "Lu",
                        "text": "The seed and state within the rand package is global"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-02-01T19:55:44.211000",
                        "user": "Amariyah",
                        "text": "I'm very quickly getting the feeling it's going to be best to pass randomisation as a DI"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-02-01T19:56:08.870000",
                        "user": "Lu",
                        "text": "Just seed and then use the rand funcs"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-02-01T19:56:11.848000",
                        "user": "Amariyah",
                        "text": "@Doad so I could import a helper/seed pkg which just seeds via init?"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-02-01T19:56:29.591000",
                        "user": "Lu",
                        "text": "Just seed in init in your main package"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-02-01T19:59:22.337000",
                        "user": "Amariyah",
                        "text": "say you've got an API that uses randomisation should you therefore just trust that the seed is random on the API end?"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-02-01T20:01:02.887000",
                        "user": "Lu",
                        "text": "If you make it apparent in the documentation the user should seed"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-02-01T20:01:05.481000",
                        "user": "Yitzchok",
                        "text": "i'd say if you use randomization in a nontrivial way in a nonmain package have a way for the programmer to provide a rand.Source[64]"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-02-01T20:01:08.754000",
                        "user": "Lu",
                        "text": "Otherwise seed it yourself"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-02-01T20:02:54.545000",
                        "user": "Yitzchok",
                        "text": "using a Source instead of rand's global functions also makes testing much easier since you can use whatever implementation you want"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-02-01T20:08:03.331000",
                        "user": "Amariyah",
                        "text": "`a = append(a[:i] a[j:]...)`is this a good method to cut an element from a slice or are there better ways?"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-02-01T20:09:13.770000",
                        "user": "Amariyah",
                        "text": "is `delete` faster/worse/stop overthinking?"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-02-01T20:09:29.464000",
                        "user": "Olivia",
                        "text": "i don't think delete works on slices/arrays"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-02-01T20:09:40.532000",
                        "user": "Amariyah",
                        "text": "ah true"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-02-01T20:09:46.258000",
                        "user": "Olivia",
                        "text": "i think it's exclusively map keys"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-02-01T20:09:48.056000",
                        "user": "Amariyah",
                        "text": "it's for maps"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-02-01T20:09:54.756000",
                        "user": "Olivia",
                        "text": "anyways you landed on the solution"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-02-01T20:09:58.580000",
                        "user": "Olivia",
                        "text": "that's pretty much it"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-02-01T20:10:09.977000",
                        "user": "Olivia",
                        "text": "you can hide it inside a function and forget about it"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-02-01T20:10:21.675000",
                        "user": "Olivia",
                        "text": "`func Pop(xs []Whatever index int) []Whatever`"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-02-01T20:10:46.867000",
                        "user": "Amariyah",
                        "text": "i'm used to having much more sugar"
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-02-01T20:10:50.265000",
                        "user": "Olivia",
                        "text": "yep"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-02-01T20:10:54.004000",
                        "user": "Olivia",
                        "text": "welcome to go"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-02-01T20:12:20.230000",
                        "user": "Amariyah",
                        "text": "hmm. i'm guessing there's no such thing as unset in go? just revert to nil/zero values until GC?"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-02-01T20:12:43.838000",
                        "user": "Olivia",
                        "text": "yerp"
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-02-01T20:13:02.909000",
                        "user": "Olivia",
                        "text": "just scope your stuff as narrowly as possible and let the gc handle it"
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-02-01T20:33:49.480000",
                        "user": "Amariyah",
                        "text": "what's the most efficient way to populate an empty slice over a loop?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2581",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-30T20:24:13.110000",
                        "user": "Briyah",
                        "text": "If you run `go test` in a module that has an older go directive (like `go 1.12` when you have 1.14 installed) it still only uses the older go version features to run the tests right?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-30T20:24:37.213000",
                        "user": "Alyanna",
                        "text": "no because the older version isnt installed"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-30T20:25:48.134000",
                        "user": "Briyah",
                        "text": "Hmm so https://golang.org/ref/mod says this:\"The language version determines which language features are available when compiling packages in the module. Language features present in that version will be available for use. Language features removed in earlier versions or added in later versions will not be available. The language version does not affect build tags which are determined by the Go release being used."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-30T20:26:59.248000",
                        "user": "Briyah",
                        "text": "My main question is just when is it appropriate to update the go version in a `go.mod`? Change it to the current version run tests if everything works update it?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-30T20:27:46.466000",
                        "user": "Briyah",
                        "text": "Without breaking it for someone else obviously"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-30T20:27:49.997000",
                        "user": "Anatolie",
                        "text": "I mean for now yeah definitely"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-30T20:27:59.042000",
                        "user": "Anatolie",
                        "text": "I view it as a minimum go version atm"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-30T20:28:12.770000",
                        "user": "Alyanna",
                        "text": "https://github.com/golang/go/issues/30791"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-30T20:28:55.203000",
                        "user": "Abriella",
                        "text": "bloody hell so much hate for pickle \ud83d\ude02"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-30T20:29:09.305000",
                        "user": "Alyanna",
                        "text": "fuck pickle btw"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-30T20:29:40.771000",
                        "user": "Abriella",
                        "text": "have you been personally affected by it \ud83d\ude02"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-30T20:29:46.342000",
                        "user": "Abriella",
                        "text": "this seems personal"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-30T20:31:01.798000",
                        "user": "Alyanna",
                        "text": "fail2ban socket communicates over pickle"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-30T20:31:08.884000",
                        "user": "Alyanna",
                        "text": "shit format"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-30T20:31:36.885000",
                        "user": "Shritha",
                        "text": "wtf rly?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-30T20:31:50.474000",
                        "user": "Shritha",
                        "text": "bruh"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-30T20:31:52.349000",
                        "user": "Shritha",
                        "text": "f2b is in Python"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-30T20:31:53.460000",
                        "user": "Shritha",
                        "text": ":kms:"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-30T20:32:09.851000",
                        "user": "Alyanna",
                        "text": "yea"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-30T20:32:13.273000",
                        "user": "Shritha",
                        "text": "any alt?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-30T20:32:17.988000",
                        "user": "Shritha",
                        "text": "can systemd do this"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-30T20:32:20.451000",
                        "user": "Shritha",
                        "text": "systemdband when"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-30T20:34:01.867000",
                        "user": "Shritha",
                        "text": "https://bitbucket.org/sshguard/sshguard/src"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-30T20:34:02.384000",
                        "user": "Shritha",
                        "text": "oo in C"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-30T20:34:35.909000",
                        "user": "Shritha",
                        "text": "oh wtf only 3k LOC?"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-30T20:34:43.746000",
                        "user": "Briyah",
                        "text": "@Str\u0153m Thanks for the link"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-30T20:35:07.618000",
                        "user": "Shritha",
                        "text": "holy shit this is it"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-30T20:35:31.164000",
                        "user": "Anatolie",
                        "text": "wait f2b is python wtf"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-30T20:35:46.577000",
                        "user": "Briyah",
                        "text": "My main concern was that I didn't want my packages to not take advantage of speed improvements or whatever in newer go versions but it doesn't look like having an older go version in `go.mod` does that"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-30T20:35:54.162000",
                        "user": "Shritha",
                        "text": "holy fuck monkaS this is easy as fuck to set up"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-30T20:35:54.704000",
                        "user": "Shritha",
                        "text": "damn"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-30T20:50:37.510000",
                        "user": "Donna",
                        "text": "how the heck do I figure out why a module was included when the module is broken"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-30T20:50:59.642000",
                        "user": "Donna",
                        "text": "https://i.1l.hn/k0rjY.png"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-30T20:54:18.820000",
                        "user": "Donna",
                        "text": "https://i.1l.hn/fP04p.png"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1881",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T18:10:06.841000",
                        "user": "Makynna",
                        "text": "I\\'m having a bit of an issue with string formatting using `%60v` for strings that contains ANSI escape color codes. The program thinks the i.e. 5 characters (`\\\\033[31m`) are displayed which screws up the output. Any quick solutions for my problem?Example```gostr := \\\\033[35mHello World\"fmt.Printf(\"| %60v |\\ str)fmt.Printf(\"| %60v |\\ Hello World\")```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-29T18:10:50.840000",
                        "user": "Josi",
                        "text": "Not really. You'll have to format your format string \ud83d\ude02"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-29T18:10:58.873000",
                        "user": "Makynna",
                        "text": "\ud83d\ude29"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-29T18:11:09.525000",
                        "user": "Makynna",
                        "text": "spain without s"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-29T18:11:54.121000",
                        "user": "Samarie",
                        "text": "yes working with escape codes beyond printing them is pain"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-29T18:12:04.486000",
                        "user": "Makynna",
                        "text": "Yeah...."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-29T18:12:05.119000",
                        "user": "Samarie",
                        "text": "you should either abstract the escape code out of the string or implement an escape code parser"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-29T18:20:24.612000",
                        "user": "Makynna",
                        "text": "What does `abstract the escape code` mean?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-29T18:22:29.014000",
                        "user": "Samarie",
                        "text": "write libraries that can grab the string from the escape code somehow"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-29T18:22:48.019000",
                        "user": "Samarie",
                        "text": "like `esc.Printf(\"| %60v |\\ esc.Blue(\"Hello World\"))`"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-29T18:23:25.937000",
                        "user": "Samarie",
                        "text": "```gotype Segment struct { String string Escape string}func Blue() Segment { return Segment{\"Hello World \\\\033jdqlfdkfsdfsdf\"}}func Printf(fmt string v ...Segment)```"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-29T18:43:25.310000",
                        "user": "Ilyana",
                        "text": "@_diamondburned_ I'll endure the shame of public humiliation and post on reddit \ud83d\ude05 https://www.reddit.com/r/golang/comments/j25di1/pythongo_integration_complex_structs_cgo_ctypes/. Thanks for the help!"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-29T18:50:20.125000",
                        "user": "Amariyanna",
                        "text": "```Error running \\'go build Himari\\': Cannot run program C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\___1go_build_Himari.exe (in directory D:\\\\GoLand\\\\Himari\"): CreateProcess error=216 This version of %1 is not compatible with the version of Windows you\\'re running. Check your computer\\'s system information and then contact the software publisher```"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-29T18:53:46.432000",
                        "user": "Samarie",
                        "text": ":AstolfoThonk:"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2455",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T21:59:09.801000",
                        "user": "Yared",
                        "text": "Hi @everyone"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T21:59:36.448000",
                        "user": "Yared",
                        "text": "how can i convert net.UDPAddress to String?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T22:00:07.143000",
                        "user": "Braxtyn",
                        "text": "https://golang.org/pkg/net/#UDPAddr.String"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T22:00:20.333000",
                        "user": "Braxtyn",
                        "text": "The method has a very predictable name \ud83d\ude42"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T22:00:44.105000",
                        "user": "Yared",
                        "text": "thanks man \ud83d\ude42"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2346",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-27T10:31:17.090000",
                        "user": "Georgia",
                        "text": "Why does this work:```govar f os.Filef _ = os.Open(\"\")io.MultiWriter(f os.Stdout)```But this doesn\\'t?```govar writers []os.Filewriters _= getWriters()io.MultiWriter(writers...)```The second gives the error `Cannot use \\'writers\\ (type []os.File) as type []Writer` on the line `io.MultiWriter(writers...)`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-27T10:33:53.382000",
                        "user": "Georgia",
                        "text": "The first one seems to imply that os.File implements io.Writer but in the second it doesn't?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-27T10:38:34.027000",
                        "user": "Georgia",
                        "text": "Fixed this by returning a []io.Writer from getWriters()"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-27T10:49:01.802000",
                        "user": "Nazaret",
                        "text": "a slice of interfaces is different to a slice of pointers/structs"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-27T10:49:06.622000",
                        "user": "Nazaret",
                        "text": "the memory layout is very different"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-27T10:49:14.301000",
                        "user": "Nazaret",
                        "text": "and would involve a copy"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-27T10:49:23.660000",
                        "user": "Nazaret",
                        "text": "so instead of implicit copy youve to make an explicit copy"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-27T10:50:12.063000",
                        "user": "Jianjun",
                        "text": "I'm looking at Mat Ryers talk about how he writes HTTP services.There is this part ```gotype server struct { db sql.DB router mux.Router}```And then he writes:Handlers are methods on the server which gives them access to the dependencies via s.How on earth I can create a method for the server if they are in different package (handlers)"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-27T10:51:00.543000",
                        "user": "Nazaret",
                        "text": "import the handlers into the file where you create the method(s)"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-27T10:54:12.128000",
                        "user": "Jianjun",
                        "text": "Hmm so basically the server struct should be in the same file as Handlers?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-27T10:54:16.643000",
                        "user": "Nazaret",
                        "text": "no"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-27T10:54:31.916000",
                        "user": "Jianjun",
                        "text": "same package?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-27T10:55:12.235000",
                        "user": "Nazaret",
                        "text": "no"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-27T10:55:23.470000",
                        "user": "Nazaret",
                        "text": "well"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-27T10:55:26.969000",
                        "user": "Nazaret",
                        "text": "tbh idk how mat does it"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-27T10:55:32.425000",
                        "user": "Nazaret",
                        "text": "so i may be contradicting him"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-27T10:56:23.993000",
                        "user": "Jianjun",
                        "text": "```gopackage handlersfunc (s Server) handleSomething() http.HandlerFunc { return func (rw http.ResponseWriter r http.Request) { // Do something }}``````gopackage mainimport ( database/sql\" github.com/gorilla/mux\")type Server struct { db sql.DB router mux.Router}```"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-27T10:57:07.060000",
                        "user": "Jianjun",
                        "text": "Above doesn't work"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-27T10:59:12.026000",
                        "user": "Antwaun",
                        "text": "struct methods must be in same package"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-27T11:04:43.843000",
                        "user": "Jianjun",
                        "text": "Thanks"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "1865",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-30T23:27:21.051000",
                        "user": "Miloud",
                        "text": "What's the difference between adding functions after main() and before main()?both seem to work just fine"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-30T23:27:55.433000",
                        "user": "Aalaysia",
                        "text": "ones are before main others are after \u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-30T23:28:03.729000",
                        "user": "Aalaysia",
                        "text": "preferences.."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-30T23:29:17.386000",
                        "user": "Miloud",
                        "text": "ones?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-30T23:29:46.803000",
                        "user": "Aalaysia",
                        "text": "me no inglish properly"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-30T23:30:02.279000",
                        "user": "Novalyn",
                        "text": "Technically there\u2019s no difference"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-30T23:30:29.138000",
                        "user": "Novalyn",
                        "text": "Depends on your style guide I suppose"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-30T23:31:06.845000",
                        "user": "Miloud",
                        "text": "oh"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-30T23:41:49.470000",
                        "user": "Teodulo",
                        "text": "Once i read that its better to declare function in the order of their call. Like its easier to read code this way. And main() calls first as i know \ud83e\udd37\\u200d\u2642\ufe0f"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-30T23:42:43.115000",
                        "user": "Aalaysia",
                        "text": "I believe I've seen alphabetic order around too"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-30T23:43:51.175000",
                        "user": "Aalaysia",
                        "text": "yeah true"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-30T23:46:43.149000",
                        "user": "Miloud",
                        "text": "Updatedhttps://github.com/golang/go/issues/36887"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "48",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-03T01:37:55.475000",
                        "user": "Miking",
                        "text": "How would I change the png compression level?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-03T01:45:45.178000",
                        "user": "Ameia",
                        "text": "In the other words v will be just header to already allocated string it won't copy string itself"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-03T01:50:39.889000",
                        "user": "Jermari",
                        "text": "ah cheers"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-03T02:10:17.749000",
                        "user": "Ameia",
                        "text": "@Lachee oh I forgot to say it's optimization option which hurts performance so after debugging is better to set it as `O2` which improves performance compared to default one"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-03T03:09:06.346000",
                        "user": "Lamnouar",
                        "text": "So... to get around one of my issues in sshcode (where windows sends a `literal` path (`./~/whatever`\\\\\\\\`'~'/whatever` basically) instead of a relative path that can be resolved (`~/whatever`),Would it be possible to set a function to resolve this? something like ```goif runtime.GOOS == windows { //fix the pathing crap} else { //use default}```Would it work? my main issue is how do i set these globally in the program because how this program declares statements is semi confusing for me (i have issues following how it can send a declared string var to another function despite everything fucking breaking when i try and do that)"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "1467",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-27T21:17:23.242000",
                        "user": "Crispin",
                        "text": "how can i remove the space"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-27T21:17:41.580000",
                        "user": "Crispin",
                        "text": "before"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-27T21:17:51.381000",
                        "user": "Crispin",
                        "text": "Trim TrimSpace TrimLeft doesn't remove it"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-27T21:19:33.706000",
                        "user": "Crispin",
                        "text": "i used Fields at the end"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-27T21:19:52.362000",
                        "user": "Crispin",
                        "text": "idk i can't even copy & paste the space somewhere"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-27T21:19:52.648000",
                        "user": "Crispin",
                        "text": "so"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-27T21:21:01.784000",
                        "user": "Jkari",
                        "text": "dump bytes"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-27T21:21:08.723000",
                        "user": "Jkari",
                        "text": "wait"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-27T21:21:15.457000",
                        "user": "Jkari",
                        "text": "are the braces part of the string?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-27T21:21:19.686000",
                        "user": "Crispin",
                        "text": "no"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-27T21:21:21.070000",
                        "user": "Jkari",
                        "text": "just do a ReplaceAll if you want no spaces"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-03-27T21:21:22.586000",
                        "user": "Jkari",
                        "text": "oh dunno then"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-03-27T21:21:52.237000",
                        "user": "Crispin",
                        "text": "[4086350506018140 true]"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-03-27T21:22:00.215000",
                        "user": "Crispin",
                        "text": "i can't copy & paste the weird space"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-03-27T21:23:42.122000",
                        "user": "Crispin",
                        "text": "id := strings.TrimLeft(user[0] )"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-03-27T21:23:49.128000",
                        "user": "Crispin",
                        "text": "None"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-03-27T21:23:53.215000",
                        "user": "Crispin",
                        "text": "always the same weird space"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-03-27T21:24:02.350000",
                        "user": "Crispin",
                        "text": "None"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-03-27T21:24:06.997000",
                        "user": "Crispin",
                        "text": "omg im going crazy"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-03-27T21:24:10.519000",
                        "user": "Nazaret",
                        "text": "give a repro on play.golang.org"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-03-27T21:24:46.791000",
                        "user": "Crispin",
                        "text": "i can't"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-03-27T21:24:56.119000",
                        "user": "Crispin",
                        "text": "it's reading from a txt file"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-03-27T21:25:03.091000",
                        "user": "Crispin",
                        "text": "and the space seems to happen sometimes"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-03-27T21:25:03.305000",
                        "user": "Jkari",
                        "text": "upload the file"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-03-27T21:25:05.699000",
                        "user": "Nazaret",
                        "text": "put the text in a variable"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-03-27T21:25:14.564000",
                        "user": "Jkari",
                        "text": "dump raw bytes out"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-03-27T21:25:18.416000",
                        "user": "Nazaret",
                        "text": "you can make a repro on play.golang.org"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-03-27T21:25:22.898000",
                        "user": "Jkari",
                        "text": "as 0x??"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-03-27T21:25:27.196000",
                        "user": "Jkari",
                        "text": "then do []byte{}"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-03-27T21:25:39.218000",
                        "user": "Jkari",
                        "text": "@[object Object] ig that owrks yeah"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-03-27T21:25:41.370000",
                        "user": "Jkari",
                        "text": "idk what your code does"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-03-27T21:25:45.733000",
                        "user": "Jkari",
                        "text": "but that looks like itll work"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-03-27T21:30:16.832000",
                        "user": "Jkari",
                        "text": "you can unlock early/use atomic"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-03-27T21:34:41.518000",
                        "user": "Hasna",
                        "text": "None"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-03-27T21:34:58.093000",
                        "user": "Jkari",
                        "text": "slices can be nil"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-03-27T21:36:08.779000",
                        "user": "Hasna",
                        "text": "how am i suppose to pass in the go struct?"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-03-27T21:37:28.767000",
                        "user": "Hasna",
                        "text": "trying to generate a loader then generate json schema from the loader"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-03-27T21:38:02.380000",
                        "user": "Hasna",
                        "text": "https://pkg.go.dev/github.com/xeipuuv/gojsonschema?tab=doc#NewGoLoader"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-03-27T21:44:26.957000",
                        "user": "Braxtyn",
                        "text": "It looks like you're printing a slice in your original example no?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "10",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-01T15:54:24.997000",
                        "user": "Keslee",
                        "text": "Somebody has got an idea I can realize using Go MongoDB and Vue?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-01T15:56:40.397000",
                        "user": "Masud",
                        "text": "chat"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-01T15:57:05.341000",
                        "user": "Masud",
                        "text": "A chat where you get randomly assigned to a pokemon from the pokedex and you have to pretend to be it"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-01T15:57:37.477000",
                        "user": "Anaelle",
                        "text": "\ud83d\udc40"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-01T15:59:43.863000",
                        "user": "Kataleia",
                        "text": "I am confused by the mates question"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2613",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-31T17:49:53.256000",
                        "user": "Kairan",
                        "text": "how do I return first n elements of a slice ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-31T17:50:40.446000",
                        "user": "Shritha",
                        "text": "`return slice[:n]`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-31T17:50:42.883000",
                        "user": "Shritha",
                        "text": "don't forget len check"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-31T17:50:44.418000",
                        "user": "Maram",
                        "text": "https://tour.golang.org/moretypes/7"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-31T17:50:49.692000",
                        "user": "Maram",
                        "text": "but that probably isn't your actual question"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-31T17:51:02.698000",
                        "user": "Maram",
                        "text": "i\\'m guessing it\\'s i\\'m trying to return parts of a slice and i\\'m getting an error"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-31T17:51:30.199000",
                        "user": "Kairan",
                        "text": "nah I just didn't know how to do it and figured just asking would be faster than spending a few minutes googling"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-31T17:51:38.749000",
                        "user": "Maram",
                        "text": "the go tour is very good"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-31T17:51:45.746000",
                        "user": "Maram",
                        "text": "strongly recommend it"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-31T17:53:13.353000",
                        "user": "Shritha",
                        "text": "if you can't even spend a few minutes googling then i regret answering your question"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-31T17:53:38.419000",
                        "user": "Maram",
                        "text": "yea"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-31T17:54:08.288000",
                        "user": "Maram",
                        "text": "we don't mind answering questions but try not to be in the habit of asking stuff that's like first paragraph of the tutorial"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-31T17:54:52.779000",
                        "user": "Kairan",
                        "text": "this is not babies first programming I am fully capable of googling stuff I just correctly figured this would be quicker"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-31T17:55:02.486000",
                        "user": "Maram",
                        "text": "you were right"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-31T17:55:31.372000",
                        "user": "Maram",
                        "text": "and the people who answer questions remember who do their research before asking stuff"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-31T17:55:33.289000",
                        "user": "Maram",
                        "text": "\ud83d\ude43"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-31T18:00:39.709000",
                        "user": "Kairan",
                        "text": "look I'm sorry but get off my back"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-31T18:11:55.525000",
                        "user": "Xabin",
                        "text": "yeah it is"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "97",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-05T11:40:50.212000",
                        "user": "Giyanni",
                        "text": "hi"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-05T11:41:43.264000",
                        "user": "Giyanni",
                        "text": "theres an project that im working on for school and i was just finishing the last segment when it wouldnt run anymore and gives me this error: local import ../types in nonlocal package"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-05T11:42:06.647000",
                        "user": "Giyanni",
                        "text": "it worked before"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-05T11:42:21.045000",
                        "user": "Giyanni",
                        "text": "didnt change any file names/location"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-05T11:49:08.129000",
                        "user": "Anshika",
                        "text": "```type Foobar struct { Name string `json:\"name\"` Description string `json:\"\"`}```The `json:\"\"` means that this field is omitted when marshaled to JSON?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-05T11:50:42.749000",
                        "user": "Zlatko",
                        "text": "The behaviour is described here: https://golang.org/pkg/encoding/json/#Marshal"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2320",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-21T21:13:18.345000",
                        "user": "Maxemiliano",
                        "text": "I'm trying to test some async funtionality but my `go test` is hanging.. I have some code being run in an async task:```resp := &Response{}b.RunAsyncTask(... func(ctx){ resp.Value err := d.getPlaces()})return resp b.Wait(ctx)````Wait` eventually calls the following:```func (f Future) Wait(ctx) error { select { case f.err = <f.ch: f.done = true case <ctx.Done(): f.err = ctx.Err() f.done = true } return f.err}```if i `fmt.Print` inside of `RunAsyncTask` nothing prints and therefore the call to `getPlaces` is never executed and `resp` remains `nil`... i'm trying to stop the test from hanging while also fixing the issue where `gomocks` properly sets the `getPlaces` response to `resp`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-21T21:16:09.851000",
                        "user": "Alyanna",
                        "text": "Does the code work outside of tests"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-21T21:16:14.231000",
                        "user": "Maxemiliano",
                        "text": "yeah"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-21T21:17:17.215000",
                        "user": "Maxemiliano",
                        "text": "i tried adding a `WaitGroup` to the test and having the API call inside of `getPlaces` `.Do(func(...) { wg.Done() })` with no luck. not sure if it's because getPlaces gets called once earlier as well though"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-21T21:29:39.967000",
                        "user": "Jayshon",
                        "text": "string type is weird it's not exactly a rune slice but it can use slice syntax like s[:5]"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-21T21:30:54.179000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "i think its basically a byte slice"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-21T21:31:07.032000",
                        "user": "Nu\u00e3\u2018O",
                        "text": "and it can be converted to a rune slice"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-21T21:34:25.395000",
                        "user": "Jayshon",
                        "text": "```gos := abc\"fmt.Printf(\"%T s[:1]) // string```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-21T21:35:00.291000",
                        "user": "Jayshon",
                        "text": "\ud83e\udd28"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-21T21:36:24.196000",
                        "user": "Jayshon",
                        "text": "is string an alias type of byte slice?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-21T21:36:38.086000",
                        "user": "Layna",
                        "text": "no"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-21T21:36:42.573000",
                        "user": "Gwendolen",
                        "text": "not quite"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-21T21:36:50.884000",
                        "user": "Gwendolen",
                        "text": "it just behaves similarly"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-21T21:36:59.147000",
                        "user": "Layna",
                        "text": "string have black magic"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-21T21:37:06.680000",
                        "user": "Layna",
                        "text": "<https://blog.golang.org/strings>"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-21T21:39:36.102000",
                        "user": "Jayshon",
                        "text": "it's similar yet different from other types that I find myself having to reexperiment in playground or reread the article"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-21T23:03:12.955000",
                        "user": "Liliana",
                        "text": "+rep"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-21T23:13:06.893000",
                        "user": "Maram",
                        "text": "i mean dependency injection in Go just means"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-21T23:13:47.569000",
                        "user": "Maram",
                        "text": "```gofunc StartApp(storage StorageInterface) {}```instead of ```gofunc StartApp(db db.DB)```"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-21T23:14:43.621000",
                        "user": "Uyi",
                        "text": "\ud83d\ude04"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-21T23:15:41.116000",
                        "user": "Uyi",
                        "text": "I found this example is it good? https://medium.com/@elliotchance/anewsimplerwaytododependencyinjectioningo9e191bef50d5"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-21T23:18:21.009000",
                        "user": "Uyi",
                        "text": "Oh wait I think I ment dependency inversion"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-21T23:21:07.327000",
                        "user": "Uyi",
                        "text": "A bit harder then injection \ud83d\ude04"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "42",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T11:52:01.463000",
                        "user": "Dinesh",
                        "text": "vscode has discord integration??"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T11:52:23.623000",
                        "user": "Dinesh",
                        "text": "what's vscodium'?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-02T11:52:26.668000",
                        "user": "Dinesh",
                        "text": "like a fork of vscode?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-02T12:07:08.706000",
                        "user": "Navya",
                        "text": "these leaks more information than all the softwares on github together"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-02T12:07:17.108000",
                        "user": "Makynna",
                        "text": "on/to"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-02T12:08:28.799000",
                        "user": "Navya",
                        "text": "no need to be scared of vscode telemetry"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-02T12:08:54.759000",
                        "user": "Makynna",
                        "text": "I am looking forward to Rust when it gets faster prototyping"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-02T12:10:46.325000",
                        "user": "Navya",
                        "text": "just personal preference"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-02T12:11:02.395000",
                        "user": "Navya",
                        "text": "but i prefer second way"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-02T12:11:09.788000",
                        "user": "Mingliang",
                        "text": "yes"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-02T12:11:29.422000",
                        "user": "Addie",
                        "text": "I forget what's the interface that I should use for pluggable http clients? or do I just need to make my own?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-02T12:12:21.430000",
                        "user": "Navya",
                        "text": "sencond way you are typing less characters in your code"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-02T12:12:41.005000",
                        "user": "Navya",
                        "text": "will make in simplier and clean"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-02T12:12:47.423000",
                        "user": "Mickel",
                        "text": "fmt will fix it to the 2nd way anyways"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-08-02T12:12:50.467000",
                        "user": "Macia",
                        "text": "And people viewing this code think: Damn this guy knows how to code in go"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-08-02T12:13:12.183000",
                        "user": "Mickel",
                        "text": "its pretty hard to write things in the wrong style"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-08-02T12:13:28.174000",
                        "user": "Mickel",
                        "text": "unless you go an write some snake case"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-08-02T12:13:35.486000",
                        "user": "Mickel",
                        "text": "in which we will yell at you instead"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-08-02T12:13:40.963000",
                        "user": "Navya",
                        "text": "if you are usin liteide will does it wrong"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-08-02T12:14:14.655000",
                        "user": "Navya",
                        "text": "liteide doesn't use golint"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-08-02T12:14:22.469000",
                        "user": "Addie",
                        "text": "then don't use that :^)"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-08-02T12:14:30.385000",
                        "user": "Navya",
                        "text": "nor gofmt by default"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-08-02T12:14:40.787000",
                        "user": "Navya",
                        "text": "> then don't use that :^)@superloach i dont use"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-08-02T12:15:37.296000",
                        "user": "Mickel",
                        "text": "and if you use notepad it doesnt either :bigthonk:"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-08-02T12:16:39.550000",
                        "user": "Navya",
                        "text": "you will have to use by hand. Newer gophers will write code in wrong way"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-08-02T12:17:06.433000",
                        "user": "Mickel",
                        "text": "None"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-08-02T12:17:42.417000",
                        "user": "Navya",
                        "text": "yep vscode is better option"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-08-02T12:17:55.735000",
                        "user": "Mickel",
                        "text": "it would be pretty hard to find someone writing go in a nonstandard editor"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-08-02T12:18:57.453000",
                        "user": "Navya",
                        "text": "> it would be pretty hard to find someone writing go in a nonstandard editor@Madxmike these guys who use vscode are more experient programmers"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-08-02T12:19:29.294000",
                        "user": "Navya",
                        "text": "someone that is just looking the language will be in others %"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-08-02T12:20:00.513000",
                        "user": "Johniel",
                        "text": "nah"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-08-02T12:20:04.535000",
                        "user": "Johniel",
                        "text": "Goland"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-08-02T12:20:17.595000",
                        "user": "Johniel",
                        "text": "Works best for me"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-08-02T12:20:30.207000",
                        "user": "Navya",
                        "text": "but you need to pay it"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-08-02T12:21:14.474000",
                        "user": "Addie",
                        "text": "@Madxmike `nano` user here :^)"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-08-02T12:21:37.208000",
                        "user": "Navya",
                        "text": "micro is the best option for term or vim"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-08-02T12:22:01.777000",
                        "user": "Addie",
                        "text": "interesting to see the trend switching from older to newer editors in that image"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-08-02T12:22:03.126000",
                        "user": "Navya",
                        "text": "I prefer micro. Very simple use"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-08-02T12:22:32.342000",
                        "user": "Addie",
                        "text": "I want to like micro but it's a bit slower than nano (especially over ssh) and I'm already comfortable with nano \ud83e\udd37\\u200d\u2640\ufe0f"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-08-02T12:22:43.750000",
                        "user": "Navya",
                        "text": "https://microeditor.github.io/"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "1488",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-28T21:08:34.106000",
                        "user": "Azarious",
                        "text": "is there a channel where i can ask for help ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-28T21:08:39.158000",
                        "user": "Nazaret",
                        "text": "here"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-28T21:10:06.423000",
                        "user": "Lu",
                        "text": "Go json parsing is pretty straightforward and even easier if you have a struct to unmarshal the json into"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-28T21:10:33.137000",
                        "user": "Crispin",
                        "text": "how would it look without the struct? i thought you always needed the struct D:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-28T21:10:40.820000",
                        "user": "Azarious",
                        "text": "the point is that i only need 3 fields in the big json that i receive"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-28T21:10:45.839000",
                        "user": "Lu",
                        "text": "You can unmarshal to a map of interfaces"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-28T21:10:49.637000",
                        "user": "Lu",
                        "text": "And type assert on keys"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-28T21:10:53.116000",
                        "user": "Izna",
                        "text": "i think theres an option to ignore extras in parser"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-28T21:11:01.478000",
                        "user": "Crispin",
                        "text": "i'm struggling to imagine that implementation"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-28T21:11:08.717000",
                        "user": "Kaiyon",
                        "text": "@Deleted User it's a mess for sure"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-28T21:11:08.925000",
                        "user": "Lu",
                        "text": "@FranklinTheFrog you can make a struct with just those fields"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-03-28T21:11:19.935000",
                        "user": "Lu",
                        "text": "And unmarshal the json to that struct"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-03-28T21:11:58.600000",
                        "user": "Azarious",
                        "text": "the fields that i need are in an array"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-03-28T21:12:21.214000",
                        "user": "Lu",
                        "text": "So you need three items in an array not three fields"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-03-28T21:12:22.269000",
                        "user": "Azarious",
                        "text": "```{ data\": [ { country\": France\", countryInfo\": { _id\": 250, lat\": 46, long\": 2, flag\": https://raw.githubusercontent.com/NovelCOVID/API/master/assets/flags/fr.png\", iso3\": FRA\", iso2\": FR\" }, cases\": 32964, todayCases\": 0, deaths\": 1995, todayDeaths\": 0, recovered\": 5700, active\": 25269, critical\": 3787, casesPerOneMillion\": 505, deathsPerOneMillion\": 31, countryCode\": FR\", confirmed\": 32964 } ], worldStats\": { country\": World\", countryCode\": World\", cases\": 622343, todayCases\": 26031, deaths\": 28802, todayDeaths\": 1461, recovered\": 137373, active\": 456168, critical\": 24016, casesPerOneMillion\": 79.85\", confirmed\": 622343 }}```"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-03-28T21:12:43.040000",
                        "user": "Lu",
                        "text": "Ah an array of structs"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-03-28T21:12:56.003000",
                        "user": "Izna",
                        "text": "```gotype AutoGenerated struct { Data []struct { Country string `json:\"country\"` CountryInfo struct { ID int `json:\"_id\"` Lat int `json:\"lat\"` Long int `json:\"long\"` Flag string `json:\"flag\"` Iso3 string `json:\"iso3\"` Iso2 string `json:\"iso2\"` } `json:\"countryInfo\"` Cases int `json:\"cases\"` TodayCases int `json:\"todayCases\"` Deaths int `json:\"deaths\"` TodayDeaths int `json:\"todayDeaths\"` Recovered int `json:\"recovered\"` Active int `json:\"active\"` Critical int `json:\"critical\"` CasesPerOneMillion int `json:\"casesPerOneMillion\"` DeathsPerOneMillion int `json:\"deathsPerOneMillion\"` CountryCode string `json:\"countryCode\"` Confirmed int `json:\"confirmed\"` } `json:\"data\"` WorldStats struct { Country string `json:\"country\"` CountryCode string `json:\"countryCode\"` Cases int `json:\"cases\"` TodayCases int `json:\"todayCases\"` Deaths int `json:\"deaths\"` TodayDeaths int `json:\"todayDeaths\"` Recovered int `json:\"recovered\"` Active int `json:\"active\"` Critical int `json:\"critical\"` CasesPerOneMillion string `json:\"casesPerOneMillion\"` Confirmed int `json:\"confirmed\"` } `json:\"worldStats\"`}```"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-03-28T21:13:14.391000",
                        "user": "Azarious",
                        "text": "omg thats so cool"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-03-28T21:14:09.575000",
                        "user": "Azarious",
                        "text": "i've tried to make the Data struct but not as a array of struct ok i think i get it guys"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-03-28T21:14:12.451000",
                        "user": "Azarious",
                        "text": "thanks a lot"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-03-28T21:14:57.818000",
                        "user": "Crispin",
                        "text": "@\u20df\u20df how'd you autogenerate?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-03-28T21:15:07.071000",
                        "user": "Lu",
                        "text": "There are many online tools to do so"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-03-28T21:15:23.927000",
                        "user": "Izna",
                        "text": "https://mholt.github.io/jsontogo/"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-03-28T21:15:23.970000",
                        "user": "Lu",
                        "text": "And offline tools"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-03-28T21:15:55.000000",
                        "user": "Azarious",
                        "text": "i'm adding it to favourite"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "56",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-03T10:46:56.192000",
                        "user": "Audyn",
                        "text": "Hey guys i'm trying to encrypt and decrypt a struct into a file. i'm using secretbox. https://pastebin.com/Mx4KE1UQIt fails to decrypt ( line 53 is false )I think the overhead is not appended correctly to the written file.."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-03T10:59:51.087000",
                        "user": "Audyn",
                        "text": "sure i am reading the encrypted text from the file. I'm not sure if i understand you correctly"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-03T10:59:57.172000",
                        "user": "Hewitt",
                        "text": "@Nettbr\u00f6tchen can you post into a goplayground"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-03T11:00:06.073000",
                        "user": "Audyn",
                        "text": "sure give me a sec"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-03T11:00:12.071000",
                        "user": "Hewitt",
                        "text": "thx"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-03T11:10:58.934000",
                        "user": "Audyn",
                        "text": "can i write to files in the playground?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-03T11:11:24.861000",
                        "user": "Audyn",
                        "text": "does not seem like it"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-03T11:11:32.253000",
                        "user": "Audyn",
                        "text": "https://play.golang.org/p/_ofadQMg9vT"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-03T11:13:36.690000",
                        "user": "Antigone",
                        "text": "``` #!/bin/bash 2  3 for i in $(cat $1); 4 do 5 echo ; 6 echo ASN $i\"; 7 echo ; 8 amass intel active asn $i; 9 echo ; 10 done```"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-03T11:13:57.636000",
                        "user": "Antigone",
                        "text": "can anyone help me how to write in go with concurrency"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-03T11:14:50.037000",
                        "user": "Antigone",
                        "text": "my go code``` 1 package main 2  3 import ( 4 bufio\" 5 os\" 6 os/exec\" 7 fmt\" 8 ) 9  10 func main(){ 11 sc := bufio.NewScanner(os.Stdin) 12  13 for sc.Scan() { 14 asn := sc.Text() 15 cmd := exec.Command(\"amass\",\"intel\",\"active\",\"asn\",(asn)) 16 _ err := cmd.Run() 17 if err != nil { 18 continue 19 } 20 fmt.Println(asn) 21 } 22  23 }~ ~ ```"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-03T11:15:16.875000",
                        "user": "Antigone",
                        "text": "error```go run main.go # commandlinearguments./main.go:16:16: assignment mismatch: 2 variables but cmd.Run returns 1 values```"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-03T11:17:16.713000",
                        "user": "Amariyah",
                        "text": "cmd.Run() only returns error remove the _"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-03T11:17:20.734000",
                        "user": "Audyn",
                        "text": "Run() only returns an erroryou are"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-03T11:17:23.110000",
                        "user": "Audyn",
                        "text": "yes"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-03T11:17:46.687000",
                        "user": "Audyn",
                        "text": "lul :)"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-02-03T11:17:51.974000",
                        "user": "Amariyah",
                        "text": "@emnaruto07 https://golang.org/pkg/os/exec/#Cmd.Run"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-02-03T11:18:29.112000",
                        "user": "Audyn",
                        "text": "@Madxmike not sure how to get it working in the playground"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-02-03T11:18:38.126000",
                        "user": "Antigone",
                        "text": "thanks,but how can i add concurrency?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-02-03T11:19:04.202000",
                        "user": "Audyn",
                        "text": "take a look at goroutines thats not an easy answer"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-02-03T11:19:28.407000",
                        "user": "Audyn",
                        "text": "i guess im not a genius tho :P"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-02-03T11:19:28.454000",
                        "user": "Amariyah",
                        "text": "concurrency is via go routines"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-02-03T11:20:28.961000",
                        "user": "Audyn",
                        "text": "i think you should start a go routine which executes cmd.Run(). but you have to wait for it to finish before you exit main()"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-02-03T11:20:32.365000",
                        "user": "Amariyah",
                        "text": "they make green threads. so it's not parallelism but it can be depending on your cores"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-02-03T11:21:35.085000",
                        "user": "Antigone",
                        "text": "my cpu is going crazy in this program"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-02-03T11:21:38.079000",
                        "user": "Amariyah",
                        "text": "what are you trying to run concurrently?"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-02-03T11:22:00.115000",
                        "user": "Audyn",
                        "text": "@emnaruto07 https://www.youtube.com/watch?v=YS4e4q9oBaU&t=20037s here is how to do it"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-02-03T11:22:13.121000",
                        "user": "Antigone",
                        "text": "so if you see my bash"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-02-03T11:22:56.729000",
                        "user": "Antigone",
                        "text": "it will loop it that command"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-02-03T11:23:15.430000",
                        "user": "Antigone",
                        "text": "i just want to add the concurrency with that file."
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-02-03T11:23:38.842000",
                        "user": "Amariyah",
                        "text": "you want a goroutine on each iteration?"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-02-03T11:23:51.539000",
                        "user": "Antigone",
                        "text": "yes"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-02-03T11:24:30.929000",
                        "user": "Amariyah",
                        "text": "goroutine needs to be attached to a func call so anon func wrapper is your best bet. learn a bit more first so you know what to expect though imo"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-02-03T11:25:03.359000",
                        "user": "Antigone",
                        "text": "ok thanks bro"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-02-03T11:25:29.730000",
                        "user": "Audyn",
                        "text": "if you dont want to watch the video i was taking notes as i did. do you want them?"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-02-03T11:25:56.551000",
                        "user": "Audyn",
                        "text": "@emnaruto07"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-02-03T11:26:23.073000",
                        "user": "Hayat",
                        "text": "hackers \u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-02-03T11:26:31.356000",
                        "user": "Antigone",
                        "text": "sure"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-02-03T11:26:42.104000",
                        "user": "Antigone",
                        "text": "> hackers \u00af\\\\_(\u30c4)_/\u00af@stdio \ud83d\ude04"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-02-03T11:26:57.542000",
                        "user": "Audyn",
                        "text": "sent you dm"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-02-03T11:27:36.156000",
                        "user": "Amariyah",
                        "text": "@Nettbr\u00f6tchen your name is making me crave a Walnussbroetchen |:"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-02-03T11:28:17.760000",
                        "user": "Amariyah",
                        "text": "Aldi/Lidl don't have them here so I have to suffer"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-02-03T11:28:42.106000",
                        "user": "Amariyah",
                        "text": "anyway back on topic \ud83d\ude42"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-02-03T11:29:23.597000",
                        "user": "Audyn",
                        "text": "any news on my encryption problem? ><"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-02-03T11:30:08.345000",
                        "user": "Audyn",
                        "text": "@Madxmike does it work for you (without the playground)?"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-02-03T11:45:40.707000",
                        "user": "Audyn",
                        "text": "anyone ideas how to easily encrypt/decrypt a struct into/from a file using go?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "61",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-03T18:35:40.567000",
                        "user": "Kausar",
                        "text": "is it possible to implement function for generated types from protobuf ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-03T18:36:11.697000",
                        "user": "Olivia",
                        "text": "Sure"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-03T18:36:17.694000",
                        "user": "Olivia",
                        "text": "you know what the names of the types will be when they're generated"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-03T18:36:29.310000",
                        "user": "Olivia",
                        "text": "so write methods for those types"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-03T19:59:46.341000",
                        "user": "Izna",
                        "text": "i need to find a specific word in user message"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-03T19:59:52.030000",
                        "user": "Izna",
                        "text": "it needs to ignore case"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-03T20:00:20.297000",
                        "user": "Izna",
                        "text": "do you think making everything to lower will significantly slow down performance"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-03T20:10:20.504000",
                        "user": "Olivia",
                        "text": "benchmark it"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-03T20:10:45.354000",
                        "user": "Olivia",
                        "text": "i think i just need to get write benchmarks anything else is pure speculation tattooed on my forehead"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-03T20:19:02.964000",
                        "user": "Olivia",
                        "text": "i'd argue instead that singletons are a bad idea"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-03T20:19:08.163000",
                        "user": "Olivia",
                        "text": "and that globals are a bad idea"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-03T20:19:20.945000",
                        "user": "Olivia",
                        "text": "and if you're using both in the same sentence you might want to take a beat and think"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-03T20:23:10.050000",
                        "user": "Stanley",
                        "text": "why are they bad ideas? It will be a variable at a package scope and as it is a variable I could easily use it to mock functions when testing don't you think it?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-03T20:23:45.303000",
                        "user": "Hayat",
                        "text": "cause several packages can import your pkg and change that var"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-03T20:23:52.498000",
                        "user": "Hayat",
                        "text": "and you might lose control what's changing what"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-03T20:24:17.228000",
                        "user": "Olivia",
                        "text": "interfaces are great!"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-02-03T20:24:20.371000",
                        "user": "Olivia",
                        "text": "use interfaces"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-02-03T20:24:24.773000",
                        "user": "Stanley",
                        "text": "Ok I understand so what should be the best way to do it?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-02-03T20:24:25.146000",
                        "user": "Olivia",
                        "text": "just don't use global variables or singletons"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-02-03T20:25:45.757000",
                        "user": "Hayat",
                        "text": "I've seen exceptions"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-02-03T20:25:57.749000",
                        "user": "Hayat",
                        "text": "like declaring a Now var that returns time.Time for testing and mocking"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-02-03T20:26:02.927000",
                        "user": "Jkari",
                        "text": "@\u20df\u20df it's still gonna be fast tbh"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-02-03T20:26:05.221000",
                        "user": "Hayat",
                        "text": "but there's probably other better ways to do it"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-02-03T20:26:06.018000",
                        "user": "Jkari",
                        "text": "so just do it"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-02-03T20:26:08.527000",
                        "user": "Jkari",
                        "text": "get it working first"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-02-03T20:28:48.011000",
                        "user": "Nathania",
                        "text": "Does Go have the same thing as C where `s[i]` is equivalent to `(s + i)`"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-02-03T20:28:56.672000",
                        "user": "Olivia",
                        "text": "The answer is don\\'t use a global make whatever this thing a Member of some struct or a parameter to the relevant functions"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-02-03T20:29:08.945000",
                        "user": "Olivia",
                        "text": "...what @post"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-02-03T20:29:31.474000",
                        "user": "Nathania",
                        "text": "pointer/address arithmetic"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-02-03T20:29:31.596000",
                        "user": "Olivia",
                        "text": "anyways"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-02-03T20:29:32.043000",
                        "user": "Hayat",
                        "text": "pointer arithmetic?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-02-03T20:29:33.827000",
                        "user": "Olivia",
                        "text": "oh"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-02-03T20:29:34.337000",
                        "user": "Olivia",
                        "text": "no"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-02-03T20:29:35.398000",
                        "user": "Hayat",
                        "text": "nop"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-02-03T20:29:35.492000",
                        "user": "Olivia",
                        "text": "hahaha"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-02-03T20:29:38.697000",
                        "user": "Olivia",
                        "text": "this is go"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-02-03T20:29:40.125000",
                        "user": "Olivia",
                        "text": "it has a gc"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-02-03T20:29:47.822000",
                        "user": "Nathania",
                        "text": "Sure but it has pointers"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-02-03T20:29:50.875000",
                        "user": "Olivia",
                        "text": "not really no"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-02-03T20:29:57.170000",
                        "user": "Olivia",
                        "text": "not c pointers"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-02-03T20:30:00.085000",
                        "user": "Hayat",
                        "text": "I mean it has unsafe but that's unsafe \ud83d\ude04"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-02-03T20:30:03.186000",
                        "user": "Olivia",
                        "text": "shhh"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-02-03T20:31:05.335000",
                        "user": "Nazaret",
                        "text": "We have pointers but not pointer arithmetic"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-02-03T20:31:23.726000",
                        "user": "Nathania",
                        "text": "Yea that's what I suspected thanks for the clarification"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-02-03T20:31:58.586000",
                        "user": "Stanley",
                        "text": "@stdio @deezy thanks"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2579",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-30T19:34:10.784000",
                        "user": "Espiridion",
                        "text": "Why is the ``go build`` telling me that it can\\'t find ``\"github.com/g3n/engine/core\"`` when I can literally see it in the browser?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-30T19:34:56.086000",
                        "user": "Maram",
                        "text": "probably cause you aren't using modules ( correctly )"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-30T19:35:00.021000",
                        "user": "Mian",
                        "text": "^"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-30T19:35:05.599000",
                        "user": "Mian",
                        "text": "was typing it and couldn't get to that point"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-30T19:35:31.477000",
                        "user": "Espiridion",
                        "text": "I copied the data from g3n github page https://github.com/g3n/engine"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-30T19:35:32.579000",
                        "user": "Mian",
                        "text": "Go won\\'t magically import things you need to a) use go modules to automatically download dependencies or 2) go get github.com/g3n/engine/core"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-30T19:35:41.487000",
                        "user": "Maram",
                        "text": "yeah that's fine"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-30T19:35:45.786000",
                        "user": "Maram",
                        "text": "you still needto use modules"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-30T19:35:45.816000",
                        "user": "Alyanna",
                        "text": "what browser"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-30T19:35:47.304000",
                        "user": "Alyanna",
                        "text": "chrome?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-30T19:35:53.179000",
                        "user": "Espiridion",
                        "text": "Chromium"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-30T19:36:00.273000",
                        "user": "Alyanna",
                        "text": "you seeing it in the browser"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-30T19:36:08.095000",
                        "user": "Alyanna",
                        "text": "has absolutely nothing to do with what the compiler sees"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-30T19:36:44.815000",
                        "user": "Maram",
                        "text": "?go modules"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-30T19:36:45.132000",
                        "user": "Japheth",
                        "text": "Introduction to Go Modules <https://roberto.selbach.ca/introtogomodules/>  SkippyUsing go modules <https://blog.golang.org/usinggomodules>  Sgt_Tailor"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-30T19:36:51.048000",
                        "user": "Maram",
                        "text": "welcome to dependency management"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-30T19:38:45.940000",
                        "user": "Espiridion",
                        "text": "Well I've already been doing dep management in the MT engine but this is quite different from Lua"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-30T19:39:00.133000",
                        "user": "Maram",
                        "text": "quite"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-30T19:39:10.953000",
                        "user": "Maram",
                        "text": "go is a real language \ud83d\ude43"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-30T19:39:17.108000",
                        "user": "Alyanna",
                        "text": "ive never seen a language that automatically downloads dependencies for you that you havent specified in some sort of deps list"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-30T19:39:27.414000",
                        "user": "Shritha",
                        "text": "deezy gatekeeping languages be like"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-30T19:39:30.148000",
                        "user": "Alyanna",
                        "text": "kek"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-30T19:39:32.778000",
                        "user": "Maram",
                        "text": "i mean go does"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-30T19:39:33.414000",
                        "user": "Maram",
                        "text": "but"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-30T19:39:37.677000",
                        "user": "Maram",
                        "text": "you have to do the setup"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-30T19:40:00.840000",
                        "user": "Shritha",
                        "text": "yea if you don\\'t count fs as your dep list"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-30T19:40:07.936000",
                        "user": "Shritha",
                        "text": "then goimports + go get"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-30T19:41:53.839000",
                        "user": "Espiridion",
                        "text": "Ahh ``go get d ./...`` worked great thank you!"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-30T19:53:44.967000",
                        "user": "Alyanna",
                        "text": "whaddya mean just works"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-30T19:53:56.580000",
                        "user": "Alyanna",
                        "text": "just works like binary encoding or json or any other data format"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-30T19:55:01.875000",
                        "user": "Abriella",
                        "text": "ok what's the best way to save an array/slice"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "96",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-05T11:13:45.786000",
                        "user": "Vasyl",
                        "text": "Hello! Is it a good solution to create static pages using GO and mongoDB? I'm generally thinking of templates. Is it a lot of trouble or better to use other technology."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-05T11:13:55.541000",
                        "user": "Vasyl",
                        "text": "thinking about templates"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-05T11:23:35.741000",
                        "user": "Martins",
                        "text": "@Szahid I would say templates but I think it depends on the needs and what you really want."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2485",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-27T18:33:20.100000",
                        "user": "Kashis",
                        "text": "Hey guys! i'm having problems with GORM idk if anyone has use that package before. I'm looking to perform the following query: SELECT empleado.nombre as empleado turnos.fecha turnos.hora turnos.cliente_id as cliente FROM turnos INNER JOIN empleado ON empleado.id = turnos.empleado_id INNER JOIN cliente ON cliente.id = turnos.cliente_id;"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-27T18:51:37.778000",
                        "user": "Ariya",
                        "text": "Running `go get u github.com/gobindata/gobindata/...` doesn't download the latest release instead it downloads the single latest one and returns this:`go: found github.com/gobindata/gobindata/... in github.com/gobindata/gobindata v3.1.2+incompatible`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-27T18:51:53.997000",
                        "user": "Ariya",
                        "text": "Does anyone know why this happens?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-27T18:52:28.789000",
                        "user": "Maddyson",
                        "text": "wrong import path"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-27T18:52:48.793000",
                        "user": "Maddyson",
                        "text": "should be using github.com/gobindata/gobindata/v3/..."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-27T18:53:46.643000",
                        "user": "Ariya",
                        "text": "That downloads a bunch of other stuff too. Is that normal? The one before that didn't download additional dependencies."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-27T18:54:00.358000",
                        "user": "Ariya",
                        "text": "Or is that just the latest v3 using a lot of new stuff?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-27T18:54:05.452000",
                        "user": "Maram",
                        "text": "`go mod why`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-27T18:54:08.732000",
                        "user": "Maram",
                        "text": "or maybe `go mod explain`"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-27T18:54:19.500000",
                        "user": "Maram",
                        "text": "there's a tool that explains where a dependency comes from"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-27T18:54:54.597000",
                        "user": "Ariya",
                        "text": "go mod why just returns my package's name lol"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-27T18:55:07.912000",
                        "user": "Ariya",
                        "text": "since I don't actually require gobindata in the module itself"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-27T18:55:29.561000",
                        "user": "Maram",
                        "text": "well yeah you have to tell it one of your transitive dependencies"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-27T19:00:03.462000",
                        "user": "Maddyson",
                        "text": "Go mod graph"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-27T19:00:25.736000",
                        "user": "Maddyson",
                        "text": "https://github.com/ewohltman/graphdot"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-27T19:00:34.360000",
                        "user": "Maddyson",
                        "text": "If you want a nice picture"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-27T19:01:47.843000",
                        "user": "Maram",
                        "text": "ayy"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-27T19:03:17.603000",
                        "user": "Alyanna",
                        "text": "Graphdot GOD"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-27T19:04:17.544000",
                        "user": "Maram",
                        "text": "papa bless"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-27T19:14:46.628000",
                        "user": "Deklan",
                        "text": "I'm running into this sigterm with an invalid nil pointer``` FAIL: TestCertCA (0.00s)panic: runtime error: invalid memory address or nil pointer dereference [recovered] panic: runtime error: invalid memory address or nil pointer dereference[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x115d83a]goroutine 6 [running]:testing.tRunner.func1.1(0x11836e0 0x12ee360) /usr/local/Cellar/go/1.14/libexec/src/testing/testing.go:941 +0x3d0testing.tRunner.func1(0xc000136360) /usr/local/Cellar/go/1.14/libexec/src/testing/testing.go:944 +0x3f9panic(0x11836e0 0x12ee360) /usr/local/Cellar/go/1.14/libexec/src/runtime/panic.go:967 +0x15dlambda/cert.Cert.GenCert(0x1062d01 0x0 0x1065130 0xc000050708 0x3240303 0x12f7bc0 0xc000050718 0x1051382 0x1065130 0xc000050708 ...) /Users/akhter.ali/Documents/code/drtinfrastructurevpn/vuejsfrontendportal/amplify/backend/function/VPNCertAuth/src/cert/cert.go:71 +0x9ealambda/cert.TestCertCA(0xc000136360) /Users/akhter.ali/Documents/code/drtinfrastructurevpn/vuejsfrontendportal/amplify/backend/function/VPNCertAuth/src/cert/cert_test.go:15 +0x41testing.tRunner(0xc000136360 0x11beb68) /usr/local/Cellar/go/1.14/libexec/src/testing/testing.go:992 +0xdccreated by testing.(T).Run /usr/local/Cellar/go/1.14/libexec/src/testing/testing.go:1043 +0x357exit status 2FAIL lambda/cert 0.275s```"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "81",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-04T11:55:05.323000",
                        "user": "Jermari",
                        "text": "how would I go about turning this C call into go and get a float32 slice? `float GetWaveData(Wave wave); `"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-04T11:56:35.647000",
                        "user": "Jermari",
                        "text": "the array will be (wave.sampleCountwave.channels) big"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-04T12:28:46.554000",
                        "user": "Ameia",
                        "text": "@Lachee u already know how it goes in raylib and already asked about turning c array into slice so what thing u messing with?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-04T12:30:19.842000",
                        "user": "Jermari",
                        "text": "good point just confusing myself"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-04T13:01:54.635000",
                        "user": "Ameia",
                        "text": "@Lachee the one thing what I intend to say is that there's 2 options about handling the c array:u can turn it into slice with `([1 << 28]float32)(unsafe.Pointer(ret_val))[:size:size]`But it won't be garbage collected so1) u can just handle it as new type with additional Delete method (u can also set finalizer with runtime.SetFinalizer if this slice will be part of some complex struct) which free it:`C.free((unsafe.Pointer)(unsafe.Pointer(&float_slice)))`2) or just make copy with instant deletion of original:```govar wave_data []float32copy(wave_data temporary_wave_data_slice)C.free(ret_val)return wave_data```Ofc first one is preferable for performance second one for convenience"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-04T13:06:47.454000",
                        "user": "Jermari",
                        "text": "I got confused because the method I saw the previous author use was ```golang// GetWaveData  Get samples data from wave as a floats arrayfunc GetWaveData(wave Wave) []float32 { var data []float32 cwave := wave.cptr() ret := C.GetWaveData(cwave) sliceHeader := (reflect.SliceHeader)((unsafe.Pointer(&data))) sliceHeader.Cap = int(wave.SampleCount) sliceHeader.Len = int(wave.SampleCount) sliceHeader.Data = uintptr(unsafe.Pointer(ret)) return data}```But yeah I will probably just copy the data over like you said."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-04T13:08:17.385000",
                        "user": "Ameia",
                        "text": "Oh he did it mad way it leaks"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-04T13:08:46.392000",
                        "user": "Jermari",
                        "text": "i mean the docs alone say not to use SliceHeader"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-04T13:08:48.863000",
                        "user": "Jermari",
                        "text": "so scarry stuff"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-04T13:10:55.120000",
                        "user": "Ameia",
                        "text": "It only appears in unsafe.Pointer docs part which tells don't play with non patterned way like this cause it might be deprecated in future"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-04T13:12:39.078000",
                        "user": "Ameia",
                        "text": "I mean `uintptr(unsafe.Pointer())` part is haram and `go vet` shall yell at u"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2366",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-27T23:26:27.989000",
                        "user": "Crispin",
                        "text": "Hi is there any good way to do a very clean interface with Go?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-27T23:49:00.703000",
                        "user": "Crispin",
                        "text": "But it's inside a map.. How can I get this map?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-27T23:49:50.387000",
                        "user": "Darah",
                        "text": "first // type geometry interface {"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-27T23:49:57.857000",
                        "user": "Darah",
                        "text": "fails run"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-27T23:52:51.853000",
                        "user": "Darah",
                        "text": "@\u20df\u20df i see"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-27T23:52:54.042000",
                        "user": "Crispin",
                        "text": "None"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-27T23:53:13.965000",
                        "user": "Crispin",
                        "text": "```map[type:[{Name:type Value: Attrs:map[] Children:map[]}] variant:[{Name:variant Value: Attrs:map[] Children:map[grams:[{Name:grams Value:1000 Attrs:map[] Children:map[]}] id:[{Name:id Value:https://noirfonce.eu/products/4714751393894 Attrs:map[] Children:map[]}] price:[{Name:price Value:100.00 Attrs:map[currency:EUR] Children:map[]}] sku:[{Name:sku Value: Attrs:map[] Children:map[]}] title:[{Name:title Value:Default Title Attrs:map[] Children:map[]}]]}] vendor:[{Name:vendor Value: Attrs:map[] Children:map[]}]]```"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-27T23:54:18.990000",
                        "user": "Hewitt",
                        "text": "what is `item`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-27T23:54:41.515000",
                        "user": "Crispin",
                        "text": "an item in the `feed.Item`"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-27T23:54:50.437000",
                        "user": "Crispin",
                        "text": "```gofp := gofeed.NewParser() feed err := fp.ParseURL(\"https://noirfonce.eu/collections/all/products.atom\") if err != nil { return nil err } items := feed.Items var products []Product for _ item := range items { products = append(products Product{ Name: item.Title, Link: item.Link, }) log.Printf(\"%+v item.Extensions[\"s\"]) }```"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-27T23:55:00.171000",
                        "user": "Crispin",
                        "text": "ignore the append was just for testing"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-27T23:55:14.015000",
                        "user": "Hewitt",
                        "text": "`type Extensions map[string]map[string][]Extension`"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-27T23:55:16.178000",
                        "user": "Hewitt",
                        "text": "thats rough"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-27T23:58:05.712000",
                        "user": "Crispin",
                        "text": "```gofor _ item := range items { products = append(products Product{ Name: item.Title, Link: item.Link, }) extensions := item.Extensions[\"s\"] for _ extension := range extensions { log.Print(extension) } }```"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-27T23:58:30.716000",
                        "user": "Crispin",
                        "text": "Doing that returns a lot of stuff"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-27T23:58:35.742000",
                        "user": "Hewitt",
                        "text": "yeah probably"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-27T23:58:40.993000",
                        "user": "Crispin",
                        "text": "None"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-27T23:58:45.683000",
                        "user": "Crispin",
                        "text": "I just want the price :cry:"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-27T23:59:52.920000",
                        "user": "Hewitt",
                        "text": "do that `%+v` on that print"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-28T00:00:16.672000",
                        "user": "Crispin",
                        "text": "None"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-28T00:00:23.801000",
                        "user": "Crispin",
                        "text": "I can create a struct for that?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-28T00:00:34.331000",
                        "user": "Hewitt",
                        "text": "its just an Extension"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-28T00:01:00.913000",
                        "user": "Hewitt",
                        "text": "its a map"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-28T00:01:05.672000",
                        "user": "Darah",
                        "text": "@\u20df\u20df ` g2 = emb{geom{2,3},in{geom{2,3}}}`"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-28T00:01:39.003000",
                        "user": "Crispin",
                        "text": "None"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-28T00:01:40.099000",
                        "user": "Crispin",
                        "text": "Like this?"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-28T00:01:47.204000",
                        "user": "Crispin",
                        "text": "```gofor k extension := range extensions { log.Printf(\"%s %+v k extension) }```"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-28T00:02:49.378000",
                        "user": "Crispin",
                        "text": "I can just try another lib too"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-28T00:02:53.645000",
                        "user": "Izna",
                        "text": "idk cuz u changed the struct def"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-28T00:02:55.597000",
                        "user": "Hewitt",
                        "text": "so extensions[\"variant\"] will get you the extension you want"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-28T00:04:46.365000",
                        "user": "Hewitt",
                        "text": "```gofor _ item := range items { products = append(products Product{ Name: item.Title, Link: item.Link, }) extensions := item.Extensions[\"s\"] for k extension := range extensions[\"variant\"] { log.Printf(\"%s %+v k extension)  } }```"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-28T00:05:59.827000",
                        "user": "Hewitt",
                        "text": "what does that give you"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-28T00:07:11.374000",
                        "user": "Crispin",
                        "text": "```extensions := item.Extensions[\"s\"] for _ extension := range extensions[\"variant\"] { for v ext := range extension.Children[\"price\"] { log.Printf(\"%v %+v v ext.Value) } }```"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-28T00:07:18.609000",
                        "user": "Crispin",
                        "text": "this actually does what I want it output the price correctly"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-28T00:07:31.252000",
                        "user": "Crispin",
                        "text": "what a mess \ud83d\ude26"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-28T00:07:33.523000",
                        "user": "Hewitt",
                        "text": "\ud83d\udc4d"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-28T00:07:37.394000",
                        "user": "Crispin",
                        "text": "thanks you!"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-28T00:08:54.773000",
                        "user": "Crispin",
                        "text": "A last question!"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-28T00:09:05.065000",
                        "user": "Crispin",
                        "text": "None"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-28T00:09:13.565000",
                        "user": "Crispin",
                        "text": "```go2020/04/28 02:08:05 {variant map[] map[grams:[{grams 1000 map[] map[]}] id:[{id https://noirfonce.eu/products/4786412322918 map[] map[]}] price:[{price 50.00 map[currency:EUR] map[]}] sku:[{sku AT3745046 map[] map[]}] title:[{title 16 map[] map[]}]]}2020/04/28 02:08:05 0 50.002020/04/28 02:08:05 {variant map[] map[grams:[{grams 1000 map[] map[]}] id:[{id https://noirfonce.eu/products/4786412322918 map[] map[]}] price:[{price 50.00 map[currency:EUR] map[]}] sku:[{sku AT3745046 map[] map[]}] title:[{title 17 map[] map[]}]]}2020/04/28 02:08:05 0 50.002020/04/28 02:08:05 {variant map[] map[grams:[{grams 1000 map[] map[]}] id:[{id https://noirfonce.eu/products/4786412322918 map[] map[]}] price:[{price 50.00 map[currency:EUR] map[]}] sku:[{sku AT3745046 map[] map[]}] title:[{title 18.5 map[] map[]}]]}2020/04/28 02:08:05 0 50.00```"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-28T00:09:28.439000",
                        "user": "Crispin",
                        "text": "You see it will create a new Item but it's actually the same item"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-28T00:09:34.277000",
                        "user": "Crispin",
                        "text": "just not the same variant"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-28T00:09:34.767000",
                        "user": "Darah",
                        "text": "@\u20df\u20df or like this` type HR struct { S1 struct { x int }}result := HR{ S1: x{1}, }`"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-28T00:09:45.119000",
                        "user": "Darah",
                        "text": "nested struct"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-28T00:09:50.046000",
                        "user": "Crispin",
                        "text": "like the sku ID is the same"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-28T00:10:09.217000",
                        "user": "Hewitt",
                        "text": "yeah they are just different sizes it looks like"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-28T00:10:16.869000",
                        "user": "Crispin",
                        "text": "how can I regroup them into one item"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-28T00:10:39.594000",
                        "user": "Crispin",
                        "text": "```gotype Product struct { Name string Link string Sizes []string Price string}```"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-28T00:10:43.155000",
                        "user": "Crispin",
                        "text": "That would be my struct"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-28T00:10:43.165000",
                        "user": "Hewitt",
                        "text": "delete the ~~unworthy~~ the ones you dont want"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-28T00:10:53.927000",
                        "user": "Crispin",
                        "text": "But I want all the sizes"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-28T00:11:03.782000",
                        "user": "Hewitt",
                        "text": "then just make one product for each sku you see"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-28T00:11:16.137000",
                        "user": "Hewitt",
                        "text": "and if it has a sku that already has been seen you add its size to the product you already have"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-28T00:11:35.568000",
                        "user": "Crispin",
                        "text": "uh.. how can I do this please?"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-28T00:11:41.289000",
                        "user": "Crispin",
                        "text": "I already know how to get sku & stuff"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-28T00:11:49.134000",
                        "user": "Hewitt",
                        "text": "a couple of loops and a map probably"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-28T00:12:10.862000",
                        "user": "Hewitt",
                        "text": "`map[string]Product`"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-28T00:12:14.560000",
                        "user": "Hewitt",
                        "text": "loop over your items"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-04-28T00:12:25.996000",
                        "user": "Hewitt",
                        "text": "if the sku key exists in that map get the product and update it"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-04-28T00:12:30.474000",
                        "user": "Izna",
                        "text": "honestly im not sure lol"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-04-28T00:12:52.748000",
                        "user": "Hewitt",
                        "text": "if not then create a new product and put it in the map"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-04-28T00:15:32.134000",
                        "user": "Jkari",
                        "text": "yeah you can't create an anon struct value for anon struct type"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-04-28T00:18:48.577000",
                        "user": "Naphtali",
                        "text": "So using r.RemoteAddr returned this [::1]:56060 "
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-04-28T00:19:20.798000",
                        "user": "Naphtali",
                        "text": "Is this normal? I was expecting a normal ip address like 127.0.0.1 or something similar"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-04-28T00:23:06.949000",
                        "user": "Braxtyn",
                        "text": "Sure `[::1]` is the IPv6 loopback address"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-04-28T00:23:56.170000",
                        "user": "Naphtali",
                        "text": "Oh true i forgot about ipv6 vs ipv4"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-04-28T00:29:46.404000",
                        "user": "Crispin",
                        "text": "```gofor _ item := range items { var sku string var price string var alreadyStored bool extensions := item.Extensions[\"s\"] for _ extension := range extensions[\"variant\"] { for _ priceExt := range extension.Children[\"price\"] { price = priceExt.Value } for _ skuExt := range extension.Children[\"sku\"] { sku = skuExt.Value for _ product := range products { if product.Sku == sku { alreadyStored = true for _ size := range extension.Children[\"title\"] { if size.Value !=  { product.Sizes = append(product.Sizes Size{ Value: size.Value, Price: price, }) } } } } } } if !alreadyStored { products = append(products Product{ Name: item.Title, Sku: sku, Link: item.Link, Sizes: []Size{}, Price: price, }) } }```Doesn\\'t seems to push if the item doesn\\'t have a sku?"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-04-28T00:29:57.598000",
                        "user": "Crispin",
                        "text": "Yes this gave me headache"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-04-28T00:38:33.822000",
                        "user": "Olivia",
                        "text": "loop is too headache"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-04-28T00:39:22.148000",
                        "user": "Nazaret",
                        "text": "```go for _ extension := range extensions[\"variant\"] { for _ priceExt := range extension.Children[\"price\"] { price = priceExt.Value } }```"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-04-28T00:39:25.854000",
                        "user": "Nazaret",
                        "text": "this seems completely pointless"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-04-28T00:39:36.153000",
                        "user": "Crispin",
                        "text": "no"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-04-28T00:39:36.421000",
                        "user": "Nazaret",
                        "text": "youre overwriting price for everything in extension.Children[\"price\"]"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-04-28T00:39:39.768000",
                        "user": "Crispin",
                        "text": "o"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-04-28T00:39:47.734000",
                        "user": "Crispin",
                        "text": "but there is only one price"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-04-28T00:39:51.443000",
                        "user": "Crispin",
                        "text": "in each item"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-04-28T00:39:54.746000",
                        "user": "Nazaret",
                        "text": "then why for loop"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-04-28T00:40:11.957000",
                        "user": "Crispin",
                        "text": "because it's needed"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-04-28T00:40:25.830000",
                        "user": "Nazaret",
                        "text": "I highly doubt it"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2230",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-24T02:20:04.487000",
                        "user": "Joanes",
                        "text": "im kinda confused how to implement this"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-24T02:20:07.215000",
                        "user": "Joanes",
                        "text": "```gofunc connect(ctx context.Context cancel context.CancelFunc) { conn err := net.Dial(\"tcp RHOST+\":\"+RPORT)}func listen(ctx context.Context cancel context.CancelFunc) {}func main() { ctx := context.Background() ctx cancel := context.WithCancel(ctx) go connect(ctx cancel) go listen(ctx cancel)}```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-24T02:21:55.953000",
                        "user": "Joanes",
                        "text": "i want connect to keep trying to connect if it fails"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-24T02:25:40.808000",
                        "user": "Joanes",
                        "text": "```gofunc connect(ctx context.Context cancel context.CancelFunc) { for true { select { case <ctx.Done(): return default: conn err := net.Dial(\"tcp RHOST+\":\"+RPORT) if err == nil { cancel() handleConnection(conn) } }}```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-24T02:26:01.995000",
                        "user": "Joanes",
                        "text": "Is that the correct implementation"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-24T02:27:02.616000",
                        "user": "Hewitt",
                        "text": "you can just do `for {` btw"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-24T02:30:13.349000",
                        "user": "Joanes",
                        "text": "ah cheers"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-24T02:30:23.306000",
                        "user": "Joanes",
                        "text": "```gofunc listen(ctx context.Context cancel context.CancelFunc) { ln err := net.Listen(\"tcp 0.0.0.0:\"+LPORT) if err != nil { return } for { select { case <ctx.Done(): return default: conn err := ln.Accept() if err != nil { return } cancel() go handleConnection(conn) } }}```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-24T02:30:28.175000",
                        "user": "Joanes",
                        "text": "thats my listen func"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-24T02:33:29.693000",
                        "user": "Jkari",
                        "text": "2 things"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-24T02:33:32.960000",
                        "user": "Jkari",
                        "text": "1. don't take in a cancel"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-24T02:33:37.638000",
                        "user": "Jkari",
                        "text": "the caller should defer cancel themselves"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-24T02:34:12.064000",
                        "user": "Jkari",
                        "text": "there's no 2"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-24T02:36:00.594000",
                        "user": "Joanes",
                        "text": "wdum by 1"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-24T02:36:15.980000",
                        "user": "Joanes",
                        "text": "i tested it and they both cancel when either of the events occur"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-24T02:36:24.777000",
                        "user": "Jkari",
                        "text": "I didn't say it wouldn't work"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-24T02:36:26.889000",
                        "user": "Jkari",
                        "text": "but it's not idiomatic"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-24T02:36:34.241000",
                        "user": "Joanes",
                        "text": "it doesnt work"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-24T02:36:37.780000",
                        "user": "Jkari",
                        "text": "kek"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-24T02:36:44.199000",
                        "user": "Jkari",
                        "text": "```goctx cancel := context.WithCancel(context.Background())defer cancel()listen(ctx)```"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-24T02:36:53.880000",
                        "user": "Jkari",
                        "text": "also return error"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-24T02:36:57.039000",
                        "user": "Jkari",
                        "text": "don't ignore"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-24T02:37:12.880000",
                        "user": "Joanes",
                        "text": "```gofunc main() { var wg sync.WaitGroup ctx := context.Background() ctx cancel := context.WithCancel(ctx) wg.Add(1) go connect(ctx cancel &wg) wg.Add(1) go listen(ctx cancel &wg) wg.Wait()}```"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-24T02:37:15.219000",
                        "user": "Joanes",
                        "text": "thats my main"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-24T02:37:29.968000",
                        "user": "Pablo",
                        "text": "is it better to put database caching in its own package or should I put it into my `db` package"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-24T02:37:56.970000",
                        "user": "Jkari",
                        "text": "also Listen can take a context"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-24T02:38:08.866000",
                        "user": "Jkari",
                        "text": "so there's no need to do the select"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-24T02:38:17.171000",
                        "user": "Jkari",
                        "text": "@Blusk id put it in db"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-24T02:38:32.596000",
                        "user": "Pablo",
                        "text": "ah cool"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-24T02:38:56.355000",
                        "user": "Joanes",
                        "text": "this is confusing me a lot lmao"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-24T02:39:09.157000",
                        "user": "Joanes",
                        "text": "is my main function correctly implemented?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-24T02:39:35.550000",
                        "user": "Jaythen",
                        "text": "so uh if you have `_linux.go` `_windows.go` files and want to write tests for each what do I do?"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-24T02:39:44.907000",
                        "user": "Jkari",
                        "text": "_test_linux I thikn"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-24T02:41:08.502000",
                        "user": "Jkari",
                        "text": "actually"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-24T02:41:12.968000",
                        "user": "Jkari",
                        "text": "yea maybe you need to pass cancel in"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-24T02:42:09.473000",
                        "user": "Jkari",
                        "text": "```gofunc listen(ctx context.Context cancel context.CancelFunc) error { l err := (&ListenConfig{}).Listen(ctx ...) // err check c err := l.Accept() // err check go handleConnection(c) cancel() // stop the other}```"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-24T02:42:12.311000",
                        "user": "Jkari",
                        "text": "that should be the listen impl"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-24T02:43:23.036000",
                        "user": "Jkari",
                        "text": "```gofunc connect(ctx context.Context cancel context.CancelFunc) error { c err := net.DialContext(ctx ...) // err check go handleConnection(c) cancel() // stop the other}```"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-24T02:43:47.754000",
                        "user": "Joanes",
                        "text": "ok thanks"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-24T02:44:52.391000",
                        "user": "Jkari",
                        "text": "```gofunc main() { wg := sync.WaitGroup{} wg.Add(2) ctx cancel := context.WithCancel(context.Background()) defer cancel() go func() { err := listen() // handle err wg.Done() }() go func() { err := connect() // handle err wg.Done() }() // you will have to take care of handleConnection being spawned in goroutines wg.Wait()}```"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-24T02:45:10.797000",
                        "user": "Jkari",
                        "text": "for the comment above wg.Wait() you can solve this by calling cancel() before handleConnection then run it in the current thread"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-24T02:45:22.969000",
                        "user": "Jkari",
                        "text": "```gofunc connect(ctx context.Context cancel context.CancelFunc) error { c err := net.DialContext(ctx ...) // err check cancel() // stop the other handleConnection(c)}```"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-24T02:45:24.111000",
                        "user": "Jkari",
                        "text": "like that"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-24T02:45:43.451000",
                        "user": "Joanes",
                        "text": "thats how i had it 3 seconds ago and i went to say i fixed it but you came up with a better way"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-24T02:45:53.770000",
                        "user": "Joanes",
                        "text": "thanks for the help \ud83d\udc4d"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-24T02:45:58.333000",
                        "user": "Jkari",
                        "text": "yw"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-24T02:47:16.289000",
                        "user": "Joanes",
                        "text": "net.DialContext is undefined"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-24T02:51:15.234000",
                        "user": "Jkari",
                        "text": "oh you need a dialer"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-24T02:51:29.433000",
                        "user": "Jkari",
                        "text": "None"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1786",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-26T00:22:12.394000",
                        "user": "Camora",
                        "text": "how should i make a worker pool that only runs when an array is under a certain size?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-26T00:22:43.515000",
                        "user": "Camora",
                        "text": "a goroutine that checks every like every second if the array size is smaller than the required?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-26T00:23:10.152000",
                        "user": "Mingliang",
                        "text": "Wrap the array and notify on change?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-26T00:23:51.283000",
                        "user": "Leddie",
                        "text": "why n err := c.fd.Write(b)"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-26T00:23:51.331000",
                        "user": "Camora",
                        "text": "how would I do that?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-26T00:23:55.603000",
                        "user": "Leddie",
                        "text": "and not c.Write(b)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-26T00:24:11.833000",
                        "user": "Nysir",
                        "text": "to error handle probably"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2302",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-26T08:01:08.048000",
                        "user": "Cosimo",
                        "text": "hi if i have a folder e.g example and want to zip it like example.zip\". How would I do that"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-26T08:01:15.097000",
                        "user": "Dwayne",
                        "text": "Anyone have a favorite flavor of Linux to run k8s on?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-26T08:05:24.809000",
                        "user": "Dwayne",
                        "text": "http://blog.ralch.com/tutorial/golangworkingwithzip/"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-26T08:07:46.823000",
                        "user": "Cosimo",
                        "text": "thanks"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-26T08:22:24.157000",
                        "user": "Kavya",
                        "text": "so I was just playing around with reflect and started wondering can I use it to replace a method of a struct?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-26T08:26:53.524000",
                        "user": "Carlito",
                        "text": "https://goremotefest.com/"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-26T08:27:03.554000",
                        "user": "Olivia",
                        "text": "you probably shouldn't"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-26T08:27:34.524000",
                        "user": "Carlito",
                        "text": "https://www.youtube.com/watch?v=OZSJ2fwSSUM&feature=youtu.be&has_verified=1"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-26T08:28:05.326000",
                        "user": "Carlito",
                        "text": "gofest is live just wanted to share !!"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-26T08:37:11.170000",
                        "user": "Hewitt",
                        "text": "thx"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2374",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T10:13:31.576000",
                        "user": "Crispin",
                        "text": "hi"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-28T10:13:45.721000",
                        "user": "Crispin",
                        "text": "it's possible to convert convert function type in another function type ?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-28T10:13:49.954000",
                        "user": "Crispin",
                        "text": "my error is :"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-28T10:13:53.338000",
                        "user": "Crispin",
                        "text": "```Cannot use luaWrapper.window.InitWindow (type func()) as type LGFunction ```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-28T10:18:22.653000",
                        "user": "Knova",
                        "text": "@Teddy btw have you ever used that one https://godoc.org/go.mongodb.org/mongodriver/bson/bsoncodec#ValueCodec ?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-28T10:19:04.409000",
                        "user": "Antwaun",
                        "text": "@Deleted User only if the signature matches LGFunction probably needs an argument."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-28T10:19:32.393000",
                        "user": "Crispin",
                        "text": "LGFunction is a function return int"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-28T10:19:45.444000",
                        "user": "Crispin",
                        "text": "okay ^^"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-28T10:32:07.862000",
                        "user": "Aduen",
                        "text": "Could create a closure to make the signature match"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-28T11:55:41.304000",
                        "user": "Jhan",
                        "text": "in terminal this cmd works fine"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-28T11:55:41.993000",
                        "user": "Nazaret",
                        "text": "You dont make it a whole string"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-28T11:55:48.723000",
                        "user": "Nazaret",
                        "text": "Its separated"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-28T11:56:10.585000",
                        "user": "Jhan",
                        "text": "so every space its other command?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-28T11:56:12.830000",
                        "user": "Nazaret",
                        "text": "Look at the documentation for exec.Command"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-28T11:56:28.708000",
                        "user": "Nazaret",
                        "text": "Im 99% sure it explains and has example"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-28T11:57:10.463000",
                        "user": "Izna",
                        "text": "shouldnt it still work"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-28T11:57:38.174000",
                        "user": "Nazaret",
                        "text": "No"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-28T11:57:40.745000",
                        "user": "Nazaret",
                        "text": "???"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-28T11:57:47.828000",
                        "user": "Jhan",
                        "text": "oh"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-28T11:57:51.714000",
                        "user": "Jhan",
                        "text": "name string arg ...string"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-28T11:57:54.754000",
                        "user": "Nazaret",
                        "text": "Yes"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-28T12:00:04.098000",
                        "user": "Jhan",
                        "text": "really I cant put []string into ...string? \ud83d\ude26"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-28T12:01:13.244000",
                        "user": "Antwaun",
                        "text": "You can"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-28T12:01:21.732000",
                        "user": "Antwaun",
                        "text": "`fn(slice...)`"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-28T12:01:31.742000",
                        "user": "Antwaun",
                        "text": "Or was the dots first"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2378",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T13:44:21.106000",
                        "user": "Alaila",
                        "text": "howdy you guys"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-28T13:44:33.065000",
                        "user": "Alaila",
                        "text": "what would you say is the best go game development library"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-28T13:44:52.386000",
                        "user": "Alaila",
                        "text": "right now i use raylib but i wanted to see what else was also out there"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-28T13:44:59.436000",
                        "user": "Alaila",
                        "text": "right now i only know of ebiten"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-28T13:49:27.194000",
                        "user": "Aduen",
                        "text": "@Doad Is an endorser of ebiten"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-28T13:49:38.771000",
                        "user": "Aduen",
                        "text": "The dev is also in here iirc"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-28T13:50:10.017000",
                        "user": "Aduen",
                        "text": "<https://github.com/avelino/awesomego#gamedevelopment> contains a nice list of options"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-28T13:54:26.977000",
                        "user": "Alaila",
                        "text": "okay thank you!"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-28T14:08:01.479000",
                        "user": "Emeri",
                        "text": "I looked at gorm docs it seems like more less code than sql query"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "15",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-01T19:30:36.754000",
                        "user": "Amariyah",
                        "text": "Hey guys where's the best place typically to add a random Seed for a pkg. Is it better somewhere like foo.NewFoo() or foo.Init() or to create a new variable with a random Seed every time you're going to be using randomisation?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-01T19:48:34.446000",
                        "user": "Amariyah",
                        "text": "so it needs seeding or am i doing something wrong?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-01T19:55:58.917000",
                        "user": "Lu",
                        "text": "y tho"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-01T20:09:31.284000",
                        "user": "Olivia",
                        "text": ":thonk:"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2399",
                "List of text": [
                    {
                        "message_number": "2",
                        "ts": "2020-07-24T11:21:28.029000",
                        "user": "Anissa",
                        "text": "Any ideas why my function call in main.go is different then actual function"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-24T11:21:29.046000",
                        "user": "Anissa",
                        "text": "None"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-24T11:21:57.142000",
                        "user": "Anissa",
                        "text": "in main it says it is ``[][]int`` while in reality it is just simple int"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-24T11:23:02.722000",
                        "user": "Gwendolen",
                        "text": "Is that the correct package? Is there a similar function in a different package?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-24T11:23:09.576000",
                        "user": "Gwendolen",
                        "text": "If not your linter is just broken"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-24T11:23:26.147000",
                        "user": "Anissa",
                        "text": "there is similar function but it is in different file and under pkg not packages"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-24T11:23:52.206000",
                        "user": "Anissa",
                        "text": "None"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-24T11:23:56.106000",
                        "user": "Anissa",
                        "text": "these are similar"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-24T11:24:37.206000",
                        "user": "Anissa",
                        "text": "```goimport ( fmt\" github.com/MantasSilanskas/simpleGames/mathGame/packages\")``` my imports"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-24T11:29:08.395000",
                        "user": "Layna",
                        "text": "do you have a repo of that?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-24T11:29:59.924000",
                        "user": "Gwendolen",
                        "text": "And you're sure the function in that package returns an int?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-24T11:30:12.201000",
                        "user": "Gwendolen",
                        "text": "And you didn't mix up the two files?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-24T11:35:42.366000",
                        "user": "Anissa",
                        "text": "@stdio https://github.com/MantasSilanskas/simpleGames"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-24T11:35:52.376000",
                        "user": "Anissa",
                        "text": "Yes i am sure @Doad"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-24T11:36:12.316000",
                        "user": "Gwendolen",
                        "text": "Probably just your linter acting up try restarting your editor"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-24T11:42:19.076000",
                        "user": "Maddyson",
                        "text": "That is goland"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-24T11:43:36.374000",
                        "user": "Maddyson",
                        "text": "I'm stuck in the jetbrains universe. Too used to the way it works to consider anything else atm"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2568",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-30T14:50:34.527000",
                        "user": "Nicandro",
                        "text": "how can I write an interface that has a method  `Subscribe(msg string inChan chan interface{})`that can be satisfied by a type that has method` Subscribe(msg string inChan chan SomeStruct)`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-30T14:50:50.985000",
                        "user": "Nicandro",
                        "text": "is this even possible this way ?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-30T14:50:51.103000",
                        "user": "Maram",
                        "text": "you can't"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-30T14:50:54.284000",
                        "user": "Nicandro",
                        "text": "i thought so"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-30T14:51:04.133000",
                        "user": "Maram",
                        "text": "has to match exactly"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-30T14:51:20.892000",
                        "user": "Nicandro",
                        "text": "is there a way to make a layer in between that can make this generic ?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-30T14:51:28.929000",
                        "user": "Maram",
                        "text": "another interface"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-30T14:51:44.174000",
                        "user": "Nicandro",
                        "text": "i cant wrap my mind around how to do it quite yet"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-30T14:52:37.514000",
                        "user": "Maram",
                        "text": "```gotype MessageInterface interface { Payload() interface{} // or a real type whatever}type MessageBroker interface { Subscribe(msg string inChan chan MessageInterface)}```"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-30T14:52:51.173000",
                        "user": "Maram",
                        "text": "then you can just have whatever concrete types you want implement Payload()"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-30T14:53:02.418000",
                        "user": "Nicandro",
                        "text": "thank you"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-30T14:53:08.050000",
                        "user": "Nicandro",
                        "text": "lemme play around with that"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-30T14:53:34.717000",
                        "user": "Maddyson",
                        "text": "interfaces are so good"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-30T14:53:39.322000",
                        "user": "Maram",
                        "text": "go is good"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-30T14:53:46.316000",
                        "user": "Maddyson",
                        "text": "GOod"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-30T14:54:34.514000",
                        "user": "Alyanna",
                        "text": "Interfaces so good"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-30T14:54:43.321000",
                        "user": "Alyanna",
                        "text": "Sometimes wish for zero cost abstraction"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-30T14:55:39.909000",
                        "user": "Maram",
                        "text": "wym"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-30T14:55:59.772000",
                        "user": "Maddyson",
                        "text": "Aw I can't add emojis"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-30T14:56:12.409000",
                        "user": "Maddyson",
                        "text": "None"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-30T14:58:10.574000",
                        "user": "Alyanna",
                        "text": "gozoom"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-30T15:08:23.350000",
                        "user": "Nicandro",
                        "text": "```type Subscription interface { Type() int}type Service interface { Publish(subj string data []byte) error Subscribe(subj string cb func(m interface{})) ChanSubscribe(subj string c chan MessageInterface) error}type Client interface { Publish(subj string data []byte) error Subscribe(subj string cb func(m interface{})) ChanSubscribe(subj string c chan MessageInterface) (Subscription error)}type MessageInterface interface { Respond() interface{} // or a real type whatever}type service struct { c Client}func (s service) ChanSubscribe(subj string c chan MessageInterface) error { _ err := s.c.ChanSubscribe(subj c) return err}// NewMessageService returns a messenger service instancefunc NewMessageService(c Client) Service { return &service{c}}```"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-30T15:09:06.327000",
                        "user": "Nicandro",
                        "text": "so when I call NewMessageService with a client that implements ChanSubscribe with a chan of a concrete struct type it errors"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-30T15:09:10.976000",
                        "user": "Nicandro",
                        "text": "saying the types dont match still"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "1858",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-30T19:50:16.208000",
                        "user": "Amarra",
                        "text": "```c := make(chan int)var c2 <chan int = cc3 := (<chan int)(c)```would c2 or c3 be preferred?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-30T19:53:24.593000",
                        "user": "Harshini",
                        "text": "They _are_ but what are you trying to do?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-30T19:53:39.426000",
                        "user": "Harshini",
                        "text": "regardless of that I'd probably choose `c3`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-30T19:53:47.662000",
                        "user": "Harshini",
                        "text": "but like y tho"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-30T19:53:51.075000",
                        "user": "Zlatko",
                        "text": "That is some unholy code"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-30T19:53:53.937000",
                        "user": "Harshini",
                        "text": "ye"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-30T19:54:01.717000",
                        "user": "Zlatko",
                        "text": "receive only channel I guess"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-30T19:54:26.585000",
                        "user": "Harshini",
                        "text": "I'd just take a receive only channel as a parameter in a function"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-30T19:54:30.425000",
                        "user": "Harshini",
                        "text": "and just pass the channel"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-30T19:54:30.885000",
                        "user": "Zlatko",
                        "text": "typecasted from a normal chan"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-30T19:54:44.545000",
                        "user": "Zlatko",
                        "text": "Yeah what doad said"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-30T19:54:59.301000",
                        "user": "Amarra",
                        "text": "i'm still playing around and learning concurrency/patterns so on top of answering which is better answering why that would suck is also useful"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-30T19:56:05.306000",
                        "user": "Harshini",
                        "text": "I can't really picture a use case where you would explicity need a standalone variable to a readonly channel"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-30T19:56:13.472000",
                        "user": "Harshini",
                        "text": "a goroutine could take a readonly channel as a parameter"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-30T19:56:19.370000",
                        "user": "Harshini",
                        "text": "and you just pass your channel to it like normal"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-01-30T19:59:21.439000",
                        "user": "Harshini",
                        "text": "https://play.golang.org/p/pjFb1egU61V"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-01-30T19:59:28.028000",
                        "user": "Harshini",
                        "text": "This is a common use case for readonly channels"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-01-30T20:00:02.022000",
                        "user": "Harshini",
                        "text": "The top level channel is read/write but the channel the goroutine receives is readonly"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-01-30T20:00:05.138000",
                        "user": "Zadyn",
                        "text": "i say c2 is better"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-01-30T20:00:08.855000",
                        "user": "Harshini",
                        "text": "as it's just a signal for it to listen to"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-01-30T20:03:57.812000",
                        "user": "Amarra",
                        "text": "are `<chan` `chan` `chan<` considered the same type for var assignments?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-01-30T20:04:03.354000",
                        "user": "Amarra",
                        "text": "that's throwing me off a bit"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-01-30T20:05:43.950000",
                        "user": "Amarra",
                        "text": "```type specialFloat float64func main() { f := 42.0 var q specialFloat = 42.0 //var f2 float64 = q // float64 != specialFloat var f2 float64 = float64(q) f3 := float64(f)}```if you compare it to something like this for example"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-01-30T20:08:06.065000",
                        "user": "Harshini",
                        "text": "sorta"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-01-30T20:08:13.461000",
                        "user": "Harshini",
                        "text": "you can't cast a recive only channel to a send only"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-01-30T20:08:15.907000",
                        "user": "Harshini",
                        "text": "and vice versa"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-01-30T20:08:16.260000",
                        "user": "Lamnouar",
                        "text": "so i am confused on how i am gonna do this"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-01-30T20:08:19.588000",
                        "user": "Harshini",
                        "text": "the cast is implicit"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-01-30T20:08:31.784000",
                        "user": "Lamnouar",
                        "text": "i am trying to make my program log the pids to a file in this format"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-01-30T20:08:32.517000",
                        "user": "Harshini",
                        "text": "@atthesunrise and in your latest example just use `f3`"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-01-30T20:08:38.202000",
                        "user": "Harshini",
                        "text": "`f2` is very redundant"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-01-30T20:09:05.360000",
                        "user": "Lamnouar",
                        "text": "`taskname.task > content(\"[name]{pid}\")`"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-01-30T20:09:42.037000",
                        "user": "Lamnouar",
                        "text": "so that way people can look into the files and see the PID associated with the task"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-01-30T20:09:59.302000",
                        "user": "Lamnouar",
                        "text": "current code is at https://cdn.merith.tk/workspace/ginit"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-01-30T20:10:18.043000",
                        "user": "Harshini",
                        "text": "so what's the issue?"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-01-30T20:10:33.609000",
                        "user": "Lamnouar",
                        "text": "I dont know how im gonna do the logging"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-01-30T20:10:41.418000",
                        "user": "Harshini",
                        "text": "Write to a file?"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-01-30T20:10:45.158000",
                        "user": "Harshini",
                        "text": "You know how to do that?"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-01-30T20:11:10.419000",
                        "user": "Simeon",
                        "text": "I am trying to convert this int 12500 to 125"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-01-30T20:11:15.258000",
                        "user": "Amarra",
                        "text": "@Doad so it's sort of sounding like they're a subtype or a special outlier? float32 is not a subtype of float64 so is it just an outlier? (i can't think of a better example)"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-01-30T20:11:22.642000",
                        "user": "Simeon",
                        "text": "what best way to remove trailing zeros"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-01-30T20:11:27.348000",
                        "user": "Harshini",
                        "text": "They are a special type @atthesunrise"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-01-30T20:11:36.343000",
                        "user": "Harshini",
                        "text": "@Subi divide by 100"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-01-30T20:11:46.536000",
                        "user": "Simeon",
                        "text": "\ud83d\ude26 so simple"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-01-30T20:11:49.532000",
                        "user": "Harshini",
                        "text": "lol"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-01-30T20:11:50.160000",
                        "user": "Simeon",
                        "text": "i so dumb"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-01-30T20:12:12.666000",
                        "user": "Harshini",
                        "text": "@atthesunrise float32 and float64 are two different types"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-01-30T20:12:17.842000",
                        "user": "Harshini",
                        "text": "they are different sizes in binary"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-01-30T20:12:31.875000",
                        "user": "Amarra",
                        "text": "as i said i can't think of a better example"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-01-30T20:12:44.780000",
                        "user": "Harshini",
                        "text": "different types of channels are just different sides of the same coin"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-01-30T20:12:52.240000",
                        "user": "Harshini",
                        "text": "under the hood a channel is a struct"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-01-30T20:12:58.612000",
                        "user": "Harshini",
                        "text": "with variables indicating state etc"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-01-30T20:14:16.563000",
                        "user": "Amarra",
                        "text": "so it's more like saying chan with implementation of X"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-01-30T20:14:24.881000",
                        "user": "Amarra",
                        "text": "and i can't think of another type that works that way"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-01-30T20:14:31.393000",
                        "user": "Harshini",
                        "text": "yeah pretty much"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-01-30T20:14:35.670000",
                        "user": "Harshini",
                        "text": "it's a special type"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-01-30T20:15:31.292000",
                        "user": "Harshini",
                        "text": "And whether it's receive only or send only isn't _really_ part of the type"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-01-30T20:15:40.674000",
                        "user": "Harshini",
                        "text": "it just tells the compiler and runtime how to use it"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-01-30T20:15:43.632000",
                        "user": "Harshini",
                        "text": "it's a weird type"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-01-30T20:15:45.137000",
                        "user": "Harshini",
                        "text": "https://github.com/golang/go/blob/master/src/runtime/chan.go#L32"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-01-30T20:15:56.374000",
                        "user": "Harshini",
                        "text": "that's the struct used under the hood"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-01-30T20:25:44.658000",
                        "user": "Masud",
                        "text": "It's a generic type :robpike:"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-01-30T20:26:20.815000",
                        "user": "Harshini",
                        "text": "_shhh_"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-01-30T20:26:38.616000",
                        "user": "Harshini",
                        "text": "Don't let Mr. Pike hear you"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-01-30T20:27:00.819000",
                        "user": "Harshini",
                        "text": "the based `void ptr` \ud83d\ude4f"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-01-30T20:27:14.509000",
                        "user": "Zadyn",
                        "text": "isnt `+` technically a generic"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-01-30T20:27:22.795000",
                        "user": "Zadyn",
                        "text": "because its one thing that works on multiple types"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-01-30T20:27:26.888000",
                        "user": "Harshini",
                        "text": "it's not a type"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-01-30T20:27:31.063000",
                        "user": "Harshini",
                        "text": "it's an operation"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-01-30T20:27:36.706000",
                        "user": "Harshini",
                        "text": "generics refers to generic types"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-01-30T20:27:42.202000",
                        "user": "Anaelle",
                        "text": "No I mean `int` `float` `struct bruh`"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-01-30T20:27:46.557000",
                        "user": "Anaelle",
                        "text": "They are all `T`"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-01-30T20:27:50.521000",
                        "user": "Harshini",
                        "text": "ah yeah"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-01-30T20:28:04.254000",
                        "user": "Harshini",
                        "text": "C is great"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-01-30T20:28:05.621000",
                        "user": "Anaelle",
                        "text": "void is based though"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-01-30T20:28:06.987000",
                        "user": "Zadyn",
                        "text": "i thought generic was a function i didn't read the whole convo"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-01-30T20:28:34.496000",
                        "user": "Anaelle",
                        "text": "Idk about +"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-01-30T20:28:39.139000",
                        "user": "Anaelle",
                        "text": "It doesn't work on all types"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-01-30T20:28:44.760000",
                        "user": "Anaelle",
                        "text": "So its definitely overloaded"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-01-30T20:28:52.613000",
                        "user": "Harshini",
                        "text": "it's an operation not a type anyways"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-01-30T20:28:58.186000",
                        "user": "Harshini",
                        "text": "just a symbol for the compiler to play with"
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-01-30T20:29:17.446000",
                        "user": "Dreya",
                        "text": "Overloaded in a metaphysical way sure"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-01-30T20:30:08.026000",
                        "user": "Anaelle",
                        "text": "Its just like Java doesn't have operator overloading except + works on strings for some reason"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-01-30T20:30:17.650000",
                        "user": "Masud",
                        "text": "https://en.wikipedia.org/wiki/Operators_in_C_and_C%2B%2B#Member_and_pointer_operators"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-01-30T20:30:24.802000",
                        "user": "Masud",
                        "text": "`` is listed as an operator as well"
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-01-30T20:30:38.401000",
                        "user": "Harshini",
                        "text": "@themeeman yeah that's super weird for Java"
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-01-30T20:30:42.694000",
                        "user": "Harshini",
                        "text": "since Java strings are objects"
                    },
                    {
                        "message_number": "88",
                        "ts": "2020-01-30T20:30:56.881000",
                        "user": "Anaelle",
                        "text": "unary `` is a generic operator that works on all `T`"
                    },
                    {
                        "message_number": "89",
                        "ts": "2020-01-30T20:31:01.468000",
                        "user": "Anaelle",
                        "text": "Generics"
                    },
                    {
                        "message_number": "90",
                        "ts": "2020-01-30T20:31:04.028000",
                        "user": "Anaelle",
                        "text": "tm"
                    },
                    {
                        "message_number": "91",
                        "ts": "2020-01-30T20:32:38.289000",
                        "user": "Anaelle",
                        "text": "@Doad + works but == and != don't :facepalm:"
                    },
                    {
                        "message_number": "93",
                        "ts": "2020-01-30T20:32:57.197000",
                        "user": "Harshini",
                        "text": "\ud83c\udd71\ufe0fased ja\ud83c\udd71\ufe0fa"
                    },
                    {
                        "message_number": "94",
                        "ts": "2020-01-30T20:33:05.258000",
                        "user": "Dreya",
                        "text": "So bad"
                    },
                    {
                        "message_number": "95",
                        "ts": "2020-01-30T20:33:09.201000",
                        "user": "Dreya",
                        "text": "Kotlin gang"
                    },
                    {
                        "message_number": "96",
                        "ts": "2020-01-30T20:33:12.638000",
                        "user": "Anaelle",
                        "text": "I'm glad Go doesn't have operator overloading honestly"
                    },
                    {
                        "message_number": "97",
                        "ts": "2020-01-30T20:33:18.637000",
                        "user": "Anaelle",
                        "text": "I mean user defined"
                    },
                    {
                        "message_number": "98",
                        "ts": "2020-01-30T20:33:21.526000",
                        "user": "Masud",
                        "text": "recipe for disaster"
                    },
                    {
                        "message_number": "99",
                        "ts": "2020-01-30T20:33:22.132000",
                        "user": "Anaelle",
                        "text": "Operator overloads"
                    },
                    {
                        "message_number": "100",
                        "ts": "2020-01-30T20:33:38.541000",
                        "user": "Anaelle",
                        "text": "Its a neat thing but it doesn't work in Go"
                    },
                    {
                        "message_number": "101",
                        "ts": "2020-01-30T20:33:44.542000",
                        "user": "Anaelle",
                        "text": "Too high level"
                    },
                    {
                        "message_number": "102",
                        "ts": "2020-01-30T20:34:01.121000",
                        "user": "Masud",
                        "text": "it\\'s neat as in having a pet scorpion would be neat"
                    },
                    {
                        "message_number": "103",
                        "ts": "2020-01-30T20:34:02.953000",
                        "user": "Zadyn",
                        "text": "it isn't a neat thing imo"
                    },
                    {
                        "message_number": "104",
                        "ts": "2020-01-30T20:34:03.956000",
                        "user": "Harshini",
                        "text": "it makes things confusing I think"
                    },
                    {
                        "message_number": "105",
                        "ts": "2020-01-30T20:34:24.650000",
                        "user": "Deogracias",
                        "text": "it's a lot better to define custom methods for comparison"
                    },
                    {
                        "message_number": "106",
                        "ts": "2020-01-30T20:34:26.396000",
                        "user": "Zadyn",
                        "text": "imo it opens an opportunity for developers to make their code confusing"
                    },
                    {
                        "message_number": "107",
                        "ts": "2020-01-30T20:34:53.613000",
                        "user": "Deogracias",
                        "text": "equality should test actual equality not some arbitrary definition"
                    },
                    {
                        "message_number": "108",
                        "ts": "2020-01-30T20:35:04.424000",
                        "user": "Anaelle",
                        "text": "Exactly"
                    },
                    {
                        "message_number": "109",
                        "ts": "2020-01-30T20:35:23.107000",
                        "user": "Anaelle",
                        "text": "Operator overloading is a godsend in C# just because of == and !="
                    },
                    {
                        "message_number": "110",
                        "ts": "2020-01-30T20:35:59.288000",
                        "user": "Zadyn",
                        "text": "i once saw a class in an oop language codebase that was `FlooredFloat` and equality would check their floors"
                    },
                    {
                        "message_number": "111",
                        "ts": "2020-01-30T20:36:16.912000",
                        "user": "Deogracias",
                        "text": "I mean that could have its uses"
                    },
                    {
                        "message_number": "112",
                        "ts": "2020-01-30T20:36:24.187000",
                        "user": "Deogracias",
                        "text": "but operator overloads still suck"
                    },
                    {
                        "message_number": "113",
                        "ts": "2020-01-30T20:36:29.039000",
                        "user": "Masud",
                        "text": "`checkFloor()`"
                    },
                    {
                        "message_number": "114",
                        "ts": "2020-01-30T20:36:33.075000",
                        "user": "Masud",
                        "text": "seriously no good reason for it"
                    },
                    {
                        "message_number": "115",
                        "ts": "2020-01-30T20:36:51.737000",
                        "user": "Zadyn",
                        "text": "`floor(a) == floor(b)` isn't that hard"
                    },
                    {
                        "message_number": "116",
                        "ts": "2020-01-30T20:41:51.745000",
                        "user": "Anaelle",
                        "text": "All of the stuff you are talking about is just bad API design it would be the same if they had defined a `.equals` that did that"
                    },
                    {
                        "message_number": "117",
                        "ts": "2020-01-30T20:42:29.885000",
                        "user": "Anaelle",
                        "text": "I will say that C++ takes it way too far"
                    },
                    {
                        "message_number": "118",
                        "ts": "2020-01-30T20:42:43.281000",
                        "user": "Anaelle",
                        "text": "A ton of operators are overloadable that really shouldn't"
                    },
                    {
                        "message_number": "119",
                        "ts": "2020-01-30T20:43:02.847000",
                        "user": "Anaelle",
                        "text": "And the butchered `<<` and `>>`"
                    },
                    {
                        "message_number": "120",
                        "ts": "2020-01-30T20:43:47.623000",
                        "user": "Dreya",
                        "text": "C++ is too far in every degree"
                    },
                    {
                        "message_number": "121",
                        "ts": "2020-01-30T20:44:27.426000",
                        "user": "Anaelle",
                        "text": "https://tenor.com/view/lookhowtheymassacredmyboymememassacrekillwreckedgif14452160"
                    },
                    {
                        "message_number": "122",
                        "ts": "2020-01-30T20:52:03.148000",
                        "user": "Amarra",
                        "text": "before I move on to adding channels is this being done correctly so far? Especially focusing on the goroutines made from the loop and the wait grouphttps://play.golang.org/p/p6SUhLwtC_n"
                    },
                    {
                        "message_number": "123",
                        "ts": "2020-01-30T20:55:19.076000",
                        "user": "Harshini",
                        "text": "yeah you don't want to copy it"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "2",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-01T01:09:01.202000",
                        "user": "Reeves",
                        "text": "Hwllo"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-01T01:09:26.940000",
                        "user": "Mickel",
                        "text": "Hwllo"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-01T01:09:29.986000",
                        "user": "Reeves",
                        "text": "I am finding imposible chaining proxies with net/http. is it?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-01T01:10:05.138000",
                        "user": "Mickel",
                        "text": "Have you tried using the net proxy stuff"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-01T01:10:56.394000",
                        "user": "Reeves",
                        "text": "thanks"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2561",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-30T05:01:42.730000",
                        "user": "Andranik",
                        "text": "how can i add end=  in golang like python"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-30T05:02:21.714000",
                        "user": "Michalina",
                        "text": "I have cgo export function```go//export ext_datafunc ext_data(context unsafe.Pointer length int32) int32 {// logic goes here}```I want to call this function in some other function how can i give value to `unsafe.Pointer`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-30T05:03:56.905000",
                        "user": "Svetlana",
                        "text": "> how can i add end=  in golang like python@emnaruto07 use fmt.Print instead of fmt.Println"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-30T05:04:10.076000",
                        "user": "Andranik",
                        "text": "```package mainimport fmt\"func main() { var i j int for i = 5; i > 0; i = 1 { for j = i; j > 0; j = 1 { fmt.Printf(\"%v\\ j) } }}```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-30T05:04:23.483000",
                        "user": "Andranik",
                        "text": "im doing like this but its not working"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-30T05:04:42.633000",
                        "user": "Svetlana",
                        "text": "`\\` will print a newline"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-30T05:04:44.614000",
                        "user": "Svetlana",
                        "text": "Remove it"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-30T05:05:12.310000",
                        "user": "Andranik",
                        "text": "i want output like this:```5 4 3 2 14 3 2 13 2 12 11```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-30T05:07:05.194000",
                        "user": "Svetlana",
                        "text": "I guess you could change the `\\` in your `fmt.Printf` call with a space and add `fmt.Println()` after the inner loop"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-30T05:07:57.565000",
                        "user": "Svetlana",
                        "text": "So the first print call will be `fmt.Printf(\"%v  j)`"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-30T05:08:37.008000",
                        "user": "Andranik",
                        "text": "nope"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-30T05:08:54.886000",
                        "user": "Andranik",
                        "text": "output is like 543214321321211"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-30T05:09:37.670000",
                        "user": "Svetlana",
                        "text": "Can you show me how the code is looking now?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-30T05:11:18.803000",
                        "user": "Andranik",
                        "text": "> ```package main> > import fmt\"> > func main() {> var i j int> > for i = 5; i > 0; i = 1 {> for j = i; j > 0; j = 1 {> fmt.Printf(\"%v  j)> }> }> }```"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-30T05:11:46.712000",
                        "user": "Svetlana",
                        "text": "Add `fmt.Println()` after the second loop"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-30T05:12:16.176000",
                        "user": "Svetlana",
                        "text": "Inside the `i` loop"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-30T05:14:23.102000",
                        "user": "Andranik",
                        "text": "```5 4 3 2 1 4 3 2 1 3 2 1 2 1 1 % ``` i don't know why is % is printing."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-30T05:16:27.884000",
                        "user": "Svetlana",
                        "text": "It indicates that the output does not end on a new line"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-30T05:17:22.755000",
                        "user": "Andranik",
                        "text": "so where can i add \\?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-30T05:18:52.222000",
                        "user": "Shritha",
                        "text": "@ASB convert it"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-30T05:21:15.675000",
                        "user": "Michalina",
                        "text": "@_diamondburned_ how to convert ? I tried passing argument as `&message[0]` where message is []byte Don't know what type of data i need to pass here"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-30T05:21:43.064000",
                        "user": "Shritha",
                        "text": "`unsafe.Pointer(&message[0])`"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2248",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-24T16:45:41.521000",
                        "user": "Chosen",
                        "text": "Hi All! Which one is better? Gorm or Gorp for mysql?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-24T16:45:51.034000",
                        "user": "Olivia",
                        "text": "i've never heard of gorp"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-24T16:45:59.497000",
                        "user": "Chosen",
                        "text": "haha"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-24T16:46:20.292000",
                        "user": "Chosen",
                        "text": "how do you manage migration with gorm?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-24T16:46:37.573000",
                        "user": "Chosen",
                        "text": "i want to update column type and is there any automatic way for it?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-24T16:46:38.147000",
                        "user": "Olivia",
                        "text": "i haven't yet"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-24T16:47:02.084000",
                        "user": "Chosen",
                        "text": "I am now using AutoMigrate function and it doesn't update existing column"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-24T16:54:05.936000",
                        "user": "Kaiyon",
                        "text": "@smoke make packet types interfaces and implement different versions; if a version doesn't have a certain feature return an error"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-24T16:55:09.624000",
                        "user": "Kaiyon",
                        "text": "I was working on a server a while back and I only got as far as the metadata for the server list \ud83d\ude05 but if I ever pick it back up that's the design I'm gonna use"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-24T16:55:21.951000",
                        "user": "Apolonia",
                        "text": "yeah theres a lot that goes in to it"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-24T16:55:28.027000",
                        "user": "Apolonia",
                        "text": "as a server though you only need to support one version"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-24T16:55:32.441000",
                        "user": "Apolonia",
                        "text": "clients get the short end of the stick"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-24T16:56:22.288000",
                        "user": "Kaiyon",
                        "text": "eh I feel like supporting all the postnetty versions"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-24T16:57:06.060000",
                        "user": "Kaiyon",
                        "text": "because I was really just writing a universal lib that could be used by a server or client app I was just working on the server side to start with"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-24T16:57:31.662000",
                        "user": "Chistian",
                        "text": "@_diamondburned_ why iris had controversy ?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-24T16:57:45.911000",
                        "user": "Apolonia",
                        "text": "my issue with packets as interfaces what happens when the packet structure changes?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-24T16:57:57.298000",
                        "user": "Jkari",
                        "text": "@kip creator did some stuff"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-24T16:58:09.033000",
                        "user": "Apolonia",
                        "text": "thats gonna change the interfaces"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-24T16:58:09.678000",
                        "user": "Jkari",
                        "text": "https://www.reddit.com/r/golang/comments/b481q7/a_warning_about_githubcomkatarasiris/"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-24T16:58:50.356000",
                        "user": "Kaiyon",
                        "text": "@smoke have the interface support all possible properties and then have stubs/warnings on versions that don't support them"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-24T16:59:18.152000",
                        "user": "Kaiyon",
                        "text": "if a new version adds a new feature you have to add stubs on all the old ones :GWthedarthTohruShrug:"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-24T16:59:37.829000",
                        "user": "Apolonia",
                        "text": "sounds pretty terrible"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-24T16:59:57.116000",
                        "user": "Kaiyon",
                        "text": "could make one implementation that just has stubs for all the functions that way you can just embed that and override the functions that version supports"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-24T16:59:58.998000",
                        "user": "Apolonia",
                        "text": "i think we can do better"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-24T17:00:07.691000",
                        "user": "Apolonia",
                        "text": "ah yeah thats getting better"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-24T17:00:12.560000",
                        "user": "Kaiyon",
                        "text": "yup"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-24T17:00:19.975000",
                        "user": "Kaiyon",
                        "text": "much less boilerplate"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-24T17:00:56.060000",
                        "user": "Chistian",
                        "text": "@_diamondburned_ i read the other day about it https://dev.to/chromadream/comment/b8o2"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-24T17:02:11.096000",
                        "user": "Chistian",
                        "text": "https://dev.to/kataras/comment/b91d"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-24T17:03:46.249000",
                        "user": "Jkari",
                        "text": "yeah?w"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-24T17:03:50.207000",
                        "user": "Jkari",
                        "text": "what about it?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-24T17:12:23.240000",
                        "user": "Apolonia",
                        "text": "@superloach this guy handled it in an intersting way by translating between versions https://github.com/ShadowJonathan/MOpher"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-24T17:12:33.516000",
                        "user": "Apolonia",
                        "text": "check protocol and protocol/lib directories"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-24T17:14:28.139000",
                        "user": "Apolonia",
                        "text": "packets as interfaces doesnt sound like fun the more that i think about it"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-24T17:15:23.520000",
                        "user": "Kaiyon",
                        "text": "hm"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-24T17:15:38.435000",
                        "user": "Apolonia",
                        "text": "to be fair i dont like the translation idea either"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-24T17:15:45.069000",
                        "user": "Kaiyon",
                        "text": "kinda wanna pick my project back up but my dad is pressuring me to finish his discord bot \ud83d\ude29"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-24T17:15:53.913000",
                        "user": "Apolonia",
                        "text": "is your project on github?"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-24T17:16:11.696000",
                        "user": "Kaiyon",
                        "text": "https://github.com/superloach/farcemint"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-24T17:16:17.838000",
                        "user": "Kaiyon",
                        "text": "again I didn't get very far"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-24T17:16:34.759000",
                        "user": "Kaiyon",
                        "text": "a lot of stuff needs to be cleaned up there's missing pieces on a lot of the types especially"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-24T17:16:46.359000",
                        "user": "Kaiyon",
                        "text": "probably gonna restructure when I come back to it"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-24T17:16:51.460000",
                        "user": "Kaiyon",
                        "text": "but that was my attempt lol"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-24T17:17:27.098000",
                        "user": "Kaiyon",
                        "text": "also no clue why it's in gpl I should switch it to mit"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-24T17:18:36.606000",
                        "user": "Kaiyon",
                        "text": "and yes I'm also aware that my logger is bad lol"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-24T17:18:52.823000",
                        "user": "Apolonia",
                        "text": "im always grateful to look around and find some inspiration"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-24T17:18:53.693000",
                        "user": "Apolonia",
                        "text": "thanks for sharing \ud83d\ude42"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-24T17:19:03.938000",
                        "user": "Kaiyon",
                        "text": "no prob lol"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-24T17:21:25.848000",
                        "user": "Apolonia",
                        "text": "ive been using https://github.com/JackGameer/gomc"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-24T17:21:33.772000",
                        "user": "Apolonia",
                        "text": "theres stuff in there that would be useful server side as well"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-24T17:22:26.512000",
                        "user": "Kaiyon",
                        "text": "oh neat"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-24T17:29:07.221000",
                        "user": "Apolonia",
                        "text": "i think ive got something working here... i made a simple test setup with 3 protocol versions 1 and 2 have different fields and version three just embeds v1 and modifies it"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "1360",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-18T11:53:13.059000",
                        "user": "Haaziq",
                        "text": "Hey guys sorry to spam with trivial questions but I cannot figure out how to fit this json into a slice of structs```type OwnedToyData struct { Dead bool `json:\"dead\"` Name string `json:\"display_name\"` Durability uint8 `json:\"durability\"` Stars uint8 `json:\"stars\"`}``` JSON: ```{\"owned_toys\": [{\"dead\": false display_name\": Teddy durability\": 100 stars\": 1} {\"dead\": false display_name\": Jack durability\": 50 stars\": 2}]}```( i simplified the json to verify that it works but still cant get it to work properly)JSON string to slice of the structThe thing that throws me off is the `{\"owned_toys\":` (I had to structure it this was) I get the `error json: cannot unmarshal object into Go value of type []toys.OwnedToyData`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-18T12:14:53.846000",
                        "user": "Haaziq",
                        "text": "Its working perfectly now"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-18T12:16:35.127000",
                        "user": "Maram",
                        "text": "Good job!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-18T12:17:05.273000",
                        "user": "Maram",
                        "text": "but once it clicks it's SUPER slick"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-18T12:25:26.994000",
                        "user": "Maram",
                        "text": "That'd be one way to do it"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-18T12:25:31.480000",
                        "user": "Maram",
                        "text": "If that OwnedToys key is static"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-18T12:25:38.069000",
                        "user": "Scarlett",
                        "text": "well yeah"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-18T12:25:51.518000",
                        "user": "Scarlett",
                        "text": "if it's not it's a bit more of a pain"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-18T12:25:58.713000",
                        "user": "Maram",
                        "text": "If the top level object has keys that are not fixed gotta use the map"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-06-18T12:26:43.444000",
                        "user": "Scarlett",
                        "text": "it sucks because the only way to easily get one of the interface{}s from the map into a struct is going back to json lol"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-06-18T12:27:09.473000",
                        "user": "Scarlett",
                        "text": "I haven't found a lib that directly does map[string]interface{} to struct types"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-06-18T12:27:39.223000",
                        "user": "Maram",
                        "text": "i mean the right way is to use Unmarshal() methods"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-06-18T12:27:45.149000",
                        "user": "Scarlett",
                        "text": "well yeah"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-06-18T12:27:46.019000",
                        "user": "Maram",
                        "text": "but that's not always easy"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-06-18T12:28:01.360000",
                        "user": "Scarlett",
                        "text": "perhaps a map[string]json.RawValue or whatever would work?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-06-18T12:28:09.662000",
                        "user": "Scarlett",
                        "text": "I forget the type name something like that"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-06-18T12:29:26.555000",
                        "user": "Scarlett",
                        "text": "RawMessage excuse me"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-06-18T12:32:13.046000",
                        "user": "Haaziq",
                        "text": "Ive used map[string][]mystruct and it works flawlessly"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-06-18T12:32:53.547000",
                        "user": "Haaziq",
                        "text": "And I just got the slice that i need via the key and all good"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-06-18T12:33:13.974000",
                        "user": "Scarlett",
                        "text": "ah clever"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2249",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-24T18:29:12.847000",
                        "user": "Gavriel",
                        "text": "How do I validate a range? For example if the input is `09` it's a valid range but if it's `721` it's invalid."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-24T18:29:39.585000",
                        "user": "Gavriel",
                        "text": "Also if it's `az` or `dk` it's valid but if it's `za` it's invalid"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-24T18:30:09.321000",
                        "user": "Nazaret",
                        "text": "if statements"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-24T18:30:22.367000",
                        "user": "Gavriel",
                        "text": "Yes but do I have to hardcode it?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-24T18:31:24.747000",
                        "user": "Gavriel",
                        "text": "The hardcoded way I have thought of was: `alphabet := abcdefgh...\"` and then checking if `x` in `xy` is before or after `y`"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-24T18:31:26.130000",
                        "user": "Jayda",
                        "text": "are you validating the something is in that range or are you validating the range itself?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-24T18:31:28.411000",
                        "user": "Sacha",
                        "text": ":GWchadThonkery:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-24T18:31:36.347000",
                        "user": "Gavriel",
                        "text": "@johnM the range itself"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-24T18:31:57.943000",
                        "user": "Mahmud",
                        "text": "are you looking for regex a function or what"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-24T18:32:02.426000",
                        "user": "Apolonia",
                        "text": "@superloach after a lot of mucking about I think about as far as I can go wtih things is https://pastebin.com/DmRrA2Bm and type switch on the returned packets"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-24T18:32:04.241000",
                        "user": "Mahmud",
                        "text": "you could do it with any of those"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-24T18:32:22.533000",
                        "user": "Gavriel",
                        "text": "@mnhn I'm thinking of a good way to validate a range \u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-24T18:32:28.418000",
                        "user": "Mahmud",
                        "text": "if statements"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-24T18:32:36.408000",
                        "user": "Gavriel",
                        "text": "Yes but what do I check in if statements"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-24T18:32:42.267000",
                        "user": "Mahmud",
                        "text": "legit split on ``"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-24T18:32:44.086000",
                        "user": "Nazaret",
                        "text": "the..values :thonkcerned:"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-24T18:32:56.343000",
                        "user": "Gavriel",
                        "text": "Yes but what do I check them against?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-24T18:33:01.916000",
                        "user": "Nazaret",
                        "text": "the input?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-24T18:33:02.359000",
                        "user": "Mahmud",
                        "text": "the other value?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-24T18:33:05.229000",
                        "user": "Jayda",
                        "text": "so for I'd start by checking the edges and then validate that the internals match what you want"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-24T18:33:06.848000",
                        "user": "Gavriel",
                        "text": "Yes but how?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-24T18:33:11.393000",
                        "user": "Nazaret",
                        "text": "if statements"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-24T18:33:12.550000",
                        "user": "Mahmud",
                        "text": "STRINGS.SPLIT"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-24T18:33:20.891000",
                        "user": "Sacha",
                        "text": "see if the value given is outside the range of 0 to 9"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-24T18:33:40.636000",
                        "user": "Nazaret",
                        "text": "`if x > z {}`"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-24T18:33:44.172000",
                        "user": "Gavriel",
                        "text": "@Str\u0153m @mnhn so that? https://discordapp.com/channels/118456055842734083/118456055842734083/703312155365081181"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-24T18:33:46.256000",
                        "user": "Jayda",
                        "text": "so if you know `a  z` is valid then check that the range input has an a at the beginning and a z at the end if not then you don't have to do anything else if it does then start going through the range"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-24T18:33:47.524000",
                        "user": "Sacha",
                        "text": ":GWchadThinkeyes:"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-24T18:33:53.816000",
                        "user": "Gavriel",
                        "text": "@Str\u0153m oh didn't know I could do that."
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-24T18:34:00.006000",
                        "user": "Nazaret",
                        "text": "if statements"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-24T18:34:04.023000",
                        "user": "Nazaret",
                        "text": "with the value and the input"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-24T18:34:29.999000",
                        "user": "Gavriel",
                        "text": "Yeah now I get it. I didn't know I could compare letters directly."
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-24T18:34:36.656000",
                        "user": "Nazaret",
                        "text": "well of course you can"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-24T18:34:42.899000",
                        "user": "Nazaret",
                        "text": "im not sure why you wouldve thought otherwise"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-24T18:34:43.785000",
                        "user": "Gavriel",
                        "text": "Good to know that's useful."
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-24T18:34:49.053000",
                        "user": "Nazaret",
                        "text": "characters have order"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-24T18:34:55.981000",
                        "user": "Gavriel",
                        "text": "Well I have never had the need to do it before."
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-24T18:35:00.246000",
                        "user": "Jayda",
                        "text": "I'm pretty sure you can do that in most/all languages"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-24T18:35:11.099000",
                        "user": "Gavriel",
                        "text": "Never had to do that in any language before."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-24T18:35:22.732000",
                        "user": "Mahmud",
                        "text": "br0 just cast them to runes then to BigEndian encoded UTF16 and then compare them against the pointer value of a character location in a slices string"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-24T18:35:26.398000",
                        "user": "Mahmud",
                        "text": "the basics"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-24T18:35:34.001000",
                        "user": "Mahmud",
                        "text": "\ud83d\ude0e"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-24T18:35:36.265000",
                        "user": "Jayda",
                        "text": "makes sense it helps to play around and test the limits of what you can do"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-24T18:35:45.813000",
                        "user": "Sacha",
                        "text": "it just converts it to the ascii or rune i guess in this scenario and that is ordered"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-24T18:35:54.030000",
                        "user": "Jayda",
                        "text": "the worst that happens is it doesn't work"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-24T18:35:58.675000",
                        "user": "Sacha",
                        "text": "utf8 bois"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-24T18:36:11.979000",
                        "user": "Mahmud",
                        "text": "if statement are powerful"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-24T20:05:58.604000",
                        "user": "Elke",
                        "text": "I solved it by using a .netrc file"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-24T20:10:02.772000",
                        "user": "Corrine",
                        "text": "When I do a `err := json.NewDecoder(r.Body).Decode(obj)` when I check for the err and it's not nil I want to return a bad request response but include the clients request body. Is there a clean way I can get back at the body now that it's been read? I like the simplicity of the `json.NewDecoder()` function over doing something like ```gobytebois err := ioutil.ReadAll()if err != nil { things}err = json.Unmarshal(bytebois obj)if err != nil { yet another error check render.Render(w r badReq(bytebois))}```"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-24T20:10:42.130000",
                        "user": "Corrine",
                        "text": "Can I have the reader read to two locations at once?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2329",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-26T22:26:00.123000",
                        "user": "Kamariana",
                        "text": "Hi all! Go noob here working on a very basic http server using the `net` package for learning purposes. I have this method to read an incoming request:```gofunc request(conn net.Conn) { scanner := bufio.NewScanner(conn) separatorLine := true // continue after first empty line for scanner.Scan() { ln := scanner.Text() fmt.Println(ln) if ln ==  { if separatorLine { // check the next line it could contain body separatorLine = false continue } else { // Request is over break } } }}```Http leaves a blank line between the headers and the body my method reads all the way to the blank line and then just hangs forever. If I simply break at the blank line `if ln ==  { break; }` it breaks correctly and eventually return. If I remove the `if` statement altogether it also hangs.I\\'m really confused as to what is going on here. I don\\'t know if I\\'m missing something obvious or if there\\'s something non trivial happening in this loop."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-26T22:27:40.602000",
                        "user": "Izna",
                        "text": "side note: you should check for errors from scanner"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-26T22:32:47.646000",
                        "user": "Braxtyn",
                        "text": "There's really no need to unless you're looking for a specific error."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-26T22:32:56.817000",
                        "user": "Braxtyn",
                        "text": "If `Scan()` returns true the error is non`nil`."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-26T22:33:04.020000",
                        "user": "Braxtyn",
                        "text": "If it's false the loop will exit."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-26T22:33:21.559000",
                        "user": "Kamariana",
                        "text": "`scanner.Err()` is nil but it doesn't report on `io.EOF`. I don't think it should be that though I'm sending this request:```POST / HTTP/1.1ContentType: text/plainContentLength: 15This is my body```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-26T22:36:02.352000",
                        "user": "Braxtyn",
                        "text": "What exactly do you mean by the function hangs\"?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-26T22:36:10.028000",
                        "user": "Braxtyn",
                        "text": "Does the loop continue forever? Does some function call block?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-26T22:37:24.242000",
                        "user": "Kaiyon",
                        "text": "try omitting the `continue`?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-26T22:39:10.983000",
                        "user": "Kamariana",
                        "text": "@Carson the execution stops as if something was blocking. Omitting the `continue` also has the same result. This is the full code if anyone wants to try and run it:```gopackage mainimport ( bufio\" fmt\" log\" net\")func main() { ln err := net.Listen(\"tcp :8080\") if err != nil { log.Fatalln(err) } addr := ln.Addr() fmt.Printf(\"%v server listening on %v\\ addr.Network() addr.String()) for { conn err := ln.Accept() if err != nil { fmt.Printf(\"connection error: %v\\ err) } defer ln.Close() go handler(conn) }}func handler(conn net.Conn) { defer func() { fmt.Println(\"closing connection\") conn.Close() }() request(conn) response(conn)}func request(conn net.Conn) { scanner := bufio.NewScanner(conn) separatorLine := true // continue after first empty line for scanner.Scan() { ln := scanner.Text() fmt.Println(ln) if ln ==  { if separatorLine { // check the next line it could contain body separatorLine = false continue } else { // Request is over break } } }}func response(conn net.Conn) { body := Hello World!\" fmt.Fprint(conn HTTP/1.1 200 OK\\\\r\\\") fmt.Fprintf(conn ContentLength: %d\\\\r\\ len(body)) fmt.Fprint(conn ContentType: text/html\\\\r\\\") fmt.Fprint(conn \\\\r\\\") fmt.Fprint(conn body)}```"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-26T22:39:30.988000",
                        "user": "Braxtyn",
                        "text": "I'm asking you to figure out what's happening. \ud83d\ude1b"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-26T22:39:58.182000",
                        "user": "Braxtyn",
                        "text": "Try to see what's actually going wrong within the function. Either the loop is going forever or a function call blocks but these are completely different scenarios."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-26T22:40:15.212000",
                        "user": "Braxtyn",
                        "text": "They may look the same from the caller of the function but in debugging it they're not."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-26T22:41:10.353000",
                        "user": "Kamariana",
                        "text": "ah of course \ud83d\ude06 I've been running in the debugger and added a few print statements the function is definitely blocking. It never goes back to the beginning of the loop"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-26T22:41:33.650000",
                        "user": "Braxtyn",
                        "text": "I\\'m not sure what the function means."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-26T22:41:36.437000",
                        "user": "Crispin",
                        "text": "None"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-26T22:41:40.431000",
                        "user": "Braxtyn",
                        "text": "Do you mean `request`?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-26T22:41:42.127000",
                        "user": "Crispin",
                        "text": "uh i'm doing something wrong"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-26T22:41:50.003000",
                        "user": "Crispin",
                        "text": "to send a Discord webhook"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-26T22:41:56.462000",
                        "user": "Crispin",
                        "text": "it returns me map[code:50006 message:Cannot send an empty message]"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-26T22:42:22.896000",
                        "user": "Crispin",
                        "text": "so I gess there is something wrong with my message some could help me?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-26T22:42:33.014000",
                        "user": "Kamariana",
                        "text": "@Carson aye sorry `func request` specifically it blocks where I am calling `continue`"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-26T22:43:02.792000",
                        "user": "Braxtyn",
                        "text": "I'm not following. `continue` is inside of `request` but you're saying that `request` is blocking."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-26T22:43:29.630000",
                        "user": "Braxtyn",
                        "text": "You need to figure out what is happening inside of `request`; not from the perspective of the thing calling `request`."
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-26T22:43:43.793000",
                        "user": "Braxtyn",
                        "text": "Is a specific function call inside of `request` blocking? Is the `for` loop running forever?"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-26T22:48:12.799000",
                        "user": "Kamariana",
                        "text": "sorry I realise I'm not expressing myself too well here. The for loop is not running forever: if I step into the debugger looking at the call stack I can see it stops at `internal/poll.runtime_pollWait` and that seems to be it. If I add a print statement at the top of the loop it is never reached once I past the empty line"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-26T22:50:08.303000",
                        "user": "Kamariana",
                        "text": "If I pause I can see that there's a lock: one of the local variables is `unlockf: runtime.netpollblockcommit`"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-26T22:51:04.522000",
                        "user": "Crispin",
                        "text": "yo what the hell is this mess"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-26T22:51:15.379000",
                        "user": "Kaiyon",
                        "text": "me too"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-26T22:52:03.920000",
                        "user": "Crispin",
                        "text": "```goletStmt ok := s.(ast.LetStatement)```"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-26T22:52:54.814000",
                        "user": "Crispin",
                        "text": "particularly the part in parens"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-26T22:53:01.796000",
                        "user": "Hewitt",
                        "text": "It\u2019s a type assertion"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-26T22:53:22.136000",
                        "user": "Hewitt",
                        "text": "It asserts s into a ast.LetStatement"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-26T22:53:37.067000",
                        "user": "Kaiyon",
                        "text": "yup"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-26T22:53:37.100000",
                        "user": "Hewitt",
                        "text": "Yes"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-26T22:53:46.074000",
                        "user": "Crispin",
                        "text": "ok thanks"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-26T22:56:10.700000",
                        "user": "Hewitt",
                        "text": "So is that scan ever returning anything"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-26T22:59:38.260000",
                        "user": "Kamariana",
                        "text": "@Madxmike if I remove the `if` with the continue statement it returns just fine but I never get to read the body of the request. If I leave it in there or I remove the `if` statement that checks for the empty line (so I don\\'t call `break`) the code just hangs (for lack of a better word). In other words this works:```gofunc request(conn net.Conn) { scanner := bufio.NewScanner(conn) separatorLine := true // continue after first empty line for scanner.Scan() { ln := scanner.Text() fmt.Println(ln) if ln ==  { break } }}```"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "35",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T01:30:31.549000",
                        "user": "Salome",
                        "text": "any reason why i'd get back an empty byte array on a socket receive? i know the client is sending data"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T01:31:21.053000",
                        "user": "Salome",
                        "text": "and i've never ran into this while using sockets before and my 70% asleep brain can't figure it out lol"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-02T01:32:10.457000",
                        "user": "Miryam",
                        "text": "What is a socket\"? TCP UDP etc.? Are you checking the error on the read?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-02T01:32:18.768000",
                        "user": "Salome",
                        "text": "tcp and i am yes"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-02T01:32:34.312000",
                        "user": "Miryam",
                        "text": "Are you sure there's space in the slice that you're passing in on the `Read`?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-02T01:32:40.159000",
                        "user": "Salome",
                        "text": "dets err := ioutil.ReadAll(conn) if err != nil { panic(err) }"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-02T01:33:03.806000",
                        "user": "Salome",
                        "text": "i also tried the more manual approach"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-02T01:33:11.554000",
                        "user": "Salome",
                        "text": "_ err = r.Read(sizeb) besizeb = binary.BigEndian.Uint32(sizeb) dets := make([]byte besizeb) _ err = io.ReadFull(r dets) if err != nil { log.Println(err) break }"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-02T01:33:17.271000",
                        "user": "Salome",
                        "text": "which is also giving me "
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-02T01:33:33.648000",
                        "user": "Miryam",
                        "text": "Try using just a `Read` I'll bet you'll get an EOF in the error :p"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-02T01:33:58.122000",
                        "user": "Salome",
                        "text": "using a read means I need to have the size of the incoming data though yeah?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-02T01:34:06.265000",
                        "user": "Salome",
                        "text": "unless i want to manage variablze sized chunks"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-02T01:34:21.657000",
                        "user": "Salome",
                        "text": "okay sec"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-02T01:34:52.088000",
                        "user": "Salome",
                        "text": "you're right in that i never checked the error of the r.read when I was doing it that way earlier"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-08-02T01:37:33.510000",
                        "user": "Salome",
                        "text": "okay you were right lol"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-08-02T01:38:39.849000",
                        "user": "Miryam",
                        "text": "Yeah so the way I came to that conclusion is that `ReadAll` doesn't return an error on EOF because that's the only way it knows to stop reading\u2014it goes until EOF and if it's an EOF the error is `nil`"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-08-02T01:39:46.803000",
                        "user": "Miryam",
                        "text": "At this point you know you're getting an EOF which could mean your client is closing the connection (FIN or RST) or that you're hitting your deadline; does it instantly return EOF or is it delayed?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-08-02T01:40:01.611000",
                        "user": "Salome",
                        "text": "instantly"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-08-02T01:41:35.052000",
                        "user": "Salome",
                        "text": "i don't think the client is closing it prematurely or at all really"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-08-02T01:41:56.538000",
                        "user": "Miryam",
                        "text": "Well there's a great way to find out: it's Wireshark time \ud83d\ude05"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-08-02T01:42:21.252000",
                        "user": "Miryam",
                        "text": "Find a packet set your conversation filter and it'll be super easy to see what's actually happening"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-08-02T01:50:38.563000",
                        "user": "Josselin",
                        "text": "hours seems like a relatively short interval"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-08-02T01:51:39.718000",
                        "user": "Josselin",
                        "text": "you\\'re probably fine with having just a lone Ticker that fires off some UpdateCerts method"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2264",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-25T05:14:32.266000",
                        "user": "Aubrea",
                        "text": "Is there anyway to maintain header order when doing a http request"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-25T05:14:50.308000",
                        "user": "Aubrea",
                        "text": "did a little research and seems that headers are sent using map[string] and these are not ordered"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-25T05:20:18.050000",
                        "user": "Hewitt",
                        "text": "https://github.com/golang/go/issues/24375#issuecomment378022533"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-25T05:20:35.080000",
                        "user": "Hewitt",
                        "text": "doesnt seem like a way to do it thats not just replacing parts of the package"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-25T05:21:30.451000",
                        "user": "Hewitt",
                        "text": "feels xy but i dont know enough to day so \ud83d\ude1b"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-25T05:23:46.040000",
                        "user": "Corrine",
                        "text": "Why do you want them to be ordered? What problem are you experiencing?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-25T05:25:06.767000",
                        "user": "Olivia",
                        "text": "because poorly behaved applications care about ordering"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-25T05:25:16.942000",
                        "user": "Olivia",
                        "text": "the spec doesn't dictate ordering"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-25T05:25:22.295000",
                        "user": "Olivia",
                        "text": "but lazy developers rely on it"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-25T05:27:05.729000",
                        "user": "Olivia",
                        "text": "lazy/ignorant"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-25T06:14:57.297000",
                        "user": "Olivia",
                        "text": "not necessarily"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-25T06:15:07.470000",
                        "user": "Olivia",
                        "text": "it's entirely possible the service you're trying to interact with was written by someone who was"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-25T06:15:33.616000",
                        "user": "Olivia",
                        "text": "but http headers are explicitly by definition a key:value structure"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-25T06:15:37.300000",
                        "user": "Olivia",
                        "text": "order is irrelevant"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-25T06:15:49.664000",
                        "user": "Olivia",
                        "text": "with the exception of...receiving duplicate keys"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-25T06:16:03.458000",
                        "user": "Olivia",
                        "text": "in which case i believe the last provided key:value pair is the authoritative data"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-25T06:16:36.070000",
                        "user": "Olivia",
                        "text": "if you need ordering because the API requires it it isn't your fault"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-25T06:17:59.444000",
                        "user": "Olivia",
                        "text": "and if you want to something like print the headers out in alphabetical order for debug purposes"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-25T06:18:01.362000",
                        "user": "Olivia",
                        "text": "just"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-25T06:18:03.706000",
                        "user": "Olivia",
                        "text": "sort the map keys"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-25T06:18:48.377000",
                        "user": "Natori",
                        "text": "Hey guys im having an issue i wanna start a process and then stop it properly but `cmd` (`exec.Cmd`) becomes nil"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-25T06:19:14.825000",
                        "user": "Natori",
                        "text": "even though the process is running in the background"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-25T06:21:51.803000",
                        "user": "Natori",
                        "text": "i can upload the whole code if its of any help but i checked `pgrep Xvfb` and it is still running even though `cmd == nil`"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-25T06:22:24.945000",
                        "user": "Hewitt",
                        "text": "do you want to wait until its finished to continue?"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-25T06:22:48.235000",
                        "user": "Natori",
                        "text": "@Madxmike no its supposed to run in background"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-25T06:22:57.837000",
                        "user": "Natori",
                        "text": "but when i want to stop it the `cmd` is nil and i cannot"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-25T06:23:29.887000",
                        "user": "Natori",
                        "text": "can i dereference `cmd.Process` and keep it or something?"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-25T06:24:26.185000",
                        "user": "Hewitt",
                        "text": "so you want to be able to stop it at any time"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-25T06:24:32.738000",
                        "user": "Natori",
                        "text": "yeah"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-25T06:24:39.545000",
                        "user": "Hewitt",
                        "text": "use ExecuteContext"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-25T06:24:43.106000",
                        "user": "Hewitt",
                        "text": "and give it a context"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-25T06:24:46.814000",
                        "user": "Hewitt",
                        "text": "that you can cancel"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-25T06:25:05.872000",
                        "user": "Natori",
                        "text": "do you mean `CommandContext`?"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-25T06:25:13.349000",
                        "user": "Hewitt",
                        "text": "yeah"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-25T06:25:14.772000",
                        "user": "Hewitt",
                        "text": "that one"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-25T06:25:22.996000",
                        "user": "Natori",
                        "text": "thanks for the help \ud83d\ude42"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-25T06:25:32.754000",
                        "user": "Hewitt",
                        "text": "when the context ends it will kill the process"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-25T06:25:33.719000",
                        "user": "Hewitt",
                        "text": "iirc"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-25T06:25:42.644000",
                        "user": "Hewitt",
                        "text": "` The provided context is used to kill the process (by calling os.Process.Kill) if the context becomes done before the command completes on its own. `"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-25T06:25:43.626000",
                        "user": "Hewitt",
                        "text": "yep"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-25T06:26:27.314000",
                        "user": "Olivia",
                        "text": "go is gud"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-25T06:27:28.179000",
                        "user": "Hewitt",
                        "text": "deezy coming in with them hot takes"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-25T06:35:29.537000",
                        "user": "Olivia",
                        "text": "if you read the docs and do what go wants you to at least"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-25T06:45:05.985000",
                        "user": "Manal",
                        "text": "does go have any sort of concept of lazy importing/function calls?"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-25T06:47:23.886000",
                        "user": "Hewitt",
                        "text": "if i have a struct like ```gotype Client struct { ... ws websocket.Conn rtc webrtc.PeerConnection}``` and i need to implement a `Close() error` method on it that would `Close()` both connections what would be the best way of returning the possible errors from them in one error?"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "1060",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-26T21:52:18.906000",
                        "user": "Amitai",
                        "text": "Hey guys does anyone here have an example of using RSA Public Key and Private Key to encrypt and sign files?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-26T22:12:25.857000",
                        "user": "Boujema",
                        "text": "@trm217 don't roll your own digital signature scheme"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-26T22:12:28.962000",
                        "user": "Boujema",
                        "text": "https://golang.org/pkg/crypto/ecdsa/"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-26T22:17:42.015000",
                        "user": "Makaila",
                        "text": "@bluefirecorp thank you I will check it out."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "35",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-02T12:40:06.812000",
                        "user": "Hughes",
                        "text": "anyone know any discord bots that can be used to monitor github organization repositories and what not for new commits pull requests etc.."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-02T12:45:20.440000",
                        "user": "Zea",
                        "text": "I am working on a projcet where I need to create an admin dashboard but I can't decide between `httprouter` and `chi` for router framework . There area really lots of web frameworks out there. Any recommendations?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-02T13:00:24.405000",
                        "user": "Hughes",
                        "text": "for thsoe curious i found the answer https://support.discordapp.com/hc/enus/articles/228383668IntrotoWebhooks"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-02T13:01:05.264000",
                        "user": "Zanari",
                        "text": "How good is goorm as an ORM engine?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-02T13:02:31.055000",
                        "user": "Zanari",
                        "text": "I am thinking of creating a database application in golang with postgres as db. What do you guys prefer Raw sql query or ORM such as goorm?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-02T13:07:54.214000",
                        "user": "Harshini",
                        "text": "SQL always"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-02T13:08:03.598000",
                        "user": "Harshini",
                        "text": "SQL good ORM bad"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-02T13:08:28.204000",
                        "user": "Harshini",
                        "text": "Anytime someone posts ORM based code here it's almost always longer and more complex than the SQL equivalent"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-02T13:11:49.101000",
                        "user": "Anderson",
                        "text": "@Sgt_Tailor sure but still I need to do some stuff around since `go get` will try to acess watever fake adress I give it...```$ go get insecure gitea.local/fakinator000/repopackage gitea.local/fakinator000/repo: unrecognized import path gitea.local/fakinator000/repo (http/https fetch: Get http://gitea.local/fakinator000/repo?goget=1: dial tcp: lookup gitea.local: no such host)```"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-02T13:12:58.051000",
                        "user": "Zlatko",
                        "text": "It shouldn't as it just invokes git iirc"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-02T13:13:58.491000",
                        "user": "Zanari",
                        "text": "@Doad In Python it is always the other way around. Any specific reason. I believe orm makes code more readable. Of course that is my personal bias."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-02T13:14:11.886000",
                        "user": "Piya",
                        "text": "@vaibhavjha I'd just use gopg its simple effective and performant"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-02T13:14:43.128000",
                        "user": "Harshini",
                        "text": "I'm specifically talking about Go"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-02T13:14:45.476000",
                        "user": "Anderson",
                        "text": "also acessing localhost:3000/fakinator000/repo?goget=1 gives the following result:``` go get insecure localhost:3000/fakinator000/repo ```"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-02T13:14:48.987000",
                        "user": "Harshini",
                        "text": "The SQL package is super simple"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-02T13:14:58.147000",
                        "user": "Harshini",
                        "text": "Any Go ORM I've seen looks pretty bad"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-02T13:15:16.706000",
                        "user": "Harshini",
                        "text": "I think most people here agree to use SQL instead of ORM"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-02T13:15:24.633000",
                        "user": "Piya",
                        "text": "only problem is you gotta close dem rows or it becomes shitshow in very small time"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-02T13:15:36.335000",
                        "user": "Piya",
                        "text": "also scanning is not very pleasant"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-02T13:16:01.255000",
                        "user": "Harshini",
                        "text": "`defer row.Close()`"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-02T13:16:08.516000",
                        "user": "Harshini",
                        "text": "`.Scan(&someVar)`"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-02T13:16:11.166000",
                        "user": "Harshini",
                        "text": "It's not so bad"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-02T13:16:22.882000",
                        "user": "Piya",
                        "text": "struct scanning I mean"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-11-02T13:16:29.728000",
                        "user": "Harshini",
                        "text": "It's the same?"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-02T13:16:40.414000",
                        "user": "Harshini",
                        "text": "depending on how it's stored in the DB"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-02T13:17:27.780000",
                        "user": "Harshini",
                        "text": "and you can implement the Scanner interface on types"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-02T13:17:30.448000",
                        "user": "Piya",
                        "text": "usually ends up in `Scan(&v1 &v2 &v3....)`"
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-11-02T13:17:46.521000",
                        "user": "Harshini",
                        "text": "If you're selecting several discreet values yeah"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-11-02T13:18:29.614000",
                        "user": "Harshini",
                        "text": "Pretty sure you'd have to do something similar to retrieve several values with an ORM"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-11-02T13:18:47.825000",
                        "user": "Piya",
                        "text": "struct tags make life bit easier"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-11-02T13:19:04.202000",
                        "user": "Harshini",
                        "text": "why would you need to scan multiple values for a struct?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-11-02T13:19:13.291000",
                        "user": "Harshini",
                        "text": "struct > json > db"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-11-02T13:19:18.727000",
                        "user": "Harshini",
                        "text": "db > json > struct"
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-11-02T13:19:22.489000",
                        "user": "Harshini",
                        "text": "a single stored value"
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-11-02T13:19:48.932000",
                        "user": "Anderson",
                        "text": "@Sgt_Tailor I guess it checks if the URL I gave it is the same as the remote url... if I find a way to skip this check then I'm solved with this whole thingie"
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-11-02T13:20:05.178000",
                        "user": "Harshini",
                        "text": "And you can implement the Scanner interface on your type with a single method so you can handle the scan however you'd like"
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-11-02T13:24:23.247000",
                        "user": "Marinica",
                        "text": "If new and starting with Go should I use Go modules for new projects?"
                    },
                    {
                        "message_number": "39",
                        "ts": "2019-11-02T13:32:50.537000",
                        "user": "Zlatko",
                        "text": "@Huskey it shouldn't be as far as I know. I've used this trick to fetch a repo from an entirely different url before go modules were a thing"
                    },
                    {
                        "message_number": "40",
                        "ts": "2019-11-02T13:45:52.627000",
                        "user": "Anderson",
                        "text": "@Sgt_Tailor modified the /etc/hosts file of my laptop it now contains a `127.0.0.1 arch.sus` entry running gitea on port 80 `go get` doesn't complain anymore \ud83d\ude42"
                    },
                    {
                        "message_number": "41",
                        "ts": "2019-11-02T13:46:03.219000",
                        "user": "Anderson",
                        "text": "I feel like I used a hammer to solve this..."
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "47",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-03T01:27:20.127000",
                        "user": "Kataleia",
                        "text": "what is the first value when doing a runtime assertion?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-03T01:27:27.954000",
                        "user": "Kataleia",
                        "text": "```goif v ok := k.(string); ok {  }```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-03T01:27:31.618000",
                        "user": "Kataleia",
                        "text": "what would v be?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-03T01:27:45.977000",
                        "user": "Kataleia",
                        "text": "the new value of k as a string?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-03T01:37:44.783000",
                        "user": "Miking",
                        "text": "```golang...func NewContext(width height int) Context { dc := &Context{} dc.Width = width dc.Height = height dc.ColorBuffer = image.NewNRGBA(image.Rect(0 0 width height)) return dc}func SavePNG(path string im image.Image) error { file err := os.Create(path) if err != nil { return err } defer file.Close() return png.Encode(file im)}context := NewContext(widthscale heightscale)image := context.Image()SavePNG(\"output.png image)```"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-03T01:43:50.848000",
                        "user": "Ameia",
                        "text": "@Lachee u can build it with `O0` CFLAG option which reduces compilation time afaik @Teddy strings is nothing more than pointer to allocated memory and its header. While some variable holds its pointer it are same string"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-03T01:51:02.270000",
                        "user": "Kataleia",
                        "text": "coolio"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-03T01:51:04.478000",
                        "user": "Kataleia",
                        "text": "thanks"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T06:31:06.560000",
        "end_date": "2020-07-31T23:58:55.917000",
        "messages": [
            {
                "conversation_id": "2566",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-30T08:03:31.991000",
                        "user": "Celise",
                        "text": "Morning in GoLand is there a way to generate comments similar to phpdoc by typing in / and clicking enter?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-30T08:08:56.780000",
                        "user": "Yuki",
                        "text": "I would assume that if there is GoLand should provide it."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-30T08:16:51.113000",
                        "user": "Shritha",
                        "text": "you don't generate those comments in Go"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-30T08:16:59.417000",
                        "user": "Shritha",
                        "text": "there's no point"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-30T08:17:00.890000",
                        "user": "Suhar",
                        "text": "`//`"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-30T08:17:26.484000",
                        "user": "Suhar",
                        "text": "i use vimcommentary makes it really easy"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-30T08:17:41.239000",
                        "user": "Shritha",
                        "text": "godoc already generates enough documentation that you would only use comments to state behaviors you want clarified and not obvious things"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-30T08:21:14.614000",
                        "user": "Celise",
                        "text": "How do I use godoc generate?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-30T14:11:33.543000",
                        "user": "Safiyya",
                        "text": "hi!"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-30T14:11:37.655000",
                        "user": "Safiyya",
                        "text": "```govar v compareVariables variableRead err := ioutil.ReadFile(\"/home/ubuntu/savedState/ + symbol) if err != nil { errorLog.Println(fmt.Sprintf(\"no file for variables: %v err)) v = variableInitialize() } else{ err = json.Unmarshal(variableRead &v) if err != nil { errorLog.Println(fmt.Sprintf(\"unmarshaling error: %v err)) chanUnsubscribe < symbol return } }```"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-30T14:11:52.964000",
                        "user": "Safiyya",
                        "text": "its going to the else statement here but i have no files of the sort so it hsould trigger the if"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-30T14:11:58.386000",
                        "user": "Safiyya",
                        "text": "is my logic here wrong?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-30T14:14:02.180000",
                        "user": "Maram",
                        "text": "i mean one of your assumptions is wrong"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-30T14:14:03.115000",
                        "user": "Maram",
                        "text": "somewhere"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-30T14:14:49.169000",
                        "user": "Maram",
                        "text": "also"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-30T14:15:03.475000",
                        "user": "Maram",
                        "text": "you can just do `log.Printf(\"unmarshalling error: %s err)`"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-30T14:15:22.294000",
                        "user": "Safiyya",
                        "text": "ah my b"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-30T14:15:23.455000",
                        "user": "Safiyya",
                        "text": "ill change that"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-30T14:15:32.743000",
                        "user": "Safiyya",
                        "text": "well i legit dont have any files in savedState"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-30T14:15:49.267000",
                        "user": "Safiyya",
                        "text": "yet it keeps trying to unmarshal"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-30T14:15:56.152000",
                        "user": "Safiyya",
                        "text": "so i get an unmarhslaing error cause there is nothign there"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-30T14:16:27.086000",
                        "user": "Maram",
                        "text": "okay so there's a difference between no file and an empty file"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-30T14:16:51.475000",
                        "user": "Safiyya",
                        "text": "```goinvalid character E looking for beginning of value```"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-30T14:16:52.623000",
                        "user": "Maram",
                        "text": "and i'm fairly sure you'd get an error if the file you're trying to open didn't exist"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-30T14:16:56.446000",
                        "user": "Safiyya",
                        "text": "thats the error"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-30T14:17:00.569000",
                        "user": "Maram",
                        "text": "yeah"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-30T14:17:01.029000",
                        "user": "Safiyya",
                        "text": "for unmarshaling"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-30T14:17:02.199000",
                        "user": "Espiridion",
                        "text": "The VsCode plugin keeps removing imports despite the fact that I'm using them how do I turn this off?"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-30T14:17:03.668000",
                        "user": "Maram",
                        "text": "so you're opening a file"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-30T14:17:09.672000",
                        "user": "Maram",
                        "text": "and it has stuff in it that isn't json"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-30T14:18:20.502000",
                        "user": "Safiyya",
                        "text": "how can i hceck if there is stuff in it"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-30T14:18:20.749000",
                        "user": "Huxley",
                        "text": "yeah it returns an error if there isnt a file"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-30T14:18:23.722000",
                        "user": "Safiyya",
                        "text": "and that its json"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-07-30T14:18:31.537000",
                        "user": "Maram",
                        "text": "well"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-07-30T14:18:32.969000",
                        "user": "Huxley",
                        "text": "you can do `cat link`"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-07-30T14:18:37.034000",
                        "user": "Huxley",
                        "text": "oh my bad"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-07-30T14:18:37.428000",
                        "user": "Safiyya",
                        "text": "wel i would want it to returnt he err"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-07-30T14:18:41.581000",
                        "user": "Safiyya",
                        "text": "so it doesn't unmarshal"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-07-30T14:18:43.616000",
                        "user": "Maram",
                        "text": "let's take a step back"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-07-30T14:18:51.296000",
                        "user": "Maram",
                        "text": "and ask why this file has bad data in it"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-07-30T14:19:22.470000",
                        "user": "Safiyya",
                        "text": "thats the funy part it dotn"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-07-30T14:19:25.260000",
                        "user": "Safiyya",
                        "text": "dont even exist"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-07-30T14:19:27.515000",
                        "user": "Safiyya",
                        "text": "lmao"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-07-30T14:19:34.819000",
                        "user": "Maram",
                        "text": "i mean"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-07-30T14:19:35.683000",
                        "user": "Maram",
                        "text": "it does"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-07-30T14:19:41.805000",
                        "user": "Maram",
                        "text": "or you'd get an error from ReadFile"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-07-30T14:19:52.514000",
                        "user": "Maram",
                        "text": "`ls lah`"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-07-30T14:20:02.208000",
                        "user": "Maram",
                        "text": "and `cat`"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-07-30T14:22:51.420000",
                        "user": "Safiyya",
                        "text": "lemme check that out"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-07-30T14:22:54.563000",
                        "user": "Safiyya",
                        "text": "see wha ti get"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "46",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-02T23:58:47.358000",
                        "user": "Hughes",
                        "text": "What're the effects of the `s` and `w` params passed into `ldflags` when running go build? Will it cause decreased performance or any issues?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-02T23:59:23.204000",
                        "user": "Tyasia",
                        "text": "uhh"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-02T23:59:30.609000",
                        "user": "Tyasia",
                        "text": "s is strip symbols i believe"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-02T23:59:43.446000",
                        "user": "Tyasia",
                        "text": "not sure what w is"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-02T23:59:45.747000",
                        "user": "Tyasia",
                        "text": "but either way"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-02T23:59:47.558000",
                        "user": "Tyasia",
                        "text": "`ld help`"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-02T23:59:54.258000",
                        "user": "Tyasia",
                        "text": "or `man ld`"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-03T00:00:00.782000",
                        "user": "Tyasia",
                        "text": "documentation is your friend"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-03T00:00:21.004000",
                        "user": "Hughes",
                        "text": "oh so `ldflags` feeds into `ld`?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-03T00:00:28.534000",
                        "user": "Tyasia",
                        "text": "i mean break it down"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-03T00:00:35.338000",
                        "user": "Tyasia",
                        "text": "ld flags"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-03T00:00:49.148000",
                        "user": "Hughes",
                        "text": "good point lmao"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-03T00:00:49.691000",
                        "user": "Hughes",
                        "text": "thanks"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-03T00:01:10.172000",
                        "user": "Tyasia",
                        "text": "godspeed"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-03T00:03:11.811000",
                        "user": "Hughes",
                        "text": "hrmm i was able to find docs for `s` in `man ld` but not `w`"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-03T00:03:29.899000",
                        "user": "Hughes",
                        "text": "does `w` remove dwarf tables?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-03T00:04:03.587000",
                        "user": "Tyasia",
                        "text": "i'll be damned"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-03T00:04:05.119000",
                        "user": "Tyasia",
                        "text": "it isn't there"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-03T00:04:17.258000",
                        "user": "Tyasia",
                        "text": "well now i'm the clown"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-03T00:04:19.163000",
                        "user": "Tyasia",
                        "text": "\ud83e\udd21"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-03T00:04:29.876000",
                        "user": "Hughes",
                        "text": "eh `s` was there so only half a clown? XD"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-03T00:04:59.124000",
                        "user": "Hughes",
                        "text": "https://golang.org/cmd/link/"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-03T00:05:10.946000",
                        "user": "Hughes",
                        "text": "yup `w` is the DWARF symbol table"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-03T00:05:49.483000",
                        "user": "Tyasia",
                        "text": "good to know"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-03T00:59:15.490000",
                        "user": "Jermari",
                        "text": "@deezy got ccache working. It doesnt save that much time but i guess any little bit helps."
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-03T00:59:58.415000",
                        "user": "Jermari",
                        "text": "at least builds don't timeout anymore"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "68",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-04T01:29:32.253000",
                        "user": "Lakendra",
                        "text": "does anyone know how to install a package from a repo branch other than main? or at least from a local repo?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-04T01:47:52.056000",
                        "user": "Harshini",
                        "text": "Go to the location in your gopath and switch its branch"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-04T01:51:41.872000",
                        "user": "Lakendra",
                        "text": "Oh"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-01T05:01:13.368000",
        "end_date": "2020-04-30T23:48:53.870000",
        "messages": [
            {
                "conversation_id": "2451",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T18:39:13.448000",
                        "user": "Jianjun",
                        "text": "Is this casting?```go for _ fieldErr := range err.(validator.ValidationErrors) {```The `err.(validator.ValidationErrors) ` part"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T18:39:43.166000",
                        "user": "Izna",
                        "text": "looks like a type assertion"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T18:39:49.443000",
                        "user": "Jianjun",
                        "text": "Ohh OK."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T18:40:13.451000",
                        "user": "Jianjun",
                        "text": "Ahh Oright. Thanks guys \ud83d\udc4d"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T19:01:39.168000",
                        "user": "Jianjun",
                        "text": "I\\'m generating custom error slice:```gofunc create(err validator.FieldError) map[string]string { errorMap := map[string]string{} errorMap[\"field\"] = err.Field() errorMap[\"condition\"] = err.ActualTag() return errorMap}func Generate(errors validator.ValidationErrors) []map[string]string { var generated []map[string]string for _ err := range errors { g := create(err) generated = append(generated g) } return generated}```Problem is that for some (probs clear reason) they are not in order```json[ { condition\": required\", field\": firstName\" }, { condition\": required\", field\": lastName\" }, { condition\": required\", field\": address\" } ]````field` should be before `condition`"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-30T19:03:29.264000",
                        "user": "Olivia",
                        "text": "i mean"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-30T19:03:34.983000",
                        "user": "Jianjun",
                        "text": "Ahh go maps wont maintain insertion order"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-30T19:03:35.231000",
                        "user": "Olivia",
                        "text": "it's just being sorted lexicographically"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-30T19:04:02.443000",
                        "user": "Jianjun",
                        "text": "Thanks"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-30T19:04:19.225000",
                        "user": "Nazaret",
                        "text": "the whole concept of map doesnt have order"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-30T19:04:25.580000",
                        "user": "Nazaret",
                        "text": "dont work with it expecting it to have one"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-30T19:04:27.891000",
                        "user": "Olivia",
                        "text": "maps are unordered"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-30T19:04:32.026000",
                        "user": "Nazaret",
                        "text": "lexical order is just for display purposes"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-30T19:05:05.683000",
                        "user": "Jianjun",
                        "text": "Yeah makes sense. \u270c"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-30T19:10:23.930000",
                        "user": "Izna",
                        "text": "is using lua for config files a bad idea"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-30T19:11:02.746000",
                        "user": "Olivia",
                        "text": "yes"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-30T19:11:38.420000",
                        "user": "Olivia",
                        "text": "https://stackoverflow.com/questions/5969417/whyisitabadideatowriteconfigurationdataincode"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-30T19:11:39.691000",
                        "user": "Izna",
                        "text": "yeah i thought so but also i wanted to do some fancy things like have variables in config files and math"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-30T19:12:24.525000",
                        "user": "Izna",
                        "text": "also the main code would be in Go"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-30T19:14:35.653000",
                        "user": "Olivia",
                        "text": "> variables in the config file"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-30T19:14:39.975000",
                        "user": "Olivia",
                        "text": "there are options for that but"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-30T19:14:41.760000",
                        "user": "Olivia",
                        "text": "sounds weird"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-30T19:15:41.355000",
                        "user": "Izna",
                        "text": "to give context its a discord bot but i want it to be easily configurable and for exmaple if they want an info command they might want to get the version of the bot and stuff like that"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-30T19:16:32.209000",
                        "user": "Olivia",
                        "text": "i'm not sure where a variable comes in though"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-30T19:16:45.672000",
                        "user": "Olivia",
                        "text": "in the config file"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-30T19:17:12.683000",
                        "user": "Jkari",
                        "text": "yaml maybe?"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-30T19:17:19.229000",
                        "user": "Jkari",
                        "text": "~~jsonx~~"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-30T19:17:27.334000",
                        "user": "Izna",
                        "text": "the way i wouldve done it in lua is like make a lua instance then do like `VERSION=\"1.2.3\"` then run all the code in the file"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-30T19:17:33.955000",
                        "user": "Jkari",
                        "text": "wait no not jsonx"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-30T19:17:39.158000",
                        "user": "Olivia",
                        "text": "right but like"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-30T19:17:44.440000",
                        "user": "Jkari",
                        "text": "jsonnet"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-30T19:17:52.339000",
                        "user": "Olivia",
                        "text": "the bot version is available in your app code already"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-30T19:18:05.589000",
                        "user": "Olivia",
                        "text": "so...why does the config file need to reference it?"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-30T19:18:14.173000",
                        "user": "Olivia",
                        "text": "you're going fromapp > config file > app"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-30T19:18:27.114000",
                        "user": "Olivia",
                        "text": "alternatively"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-30T19:18:30.141000",
                        "user": "Olivia",
                        "text": "the version is in the config file"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-30T19:18:33.709000",
                        "user": "Olivia",
                        "text": "which"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-30T19:18:36.504000",
                        "user": "Olivia",
                        "text": "means it's already there"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-30T19:18:39.299000",
                        "user": "Olivia",
                        "text": "and you don't need a variable"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-30T19:18:42.671000",
                        "user": "Izna",
                        "text": "for example if they wanted info command they would do like bot is running ${VERSION} ...."
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-30T19:18:55.125000",
                        "user": "Olivia",
                        "text": "well sure"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-30T19:19:00.671000",
                        "user": "Olivia",
                        "text": "let the user provide format strings"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-30T19:19:23.646000",
                        "user": "Olivia",
                        "text": "```versionMessage = thanks for using botName ver. ( %s )\"```"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-30T19:19:38.038000",
                        "user": "Olivia",
                        "text": "and render that in your go app"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-30T19:20:03.260000",
                        "user": "Izna",
                        "text": "is there anyhting in Go that will automatically do that for json strings"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-30T19:20:18.594000",
                        "user": "Izna",
                        "text": "isnt it `\\\\+` or something"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-30T19:20:52.840000",
                        "user": "Jkari",
                        "text": "for json strings? I don't think so"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-30T19:21:13.127000",
                        "user": "Jkari",
                        "text": "could use text/template lol"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-30T19:21:24.065000",
                        "user": "Avner",
                        "text": "if it is between  it shows it as an error"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-30T19:21:24.101000",
                        "user": "Olivia",
                        "text": "yes"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-30T19:21:26.625000",
                        "user": "Izna",
                        "text": "\ud83d\ude0e"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-30T19:21:27.478000",
                        "user": "Olivia",
                        "text": "that was my next idea"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-30T19:21:29.163000",
                        "user": "Avner",
                        "text": "I will try between ``"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-30T19:21:38.435000",
                        "user": "Yitzchok",
                        "text": "to match a literal `+` in a regexp use `\\\\+` or `[+]`"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-30T19:21:46.700000",
                        "user": "Jkari",
                        "text": "you should use \\\\`\\\\`"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-30T19:21:47.987000",
                        "user": "Jkari",
                        "text": "almost always"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-30T19:21:48.721000",
                        "user": "Olivia",
                        "text": "```versionMessage = thanks for using botName ver. {{ .Version }}\"```"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-04-30T19:21:49.278000",
                        "user": "Jkari",
                        "text": "for regex"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-04-30T19:22:05.990000",
                        "user": "Yitzchok",
                        "text": "and yes for regular expressions you should always use backtick strings"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-04-30T19:22:09.113000",
                        "user": "Izna",
                        "text": "i will use text template then"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-04-30T19:22:34.474000",
                        "user": "Avner",
                        "text": "yes it works like that thanks guys"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-04-30T19:27:45.220000",
                        "user": "Oshea",
                        "text": "can gomaxprocs be set in a string"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-04-30T19:27:49.360000",
                        "user": "Oshea",
                        "text": "like 1\"/\"2"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-04-30T19:27:54.947000",
                        "user": "Oshea",
                        "text": "Or does that cause issues on some go versions"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-04-30T19:28:00.523000",
                        "user": "Olivia",
                        "text": "i mean"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-04-30T19:28:03.806000",
                        "user": "Olivia",
                        "text": "what's the type of the variable"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-04-30T19:28:08.469000",
                        "user": "Oshea",
                        "text": "environment"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-04-30T19:28:10.345000",
                        "user": "Oshea",
                        "text": "var"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-04-30T19:28:30.079000",
                        "user": "Olivia",
                        "text": "uh"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-04-30T19:28:31.417000",
                        "user": "Olivia",
                        "text": "not quite"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-04-30T19:28:33.019000",
                        "user": "Olivia",
                        "text": "https://golang.org/pkg/runtime/#GOMAXPROCS"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-04-30T19:28:42.072000",
                        "user": "Olivia",
                        "text": "`func GOMAXPROCS(n int) int`"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-04-30T19:28:45.053000",
                        "user": "Olivia",
                        "text": "it's pretty unambiguous"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-04-30T19:29:03.507000",
                        "user": "Oshea",
                        "text": "or does it have to be set explicitly at runtime"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-04-30T19:29:05.833000",
                        "user": "Olivia",
                        "text": "ah i see"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-04-30T19:29:09.130000",
                        "user": "Olivia",
                        "text": "okay well"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-04-30T19:29:12.682000",
                        "user": "Olivia",
                        "text": "env vars are always strings"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-04-30T19:29:17.748000",
                        "user": "Oshea",
                        "text": "oh"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-04-30T19:29:18.761000",
                        "user": "Olivia",
                        "text": "it doesn't matter what they represent"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-04-30T19:29:20.924000",
                        "user": "Olivia",
                        "text": "they're strings"
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-04-30T19:29:25.997000",
                        "user": "Oshea",
                        "text": "gotcha thnx"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-04-30T19:29:26.531000",
                        "user": "Oshea",
                        "text": "^_^"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-04-30T19:30:00.027000",
                        "user": "Olivia",
                        "text": "same way `\"1\"` is a string"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-04-30T19:30:07.324000",
                        "user": "Olivia",
                        "text": "even though it ostensibly represents a number"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "92",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-05T04:34:06.183000",
                        "user": "Kataleia",
                        "text": "does net/http automatically decompress a gzipped http response body?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-05T04:35:47.200000",
                        "user": "Kataleia",
                        "text": "I see `Uncompressed` is on the response but I am unsure if gzip is supported or not"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-05T04:36:28.353000",
                        "user": "Kataleia",
                        "text": "re: <https://golang.org/pkg/net/http/#Response>"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-05T04:37:09.225000",
                        "user": "Kataleia",
                        "text": "Maybe it follows the contentencoding header and decompresses accordingly?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-05T04:39:53.041000",
                        "user": "Kataleia",
                        "text": "it looks like <https://golang.org/pkg/net/http/#Transport> handles it for me"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-05T04:40:36.126000",
                        "user": "Piya",
                        "text": "yes I think it does automatically decompresses gzip"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-05T04:40:53.392000",
                        "user": "Kataleia",
                        "text": "I will tias"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-05T04:41:36.949000",
                        "user": "Piya",
                        "text": "https://golang.org/src/net/http/transport.go#L173"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-05T04:42:15.737000",
                        "user": "Kataleia",
                        "text": "ah so I just don't set the header"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-05T04:42:19.101000",
                        "user": "Kataleia",
                        "text": "alright thanks \u2764"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-01T04:49:13.533000",
        "end_date": "2020-01-30T23:59:44.864000",
        "messages": [
            {
                "conversation_id": "231",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-13T07:41:23.040000",
                        "user": "Dalanie",
                        "text": "Hi! I have identical struct `A` & `B`. How can I convert pointer to `A` to pointer to `B`?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-13T07:44:51.635000",
                        "user": "Zlatko",
                        "text": "@Lncn the runtime doesn't detect stale goroutines as there isn't an easy way for it to do so properly"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-13T07:45:05.357000",
                        "user": "Xyrus",
                        "text": "if they're the same named type it'd be `A = B` I think"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-13T07:45:20.069000",
                        "user": "Zlatko",
                        "text": "Doing what you mentioned causes what is referred to as a goroutine leak"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-13T07:49:55.877000",
                        "user": "Dalanie",
                        "text": "@Jake not same named. Full example:```gopackage mainimport ( fmt\")type A struct { num int}type B struct { num int}func main() { var a = []A{&A{1} &A{2}} var b = []B{} for _ v := range a { b = append(b v) // What will I do here? } fmt.Printf(\"A is %#v\\ a) fmt.Printf(\"A is %#v\\ b)}```<https://play.golang.org/p/eAP2HVYlqtt>"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-13T07:55:22.246000",
                        "user": "Zlatko",
                        "text": "You can probably use some unsafe pointer magic. But this seems like an xy problem"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-13T07:55:31.102000",
                        "user": "Zlatko",
                        "text": "Why would you need this functionality?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-13T08:03:48.060000",
                        "user": "Dalanie",
                        "text": "There is some attempt to broke static types checking in existing app. It have abstract DB handler as interface and method that accept options:```gotype Options struct {/.../}type DBHandler interface { Find(filter interface{} opts ...Options)}```And I want to write implementation for this interface. And `Options` the same as MongoDB's Options objects from driver. I want to pass this `Options` directly to MongoDB's driver."
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-13T08:05:50.514000",
                        "user": "Dalanie",
                        "text": "Yes I think directly pass pointers is not good idea. But what I can do in this case? In loop create new MongoDB's options object and try to copy from app's options field to field?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-13T08:13:09.272000",
                        "user": "Naszir",
                        "text": "because if they are the same just implementing the `Find` method that accepts the same types of arguments will be enough to satisfy the interface"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-13T08:13:14.227000",
                        "user": "Dalanie",
                        "text": "No it same but defined in different programs. App's Options user's app and MongoDB's Options in MongoDB's driver. I think when App was created developeer means thant MongoDB will be main db handler implementation make api mongodblike and just copy structs."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-13T08:18:36.654000",
                        "user": "Xyrus",
                        "text": "this sounds like you want to use the MongoDB struct directly"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-13T08:19:08.458000",
                        "user": "Dalanie",
                        "text": "Do you mean that I must redefine app's options as interface?```gotype Options interface {}/.../type DBHandler interface {Find{filter interface{} opts ...Options)}```And MongoDB's options can be passed directly?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-13T08:19:33.404000",
                        "user": "Xyrus",
                        "text": "like `opt := mongodb.Options{Num: 5}` (example obv idk what the package is actually named)"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-13T08:19:45.879000",
                        "user": "Xyrus",
                        "text": "or you could type alias it"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-13T08:19:56.901000",
                        "user": "Xyrus",
                        "text": "`type Options = mongodb.Options`"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-13T08:20:39.599000",
                        "user": "Dalanie",
                        "text": "No I cant use alias because it will create explicin dependency on mongo package."
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-13T08:21:09.990000",
                        "user": "Xyrus",
                        "text": "ah I think I might've misunderstood"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-13T08:21:30.886000",
                        "user": "Xyrus",
                        "text": "so you're trying to create a generic DB interface and mongodb is one of the DBs that could be used?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-13T08:21:48.222000",
                        "user": "Dalanie",
                        "text": "When I take conversation here I'm alreare misunderstood too \ud83d\ude02"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-13T08:22:01.123000",
                        "user": "Dalanie",
                        "text": "@Jake yes!"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-13T08:22:30.383000",
                        "user": "Dalanie",
                        "text": "DB Handler must be generic db interface and MongoDB one of implementations."
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-13T08:22:44.183000",
                        "user": "Xyrus",
                        "text": "ah okay gotcha \ud83d\ude42"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-11-13T08:22:57.352000",
                        "user": "Xyrus",
                        "text": "how big is the options struct? as in how many fields?"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-13T08:24:08.720000",
                        "user": "Dalanie",
                        "text": "So In generic interface defined Options struct. There is ~5 different strcucts for diff methods and all of them are small. May be just copy is the best solution."
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-13T08:24:34.973000",
                        "user": "Xyrus",
                        "text": "yeah if they're small I would honestly just go with a big switch statement personally"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-13T08:24:59.741000",
                        "user": "Xyrus",
                        "text": "and manually assign the fields"
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-11-13T08:25:56.101000",
                        "user": "Dalanie",
                        "text": "Yes. I think now that use unsafe pointers that was my first idea is not good solution. If mongodb's driver will change in the future i will have a lot of dance."
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-11-13T08:26:33.305000",
                        "user": "Dalanie",
                        "text": "Ok just copy. Thanks for help. Alone can't think propertly \ud83d\ude42"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-11-13T08:26:43.032000",
                        "user": "Xyrus",
                        "text": "np good luck!"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-11-13T08:27:02.845000",
                        "user": "Naszir",
                        "text": "would it be possible to somehow not rely on a specific options struct"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-11-13T08:28:12.503000",
                        "user": "Naszir",
                        "text": "or perhaps define an options struct that you could use with the generic driver and write helper conversion funcs from db specific options to that generic struct"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-11-13T08:29:45.662000",
                        "user": "Dalanie",
                        "text": "@awoo yes. may be better in this case use gereric options in handler and write helper to each implementation. My first wish do less work is incorect."
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-11-13T08:30:54.705000",
                        "user": "Naszir",
                        "text": "I think writing conversions for each implementation is way more scalable than switch statements"
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-11-13T08:31:32.066000",
                        "user": "Dalanie",
                        "text": "thanks a lot"
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-11-13T08:31:59.993000",
                        "user": "Naszir",
                        "text": "good luck!"
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-11-13T08:56:34.846000",
                        "user": "Meabh",
                        "text": "weird you'd think the compiler would optimise that away as it's dead code but maybe not"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1758",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T07:26:56.604000",
                        "user": "Annakate",
                        "text": "structure method must start with upper case if i want to export it ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-25T07:33:59.564000",
                        "user": "Sebastien",
                        "text": "Hello is it possible to create a map of structure"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-25T07:35:24.999000",
                        "user": "Sebastien",
                        "text": "``` map[int]array of time.Time ```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-25T07:35:33.219000",
                        "user": "Sebastien",
                        "text": "and the array will look like this"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-25T07:35:54.198000",
                        "user": "Mingliang",
                        "text": "Yes it is"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-25T07:35:59.144000",
                        "user": "Sebastien",
                        "text": "``` [time.Time float64] ```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-25T07:36:05.639000",
                        "user": "Mingliang",
                        "text": "No its not"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-25T07:36:06.618000",
                        "user": "Mingliang",
                        "text": "Lol"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-25T07:36:17.092000",
                        "user": "Mingliang",
                        "text": "Well not without losing type safety"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-25T07:36:25.968000",
                        "user": "Mingliang",
                        "text": "You generally cant mix types in a slice"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-25T07:36:52.723000",
                        "user": "Mingliang",
                        "text": "You can use a struct"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-25T07:37:04.549000",
                        "user": "Mingliang",
                        "text": "So a slice of structs containing a time.Time and a float"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-25T07:38:34.632000",
                        "user": "Sebastien",
                        "text": "actualy if i think about it it will be enough to do it like this map[int]time.Time"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-25T07:38:39.402000",
                        "user": "Sebastien",
                        "text": "so it will look like this"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-25T07:38:54.509000",
                        "user": "Sebastien",
                        "text": "``` map[float64] time.Time ```"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-25T07:39:22.983000",
                        "user": "Sebastien",
                        "text": "but how do i declare it"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-25T07:39:52.481000",
                        "user": "Sebastien",
                        "text": "because i can't do"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-25T07:40:02.128000",
                        "user": "Sebastien",
                        "text": "``` values := map[int]time.Time ```"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-25T07:40:27.207000",
                        "user": "Yufan",
                        "text": "https://tour.golang.org/moretypes/19"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1780",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T20:44:06.016000",
                        "user": "Loida",
                        "text": "what's the point of using maps?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-25T20:47:07.516000",
                        "user": "Loida",
                        "text": "but you could still do `[2]string{}` right?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-25T20:52:31.171000",
                        "user": "Loida",
                        "text": "thank you"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-25T20:59:49.527000",
                        "user": "Leddie",
                        "text": "> `listen localhost:51081 127.0.0.1:51081:` why 2 :think:@Str\u0153m hmm the error is coming from lspnet.ListenUDP"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-25T21:00:15.720000",
                        "user": "Leddie",
                        "text": "`s := lspnet.JoinHostPort(\"localhost strconv.Itoa(port))`"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-25T21:04:10.727000",
                        "user": "Leddie",
                        "text": "nvm"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-25T21:04:11.958000",
                        "user": "Leddie",
                        "text": "i got it"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-25T21:04:13.799000",
                        "user": "Leddie",
                        "text": "than u"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-25T21:04:14.933000",
                        "user": "Leddie",
                        "text": "k"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-25T21:04:21.277000",
                        "user": "Leddie",
                        "text": "thank "
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Discord Gophers",
        "channel_name": "golang",
        "month": "Aug2020-Sep2020",
        "start_date": "2020-08-01T00:01:15.595000",
        "end_date": "2020-09-30T18:25:55.416000",
        "messages": [
            {
                "conversation_id": "1845",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T12:45:26.734000",
                        "user": "Adian",
                        "text": "Is it that important to follow the go project structure for a small project ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-28T12:45:52.954000",
                        "user": "Josselin",
                        "text": "it's useful"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-28T12:47:02.362000",
                        "user": "Josselin",
                        "text": "to stop you from trying to do nongo stuff in go"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-28T12:47:27.331000",
                        "user": "Mickel",
                        "text": "What even is \u201cthe go project structure\u201d?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-28T12:47:51.734000",
                        "user": "Mickel",
                        "text": "Flat is justice for small projects"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-28T12:47:55.198000",
                        "user": "Adian",
                        "text": "https://github.com/golangstandards/projectlayout this"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-28T12:48:54.040000",
                        "user": "Mickel",
                        "text": "I mean that\u2019s just like a collection of \u201ca bunch of people use this folder\u201d"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-28T12:49:27.383000",
                        "user": "Mickel",
                        "text": "There\u2019s no like official project layout"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-28T12:49:48.886000",
                        "user": "Mickel",
                        "text": "The only folder that is special is internal and vendor"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-28T12:50:00.905000",
                        "user": "Adian",
                        "text": "Maybe not official but common/best practices still exists I guess"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-28T12:50:22.207000",
                        "user": "Mickel",
                        "text": "I don\u2019t even think it\u2019s that lol"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-28T12:50:39.148000",
                        "user": "Mickel",
                        "text": "It\u2019s more of \u201chey this is a common folder name and this is what it\u2019s used for\u201d"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-28T12:50:47.730000",
                        "user": "Mickel",
                        "text": "Like \u201ccmd\u201d"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-28T12:51:03.893000",
                        "user": "Mickel",
                        "text": "Not \u201cuse this folder names and conventions\u201d"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-28T12:52:03.724000",
                        "user": "Josselin",
                        "text": "nobody's going to come after you for not following that layout"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-28T12:52:10.950000",
                        "user": "Mickel",
                        "text": "Anyways for small projects just throw everything into a single directory and when you start needing to separate things so so"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-28T12:52:12.201000",
                        "user": "Josselin",
                        "text": "but it's ended up being on average the nicest to work with in go"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-28T12:52:43.529000",
                        "user": "Mickel",
                        "text": "A lot of people look at that repo and think they need every one of those folders"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-28T12:52:54.178000",
                        "user": "Mickel",
                        "text": "Like this is a JavaScript framework lol"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-28T12:55:04.901000",
                        "user": "Adian",
                        "text": "Yeah i think i'll stick to something minimal for now"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-28T12:55:36.111000",
                        "user": "Josselin",
                        "text": "start with a single flat package"
                    }
                ]
            }
        ]
    }
]