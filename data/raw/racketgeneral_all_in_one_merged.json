[
    {
        "team_domain": "Racket",
        "channel_name": "general",
        "month": "Aug2020-Oct2020",
        "start_date": "2020-08-02T06:41:50.103000",
        "end_date": "2020-10-30T15:45:15.367000",
        "messages": [
            {
                "conversation_id": "1",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T06:41:50.103000",
                        "user": "Liahm",
                        "text": "morning"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T06:43:47.903000",
                        "user": "Liahm",
                        "text": "i\\'m considering Racket along with some other staticallycompiled languages (e.g. Nim) for writing (multiplatform (desktop) app. Racket\\'s builtin GUI is great plus but wonder if the widget set is goodenough for writing general desktop apps or it is more suited just for DrRacket?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-02T06:47:28.211000",
                        "user": "Kiam",
                        "text": "it's generally good. there are complex desktop apps written with it."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-02T06:48:33.826000",
                        "user": "Kiam",
                        "text": "ActivityLog is the most well known of them https://github.com/alexhhh/ActivityLog2"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-02T06:49:24.670000",
                        "user": "Kiam",
                        "text": "the author also has a blog where he often explains how to do various things with the racket GUI framework https://alexhhh.github.io/"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-02T08:46:43.967000",
                        "user": "Liahm",
                        "text": "@notjackI know about that app and commented/asked something on his blog but never got any reply..."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-02T08:47:44.846000",
                        "user": "Liahm",
                        "text": "any other app besides AL2 which can be inspected?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-02T08:47:56.446000",
                        "user": "Kiam",
                        "text": "he tends to hang out in the Racket Slack you might have an easier time getting in touch with him there"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-02T08:47:57.835000",
                        "user": "Liahm",
                        "text": "i know only about that one and DrR"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-02T08:48:11.674000",
                        "user": "Liahm",
                        "text": "ok"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-02T08:48:34.570000",
                        "user": "Kiam",
                        "text": "I don't know of others offhand. The mailing list would be a good place to ask for others."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-02T08:48:44.737000",
                        "user": "Liahm",
                        "text": "Slack channel is more active?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-02T08:49:07.143000",
                        "user": "Kiam",
                        "text": "Yes but mainly it just has a different crowd"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-02T08:49:29.509000",
                        "user": "Kiam",
                        "text": "more of the Racket core dev team is there for example"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-08-02T18:58:15.637000",
                        "user": "Liahm",
                        "text": "have a need for sqlite3 bindings then ffi to bind/use 3rd party Clib the rest should be libs written in host langauge based on that 3rd party C lib and frontend for gui"
                    }
                ]
            },
            {
                "conversation_id": "2",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T18:37:09.984000",
                        "user": "Chara",
                        "text": "The more specific you can be about your app the more likely u will get a useful response. Eg you could figure out what GUI library you\u2019re going to use if not racket\u2019s so you have a point of comparison. The field of \u201chow do I write a cross platform GUI app\u201d is huge. And do you even need one? Too many parameters. @gour"
                    }
                ]
            },
            {
                "conversation_id": "3",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T18:57:09.214000",
                        "user": "Liahm",
                        "text": "@Moinate i want something like this: http://saravali.de/screenshots.html"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T20:00:44.866000",
                        "user": "Alyiah",
                        "text": "```scheme(~a bar baz (if foo (~a foo quux) ))```?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-02T20:02:32.485000",
                        "user": "Cortlin",
                        "text": "Oh that works!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-02T20:02:35.229000",
                        "user": "Cortlin",
                        "text": "Thanks"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-02T20:14:01.361000",
                        "user": "Cortlin",
                        "text": "Is there a way to easily convert a `hasheq?` to a prefab or am I on a wrong path?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-02T20:32:31.292000",
                        "user": "Cortlin",
                        "text": "`struct` made with `#:prefab`"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-02T20:33:02.523000",
                        "user": "Cortlin",
                        "text": "https://docs.racketlang.org/guide/definestruct.html#%28part._prefabstruct%29"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-02T21:24:08.933000",
                        "user": "Cortlin",
                        "text": "Yup"
                    }
                ]
            },
            {
                "conversation_id": "4",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T19:41:01.683000",
                        "user": "Cortlin",
                        "text": "What would be the most concise way to write something like```Scheme(if foo (stringappend bar baz foo quux) (stringappend bar baz))```"
                    }
                ]
            },
            {
                "conversation_id": "5",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T20:18:01.866000",
                        "user": "Brayan",
                        "text": "what do you mean by prefab?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T21:18:50.147000",
                        "user": "Brayan",
                        "text": "erkin how do you want the easy conversion to work? is your hash from symbol to value and those symbols are assumed to match up with the struct members?"
                    }
                ]
            },
            {
                "conversation_id": "6",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-02T20:52:33.789000",
                        "user": "Chara",
                        "text": "@gour Those controls look fine to use racket/GUI. I don\u2019t think you\u2019ll find any bad surprises. If you\u2019re generating those circles yourself ask around about the correct Racket graphics library (pict maybe?; I always use 2htdp/image but don\u2019t write GUI apps). Good luck!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-02T20:53:10.020000",
                        "user": "Chara",
                        "text": "If you want mobile friendly this probably isn\u2019t the route though."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-03T08:19:47.028000",
                        "user": "Liahm",
                        "text": "> @gour Those controls look fine to use racket/GUI. I don\u2019t think you\u2019ll find any bad surprises. If you\u2019re generating those circles yourself ask around about the correct Racket graphics library (pict maybe?; I always use 2htdp/image but don\u2019t write GUI apps). Good luck!@Moinate Thank you! I don't need circles  only rectangles...\ud83d\ude42 Will do some evaluation (e.g. ffi) to see how it goes"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-03T08:21:12.183000",
                        "user": "Liahm",
                        "text": "> If you want mobile friendly this probably isn\u2019t the route though.@Moinate Is there any plan to have Racket on e.g. Android in the future?"
                    }
                ]
            },
            {
                "conversation_id": "7",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-03T07:43:53.950000",
                        "user": "Ahadi",
                        "text": "Hi all! is there a way to make racket REPL colorize its output like in DrRacket?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-03T18:46:17.205000",
                        "user": "Britten",
                        "text": "@gour I think you can run Racket(BC) on Android but it's not easy"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-03T20:53:36.923000",
                        "user": "Cortlin",
                        "text": "It's very easy to setup Racket on Termux but you probably want more than that."
                    }
                ]
            },
            {
                "conversation_id": "8",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-04T01:09:33.115000",
                        "user": "Somer",
                        "text": "> ```scheme> (~a bar baz (if foo (~a foo quux) ))> ```> ?@nixin72 Mind blown tbh"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-04T01:10:09.583000",
                        "user": "Somer",
                        "text": "Didn't expect to be able to do that"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-04T02:37:25.743000",
                        "user": "Alyiah",
                        "text": "Lol I mean it\\'d be the same thing in just about any language @spacey \ud83c\udf0c ```jsbar + baz + (foo ? (foo + quux) )```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-04T04:40:50.300000",
                        "user": "Brayan",
                        "text": "another way that's a couple extra characters (because `~a` is such a short name):```lisp(apply ~a bar baz (if foo (foo quux) ()))```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-04T07:19:32.753000",
                        "user": "Zayne",
                        "text": "that quotes foo and quux"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-04T15:42:56.620000",
                        "user": "Somer",
                        "text": "I never got that far into Racket. How else do you make a list?"
                    }
                ]
            },
            {
                "conversation_id": "9",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-04T14:00:52.959000",
                        "user": "Olvin",
                        "text": "I wish people would stop teaching quote as a way for making lists"
                    }
                ]
            },
            {
                "conversation_id": "10",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-04T15:43:44.935000",
                        "user": "Amaliah",
                        "text": "(list 1 2 3)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-04T15:48:08.506000",
                        "user": "Somer",
                        "text": "Ah of course"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-04T15:49:57.361000",
                        "user": "Amaliah",
                        "text": "you could also cons it together for extra points"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-04T17:30:27.607000",
                        "user": "Daevion",
                        "text": "I think the difference is quote can be anything where list has the type list  though I don\u2019t fully understand when a quoted list becomes a list"
                    }
                ]
            },
            {
                "conversation_id": "11",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-04T17:46:00.020000",
                        "user": "Olvin",
                        "text": "When people think of quote as a way of making lists they often miss that you can\\'t put expressions inside"
                    }
                ]
            },
            {
                "conversation_id": "12",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-04T21:01:12.641000",
                        "user": "Kiam",
                        "text": "and then you get people wondering why `'(1 2 (+ x 5))` doesn't work and _then_ they sometimes get the idea that `eval` is the way to fix that"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-04T21:01:36.033000",
                        "user": "Kiam",
                        "text": "it's a big shiny yellow brick road to hell"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-04T21:02:16.250000",
                        "user": "Kiam",
                        "text": "also @Alex Knauth I made traversals!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-04T21:03:01.727000",
                        "user": "Kiam",
                        "text": "https://github.com/jackfirth/glass"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-04T21:03:53.230000",
                        "user": "Kiam",
                        "text": "\ud83c\udf49 is a good emoji"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-04T21:04:31.751000",
                        "user": "Daevion",
                        "text": "Yes \ud83c\udf49"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-04T22:53:43.390000",
                        "user": "Britten",
                        "text": "Oh no I'm allergic to \ud83c\udf49 though"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-04T22:54:02.675000",
                        "user": "Britten",
                        "text": "Also honeydew and cantaloupe"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-04T22:54:07.970000",
                        "user": "Daevion",
                        "text": "\ud83c\udf47"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-04T22:54:17.360000",
                        "user": "Daevion",
                        "text": "Grapes are good too"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-04T22:54:19.320000",
                        "user": "Britten",
                        "text": "\ud83d\ude04"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-04T22:57:06.722000",
                        "user": "Daevion",
                        "text": "Racket version 7.8 is available. https://blog.racketlang.org/2020/08/racketv78.html"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-04T22:58:06.240000",
                        "user": "Daevion",
                        "text": "Pinned a message."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-08T09:41:21.185000",
                        "user": "Kiam",
                        "text": "0 days since the last time I got a confusing error message because numbers are sequences"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-08-08T10:47:32.670000",
                        "user": "Kiam",
                        "text": "traversal composition! \ud83c\udf89"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-08-08T11:29:19.378000",
                        "user": "Kiam",
                        "text": "subtraversals!"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-08-09T00:24:16.543000",
                        "user": "Rynlee",
                        "text": "for instance I'm working on building a linked list but I can only manage to do it by mutating state"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-08-09T00:51:11.952000",
                        "user": "Maddoc",
                        "text": "It physically pains me that Racket's OpenGL bindings are in camelCase. I think CommonLisp's (gl:whateversyntax) is so much nicer."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-08-09T00:51:58.621000",
                        "user": "Maddoc",
                        "text": "Was looking into again after the 7.8 announcement; Namely Racket CS supports an \u201cincremental\u201d garbagecollection mode that can eliminate long GC pauses for some applications such as animations and interactive games."
                    }
                ]
            },
            {
                "conversation_id": "13",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-04T21:20:31.361000",
                        "user": "Cortlin",
                        "text": "\ud83c\udf49 :meow:"
                    }
                ]
            },
            {
                "conversation_id": "14",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-05T05:46:48.535000",
                        "user": "Cortlin",
                        "text": "Hmm"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-05T05:47:00.202000",
                        "user": "Cortlin",
                        "text": "`(define)` is an error but `(definevalues () (values))` is not."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-05T05:47:18.775000",
                        "user": "Cortlin",
                        "text": "I guess `define` is strictly 1 definition whereas `definevalues` is any number of definitions including zero."
                    }
                ]
            },
            {
                "conversation_id": "15",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-09T00:23:58.514000",
                        "user": "Rynlee",
                        "text": "I have a general question is there some sort of resource to learn how to implement functional data structures?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-09T00:24:40.915000",
                        "user": "Rynlee",
                        "text": "```scheme(define (mycons val) (let ([newnode (Node val head)]) Updates the head node to the new node\" (set! head newnode) newnode))```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-09T00:51:49.573000",
                        "user": "Rynlee",
                        "text": "most of the library is in shishkabob case isn't it?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-09T00:51:52.650000",
                        "user": "Rynlee",
                        "text": "I mean the racket library"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-09T00:53:27.800000",
                        "user": "Maddoc",
                        "text": "@Markus Unless I'm looking at the wrong lib; Not that I can tell? https://docs.racketlang.org/opengl/index.html"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-09T00:54:14.362000",
                        "user": "Rynlee",
                        "text": "oh that's shocking"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-09T00:54:18.187000",
                        "user": "Rynlee",
                        "text": "I wonder why they did it like that"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-09T00:55:49.497000",
                        "user": "Rynlee",
                        "text": "it says it was autogenerated that might have something to do with it"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-09T01:00:46.125000",
                        "user": "Maddoc",
                        "text": "Hm okay yeah that probably has a LOT to do with it then . Hopefully it's just noone has just bothered to make it more idiomatic rather than an explicit designchoice. lolI wonder what the most highprofile projects even using it are? I remember Pict3D was a thing  assume that must of been. Maybe some of the old pltgames stuff?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-09T01:02:40.957000",
                        "user": "Maddoc",
                        "text": "_is still trying to dig around for more information on that incremental garbagecollection mode that 7.8 announcement mention. I'd love to try and use Racket to learn graphicsprogramming._"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-09T01:05:39.276000",
                        "user": "Rynlee",
                        "text": "I'm trying to use it to learn data structures and algorithms better"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-09T01:09:18.130000",
                        "user": "Maddoc",
                        "text": "^ Dog knows I need to ingeneral."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-09T01:10:10.351000",
                        "user": "Rynlee",
                        "text": "anyone here work through SICP before?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-09T01:18:49.453000",
                        "user": "Kiam",
                        "text": "@Markus Purely Functional Data Structures is a very good book on functional data structures"
                    }
                ]
            },
            {
                "conversation_id": "16",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-09T02:24:35.624000",
                        "user": "Cortlin",
                        "text": "Header translations almost always use the syntactic conventions of the original language. Ideally those identifiers shouldn't appear in a common program or library but should be interfaced through a highlevel wrapper. @JOST GRANT @Markus"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-09T02:40:22.092000",
                        "user": "Maddoc",
                        "text": "About to go to bed; But I mean that's fair  but there's no highlevel wrappers yet I asusme?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-09T02:53:56.764000",
                        "user": "Britten",
                        "text": "There are several OpenGL libs. IIRC the most complete (and maybe most Rackety I can't remember) is the undocumented one packaged with pict3d."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-09T02:54:28.022000",
                        "user": "Britten",
                        "text": "There was also a recent mailing list thread that I didn't read about OpenGL."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-09T02:55:29.295000",
                        "user": "Britten",
                        "text": "https://groups.google.com/forum/#!topic/racketusers/Km4Eg9Aeww"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-09T02:57:27.500000",
                        "user": "Britten",
                        "text": "There is also a mechanized Vulkan binding but it doesn't do graphics last I checked and I had to do a bit of hackery to get it to run a simple diagnostic on my system"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-09T07:26:48.052000",
                        "user": "Maddoc",
                        "text": "_should still be sleeping ... woke up from the CRAZY thunder/lightning outside. lolPretty interesting; ; Had no idea that pict3D had their own implementation  but it makes sense within the scope of the project and the amount I assume one would have to call OpenGL ... to quickly start to notice how unidiomatic glDoWhatever is & start to roll your own kebabs. But yeah I'll ceratinly dig around a bit more. Was planning to look into Fluxus a bit but have no idea of the implementation details (like howmuch it is directly calling GL compared to the engine they are mapping to) nor if it's really relevant to contemporary Racket ingeneral. :^P_"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-09T22:17:17.777000",
                        "user": "Britten",
                        "text": "You may also like the combined `define` for classes. So you can do `(define/augment (method args ...) etc)`"
                    }
                ]
            },
            {
                "conversation_id": "17",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-09T18:41:41.646000",
                        "user": "Rynlee",
                        "text": "Hey everyone I'm having some problems here with overriding a method for a class in racketgui"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-09T18:42:27.155000",
                        "user": "Rynlee",
                        "text": "```scheme(define mytext% (class text% (supernew) (define (afterinsert) (...)) (augment afterinsert)))``` I'm probably just not doing it right but this is giving me an error where it's saying I'm passing two args into afterinsert"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-09T18:42:55.752000",
                        "user": "Rynlee",
                        "text": "basically I just want to augment the method so I can do other stuff after text is inserted"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-09T18:53:01.782000",
                        "user": "Rynlee",
                        "text": "Nevermind there was arguments I wasn't handling \ud83d\ude42"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-09T23:27:52.653000",
                        "user": "Rynlee",
                        "text": "yeah I just learned that when I finally got it to work"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-11T21:03:13.045000",
                        "user": "Alyiah",
                        "text": "So I'm a TA for a programming languages and paradigms class at my uni and have convinced the prof to let me teach some Racket in addition to the Common Lisp that's in the course and replace some Prolog with Datalog"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-11T22:45:14.211000",
                        "user": "Daevion",
                        "text": "Upvotes appreciated https://repl.it/languagerequests/p/racket"
                    }
                ]
            },
            {
                "conversation_id": "18",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-11T21:34:30.689000",
                        "user": "Chara",
                        "text": "Instead of CL would be an improvement. In addition to CL might be a nightmare."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-11T21:35:39.931000",
                        "user": "Chara",
                        "text": "Have you thought about what you going to do in Racket?"
                    }
                ]
            },
            {
                "conversation_id": "19",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-12T00:14:08.330000",
                        "user": "Alyiah",
                        "text": "@Moinate  mostly going to use Racket as a stepping stone into datalog to show the class what you can do with macros. I don't plan on teaching them how to actually use them much though. The class covers prolog already and datalog is the same thing. But I don't plan on using Racket for anything serious just showing 2 key things: lisp is more than just common lisp the parenthesis are important because you can rewrite code at compile time and it's dope and they should get excited about it It's also a programming languages and paradigms class so it would be neat to pique the students interest too by getting to mention language oriented programming which just as a name sounds neat."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-12T00:14:43.954000",
                        "user": "Alyiah",
                        "text": "I don't intend on actually digging into Racket too much though so that I can keep it simple"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-12T00:16:28.712000",
                        "user": "Chara",
                        "text": "Nice. You don\u2019t do macros in CL I take it?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-12T03:20:39.886000",
                        "user": "Alyiah",
                        "text": "Nope macros aren't explored at all \ud83d\ude14 Students aren't even made aware that there's a difference between a form like `cond` and a function like `format` honestly. Most students figure it out but they never learn that you can define forms like that yourself most just think they're built into the compiler and that's it"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-13T01:55:29.364000",
                        "user": "Alyiah",
                        "text": "@spacey \ud83c\udf0c persistence and wearing him down \ud83d\ude02 no but for real it was mostly because they teach common lisp and Prolog but most students hate them because no job is in Lisp or Prolog and they feel it's a waste of time. No macros are ever taught in the class so Lisp is basically just Python but with silly syntax as far as most of them are concerned. But since we're using Prolog and Datalog is the same thing I'm gonna use Datalog to work through Prolog a bit more while also using it to basic macros and how you can do language driven development in a language with macros."
                    }
                ]
            },
            {
                "conversation_id": "20",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-13T01:23:11.376000",
                        "user": "Somer",
                        "text": "@nixin72 how'd you convince them? give us the deets! :)"
                    }
                ]
            },
            {
                "conversation_id": "21",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-13T14:04:40.484000",
                        "user": "Matt",
                        "text": "hi"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-13T14:04:54.440000",
                        "user": "Daevion",
                        "text": "Hi"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-13T14:08:45.407000",
                        "user": "Matt",
                        "text": "i think im gonna be coming back to racket"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-13T14:10:30.887000",
                        "user": "Daevion",
                        "text": "Nice to hear! What brings you back?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-13T14:19:37.560000",
                        "user": "Matt",
                        "text": "@StephenD pirated the software Mathematica and was frustrated for weeks having problems only to have someone copy my code verbatim and it worked fine for them. My pirated version was outdated enough for some things to be broken i guess."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-13T14:20:10.085000",
                        "user": "Matt",
                        "text": "@StephenD do you think ill be able to use Gui sliders to affect a Plot in Racket?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-13T14:20:31.920000",
                        "user": "Matt",
                        "text": "thats all i\u2019d really need"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-13T14:22:15.322000",
                        "user": "Matt",
                        "text": "looking through the Plot docs i don\u2019t think i\u2019ll have any problems"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-13T14:23:04.279000",
                        "user": "Daevion",
                        "text": "I\u2019ll admit I\u2019m not sure  I think it is possible  the package maintainer Alex Hars\u00e1nyi is on slack (but is Australian so is probably asleep rn)Signup first: https://racketslack.herokuapp.com/https://racket.slack.com/ He is also on the mailing list if that works better for you https://groups.google.com/forum/#!forum/racketusers/"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-13T14:23:34.124000",
                        "user": "Matt",
                        "text": "thank you"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-13T16:00:37.204000",
                        "user": "Cortlin",
                        "text": "I know you can do it with `racket/draw` but I haven't used the plot package."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-13T16:07:53.941000",
                        "user": "Matt",
                        "text": "someone on slack said they did in the past without issue"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-13T16:08:25.226000",
                        "user": "Matt",
                        "text": "the docs for Plot has sections on gui integration"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-13T16:08:32.855000",
                        "user": "Matt",
                        "text": "i should be fine"
                    }
                ]
            },
            {
                "conversation_id": "22",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-13T18:37:06.028000",
                        "user": "Daevion",
                        "text": "\ud83d\udc4d"
                    }
                ]
            },
            {
                "conversation_id": "23",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-14T06:59:26.585000",
                        "user": "Mayzee",
                        "text": "how do i convert the char `#\\\\2` to the number 2?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-14T07:00:08.589000",
                        "user": "Mayzee",
                        "text": "`(char>integer #\\\\2)` gives me 50"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-14T07:04:16.032000",
                        "user": "Britten",
                        "text": "`char>integer` returns the codepoints for the characters. The easiest way to take a digit character and get it's numeric value is to subtract the `0` character value"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-14T07:04:55.331000",
                        "user": "Britten",
                        "text": "`( (char>integer #\\\\2) (char>integer #\\\\0)) ==> 2`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-14T07:16:23.701000",
                        "user": "Mayzee",
                        "text": "ahh thanks"
                    }
                ]
            },
            {
                "conversation_id": "24",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-15T02:34:01.023000",
                        "user": "Mayzee",
                        "text": "2htdpimage scene preservers transparency right?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-15T03:03:01.995000",
                        "user": "Mayzee",
                        "text": "is there a version of (emptyscene) in 2htdp image that doesn't create a black outline? i cant seem to find the parameters to disable it"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-16T02:24:36.280000",
                        "user": "Mayzee",
                        "text": "yeah no way to turn it off found some work arounds"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-16T02:25:14.216000",
                        "user": "Mayzee",
                        "text": "do most of you guys use drracket? i find it painfully slow to scroll and work in..."
                    }
                ]
            },
            {
                "conversation_id": "25",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-16T00:20:46.222000",
                        "user": "Brayan",
                        "text": "according to the docs both versions have black outlines"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-16T03:12:43.863000",
                        "user": "Brayan",
                        "text": "I do currently use DrRacket  there are customizable keyboard shortcuts that can be used for navigation and such but afaik there's no scroll speed setting"
                    }
                ]
            },
            {
                "conversation_id": "26",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-16T03:22:03.216000",
                        "user": "Yaw",
                        "text": "oh hey i never noticed that scroll wheel thing before. i guess i don't use the scroll wheel"
                    }
                ]
            },
            {
                "conversation_id": "27",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-16T05:20:24.786000",
                        "user": "Alyiah",
                        "text": "Has anyone used the Koyo webserver? I'm looking at it now and it seems very complete but I wanted to know if anyone's actually used this thing"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-16T05:25:57.865000",
                        "user": "Alyiah",
                        "text": "I tried starting a server with it using the example application and it throws exceptions right off the bat... That's no good"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-16T05:28:18.491000",
                        "user": "Alyiah",
                        "text": "Oh wait there's a bunch of setup stuff I have to do before starting the server  didn't read enough lol"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-16T07:38:45.649000",
                        "user": "Kiam",
                        "text": "I use vanilla but I really miss types"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-16T16:25:31.801000",
                        "user": "Alyiah",
                        "text": "I tried typed racket a bit but wasn't a fan honestly. I found it more annoying than helpful. But that's generally how I feel about type systems anyways lol. Except Rust for some reason Rust feels much nicer to use than most other statically typed langs."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-16T20:00:55.411000",
                        "user": "Alyiah",
                        "text": "God koyo has so much setup to do... You need to have multiple Postgres databases running need to have it running behind an nginx server even for local development need to have node and nvm way more than most web frameworks require for setting a basic application..."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-17T03:27:06.813000",
                        "user": "Alyiah",
                        "text": "Definitely not a best practices thing my background is in full stack web development and I\\'ve never seen a framework that requires that much setup for its basic pregenerated application. Not even .NET does that and it\\'s got the biggest pregenerated app I\\'ve ever seen. Closest is maybe Laravel. For sure dockerizing it would make it much nicer maybe I\\'ll set that up. Give me a good reason to actually learn docker..."
                    }
                ]
            },
            {
                "conversation_id": "28",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-16T06:25:26.398000",
                        "user": "Mayzee",
                        "text": "do the lot of you guys use typed racket? or just vanilla racket?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-16T15:17:38.070000",
                        "user": "Mayzee",
                        "text": "does typed racket add to much friction when you're trying to get something done?"
                    }
                ]
            },
            {
                "conversation_id": "29",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-16T17:28:17.629000",
                        "user": "Britten",
                        "text": "I use Typed Racket occasionally. I usually use it as an evolution converting an untyped program to a typed program."
                    }
                ]
            },
            {
                "conversation_id": "30",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-16T20:15:11.722000",
                        "user": "Daevion",
                        "text": "The developer comes from a professional web app dev background an uses it in production  I\u2019m assuming it is best practice ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-16T20:17:49.785000",
                        "user": "Kiam",
                        "text": "dockerizing the setup or making parts of it use inmemory fakes for local dev might be good improvements"
                    }
                ]
            },
            {
                "conversation_id": "31",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-17T04:59:44.765000",
                        "user": "Svetlozar",
                        "text": "Hey guys I am taking an online cs course and got this problem"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-17T05:00:05.991000",
                        "user": "Svetlozar",
                        "text": "```; Exercise 4  Define location(define (location small big) (cond ((empty? big) #f) ((equal? small (first big)) 1) (else (+ 1 (location small (bf big))))))```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-17T05:00:23.763000",
                        "user": "Svetlozar",
                        "text": "```Write a procedure called location that takes two arguments a word and a sentence. It should return a number indicating where in the sentence that word can be found. If the word isn't in the sentence return #f. If the word appears more than once return the location of the first appearance.> (location me (you never give me your money))4> (location i (you never give me your money))#f> (location the (the fork and the spoon))1```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-17T05:00:35.272000",
                        "user": "Svetlozar",
                        "text": "the issue I am facing is that the false case"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-17T05:00:44.515000",
                        "user": "Svetlozar",
                        "text": "does not work due to the recursion being"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-17T05:01:08.263000",
                        "user": "Svetlozar",
                        "text": "(+ 1 (+ 1 (+ 1 #f)))"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-17T05:01:27.852000",
                        "user": "Svetlozar",
                        "text": "how can break out of the recursion and return false?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-17T05:16:26.045000",
                        "user": "Zayne",
                        "text": "How about checking whether the recursive call's result is `#f` or a number before adding 1 to it?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-17T09:11:51.378000",
                        "user": "Kiam",
                        "text": "the part where you have `(+ 1 (location small (bf big)))`  the `(location small (bf big))` expression could be a number or false so you should only add 1 to it if it's not false"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-17T09:16:59.040000",
                        "user": "Daevion",
                        "text": "@nixin72 The developer of Koyo Bogdan is on the racket slack  ask him (he is a really nice guy I met him briefly in Berlin)."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-17T21:03:41.812000",
                        "user": "Kiam",
                        "text": "I don't think using 0 to indicate not found is a good idea"
                    }
                ]
            },
            {
                "conversation_id": "32",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-17T08:15:08.445000",
                        "user": "Svetlozar",
                        "text": "so what I do is check work by word"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-17T08:15:33.081000",
                        "user": "Svetlozar",
                        "text": "sorry I didn't get it"
                    }
                ]
            },
            {
                "conversation_id": "33",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-17T16:16:42.797000",
                        "user": "Chara",
                        "text": "@Prexxla In this case you should be writing simple tests make sure you have seen your code work when big is empty big is length 1 and has the word you are looking for big is length 1 and does not have the word you are looking for then start on some length 2 cases (find the word in position 1,2,3)."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-17T16:17:30.563000",
                        "user": "Chara",
                        "text": "Actually I am not a fan of this exercise. It doesn't use 0  could easily use that to indicate word not found."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-17T16:19:25.399000",
                        "user": "Chara",
                        "text": "@Prexxla The point of the tests is so you think of (+ 1 #f) as the problem instead of thinking about a recursion that goes on and on... usually easier to figure out what to do."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-17T22:34:05.380000",
                        "user": "Chara",
                        "text": "I hope this isn't one of the earlier recursion exercises."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-17T22:37:37.149000",
                        "user": "Chara",
                        "text": "I can understand not wanting to overload a chapter with types of problems I guess it's fair to ask people to discover it on their own. https://people.eecs.berkeley.edu/~bh/ssch14/recurpatterns.html"
                    }
                ]
            },
            {
                "conversation_id": "34",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-18T04:51:26.056000",
                        "user": "Mayzee",
                        "text": "@Prexxla what cs course are you taking that uses racket?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-18T05:08:05.196000",
                        "user": "Mayzee",
                        "text": "trying to make a racket cli stand alone exe"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-18T05:08:12.529000",
                        "user": "Mayzee",
                        "text": "how do i run it in the drracket?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-18T05:08:33.843000",
                        "user": "Mayzee",
                        "text": "how do i pass command line arguments while in drracket?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-18T05:23:15.047000",
                        "user": "Mayzee",
                        "text": "atm just recompiling the exe everytime"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-18T05:36:22.038000",
                        "user": "Mayzee",
                        "text": "holy moly my stand alone executable with embeddlls is 34MB. how can I cut this down? I'm pulling in 2htdp/image as a dependency so I assume that is the main reason. either way how do i cut this down? I don't want other people needing to install racket to use this small cli app (edited). I don't even need the rendering parts of 2htdp/image just the cropping image and writing to a file"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-18T07:55:23.137000",
                        "user": "Kiam",
                        "text": "there's a drracket setting somewhere for command line args"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-18T07:56:39.463000",
                        "user": "Kiam",
                        "text": "I think"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-18T07:58:17.367000",
                        "user": "Kiam",
                        "text": "ah yes it's in Language > Choose Language... > Show Details"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-18T14:43:12.472000",
                        "user": "Mayzee",
                        "text": "thanks"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-19T15:59:53.158000",
                        "user": "Daevion",
                        "text": "Thanks @Prexxla I've put the https://berkeleycs61as.github.io/textbook.html link in #resources"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-19T22:04:37.637000",
                        "user": "Daevion",
                        "text": "I\u2019ve started a small collection!https://github.com/rackettemplatesThese are GitHub templates so you use them by clicking \u2018use this template\u2018 on the repoI\u2019m looking for more ideas/contributions;From the top of my head; \u2018worker service\u2019 (dotnet new has this) DrRacket plugin Keybinding package Teachpack raco command scribble (multiple) pollen (multiple) slideshow racket embedded in c appCan you suggest(or submit) any others?<<Some are obvious and simple if you are already a racketeer but one of the reasons is to give new users another way ins>>"
                    }
                ]
            },
            {
                "conversation_id": "35",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-18T16:47:54.961000",
                        "user": "Mayzee",
                        "text": "strangely it doesnt save... Commandline arguments as a vector of strings in read syntax:```#(\"test\")```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-19T03:44:54.629000",
                        "user": "Svetlozar",
                        "text": "@jest cs61a berkely"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-19T03:44:55.536000",
                        "user": "Svetlozar",
                        "text": "https://berkeleycs61as.github.io/textbook.html"
                    }
                ]
            },
            {
                "conversation_id": "36",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-20T02:51:38.792000",
                        "user": "Qiana",
                        "text": "Oh rackettemplates is a good idea! One thing I think would be useful is examples of the various different ways you can structure repositories collections and packages. Especially if it could help clarify this is how it will appear on pkgs.racketlang.org and this is how raco pkg install will behave. (I still don\\'t think I totally understand all the nuances.) I\\'ve gotten really busy lately but maybe I will take this on in a few weeks."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-20T03:46:10.496000",
                        "user": "Yaw",
                        "text": "i don't know if it's a good idea for a template but one thing you can do in racket is write code using the ffi if it makes sense that could be another one for the list"
                    }
                ]
            },
            {
                "conversation_id": "37",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-20T03:50:54.819000",
                        "user": "Kiam",
                        "text": "I have a template I use for making packages"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-20T03:51:22.850000",
                        "user": "Kiam",
                        "text": "https://github.com/jackfirth/racketpackagetemplate"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-20T05:42:14.807000",
                        "user": "Alyiah",
                        "text": "@StephenD I made a little raco tool to copy your templates locally for people to try them out. It's literally just a tiny wrapper aroung git that's attached to raco but it's in the spirit of having something like `createreactapp` but for all sorts of Racket templates once you've got more stuff in that org https://github.com/nixin72/fromtemplateSome ideas of other templates that could be included: simple webapp new #lang new language (parsack nanopass)?  database access to set up as template to go in existing projects?  package template (what @notjack shared)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-20T15:59:53.706000",
                        "user": "Alyiah",
                        "text": "@StephenD hahah that's so true I hadn't even intended for it to be a template itself!"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-20T17:18:35.887000",
                        "user": "Alyiah",
                        "text": "@StephenD and I've uploaded the `fromtemplate` package to the package repository. https://pkgd.racketlang.org/pkgn/package/fromtemplate"
                    }
                ]
            },
            {
                "conversation_id": "38",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-20T09:40:21.704000",
                        "user": "Daevion",
                        "text": "@nixin72 this is awesome!It serves two purposes1. It\u2019s a raco tool for installing templates  exactly what is needed2. It is a template for a raco tool!Can I encourage you to add to the Racket packages repository ?Thank you so much"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-20T10:12:45.108000",
                        "user": "Daevion",
                        "text": "@notjack looks good  I\u2019ve added it!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-20T10:14:47.177000",
                        "user": "Daevion",
                        "text": "@nixin72 @notjack I\u2019ve added you you both to the organisation"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-20T17:16:24.747000",
                        "user": "Daevion",
                        "text": "@nixin72  simple webapp  DONE  racketstories new #lang  added to todo list new language (parsack nanopass)?  added to todo list database access to set up as template to go in existing projects?  added to todo list package template (what @notjack shared)  DONE"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-20T17:23:07.815000",
                        "user": "Daevion",
                        "text": "@nixin72 remember to update the readme.md to link back to https://pkgs.racketlang.org/package/fromtemplate"
                    }
                ]
            },
            {
                "conversation_id": "39",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-22T21:22:22.947000",
                        "user": "Kiam",
                        "text": "been working on making `rebellion/type` provide static info to macros and now I can define basic type conversion macros!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-22T23:46:56.059000",
                        "user": "Cortlin",
                        "text": "Nice"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-23T13:59:30.037000",
                        "user": "Cortlin",
                        "text": "Wow that's a good idea."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-23T18:06:45.763000",
                        "user": "Bexon",
                        "text": "I\u2019d say it\u2019s a tie with a raccoon"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-23T18:27:41.388000",
                        "user": "Daevion",
                        "text": "Very cute raccoon!"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-23T18:29:18.117000",
                        "user": "Daevion",
                        "text": "Can anyone draw better? (Paper or pict or metapict or 2htdp/image)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-23T18:29:52.218000",
                        "user": "Daevion",
                        "text": "Can anyone draw a Lamb(da)?"
                    }
                ]
            },
            {
                "conversation_id": "40",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-23T08:43:39.797000",
                        "user": "Yaw",
                        "text": "@StephenD for a mascot why not a lamb? for lambda (:"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-23T15:43:19.105000",
                        "user": "Bexon",
                        "text": "hello I\u2019m back :)"
                    }
                ]
            },
            {
                "conversation_id": "41",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-23T17:14:12.200000",
                        "user": "Daevion",
                        "text": "> @StephenD for a mascot why not a lamb? for lambda (:@Plane that is the cutest suggestion so far!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-23T18:27:14.425000",
                        "user": "Daevion",
                        "text": "\ud83e\udd7a"
                    }
                ]
            },
            {
                "conversation_id": "42",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-23T18:40:52.102000",
                        "user": "Matt",
                        "text": "Racket Raccon Lambda"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-23T18:47:19.415000",
                        "user": "Britten",
                        "text": "Lamb(da)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-23T18:47:53.272000",
                        "user": "Jovanna",
                        "text": "ok this is my fav so far"
                    }
                ]
            },
            {
                "conversation_id": "43",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-23T19:49:39.400000",
                        "user": "Bexon",
                        "text": "for gerbil they put it in animal\u2019s eyes"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-23T19:50:14.276000",
                        "user": "Bexon",
                        "text": "None"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-23T19:50:35.649000",
                        "user": "Daevion",
                        "text": "That looks creepy."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-23T19:50:40.415000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-23T19:52:01.067000",
                        "user": "Daevion",
                        "text": "Like goat eyes"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-23T19:53:26.348000",
                        "user": "Bexon",
                        "text": "sheep have these eyes too"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-23T19:55:55.789000",
                        "user": "Bexon",
                        "text": "I\u2019d be a hardcore lobbyist for raccoon but Raku programmers use \u201craccoon\u201d to describe themselves already \ud83d\ude14"
                    }
                ]
            },
            {
                "conversation_id": "44",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-23T21:13:30.633000",
                        "user": "Daevion",
                        "text": "https://en.wikipedia.org/wiki/Raku_(programming_language)#/media/File:Camelia.svg"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-23T21:14:08.146000",
                        "user": "Daevion",
                        "text": "Racket programmers are Racketeers"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-23T21:14:37.960000",
                        "user": "Daevion",
                        "text": "Sheep and goat eyes <<shudder>>"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-23T21:20:03.356000",
                        "user": "Daevion",
                        "text": "Raku(aka perl 6) Spokes bug': Butterfly called Camelia: call themselves raccoons."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-23T21:21:15.841000",
                        "user": "Daevion",
                        "text": "also raccoons are known as washbears!"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-23T21:23:08.304000",
                        "user": "Daevion",
                        "text": "lambs are cute though"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-23T23:22:11.551000",
                        "user": "Daevion",
                        "text": "Yeah but no one uses it"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-23T23:22:22.177000",
                        "user": "Daevion",
                        "text": "Apart from Intel"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-23T23:23:13.341000",
                        "user": "Daevion",
                        "text": "And intel don\u2019t seem like they are big on mascots"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-24T08:56:29.200000",
                        "user": "Daevion",
                        "text": "We could share."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-08-24T08:56:39.616000",
                        "user": "Daevion",
                        "text": "And spell it correctly"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-08-24T08:56:57.389000",
                        "user": "Daevion",
                        "text": "None of this is serious"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-08-24T08:57:06.967000",
                        "user": "Daevion",
                        "text": "It\u2019s all just fun"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-08-26T10:43:52.769000",
                        "user": "Daevion",
                        "text": "An unofficial mascot is not a serious question  it was just a bit of weekend fun."
                    }
                ]
            },
            {
                "conversation_id": "45",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-23T23:21:25.410000",
                        "user": "Cortlin",
                        "text": "Raccoon is also the Minix mascot."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-23T23:32:51.044000",
                        "user": "Cortlin",
                        "text": "Hahah"
                    }
                ]
            },
            {
                "conversation_id": "46",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-24T07:52:52.348000",
                        "user": "Bexon",
                        "text": "@StephenD yeah their mascot is a butterfly but I heard about this racoon thingy on their IRC \ud83e\udd14 searched their subreddit no results  so maybe it's free after all \ud83d\udc40"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-24T07:53:38.020000",
                        "user": "Bexon",
                        "text": "oh okay it's spelled differently"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-24T07:53:39.266000",
                        "user": "Bexon",
                        "text": "https://rakudoweekly.blog/2020/06/08/202023500rakoons/"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-24T09:51:12.903000",
                        "user": "Bexon",
                        "text": "true :)"
                    }
                ]
            },
            {
                "conversation_id": "47",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-26T08:41:07.408000",
                        "user": "Kristalynn",
                        "text": "what do you mean it's not serious"
                    }
                ]
            },
            {
                "conversation_id": "48",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-26T18:55:43.322000",
                        "user": "Cortlin",
                        "text": "I'm devastated that `racket/gui` doesn't expose all available X.org cursors: https://tronche.com/gui/x/xlib/appendix/b/"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-26T18:58:45.415000",
                        "user": "Daevion",
                        "text": "Wow"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-26T18:58:53.130000",
                        "user": "Daevion",
                        "text": "That\u2019s a lot of cursors"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-26T19:00:42.819000",
                        "user": "Daevion",
                        "text": "I want to know what the XC_umbrella cursor is for? Ditto for boat sailboat & spraycan?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-26T19:25:23.774000",
                        "user": "Daevion",
                        "text": "Now I have to look up xteddy"
                    }
                ]
            },
            {
                "conversation_id": "49",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-26T19:24:53.273000",
                        "user": "Cortlin",
                        "text": "I know xteddy uses the heart one."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-27T00:45:36.714000",
                        "user": "Cortlin",
                        "text": "https://weber.itn.liu.se/~stegu/xteddy/"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-27T00:45:44.393000",
                        "user": "Cortlin",
                        "text": "I use it all the time."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-27T00:45:48.872000",
                        "user": "Cortlin",
                        "text": "It keeps me company."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-08-28T00:28:14.755000",
                        "user": "Jersi",
                        "text": "@Anything There's no option right now but you'd need to change line 74 of `webserver/webserver.rkt` and pass a different `#:protocol` option as documented in the docs for `sslmakeservercontext`. We could adjust everything back from there (like `serve/servlet` to take a custom server context) and then it would be easier to do stuff like this."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-08-28T00:37:17.526000",
                        "user": "Jersi",
                        "text": "It just has a different name `#:encrypt`. I don't know why \ud83d\ude26"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-08-28T00:37:33.701000",
                        "user": "Jersi",
                        "text": "If you submit a PR to add the webserver btw I'll approve it"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-08-28T00:38:37.449000",
                        "user": "Hina",
                        "text": "Oh I missed encrypt too. \ud83d\ude42 Alright. I\\'ll do that. Should help me to learn a minimum about the Racket\\'s source code. By PR I understand pull request\"."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-08-28T00:38:48.802000",
                        "user": "Jersi",
                        "text": "Yup \ud83d\ude42"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-08-28T11:03:49.248000",
                        "user": "Jersi",
                        "text": "I've been here for a loooooong time but I never open it :/"
                    }
                ]
            },
            {
                "conversation_id": "50",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-28T00:01:31.314000",
                        "user": "Hina",
                        "text": "Good evening. If I'd like to disable TLS 1.0 TLS 1.1 and SSL 3.0 in the Racket Web Server is that possible? (Crossposting to slack.racket.general.)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-28T00:35:59.814000",
                        "user": "Hina",
                        "text": "Thanks @jeapostrophe. That gives me enough information to know what to do now. By the way in the [documentation](https://docs.racketlang.org/openssl/index.html#%28def._%28%28lib._openssl%2Fmain..rkt%29._ports~3esslports%29%29) although we can see `protocol` available it's missing in the procedure's signature."
                    }
                ]
            },
            {
                "conversation_id": "51",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-28T10:04:27.119000",
                        "user": "Daevion",
                        "text": "Welcome @jeapostrophe ! Lovely to have you here!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-08-28T11:05:25.606000",
                        "user": "Daevion",
                        "text": "Welcome anyway \ud83d\ude06"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-08-31T18:04:00.897000",
                        "user": "Daevion",
                        "text": "Is anyone able to help fix my bad svg? https://github.com/simpleicons/simpleicons/pull/3483It is to allow a racket logo badge on GitHub readme files with https://shields.io badges. (I can't do SVG right now  old laptop no disk space)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-08-31T20:34:33.696000",
                        "user": "Kiam",
                        "text": "(answered in #help)"
                    }
                ]
            },
            {
                "conversation_id": "52",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-08-31T20:31:41.940000",
                        "user": "Lukka",
                        "text": "I am trying to port a scheme macro to racket macros for `definerecord`. I have the intended usage and both the scheme and racket versions posted here on the gist page: https://gist.github.com/kesava/3d4f1cdee2184b7a858eda5e275a6947 I see an error on line 33 of the racket version  `formatid: unbound identifier in: formatid`. How do I fix the error? What am I getting wrong?"
                    }
                ]
            },
            {
                "conversation_id": "53",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-01T20:26:31.932000",
                        "user": "Slavcho",
                        "text": "Hello."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-01T20:26:43.834000",
                        "user": "Kiam",
                        "text": "welcome!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-01T20:26:51.643000",
                        "user": "Yaw",
                        "text": "Welcome (:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-01T20:27:48.016000",
                        "user": "Slavcho",
                        "text": "How many programming languages would you consider yourselves fluent/proficient in?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-01T20:28:49.502000",
                        "user": "Kiam",
                        "text": "a dozen or two maybe? hard to say"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-01T20:30:00.723000",
                        "user": "Slavcho",
                        "text": "jeez"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-01T20:30:40.735000",
                        "user": "Slavcho",
                        "text": "I'm trying to settle on 3  5 and I can't decide. But I do know that less would be better."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-01T20:31:13.533000",
                        "user": "Slavcho",
                        "text": "I'll be trying to evaluate Racket under that pretense."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-01T20:32:35.967000",
                        "user": "Kiam",
                        "text": "I think after you learn a few it becomes much easier to learn new ones they have a lot of overlap"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-01T20:33:56.750000",
                        "user": "Slavcho",
                        "text": "True they do."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-01T20:34:43.163000",
                        "user": "Slavcho",
                        "text": "I'm really looking for a language to handle my text processing and/or rapid prototyping that can scale up"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-01T20:35:31.158000",
                        "user": "Slavcho",
                        "text": "I already know JavaScript and Rust might be the next thing I have to learn because people stan it super hard"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-01T20:35:57.363000",
                        "user": "Kiam",
                        "text": "rust is pretty great"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-01T20:36:06.852000",
                        "user": "Slavcho",
                        "text": "That's what I hear"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-01T20:36:13.908000",
                        "user": "Slavcho",
                        "text": "But the syntax makes me sad"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-01T20:36:43.996000",
                        "user": "Slavcho",
                        "text": "The examples always make sense but the more complex you get the more my brain refuses to read it"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-01T20:36:50.910000",
                        "user": "Zayne",
                        "text": "I love the Kisaragi Gentarou avatar. Oh my gosh it animates too. XD"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-01T20:36:58.586000",
                        "user": "Slavcho",
                        "text": ":tksSell:"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-01T20:38:06.518000",
                        "user": "Zayne",
                        "text": "hmm I wonder if there's a good stepping stone on the way to Rust"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-01T20:39:12.732000",
                        "user": "Zayne",
                        "text": "I would think Rust would be one of the best to learn these days in terms of community and being pretty cuttingedge"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-01T20:39:32.580000",
                        "user": "Kiam",
                        "text": "rust has a lovely community"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-01T20:52:10.434000",
                        "user": "Slavcho",
                        "text": "So Racket. What do y'all use it for?"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-01T20:53:59.958000",
                        "user": "Kiam",
                        "text": "since for work I write java"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-01T20:54:22.754000",
                        "user": "Slavcho",
                        "text": "Ah."
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-01T20:56:23.874000",
                        "user": "Kiam",
                        "text": "I used it for some neat AI stuff earlier this year"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-01T20:56:35.433000",
                        "user": "Kiam",
                        "text": "http://docs.racketlang.org/planning"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-01T21:02:12.826000",
                        "user": "Slavcho",
                        "text": "Oh neat."
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-09-01T21:05:30.664000",
                        "user": "Slavcho",
                        "text": "See this is the weird part about Lisps and Scheme. Everyone has these crazy cool projects and applications implemented in their flavor of choice but I can't seem to find a definitive example of a throwaway script or something that parses a CSV to make a report."
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-09-01T21:06:14.375000",
                        "user": "Kiam",
                        "text": "ah yes the Lisp Curse"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-09-01T21:09:25.977000",
                        "user": "Britten",
                        "text": "I use it for that boring stuff. Like process a bunch of data over some HTTP API. SSH to a bunch of hosts and do a thing."
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-09-01T21:11:05.806000",
                        "user": "Slavcho",
                        "text": "Oh cool. Any nuances or caveats? Why Racket over X?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-09-01T21:12:08.618000",
                        "user": "Kiam",
                        "text": "(and as a result @oaktownsam has been an excellent use case tester for me \ud83d\ude1b)"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-09-01T21:12:25.719000",
                        "user": "Britten",
                        "text": "Lately I've chosen Racket over Python because the thread and event abstraction is much better."
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-09-01T21:13:30.388000",
                        "user": "Slavcho",
                        "text": "Nice."
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-09-01T21:14:10.319000",
                        "user": "Britten",
                        "text": "Although python has newer async stuff which I guess is supposed to be like Rust and JS but it seems very clunky."
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-09-01T21:17:40.845000",
                        "user": "Kiam",
                        "text": "this would explain your interest in that fiberweb project idea I had"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-09-01T21:20:39.165000",
                        "user": "Britten",
                        "text": "I think Reppy came up with a good way of dealing with concurrency and I wish everyone would just implement it \ud83d\ude42"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-09-01T21:24:36.994000",
                        "user": "Slavcho",
                        "text": "How's the FFI for Racket?"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-09-01T21:25:20.107000",
                        "user": "Kiam",
                        "text": "I also don't know what reppy is and would like to"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-09-01T21:29:34.465000",
                        "user": "Britten",
                        "text": "John Reppy"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-09-01T21:30:02.749000",
                        "user": "Britten",
                        "text": "https://people.cs.uchicago.edu/~jhr/"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-09-01T21:30:21.210000",
                        "user": "Britten",
                        "text": "FFI for Racket is good."
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-09-02T00:08:01.314000",
                        "user": "Zayne",
                        "text": "first time I've heard of it!"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-09-02T08:08:10.320000",
                        "user": "Bexon",
                        "text": "@oaktownsam ocaml got multicore now I wonder how similar it is to CML now \ud83d\udc40"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-09-03T23:43:48.870000",
                        "user": "Kiam",
                        "text": "oh wow I totally forgot to attempt to submit a talk for this year!"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-09-03T23:47:07.520000",
                        "user": "Matt",
                        "text": "ooh exciting. hope i dont forget to join"
                    }
                ]
            },
            {
                "conversation_id": "54",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-01T20:53:53.883000",
                        "user": "Kiam",
                        "text": "I mostly use it for fun"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-01T20:55:13.311000",
                        "user": "Daevion",
                        "text": "It\u2019s a free education for me \ud83d\ude00"
                    }
                ]
            },
            {
                "conversation_id": "55",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-01T21:25:03.640000",
                        "user": "Daevion",
                        "text": "Reppy?"
                    }
                ]
            },
            {
                "conversation_id": "56",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-01T21:38:25.605000",
                        "user": "Kiam",
                        "text": "he worked on manticore _and_ CML??"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-01T21:42:57.320000",
                        "user": "Slavcho",
                        "text": "oh hey UChicago"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-01T23:35:22.560000",
                        "user": "Slavcho",
                        "text": "Have y'all played around with TXR?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-02T00:08:16.849000",
                        "user": "Slavcho",
                        "text": "There are a lot of interesting concepts in there"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-02T15:53:02.412000",
                        "user": "Britten",
                        "text": "Apparently Ocaml has had CML for year no one uses it though? https://discuss.ocaml.org/t/concurrencyinocamlitseemslikethecmlstylenevertookoffforanybody/3819"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-02T16:16:32.601000",
                        "user": "Yaw",
                        "text": "I do just honestly find programming in Racket to be pretty fun so I end up doing lots of little things for myself in it"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-02T16:17:08.706000",
                        "user": "Yaw",
                        "text": "Lately part of the fun for me has been writing things in either Racket or Haskell and then translating to the other"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-03T23:39:11.125000",
                        "user": "Britten",
                        "text": "\ud83e\udd9c\ud83d\ude3c \ud83e\udd9c\ud83d\ude3c \ud83e\udd9c\ud83d\ude3c \ud83e\udd9c\ud83d\ude3c \ud83e\udd9c\ud83d\ude3c \ud83e\udd9c  \ud83c\udf89 https://con.racketlang.org/ \ud83c\udf89\ud83e\udd9c\ud83d\ude3c \ud83e\udd9c\ud83d\ude3c \ud83e\udd9c\ud83d\ude3c \ud83e\udd9c\ud83d\ude3c \ud83e\udd9c\ud83d\ude3c \ud83e\udd9c"
                    }
                ]
            },
            {
                "conversation_id": "57",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-05T08:24:08.275000",
                        "user": "Svetlozar",
                        "text": "Hey guys is there a darkmode option for drRacket?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-05T08:47:46.066000",
                        "user": "Cortlin",
                        "text": "Yeah there are colour scheme options in settings."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-05T08:47:51.357000",
                        "user": "Cortlin",
                        "text": "You can make your own colour scheme as well."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-05T08:59:12.642000",
                        "user": "Kiam",
                        "text": "it also goes off the OS"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-05T08:59:32.442000",
                        "user": "Kiam",
                        "text": "if you set your OS to dark mode drracket will pick that up and change accordingly"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-05T21:12:27.947000",
                        "user": "Alyiah",
                        "text": "Let's say I have a set of facts in Prolog pertaining to students and teaches for courses. In the repl for Prolog I can do something like ```prologteaches(professor Course) studies(Student Course).```And it'll return every student being taught by `professor` in all their courses. I'm playing around with Datalog in Racket and I can't seem to be able to do this at the repl. I can define a rules```prologteaches_student(A B) : teaches(A Course) studies(B Course).```And then call that rule but I can't just run a query that has multiple terms to it. Does anyone know how I can do this in Racket's datalog?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-05T21:13:26.427000",
                        "user": "Alyiah",
                        "text": "Currently I get this:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-05T21:18:24.260000",
                        "user": "Alyiah",
                        "text": "Also to specify and OR in Datalog do I need to create a seperate rule for it since there's no equivalent to `;` in Prolog?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-05T21:49:19.010000",
                        "user": "Alyiah",
                        "text": "Looking at the syntax for Datalog there are the following rules: ```\u2039query\u203a ::= \u2039literal\u203a ?\"\u2039literal\u203a ::= \u2039predicatesym\u203a ( )\" | \u2039predicatesym\u203a ( \u2039terms\u203a )\" | \u2039predicatesym\u203a | \u2039term\u203a = \u2039term\u203a | \u2039term\u203a != \u2039term\u203a | \u2039VARIABLE\u203a : \u2039externalsym\u203a ( \u2039terms\u203a )\"```So a query can only contain a literal. But I\\'m confused about that last rule in there the `<externalsym>`. That rule isn\\'t anywhere in the definition for the rest of the syntax does anyone know what that means?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-05T21:50:49.982000",
                        "user": "Alyiah",
                        "text": "Oh wait never mind it's for calling Racket functions"
                    }
                ]
            },
            {
                "conversation_id": "58",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-05T13:10:32.114000",
                        "user": "Marilou",
                        "text": "pretty pleased with myself. just learning racket finished advent of code 2019 day 1 yay"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-05T13:25:44.972000",
                        "user": "Bexon",
                        "text": "neato! two stars?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-05T13:40:49.365000",
                        "user": "Marilou",
                        "text": "1 star jumped the gun there. day 1 part 1 done part 2 up next. still a win"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-05T14:41:24.193000",
                        "user": "Bexon",
                        "text": "yeah good luck with part two :)"
                    }
                ]
            },
            {
                "conversation_id": "59",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-06T01:59:16.815000",
                        "user": "Cortlin",
                        "text": "Does someone know how to quickly made flowchart for racket? there are plenty of them for c++ or python too but looks like there is not a single one for Scheme/Racket."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-06T03:43:24.267000",
                        "user": "Cortlin",
                        "text": "yea"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-06T03:43:31.537000",
                        "user": "Cortlin",
                        "text": "that"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-06T03:43:36.541000",
                        "user": "Cortlin",
                        "text": "just a flowchart"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-06T05:49:53.991000",
                        "user": "Cortlin",
                        "text": "well not like making flowcharts with racket but for it"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-06T05:50:26.068000",
                        "user": "Cortlin",
                        "text": "like grab the code and generate a flowchart"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-06T09:12:30.103000",
                        "user": "Marilou",
                        "text": "> yeah good luck with part two :)@sarna 2 stars in now part 2 completed \ud83d\udc4d"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-06T09:48:46.584000",
                        "user": "Bexon",
                        "text": "@parlortricks ha great job!"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-07T07:07:25.990000",
                        "user": "Daevion",
                        "text": "Yes. I was going to look up the link but got caught up in other stuff."
                    }
                ]
            },
            {
                "conversation_id": "60",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-06T02:26:05.033000",
                        "user": "Kiam",
                        "text": "like make a flowchart _using_ racket? or something else"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-06T05:41:00.259000",
                        "user": "Kiam",
                        "text": "alas I do not know of a racket library for making flowcharts"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-06T05:41:23.613000",
                        "user": "Kiam",
                        "text": "sounds like a fun project though"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-06T07:59:03.183000",
                        "user": "Kiam",
                        "text": "_oh_"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-06T07:59:17.989000",
                        "user": "Kiam",
                        "text": "there is something like that for visualizing dependencies between modules"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-06T07:59:49.477000",
                        "user": "Kiam",
                        "text": "https://docs.racketlang.org/pkgdepdraw/index.html"
                    }
                ]
            },
            {
                "conversation_id": "61",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-06T10:07:52.083000",
                        "user": "Daevion",
                        "text": "@Deleted User there was a recent `#lang` made using racket to make mind maps announced in Racket News"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-07T07:08:30.049000",
                        "user": "Daevion",
                        "text": "@Deleted User let me know if you want the link"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-07T08:42:30.218000",
                        "user": "Cortlin",
                        "text": "sure"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-07T08:42:38.023000",
                        "user": "Cortlin",
                        "text": "Lemme check it out"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-07T08:42:56.090000",
                        "user": "Cortlin",
                        "text": ":racket:"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-07T08:43:20.715000",
                        "user": "Daevion",
                        "text": "Ok it will take me a few minutes to find it"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-07T08:47:43.399000",
                        "user": "Daevion",
                        "text": "https://github.com/zyrolasting/mindmap"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-07T22:11:36.484000",
                        "user": "Daevion",
                        "text": "I started a Racket FAQ: https://github.com/racket/racket/wiki/FrequentlyAskedQuestions"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-08T08:05:48.366000",
                        "user": "Daevion",
                        "text": "@notjack thank you  very good tip"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-08T13:13:25.548000",
                        "user": "Daevion",
                        "text": "@notjack done https://github.com/racket/racket/wiki/FrequentlyAskedQuestions"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-09T11:46:42.335000",
                        "user": "Marilou",
                        "text": "hazza! AOC day2 done. got 4stars now \ud83d\ude06"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-10T03:20:10.346000",
                        "user": "Cortlin",
                        "text": "Recursion is a pain in the ass"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-10T05:26:56.105000",
                        "user": "Cortlin",
                        "text": "wtf is that"
                    }
                ]
            },
            {
                "conversation_id": "62",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-06T22:46:50.360000",
                        "user": "Yaw",
                        "text": "i remember that! it was pretty cool. i opened it up to see how they were doing the pythonstyle syntactically significant whitespace"
                    }
                ]
            },
            {
                "conversation_id": "63",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-07T22:41:14.688000",
                        "user": "Cortlin",
                        "text": "Hey thats pretty cool"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-08T02:25:53.860000",
                        "user": "Kiam",
                        "text": "@StephenD can I run it on android is another very common question"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-09T12:14:17.976000",
                        "user": "Marilou",
                        "text": "day 2 part 2 pushed my limits a bit. tried to do recursion but ended up with for loops instead"
                    }
                ]
            },
            {
                "conversation_id": "64",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T04:46:06.382000",
                        "user": "Alyiah",
                        "text": "Looping is a pain in the ass"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-10T04:47:48.723000",
                        "user": "Alyiah",
                        "text": "Different problems are better solved different ways. Looping has its place recursion has its place. But both are important and it's good to know when to use which"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-10T04:50:56.308000",
                        "user": "Kiam",
                        "text": "use neither write stream pipelines"
                    }
                ]
            },
            {
                "conversation_id": "65",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T06:06:54.760000",
                        "user": "Bexon",
                        "text": "filter map reduce"
                    }
                ]
            },
            {
                "conversation_id": "66",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T10:31:42.049000",
                        "user": "Marilou",
                        "text": "is there a good resource to explain map reduce filter in racket or general? i am a greenhorn when it comes to this"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-10T10:55:17.189000",
                        "user": "Bexon",
                        "text": "@parlortricks in my opinion it\u2019s best to experiment with them"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-10T10:55:37.746000",
                        "user": "Bexon",
                        "text": "map is when you want to do something with the data but want to preserve its shape  for example multiplying all elements of a list by two (individual elements change but you got a list and you returned a list)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-10T10:56:16.333000",
                        "user": "Bexon",
                        "text": "reduce is for changing shape (like taking a list and returning a sum of the elements)"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-10T10:56:32.168000",
                        "user": "Bexon",
                        "text": "and filter is just throwing stuff out based on some predicate"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-10T10:57:46.751000",
                        "user": "Bexon",
                        "text": "with map the number of elements doesn\u2019t change with filter it can change"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-10T12:14:14.715000",
                        "user": "Bexon",
                        "text": "yess"
                    }
                ]
            },
            {
                "conversation_id": "67",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T12:06:24.226000",
                        "user": "Cortlin",
                        "text": "And they're all implemented with recursion under the hood. :meow:"
                    }
                ]
            },
            {
                "conversation_id": "68",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T12:23:34.662000",
                        "user": "Bexly",
                        "text": "I originally posted in help although after some debugging I\\'m not entirely convinced its on me but it could be. I\\'m following the embed racket in a binary tutorial but I\\'ve fudged the code to get all of the imports dynamically by loading libracket3m instead of linking it all into my binary. Originally I had a crash which I traced to not calling scheme_register_tls_space\". But I now get a crash in the depths of libracket3m when it tries to write data to a read only address. Given that this address is nowhere near my binary it looks like a heap allocation so I\\'m all out of ideas. I checked Github but is there anywhere I can read the source for libracket?"
                    }
                ]
            },
            {
                "conversation_id": "69",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T12:43:21.743000",
                        "user": "Daevion",
                        "text": "> is there a good resource to explain map reduce filter in racket or general? i am a greenhorn when it comes to this@parlortricks I think foldl and foldr May be of interest https://docs.racketlang.org/reference/pairs.html?q=Fold#%28def._%28%28lib._racket%2Fprivate%2Flist..rkt%29._foldl%29%29"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-10T12:47:11.473000",
                        "user": "Daevion",
                        "text": "And maybe https://htdp.org/20030926/Book/curriculumZH27.html#node_idx_1502"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-10T12:54:15.245000",
                        "user": "Cortlin",
                        "text": "I recommend reading the reference implementation of SRFI1. It's easy to read and gives you a sense of idiomatic use of recursion over lists."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-10T16:08:11.125000",
                        "user": "Ambriel",
                        "text": "> Different problems are better solved different ways. Looping has its place recursion has its place. But both are important and it\\'s good to know when to use which@nixin72 Could you please expand on this? My only substantial programming experience so far is with _How to Design Programs_ which I am very close to finishing. The book introduces for loops in an intermezzo but otherwise sticks to recursion; and in looking ahead to the contents of the _How to Design Classes_ draft I saw that it contains a section called Why Loops are Bad ... but that was never even started. While I have had no problem with recursion in working through _HtDP_ when I was trying to implement 3SUM based on an algorithms textbook I did think using nested for loops looked easier. Why does there appear to be hostility to for loops in functional contexts?"
                    }
                ]
            },
            {
                "conversation_id": "70",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T13:30:20.493000",
                        "user": "Marilou",
                        "text": "thanks everyone ill read up on the suggestions"
                    }
                ]
            },
            {
                "conversation_id": "71",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T16:14:12.684000",
                        "user": "Alyiah",
                        "text": "With for loops your goal is often to perform something like a map filter or reduce which are obviously better implemeted as higherorder functions rather than loops. But some algorithms are just more nicely represented as a loop rather than recursion like bubble sort. Not that you can't implement bubble sort recursively but I at least happen to find it's iterative definition a little nicer. Something like quicksort though on the other hand much nicer to do recursively seeing as it's a divide and conquer strategy. Not sure how you'd try to express that iteratively. But sometimes you just want to avoid recursion in general like if you're using Java since the platform itself doesn't do tail call optimization so you're going to get a performance hit from using recursion instead of loops."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-10T16:18:32.922000",
                        "user": "Ambriel",
                        "text": "Thank you!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-10T16:28:15.043000",
                        "user": "Alyiah",
                        "text": "No problem!"
                    }
                ]
            },
            {
                "conversation_id": "72",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-10T17:27:59.896000",
                        "user": "Britten",
                        "text": "@kronos you may want to make a small example and ask on the mailing list. The libracket source is mostly in here iirc https://github.com/racket/racket/tree/master/racket/src/bc/src"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-10T17:28:55.156000",
                        "user": "Bexly",
                        "text": "@oaktownsam Thank you! Will do \ud83d\ude42"
                    }
                ]
            },
            {
                "conversation_id": "73",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-12T00:13:37.548000",
                        "user": "Cortlin",
                        "text": "Is racket better than python?"
                    }
                ]
            },
            {
                "conversation_id": "74",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-12T00:57:35.097000",
                        "user": "Rynlee",
                        "text": "That's a loaded question"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-12T01:01:40.366000",
                        "user": "Yaw",
                        "text": "i think that question implies you can reduce the goodness of a language to a scalar value which can be ordered but i don't think that is the case"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-12T01:02:02.344000",
                        "user": "Yaw",
                        "text": "so you probably need to ask a more nuanced question to get a meaningful answer"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-12T01:02:25.051000",
                        "user": "Yaw",
                        "text": "i find python to be a nice language for a lot of things (:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-12T01:04:12.506000",
                        "user": "Yaw",
                        "text": "but i would probably use python and racket for different things"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-12T01:05:53.886000",
                        "user": "Yaw",
                        "text": "my personal opinion . . . racket is more fun (:"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-12T01:06:28.405000",
                        "user": "Cortlin",
                        "text": "I mean im not saying Python is better at all If a language is better or not completely depends on personal preference and what It will be used on."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-12T01:07:00.480000",
                        "user": "Yaw",
                        "text": "i've always been a fan of trying to make use of whatever tools seem to fit the problem at hand"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-12T01:07:46.439000",
                        "user": "Yaw",
                        "text": "and the problem at hand can include factors like what languages are the other people i\\'m working with familiar with? or how will i communicate this with other people"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-12T01:08:28.951000",
                        "user": "Kiam",
                        "text": "I like racket much more than python"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-12T01:08:48.921000",
                        "user": "Kiam",
                        "text": "that\\'s about as close to is x language better than y as you can get"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-12T01:11:06.366000",
                        "user": "Yaw",
                        "text": "i think for me the thing about python is that it's complicated both in terms of syntax and semantics but it's also kind of limited at the same time"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-12T01:11:28.289000",
                        "user": "Yaw",
                        "text": "and python works just fine for some things but sometimes i just want to do something and i can't or i can but the natural way to express it is kind of weird"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-12T01:13:25.137000",
                        "user": "Yaw",
                        "text": "i think every language should have tail call elimination and proper lambdas"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-12T01:13:44.458000",
                        "user": "Yaw",
                        "text": "well every generalpurpose language"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-12T01:17:27.519000",
                        "user": "Yaw",
                        "text": "i was happy js was getting proper tail calls but that basically didn't happen because browser vendors didn't want it . . . and then i was optimistic about the wasm tail call proposal but i'm not sure that one's going to work out either"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-12T01:17:53.771000",
                        "user": "Yaw",
                        "text": "frown"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-12T01:19:19.367000",
                        "user": "Kiam",
                        "text": "the thing that gets me about python is how much it lacks typo safety  it is far far too hard to catch silly mistakes caused by typos"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-12T01:19:40.278000",
                        "user": "Kiam",
                        "text": "for example because calling a function that doesn't exist is a runtime error not a compile time one"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-12T01:20:02.203000",
                        "user": "Kiam",
                        "text": "I don't have this problem in racket"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-12T01:21:02.697000",
                        "user": "Yaw",
                        "text": "that is a really good point"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-12T01:22:08.970000",
                        "user": "Kiam",
                        "text": "it makes racket feel much less dynamic than other dynamic languages"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-12T01:22:18.626000",
                        "user": "Kiam",
                        "text": "and I'm very happy with that"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-12T05:24:27.608000",
                        "user": "Matt",
                        "text": "thats as much as i can say"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-12T05:25:07.389000",
                        "user": "Matt",
                        "text": "i enjoy it more than haskell c c++ python julia (julias pretty nice tho) thats about all ive used"
                    }
                ]
            },
            {
                "conversation_id": "75",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-12T05:24:20.828000",
                        "user": "Matt",
                        "text": "racket is so nice to me and i barely use it"
                    }
                ]
            },
            {
                "conversation_id": "76",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-12T08:54:40.377000",
                        "user": "Daevion",
                        "text": "> Is racket better than python?@Deleted User Thanks for the question.You made me think.At first I asked myself if I should treat this like trolling  on consideration I think you are asking a real question that a lot of people ask.As the others have mentioned here that real question can probably be better phrased as Is Racket better than Python ...for me?'But that is not an easy question because what makes a language good for a person has many different dimensions because it is as much about people as it is about languages.That said there are some interesting responses to the which is better? question. One that comes to mind is the Self programming language was implemented with a classless object system (like js) and the implementors proceeded to implement smalltalks class system in self.You may also like the racketcon talk Like a blind squirrel in a ferrari a few years ago or the Why Racket addendum in Beautiful Racket (by Matthew Butterick.)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-12T09:05:32.462000",
                        "user": "Daevion",
                        "text": "As a human using a language I think aspects to be considered are: Will learning this help me get a job? What is the documentation like? What are the learning resources like?  What is the community like?: Will I be welcomed? is it OK to ask questions? (even ones that I'm afraid might make me feel dumb uneducated or in some way less of a person) Can I learn(develop with it) on the computers I have available? school/college/university/work computer? chromebook? android phone or tablet? Window10 for ARM? Can I write programs on it that will work in the places I need them to? (server side web applications; Client side web applications; Windows Linux Mac gui apps; command line apps; terminal apps; iphone or android apps)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-12T09:09:16.830000",
                        "user": "Daevion",
                        "text": "I think the racket faq needs a couple more questions; Is Racket better than x?(for you)'I also want to add  Is Racket the same as scheme?  and point back to the reasons for the name change from PLTScheme to Racket."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-12T09:10:55.949000",
                        "user": "Kiam",
                        "text": "for me what is possible with this language? is a very important question and it\\'s a big part of why I like racket"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-12T09:13:10.868000",
                        "user": "Daevion",
                        "text": "Agreed  a big part of programming is making. So there is always an audience you are making for though sometimes that audience is me  and thats ok too."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-12T09:14:38.745000",
                        "user": "Daevion",
                        "text": "I also think a programming language is also for learning (obviously)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-12T09:14:53.817000",
                        "user": "Daevion",
                        "text": "but also for dreaming..."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-12T09:15:41.466000",
                        "user": "Bexon",
                        "text": "\u201cwhat is possible with this language?\u201d is a trap question for me I always end up with rust this wayand like :GWseremePeepoThink: I feel like I\u2019m supposed to enjoy rust but I don\u2019t? it\u2019s a great language with an awesome ecosystem but I just don\u2019t vibe with itand racket just feels good :GWcmeisterPeepoShrug:"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-12T09:16:38.630000",
                        "user": "Bexon",
                        "text": "when I was asking this question having racket in mind I ended up hating it because it was less dynamic than CL"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-12T09:17:36.087000",
                        "user": "Bexon",
                        "text": "also stuff like hygiene was a threat  \u201cit limits what I can do it has to be bad!\u201d"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-12T09:24:56.272000",
                        "user": "Bexon",
                        "text": "I still don\u2019t fully understand the concept I\u2019ve just seen some people ranting how it\u2019s annoying and limiting"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-12T09:25:12.132000",
                        "user": "Bexon",
                        "text": "don\u2019t listen to people on internet forums folks"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-12T09:28:50.918000",
                        "user": "Bexon",
                        "text": "but still  when I\u2019m in that mindset I tend to find a couple of perceived \u201cflaws\u201d and hyperfocus on them instead of just making cool stuff"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-12T09:29:08.875000",
                        "user": "Bexon",
                        "text": "could be just me though :^)"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-12T09:30:20.143000",
                        "user": "Kiam",
                        "text": "I would say it's safe to ignore the complaints about hygiene"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-12T09:31:38.716000",
                        "user": "Kiam",
                        "text": "lack of hygiene is a debilitating flaw in a modern macro system"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-12T09:32:16.199000",
                        "user": "Daevion",
                        "text": "https://dl.acm.org/doi/epdf/10.1145/3386330"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-12T09:34:01.651000",
                        "user": "Daevion",
                        "text": "Complaining about hygiene seems a lot like complaining about gc"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-12T09:34:32.406000",
                        "user": "Bexon",
                        "text": "yeah and complaining about GC is everywhere nowadays"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-12T09:35:16.684000",
                        "user": "Bexon",
                        "text": "GC and dynamic types are typical scapegoats these days"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-12T09:37:41.276000",
                        "user": "Kiam",
                        "text": "wow that paper is _thorough_"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-12T09:38:26.841000",
                        "user": "Kiam",
                        "text": "it has multiple pages on an obscure macro issue I've run into a few times and never thought of a good reconciliation for"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-12T09:38:36.827000",
                        "user": "Bexon",
                        "text": ":GWseremePeepoGGERS:"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-12T09:38:47.877000",
                        "user": "Kiam",
                        "text": "(specifically are field names identifiers or symbols?\")"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-12T09:38:59.426000",
                        "user": "Bexon",
                        "text": "what are they?"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-12T09:39:36.504000",
                        "user": "Kiam",
                        "text": "scheme standards say they're supposed to be identifiers but in practice that doesn't really work they need to be handled symbolically"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-12T09:39:47.060000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-09-12T09:40:06.002000",
                        "user": "Kiam",
                        "text": "(it's about fields in record types)"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-09-12T09:41:51.727000",
                        "user": "Bexon",
                        "text": "yeah got it"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-09-12T09:45:33.427000",
                        "user": "Daevion",
                        "text": "> wow that paper is _thorough_@notjack did you notice the \u2018shepherd\u2019?"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-09-12T09:47:28.183000",
                        "user": "Kiam",
                        "text": "I did not wow"
                    }
                ]
            },
            {
                "conversation_id": "77",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-12T09:20:52.393000",
                        "user": "Kiam",
                        "text": "hygiene _doesn't_ limit what you can do"
                    }
                ]
            },
            {
                "conversation_id": "78",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-12T10:16:24.956000",
                        "user": "Zayne",
                        "text": "wow incredibly detailed report on hygiene there :)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-12T10:19:41.985000",
                        "user": "Daevion",
                        "text": "I believe this will be a featured paper in Racket News. To see more like this I would recommend subscribing at https://racketnews.com and checking out the back issues."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-12T21:46:23.676000",
                        "user": "Kiam",
                        "text": "I read that paper's description of the set of scopes model and it was amazingly clear"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-12T21:46:35.784000",
                        "user": "Kiam",
                        "text": "I need to read the rest of that paper soon"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-12T23:43:36.361000",
                        "user": "Britten",
                        "text": "I also found these section titles amusing"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-12T23:44:24.966000",
                        "user": "Britten",
                        "text": "I'm only a quarter of the way through the paper though. I'm a slow reader."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-12T23:46:04.122000",
                        "user": "Cortlin",
                        "text": "I remember reading Oleg's original paper on that."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-12T23:46:23.521000",
                        "user": "Cortlin",
                        "text": "I thought wow how the heck would someone come up with that"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-12T23:46:27.930000",
                        "user": "Kiam",
                        "text": "Kiselyov Defilement is an amazing section title"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-12T23:46:58.168000",
                        "user": "Cortlin",
                        "text": "But abusing the literal list is an obvious idea in retrospect I suppose."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-13T06:06:44.175000",
                        "user": "Kiam",
                        "text": "@parlortricks wow I really like those diagrams"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-13T06:07:36.206000",
                        "user": "Kiam",
                        "text": "is this the mermaid thing you used? https://mermaidjs.github.io/mermaid/"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-13T06:09:57.406000",
                        "user": "Marilou",
                        "text": "> is this the mermaid thing you used? https://mermaidjs.github.io/mermaid/@notjack yes that is what i used. gitlab has it included as a markdown option"
                    }
                ]
            },
            {
                "conversation_id": "79",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-12T12:07:24.607000",
                        "user": "Marilou",
                        "text": "I have created a repository on gitlab to host my Advent of Code and to try and explain how i worked things out https://gitlab.com/ParlorTricks/adventofcode. Still fleshing out how to deliver it."
                    }
                ]
            },
            {
                "conversation_id": "80",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-12T19:27:28.163000",
                        "user": "Britten",
                        "text": "https://giphy.com/gifs/thingstheaterstrugglesiDJuQR0UmiqOI"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-12T22:33:40.150000",
                        "user": "Britten",
                        "text": "Set of scopes is nice++"
                    }
                ]
            },
            {
                "conversation_id": "81",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-13T04:14:26.370000",
                        "user": "Marilou",
                        "text": "I wrote this page to assist me with map/filter/reduce https://gitlab.com/ParlorTricks/adventofcode//blob/master/rackettips.md  has some diagrams created with mermaid to visualise them as well."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-13T06:17:18.147000",
                        "user": "Marilou",
                        "text": "i was going to draw them in Visio but having something in text is much better i can source control it then"
                    }
                ]
            },
            {
                "conversation_id": "82",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-13T10:43:38.998000",
                        "user": "Kiam",
                        "text": "idle thought of the night: I wish `#lang`based languages had `languageserver` submodules that started servers which spoke the language sever protocol"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-13T10:44:13.774000",
                        "user": "Daevion",
                        "text": "That is such a good idea!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-13T10:54:02.621000",
                        "user": "Kiam",
                        "text": "that way there could be a single racket langserver program that just looks at the file's lang starts up a server using the lang's submodule then acts as a proxy between the client and the langspecific servers"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-13T10:55:57.301000",
                        "user": "Kiam",
                        "text": "and then `#lang` authors could ship great editor support directly through the racket package system"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-13T10:58:18.819000",
                        "user": "Daevion",
                        "text": "How much of this work is already done by the `#lang` support in DrRacket? how much has GregH already done to made this functionality available to RacketMode?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-13T10:59:00.827000",
                        "user": "Kiam",
                        "text": "some there's stuff like the color lexer thing"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-13T10:59:57.716000",
                        "user": "Kiam",
                        "text": "languages can include stuff in... I think the reader? where it supports a way to ask the lang how to syntax highlight stuff"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-13T11:01:03.904000",
                        "user": "Kiam",
                        "text": "and all of the functionality that's derived from the macro expander like binding arrows and identifier renaming is already language agnostic anyway"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-13T11:02:07.096000",
                        "user": "Daevion",
                        "text": "Sounds like a worthy project!"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-13T11:02:16.488000",
                        "user": "Kiam",
                        "text": "this would be mainly useful for things like autocompletion and languagespecific forms of navigation such as jump to type definition"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-13T11:03:04.611000",
                        "user": "Kiam",
                        "text": "there isn't really a way to do that stuff for an arbitrary `#lang` ya gotta ask the language what those operations mean"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-13T13:11:31.001000",
                        "user": "Daevion",
                        "text": "Sounds like a big project."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-13T13:13:09.815000",
                        "user": "Daevion",
                        "text": "It would be worth defining a MVP and seeing if you could attract collaborators. There are a significant number of VSC users (unsurprisingly)."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-13T13:15:01.999000",
                        "user": "Daevion",
                        "text": "Apart from VSC  what other ides can use LSP?"
                    }
                ]
            },
            {
                "conversation_id": "83",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-13T13:59:50.726000",
                        "user": "Bexon",
                        "text": "isn't racketmode lspbased?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-13T14:00:21.696000",
                        "user": "Bexon",
                        "text": "I have lsp in emacs just not sure if for racket"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-13T14:00:34.675000",
                        "user": "Bexon",
                        "text": "lsp was supposed to be ideagnostic that's why it's popular"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-13T14:18:44.948000",
                        "user": "Daevion",
                        "text": "> isn't racketmode lspbased?@sarna I don\u2019t know!"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-13T14:19:33.829000",
                        "user": "Bexon",
                        "text": "> Racket Mode uses a \u201cback end server\u201d written in Racket which is responsible for running files and implementing commands that cannot be implemented in Emacs Lisp."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-13T14:19:38.429000",
                        "user": "Bexon",
                        "text": "seems like it.. isn't?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-13T16:35:14.337000",
                        "user": "Britten",
                        "text": "There is an LSP bit for vim but I haven't messed with it yet."
                    }
                ]
            },
            {
                "conversation_id": "84",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-13T16:40:58.897000",
                        "user": "Daevion",
                        "text": "https://github.com/jeapostrophe/racketlangserver do they use this?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-13T16:42:44.240000",
                        "user": "Kiam",
                        "text": "racketmode doesn't use lsp lsp didn't exist at the time it was made"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-13T16:43:33.108000",
                        "user": "Kiam",
                        "text": "lsp is awesome but I can't believe it uses UTF16 for everything \ud83e\udd26"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-13T16:47:00.271000",
                        "user": "Daevion",
                        "text": "Does https://github.com/jeapostrophe/racketlangserver use UTF16 ? I thought json  and by extension LSProtocol as a json api  mandated Utf8?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-13T16:49:08.217000",
                        "user": "Britten",
                        "text": "No the vim addon doodad is a generic LSP client you are supposed to be able to plug it into the language end"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-13T16:52:36.273000",
                        "user": "Kiam",
                        "text": "so the language sever has to read the file into memory and reencode it as utf16 and remember to do that every time or else things will go wrong as soon as a source file contains nonascii characters"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-13T16:52:49.895000",
                        "user": "Daevion",
                        "text": "That\u2019s in the LSProtocol specification? Seems insane? Is there a good reason?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-13T16:52:58.049000",
                        "user": "Britten",
                        "text": "Because Windows"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-13T16:53:41.403000",
                        "user": "Kiam",
                        "text": "the spec was mostly driven by Microsoft for use with Typescript so utf16 seemed reasonable to them"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-13T16:54:04.803000",
                        "user": "Kiam",
                        "text": "there isn't even a way for clients and servers to negotiate the encoding"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-13T16:54:20.315000",
                        "user": "Kiam",
                        "text": "yet at least"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-13T16:55:40.069000",
                        "user": "Britten",
                        "text": "unicode makes some things better and other things more complicated (for ASCII users)"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-13T16:55:46.647000",
                        "user": "Daevion",
                        "text": "Sounds about right for the first gen of any protocol. Can\u2019t blame engineers for doing the best they could at the time ."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-13T16:57:11.357000",
                        "user": "Kiam",
                        "text": "that's true but for fuck's sake even _java_ has gotten around to moving away from utf16 for string encoding"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-13T16:58:09.229000",
                        "user": "Kiam",
                        "text": "(sometime ago the String class changed from utf16 bytes to bytes plus a field saying what encoding it\\'s in\")"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-13T17:32:11.836000",
                        "user": "Kiam",
                        "text": "yup"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-13T17:38:21.576000",
                        "user": "Kiam",
                        "text": "no idea \ud83e\udd37"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-13T18:18:19.834000",
                        "user": "Britten",
                        "text": ":sadtrombone:"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-14T19:00:56.964000",
                        "user": "Britten",
                        "text": "I don't think there is a builtin way. You could start ssh outside of Racket and then connect using the forwarded ports on localhost. Otherwise you can start ssh inside Racket with `process` or `process`https://docs.racketlang.org/reference/subprocess.html?q=system#%28def._%28%28lib._racket%2Fsystem..rkt%29._process%29%29"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-15T07:13:00.029000",
                        "user": "Bexon",
                        "text": "why do all thread functions start with \u201cthread\u201d but not \u201ckillthread\u201d and \u201cbreakthread\u201d? legacy?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-15T07:47:28.173000",
                        "user": "Kiam",
                        "text": "probably"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-15T07:48:17.223000",
                        "user": "Kiam",
                        "text": "naming conventions for racket APIs have evolved over time and people don't always know about them"
                    }
                ]
            },
            {
                "conversation_id": "85",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-13T16:50:58.924000",
                        "user": "Kiam",
                        "text": "the wire protocol sends all the json text as utf8  the problem is that the _column positions_ that occur in messages like hey what\\'s the type of the variable at line 86 column 33 don\\'t mean 33 codepoints they mean 33 bytes assuming the file is encoded as utf16"
                    }
                ]
            },
            {
                "conversation_id": "86",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-13T17:31:12.456000",
                        "user": "Daevion",
                        "text": "> the wire protocol sends all the json text as utf8  the problem is that the _column positions_ that occur in messages like hey what\\'s the type of the variable at line 86 column 33 don\\'t mean 33 codepoints they mean 33 bytes assuming the file is encoded as utf16@notjack Im assuming this means the typescript lsp server is or was written is a windows Lang where UTF16 is convenient?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-13T17:33:56.824000",
                        "user": "Daevion",
                        "text": "Weird. I wonder but will prob never know why they didn\u2019t use typescript?"
                    }
                ]
            },
            {
                "conversation_id": "87",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-13T18:04:16.175000",
                        "user": "Britten",
                        "text": "My hypothesis is that the original language client was plain old VisualStudio (not vscode) and all of the innards are UTF16 and it all flows from there."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-13T18:05:03.599000",
                        "user": "Britten",
                        "text": "oh obvs doesn't totally explain the typescript implementation side."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-13T18:06:27.066000",
                        "user": "Daevion",
                        "text": "I\u2019m assuming there is a LSPv2 currently being worked on somewhere"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-13T18:08:45.563000",
                        "user": "Kiam",
                        "text": "the current spec is v3"
                    }
                ]
            },
            {
                "conversation_id": "88",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-14T00:22:28.124000",
                        "user": "Marilou",
                        "text": "> i was going to draw them in Visio but having something in text is much better i can source control it then@parlortricks i just found that http://draw.io can import mermaid source and draw the diagram i think that is pretty cool allows you to play with it after"
                    }
                ]
            },
            {
                "conversation_id": "89",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-14T17:09:02.288000",
                        "user": "Catori",
                        "text": "is there a built in way to connect over ssh tunnel in `db`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-14T17:23:39.222000",
                        "user": "Daevion",
                        "text": "I\u2019ve only used Stunnel and that wasn\u2019t for Racket/ db. You could try a search of the docs https://docs.racketlang.org/search/index.html?q=Ssh or maybe the mailing list."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-15T04:11:01.138000",
                        "user": "Catori",
                        "text": "@oaktownsam process to start the ssh tunnel may just be the most effective"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-15T04:11:02.076000",
                        "user": "Catori",
                        "text": "thanks"
                    }
                ]
            },
            {
                "conversation_id": "90",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-16T05:54:12.083000",
                        "user": "Marilou",
                        "text": "ive just staryed toying with math/array and in the doco it creates a 6x6 array and pretty prints it. However when i do this in the repl it prints the whole array on one line... can you pretty print arrays?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-16T05:58:01.673000",
                        "user": "Marilou",
                        "text": "i know i can write my own thing to pretty print it but is something already in built"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-16T09:32:33.603000",
                        "user": "Marilou",
                        "text": "@notjack yeah im using drracket repl un horizontal layout. source at top repl below"
                    }
                ]
            },
            {
                "conversation_id": "91",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-16T06:13:15.941000",
                        "user": "Kiam",
                        "text": "@parlortricks are you using the drracket repl and if so are you using the horizontal or the vertical layout of the definitions and interactions panes?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-16T11:35:58.704000",
                        "user": "Sevak",
                        "text": "lo all"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-16T11:36:45.909000",
                        "user": "Cortlin",
                        "text": "Ahoj"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-16T12:13:54.816000",
                        "user": "Bexon",
                        "text": ":meowloween:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-17T00:36:14.694000",
                        "user": "Cortlin",
                        "text": "`fromtemplate` is a tad unwieldy."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-17T00:36:31.652000",
                        "user": "Cortlin",
                        "text": "Why not `create` or `init`?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-17T00:38:47.392000",
                        "user": "Alyiah",
                        "text": "Cause I'm dumb and gave it a verbose name lol"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-17T00:39:54.346000",
                        "user": "Cortlin",
                        "text": "Haha"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-17T00:40:53.204000",
                        "user": "Alyiah",
                        "text": "I was thinking of changing it to `raco new`  `raco new guiapp` is much nicer tbh \ud83d\udc4c"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-17T00:41:14.775000",
                        "user": "Alyiah",
                        "text": "Also `new` somehow isn't taken among raco commands as far as I can tell"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-17T00:41:50.985000",
                        "user": "Daevion",
                        "text": "I think we have a winner!"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-17T00:42:08.979000",
                        "user": "Cortlin",
                        "text": "Sounds good to me."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-17T00:43:32.366000",
                        "user": "Daevion",
                        "text": "the idea for the collection of templates came from `dotnet new`"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-17T00:43:46.232000",
                        "user": "Daevion",
                        "text": "so why not `raco new`"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-17T00:44:02.865000",
                        "user": "Alyiah",
                        "text": "Lol sounds good to me! I'll go change that give me a sec"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-17T00:45:16.230000",
                        "user": "Daevion",
                        "text": "@nixin72 can you keep the old command? just while we are beta testing?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-17T00:45:30.633000",
                        "user": "Daevion",
                        "text": "or have both"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-17T00:47:06.706000",
                        "user": "Daevion",
                        "text": "```racket(define racocommands \\'((\"fromtemplate main.rkt Install a repo from a template at rackettemplates 50)(\"new main.rkt Install a repo from a template at rackettemplates 50)))```"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-17T00:47:09.502000",
                        "user": "Alyiah",
                        "text": "Yup I can definitely do that"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-17T00:48:07.608000",
                        "user": "Daevion",
                        "text": "cool I can announce it tomorrow on the slack once it builds on pkgs again"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-17T00:48:42.093000",
                        "user": "Daevion",
                        "text": "we have added a `#lang` template thanks to @samth"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-17T00:54:45.387000",
                        "user": "Alyiah",
                        "text": "Ohh nice!"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-17T00:55:22.740000",
                        "user": "Alyiah",
                        "text": "I've added `new` as an alternative to `fromtemplate` now @Deleted User \ud83d\udc4d Thanks for the suggestion"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-17T01:03:34.663000",
                        "user": "Daevion",
                        "text": "check out `racketscaffold`It might be a useful way of customising code generation from templates.to install;```% raco pkg install racketscaffold```to create a package: ```raco scaffold package d Some new package V 1.0 l MIT r markdown L racket/base u me e me@example.com myname```I\\'m a bit worried it might overcomplicate things and break the github functionality."
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-17T14:13:01.507000",
                        "user": "Daevion",
                        "text": "[Announcement/update] rackettemplatesThank you to those who provided feedback and contributed code yesterday but we still need users to try out the tool on different platforms; linux windows & macos. Just reply with a note saying platform and if it worked.You can install with `raco pkg install fromtemplate`Update with `raco pkg update fromtemplate`changes:  you can now use the command new as in `raco new lang mylang` there is now a `#lang` template `lang` ( from `samth/xlang` courtesy of the author @samth )Please try it out and let us know if the thread if you succeed or failKind regards,Stephen"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-17T16:08:40.600000",
                        "user": "Alyiah",
                        "text": "I'll give the `#lang` template a shot later \ud83d\udc4d"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-17T22:31:23.751000",
                        "user": "Daevion",
                        "text": "I've renamed the `xlang` template as `lang`"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-09-18T04:36:55.699000",
                        "user": "Alyiah",
                        "text": "It doesn't I was messing around with it a couple weeks ago"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-09-18T04:37:51.461000",
                        "user": "Cortlin",
                        "text": "This should work (from the top of my head):```Prolog#lang datalog(racket/base).list(0 1 2).```"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-09-18T04:39:35.347000",
                        "user": "Kiam",
                        "text": "wait really? I thought it was only racklog that supported that kind of embedding"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-09-18T04:40:07.045000",
                        "user": "Kiam",
                        "text": "whoa you're totally right"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-09-18T04:41:23.014000",
                        "user": "Kiam",
                        "text": "> A requirement is a `(` then an identifier then `)` then `.` and it imports functions that can be called as external queries.> > An external query is a variable then `:` then an identifier then a parenthesized list of comma separated terms. Beware that an external query can break Datalog\u2019s termination guarantee."
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-09-18T04:41:54.626000",
                        "user": "Kiam",
                        "text": "https://docs.racketlang.org/datalog/datalog.html"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-09-18T04:44:04.131000",
                        "user": "Cortlin",
                        "text": "\ud83d\ude38"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-09-18T18:10:21.278000",
                        "user": "Kiam",
                        "text": "it's more stdlib++"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-09-18T18:15:40.743000",
                        "user": "Britten",
                        "text": "https://tenor.com/view/whynotbothgif11478682"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-09-22T02:33:21.311000",
                        "user": "Catori",
                        "text": "https://docs.racketlang.org/bestfit/index.html"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-09-22T02:33:26.983000",
                        "user": "Catori",
                        "text": "i wonder why this needs to be non negative"
                    }
                ]
            },
            {
                "conversation_id": "92",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-16T14:08:18.928000",
                        "user": "Daevion",
                        "text": "Hello @Zac Bir [he/him]"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-17T00:30:56.321000",
                        "user": "Daevion",
                        "text": "[ANN]Call for betatesters: racket templatesWe have a small collection of templates at https://github.com/rackettemplates and a command that helps you use them.I\u2019ll do a formal release in the next Racket News but in the meantime it would be great if you have a few free moments to try the tool and a template (or two) let me know if you see any problems.You can download a template straight to your computer with the command `raco fromtemplate <template repo name> <destination folder>` e.g. the following command creates a new folder in the current directory and populates it with the contents of the guiapp template.`raco fromtemplate guiapp mygui`Thanks to @nixin72 we have an extension to raco that adds the fromtemplate command.Thanks also go to Andre Garzia for getting it working for windows.It should go something like this;```% echo $PATH/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/Applications/Racket v7.8/bin:/opt/X11/bin:/Library/Apple/usr/bin% raco pkg install fromtemplateResolving fromtemplate via https://download.racketlang.org/releases/7.8/catalog/Resolving fromtemplate via https://pkgs.racketlang.orgDownloading repository https://github.com/nixin72/fromtemplate.git[\u2026]raco setup:  installing collections  [17:55:59]raco setup:  postinstalling collections  [17:55:59]% mkdir templatetests% cd templatetests % raco fromtemplate guiapp myguiguiapp/Users/spdegabrielle/Dev/templatetests/Cloning into \\'mygui\\'...remote: Enumerating objects: 25 done.remote: Counting objects: 100% (25/25) done.remote: Compressing objects: 100% (19/19) done.remote: Total 25 (delta 8) reused 13 (delta 3) packreused 0Unpacking objects: 100% (25/25) done.#t% lsmygui% cd mygui```Please try it out and let me know if you identify any problems.Suggestions appreciated!"
                    }
                ]
            },
            {
                "conversation_id": "93",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-17T00:59:07.856000",
                        "user": "Cortlin",
                        "text": "Excellent :meow:"
                    }
                ]
            },
            {
                "conversation_id": "94",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-18T03:57:14.207000",
                        "user": "Breno",
                        "text": "does `#lang datalog` have support for lists? or will I need to homeroll them?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-18T04:03:13.660000",
                        "user": "Breno",
                        "text": "I know racklog has a larger syntax but it doesnt have support for retractions which is somethig I needed"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-18T04:36:36.238000",
                        "user": "Kiam",
                        "text": "I don't think datalog has any builtin list support"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-18T04:37:15.046000",
                        "user": "Cortlin",
                        "text": "It's very easy to import Racket stuff into Datalog fortunately."
                    }
                ]
            },
            {
                "conversation_id": "95",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-18T16:21:38.677000",
                        "user": "Bexon",
                        "text": "@notjack what\u2019s the usecase for rebellion? it kinda looks like CL\u2019s alexandria to be honest"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-18T16:22:41.862000",
                        "user": "Bexon",
                        "text": "I mean is it more for when you\u2019re using a custom #lang and need some goodies or stdlib++ (like alexandria)?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-18T19:24:31.615000",
                        "user": "Kiam",
                        "text": "it's a primitive"
                    }
                ]
            },
            {
                "conversation_id": "96",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-18T19:20:57.781000",
                        "user": "Marshawn",
                        "text": "Quick question how is `if` implemented? Is it a primitive or a macro that is lowered to a thunk or something?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-18T19:25:10.772000",
                        "user": "Kiam",
                        "text": "you can check by looking at the grammar for fully expanded programs https://docs.racketlang.org/reference/syntaxmodel.html#%28part._fullyexpanded%29"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-18T19:28:25.820000",
                        "user": "Marshawn",
                        "text": "Coolio thanks!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-25T00:48:03.426000",
                        "user": "Kiam",
                        "text": "cool thing I want to make inspired by an earlier convo in #help : sliding window transducer``` > (transduce (list 1 2 3 4 5) (windowing 3) #:into intolist) (list (list 1 2 3) (list 2 3 4) (list 3 4 5))```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-25T00:49:39.658000",
                        "user": "Kiam",
                        "text": "optionally with a way to collect the windows into things other than lists``` > (transduce (list 1 2 3 4 5) (windowing 3 #:into intovector) #:into intolist) (list (vector 1 2 3) (vector 2 3 4) (vector 3 4 5))```"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-25T02:34:41.055000",
                        "user": "Kiam",
                        "text": "mentioned this in the racket slack as well but I got `windowing` working!"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-25T04:52:35.225000",
                        "user": "Kiam",
                        "text": "when I was still experimenting with the whole idea"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-25T10:04:35.965000",
                        "user": "Cortlin",
                        "text": "@notjack ah this was the one"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-25T10:04:42.438000",
                        "user": "Cortlin",
                        "text": "I wanted help with"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-25T10:04:58.698000",
                        "user": "Cortlin",
                        "text": "at the end I gave up because I'm pretty sure racket/lsip languages aren't meant for this sorta dataprocessing"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-25T10:06:00.903000",
                        "user": "Kiam",
                        "text": "it is now! https://docs.racketlang.org/rebellion/Transducers.html#%28def._%28%28lib._rebellion%2Fstreaming%2Ftransducer..rkt%29._windowing%29%29"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-25T10:06:26.250000",
                        "user": "Kiam",
                        "text": "less flippantly: I think this is more a question of libraries than languages"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-25T11:59:22.192000",
                        "user": "Daevion",
                        "text": "Lisp enthusiasts will tell you Lisp is good for everything"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-25T12:00:38.536000",
                        "user": "Daevion",
                        "text": "(That includes scheme enthusiasts )"
                    }
                ]
            },
            {
                "conversation_id": "97",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T04:41:50.504000",
                        "user": "Britten",
                        "text": "@notjack I really thought you had already made a windowing type transducer"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-25T04:41:58.032000",
                        "user": "Kiam",
                        "text": "me too!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-25T04:42:23.463000",
                        "user": "Britten",
                        "text": "Now I have to check to see if I made one that I never contributed \ud83d\ude26"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-25T04:52:22.420000",
                        "user": "Kiam",
                        "text": "I think I made one in my _other_ transducers library buried in my personal labs repo"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-25T04:52:43.331000",
                        "user": "Kiam",
                        "text": "(of transducers I mean)"
                    }
                ]
            },
            {
                "conversation_id": "98",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T10:26:00.008000",
                        "user": "Bexon",
                        "text": "yeah lisps are really good for data processing"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-25T10:26:26.120000",
                        "user": "Bexon",
                        "text": "isn\u2019t it one of their biggest pros even?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-25T12:13:59.048000",
                        "user": "Bexon",
                        "text": "I\\'d say lisp (and ML family) languages are good for anything but embedded realtime very few resources type of thing"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-25T12:14:14.336000",
                        "user": "Bexon",
                        "text": "you might not even have a heap in this scenario"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-25T12:16:45.512000",
                        "user": "Daevion",
                        "text": "I dare you to ask about \u2018embedded realtime lisp\u2019 on r/lisp \ud83e\udd23 (I\u2019m joking  don\u2019t do it  it\u2019s just trolling and unkind.)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-25T12:17:21.878000",
                        "user": "Daevion",
                        "text": "https://tenor.com/view/oldmanyellsatcloudyellingoldmannewsthesimpsonsgif17741451"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-25T12:18:18.530000",
                        "user": "Bexon",
                        "text": "but also the truth is most of us won't have to ever deal with such a system"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-25T12:18:22.803000",
                        "user": "Bexon",
                        "text": "so :^)"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-25T12:19:05.226000",
                        "user": "Bexon",
                        "text": "well maybe not deal as we all have cellphones  write software for\""
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-25T12:23:02.432000",
                        "user": "Daevion",
                        "text": "I don\u2019t know? There are so many single board computers the size of a credit card and dirt cheap  DrRacket runs fine on the raspberry pi. I think what counts as embedded is changing. i\u2019m thinking about getting a macro pad kit that runs Linux! To drive 16 keys. I think it runs python."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-25T12:33:44.157000",
                        "user": "Bexon",
                        "text": "yeah I was thinking something more constrained"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-25T12:34:17.543000",
                        "user": "Bexon",
                        "text": "like that chip in your phone that processes data from cell towers"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-25T12:36:20.453000",
                        "user": "Bexon",
                        "text": "I had a good article about this somewhere I can't find it now :("
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-25T12:36:32.241000",
                        "user": "Daevion",
                        "text": "The curse of the information age"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-25T12:36:50.821000",
                        "user": "Bexon",
                        "text": "too many good articles with poor SEO"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-25T12:38:44.330000",
                        "user": "Daevion",
                        "text": "You now have me wondering what the smallest device where I can run Racket."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-25T12:39:30.598000",
                        "user": "Daevion",
                        "text": "(I may buy that macro pad just so I can replace python with racket to do my keyboard macros)"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-25T12:39:53.572000",
                        "user": "Daevion",
                        "text": "\ud83e\udd2a"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-25T12:40:51.747000",
                        "user": "Bexon",
                        "text": "raspberry pi zero?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-25T12:41:14.497000",
                        "user": "Bexon",
                        "text": "well it won't run on arduino but you could compile to their Clike language lol"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-25T12:41:37.451000",
                        "user": "Daevion",
                        "text": "Pizero yes."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-25T12:42:52.967000",
                        "user": "Daevion",
                        "text": "> well it won't run on arduino but you could compile to their Clike language lol@sarna I love that ASI64 project where the guy wrote a 6502 assembler in Racket to make c64 games."
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-25T12:44:14.635000",
                        "user": "Bexon",
                        "text": "link please \ud83d\udc40"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-25T12:45:15.084000",
                        "user": "Daevion",
                        "text": "https://pezipink.itch.io/c64robotfindskitten"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-25T12:45:30.104000",
                        "user": "Bexon",
                        "text": "thanks \ud83d\udc40"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-25T12:45:44.324000",
                        "user": "Bexon",
                        "text": "I remember someone optimizing their assembly code with a racket lang"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-25T12:45:50.705000",
                        "user": "Bexon",
                        "text": "rosette probably?"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-09-25T12:46:48.053000",
                        "user": "Daevion",
                        "text": "Maybe @sorawee on slack? He\u2019s the only one that I know who uses Rosette"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-09-25T12:48:42.923000",
                        "user": "Daevion",
                        "text": "I like the idea of compiling Racket to another language but to do it well I\u2019d need to know the other language well. (And I don\u2019t know any language well enough to do that)"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-09-25T13:04:20.231000",
                        "user": "Bexon",
                        "text": "found it  it was whitequark"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-09-25T13:04:21.147000",
                        "user": "Bexon",
                        "text": "https://lab.whitequark.org/notes/20200406/synthesizingoptimal8051code/"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-09-25T13:08:43.060000",
                        "user": "Daevion",
                        "text": "Thanks for that"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-09-25T13:19:21.549000",
                        "user": "Bexon",
                        "text": "on the other hand it's kinda fun when :meow: is the only feeling you experience"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-09-25T13:20:08.794000",
                        "user": "Bexon",
                        "text": "oh I can!"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-09-25T13:20:17.847000",
                        "user": "Bexon",
                        "text": "hm that's a lot of power to give your members"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-09-25T13:20:28.434000",
                        "user": "Daevion",
                        "text": "(I feel like I have made a grave mistake)"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-09-25T13:20:32.516000",
                        "user": "Daevion",
                        "text": "\ud83e\udd23"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-09-25T13:20:48.742000",
                        "user": "Cortlin",
                        "text": "I once wrote a clone of that game in CHICKEN Scheme."
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-09-25T13:20:52.516000",
                        "user": "Cortlin",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-09-25T13:21:06.836000",
                        "user": "Daevion",
                        "text": "What game?"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-09-25T13:21:13.227000",
                        "user": "Cortlin",
                        "text": "robotfindskitten"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-09-25T13:21:27.056000",
                        "user": "Daevion",
                        "text": "Link please"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-09-25T13:21:50.689000",
                        "user": "Cortlin",
                        "text": "https://github.com/erkin/robotfindschicken"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-09-25T13:22:07.439000",
                        "user": "Cortlin",
                        "text": "The code is ugly because I was using it to learn Scheme."
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-09-25T13:22:29.656000",
                        "user": "Bexon",
                        "text": "lol the description"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-09-25T13:25:43.945000",
                        "user": "Bexon",
                        "text": "by the way I noticed a pattern in my behaviorwhenever I code in a language focused on correctness (like OCaml Haskell or Rust) I\u2019m very reluctant to use any hacks and tend to think hard about modeling my problem \u201cjust right\u201dwith \u201clooser\u201d languages (like Racket or Python) I tend to just \u201cwell whatever\u201d through the problemwhile the first approach tends to produce more quality code it takes a lot more time and I most often abandon the project because I can\u2019t model something nicely :meow:"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-09-25T13:26:08.460000",
                        "user": "Bexon",
                        "text": "anyone else experienced that? :meow:"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-09-25T13:28:34.600000",
                        "user": "Cortlin",
                        "text": "I forgot to add the Makefile back to the repo it seems..."
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-09-25T13:28:59.117000",
                        "user": "Cortlin",
                        "text": "Anyway the experience is practically the same as robotfindskitten."
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-09-25T13:29:05.106000",
                        "user": "Cortlin",
                        "text": "Here's the interesting part: https://github.com/erkin/robotfindschicken/blob/master/src/const.scm#L36"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-09-25T13:31:19.999000",
                        "user": "Zayne",
                        "text": "I spend a lot of time in Racket trying to model my problem just right :D"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-09-25T13:32:30.609000",
                        "user": "Zayne",
                        "text": "I use expressive contracts and then it\\'s slow lol and I\\'m currently thinking about how to work around that just right"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-09-25T13:32:52.039000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-09-25T13:33:11.254000",
                        "user": "Bexon",
                        "text": "it can't be as bad as trying to model the whole application with OCaml's functors and firstclass modules"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-09-25T13:33:15.033000",
                        "user": "Bexon",
                        "text": "they also have objects.."
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-09-25T13:33:21.375000",
                        "user": "Zayne",
                        "text": "speaking of that emote what does it mean to you? I\\'m never sure if it\\'s a smile or a welp or a come at me"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-09-25T13:33:24.122000",
                        "user": "Bexon",
                        "text": "each decision comes with a tradeoff :meow:"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-09-25T13:33:39.102000",
                        "user": "Cortlin",
                        "text": "It's a very generic emote for me."
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-09-25T13:34:11.089000",
                        "user": "Bexon",
                        "text": "either I just ate lemon or smiling through pain"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-09-25T13:34:26.759000",
                        "user": "Zayne",
                        "text": "lol that makes sense"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-09-25T13:34:43.570000",
                        "user": "Cortlin",
                        "text": "I use it when I want to express a feeling but don't feel like articulating it."
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-09-25T13:34:45.958000",
                        "user": "Cortlin",
                        "text": "Or simply can't."
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-09-25T13:35:19.433000",
                        "user": "Daevion",
                        "text": "thats the cat from that meme isnt it ?"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-09-25T13:35:20.276000",
                        "user": "Cortlin",
                        "text": "Also takes the place of several interjections like hmm bruh wow ugh huh? ehh ouch etc"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-09-25T13:35:49.826000",
                        "user": "Cortlin",
                        "text": "Essentially a linguistic filler."
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-09-25T13:35:50.964000",
                        "user": "Daevion",
                        "text": "there is an angry woman? three panels I think?"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-09-25T13:35:56.519000",
                        "user": "Cortlin",
                        "text": "Oh no this is a different one."
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-09-25T13:36:09.092000",
                        "user": "Zayne",
                        "text": "thank you this clarifies it greatly for me lol"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-09-25T13:36:30.066000",
                        "user": "Zayne",
                        "text": "I was wondering if it was that one with the angry woman"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-09-25T13:36:39.002000",
                        "user": "Cortlin",
                        "text": "None"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-09-25T13:36:56.652000",
                        "user": "Cortlin",
                        "text": "Just a very expressive cat whose expression is so vague as to carry any potential meaning."
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-09-25T13:37:03.543000",
                        "user": "Zayne",
                        "text": "lol"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-09-25T13:37:10.348000",
                        "user": "Bexon",
                        "text": "mentally I'm them"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-09-25T13:37:32.326000",
                        "user": "Zayne",
                        "text": "don\\'t make that face at me what face :meow: "
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-09-25T13:38:59.997000",
                        "user": "Bexon",
                        "text": "\ud83e\udd23"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-09-25T13:39:30.044000",
                        "user": "Cortlin",
                        "text": ":meowblush:"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-09-25T13:39:35.109000",
                        "user": "Bexon",
                        "text": ":meowblush:"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-09-25T13:39:48.687000",
                        "user": "Bexon",
                        "text": "I love this"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-09-25T13:39:55.878000",
                        "user": "Daevion",
                        "text": "In my defence it could be the same cat"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-09-25T13:40:00.422000",
                        "user": "Daevion",
                        "text": "https://knowyourmeme.com/memes/womanyellingatacat"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-09-25T13:40:26.810000",
                        "user": "Cortlin",
                        "text": "Could be yeah. I researched a bit and couldn't find anything about the history of the :meow: cat."
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-09-25T13:40:55.011000",
                        "user": "Bexon",
                        "text": "allround talented"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-09-25T13:43:12.052000",
                        "user": "Daevion",
                        "text": "tis a good cat"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-09-25T13:43:35.459000",
                        "user": "Bexon",
                        "text": "who wants to help me writing bindings for this https://github.com/zserge/jsmn"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-09-25T13:43:52.879000",
                        "user": "Bexon",
                        "text": "so we can be faster than python"
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-09-25T13:43:54.821000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-09-25T13:44:38.140000",
                        "user": "Bexon",
                        "text": "jokes I'll just read the docs on FFI and ask here"
                    },
                    {
                        "message_number": "88",
                        "ts": "2020-09-25T13:44:54.975000",
                        "user": "Daevion",
                        "text": "ok  not sure I'll be much help as callign my c knowledge minimal woudl be overstatign things"
                    },
                    {
                        "message_number": "89",
                        "ts": "2020-09-25T13:45:48.130000",
                        "user": "Cortlin",
                        "text": "Have you tried SWIG?"
                    },
                    {
                        "message_number": "90",
                        "ts": "2020-09-25T13:46:06.012000",
                        "user": "Cortlin",
                        "text": "It's unmaintained and old so it mightn't support the most recent C FFI."
                    },
                    {
                        "message_number": "91",
                        "ts": "2020-09-25T13:46:10.483000",
                        "user": "Cortlin",
                        "text": "But could be worth a try."
                    },
                    {
                        "message_number": "92",
                        "ts": "2020-09-25T13:46:33.590000",
                        "user": "Bexon",
                        "text": "it calls racket mzscheme :meow:"
                    },
                    {
                        "message_number": "93",
                        "ts": "2020-09-25T13:46:45.514000",
                        "user": "Cortlin",
                        "text": "Yes"
                    },
                    {
                        "message_number": "94",
                        "ts": "2020-09-25T13:46:51.721000",
                        "user": "Bexon",
                        "text": "I'll try it thanks"
                    },
                    {
                        "message_number": "95",
                        "ts": "2020-09-25T13:46:58.920000",
                        "user": "Cortlin",
                        "text": "CHICKEN Scheme has it easy; you can literally `include` C headers natively."
                    },
                    {
                        "message_number": "96",
                        "ts": "2020-09-25T13:50:49.203000",
                        "user": "Bexon",
                        "text": "please don't tempt me"
                    },
                    {
                        "message_number": "97",
                        "ts": "2020-09-25T13:50:51.117000",
                        "user": "Bexon",
                        "text": ":meowblush:"
                    },
                    {
                        "message_number": "98",
                        "ts": "2020-09-25T13:51:35.976000",
                        "user": "Cortlin",
                        "text": "Oh wait SWIG is still maintained."
                    },
                    {
                        "message_number": "99",
                        "ts": "2020-09-25T13:51:46.971000",
                        "user": "Cortlin",
                        "text": "Interesting."
                    },
                    {
                        "message_number": "100",
                        "ts": "2020-09-25T13:52:42.277000",
                        "user": "Bexon",
                        "text": "didn't racket on chez change something wrt FFI?"
                    },
                    {
                        "message_number": "101",
                        "ts": "2020-09-25T13:53:14.844000",
                        "user": "Cortlin",
                        "text": "Yeah I think it's entirely different."
                    },
                    {
                        "message_number": "102",
                        "ts": "2020-09-25T13:53:49.093000",
                        "user": "Bexon",
                        "text": "I heard good things about chez FFI though could be fun"
                    },
                    {
                        "message_number": "103",
                        "ts": "2020-09-25T13:54:06.380000",
                        "user": "Cortlin",
                        "text": "No idea if SWIG intends to support it. Wouldn't surprise me if they do though; there's Guile and CHICKEN support as well."
                    },
                    {
                        "message_number": "104",
                        "ts": "2020-09-25T13:54:17.908000",
                        "user": "Cortlin",
                        "text": "Might be worth emailing them to ask about it."
                    },
                    {
                        "message_number": "105",
                        "ts": "2020-09-25T13:54:19.690000",
                        "user": "Daevion",
                        "text": "I'm interested in learnng the racket(cs) ffi"
                    },
                    {
                        "message_number": "106",
                        "ts": "2020-09-25T13:56:12.962000",
                        "user": "Bexon",
                        "text": "don't look at me  I embarrassed myself on gambit's mailing list already never again :meowblush:"
                    },
                    {
                        "message_number": "107",
                        "ts": "2020-09-25T13:57:49.854000",
                        "user": "Daevion",
                        "text": "I nearly started a fight on the snap! forum this week.:meow:"
                    },
                    {
                        "message_number": "108",
                        "ts": "2020-09-25T13:59:06.947000",
                        "user": "Cortlin",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "109",
                        "ts": "2020-09-25T14:01:53.087000",
                        "user": "Daevion",
                        "text": "did the ffi change for CS? I'm just lookign at the overview and there is no mention/\\\\"
                    },
                    {
                        "message_number": "110",
                        "ts": "2020-09-25T14:02:44.920000",
                        "user": "Bexon",
                        "text": "@Deleted User it generated.. something :meow:"
                    },
                    {
                        "message_number": "111",
                        "ts": "2020-09-25T14:03:45.990000",
                        "user": "Bexon",
                        "text": "I don't think generating 2300 lines of wrappers for 200 lines of C is optimal"
                    },
                    {
                        "message_number": "112",
                        "ts": "2020-09-25T14:03:50.209000",
                        "user": "Bexon",
                        "text": "I'll do it by hand :meow:"
                    },
                    {
                        "message_number": "113",
                        "ts": "2020-09-25T14:04:48.412000",
                        "user": "Daevion",
                        "text": "You cant stop me using `:meow:` now."
                    },
                    {
                        "message_number": "114",
                        "ts": "2020-09-25T14:05:02.850000",
                        "user": "Bexon",
                        "text": "we\u2019re all :meow: now"
                    },
                    {
                        "message_number": "115",
                        "ts": "2020-09-25T14:09:33.748000",
                        "user": "Cortlin",
                        "text": "It's probably mostly boilerplate overhead. :meow:"
                    },
                    {
                        "message_number": "116",
                        "ts": "2020-09-25T14:52:03.857000",
                        "user": "Bexon",
                        "text": "@StephenD here are the differences https://docs.racketlang.org/inside/index.html"
                    },
                    {
                        "message_number": "117",
                        "ts": "2020-09-25T14:52:13.047000",
                        "user": "Bexon",
                        "text": "I think FFI is the same though :meow:"
                    },
                    {
                        "message_number": "118",
                        "ts": "2020-09-25T14:53:22.680000",
                        "user": "Daevion",
                        "text": "Thanks"
                    },
                    {
                        "message_number": "119",
                        "ts": "2020-09-25T14:55:22.877000",
                        "user": "Bexon",
                        "text": "I skimmed through the FFI page sounds awesome"
                    },
                    {
                        "message_number": "120",
                        "ts": "2020-09-25T14:55:31.426000",
                        "user": "Bexon",
                        "text": "I\u2019ll try to bind to this lib"
                    },
                    {
                        "message_number": "121",
                        "ts": "2020-09-25T14:55:32.733000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "122",
                        "ts": "2020-09-25T16:52:51.031000",
                        "user": "Britten",
                        "text": "I don't think that library handles unicode in strings at all. It isn't decoding any \\\\U escapes"
                    },
                    {
                        "message_number": "123",
                        "ts": "2020-09-25T16:53:33.415000",
                        "user": "Britten",
                        "text": "Ahh it's a feature."
                    },
                    {
                        "message_number": "124",
                        "ts": "2020-09-25T16:53:44.683000",
                        "user": "Britten",
                        "text": "> jsmn is designed to be robust (it should work fine even with erroneous data)"
                    },
                    {
                        "message_number": "125",
                        "ts": "2020-09-25T17:14:45.074000",
                        "user": "Britten",
                        "text": "Yeah the Racket parser will bail out"
                    }
                ]
            },
            {
                "conversation_id": "99",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T12:36:02.043000",
                        "user": "Daevion",
                        "text": "Yeah."
                    }
                ]
            },
            {
                "conversation_id": "100",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T13:19:01.476000",
                        "user": "Bexon",
                        "text": "on one hand I'm missing emotes other than :meow: here"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-25T13:19:45.799000",
                        "user": "Daevion",
                        "text": "I though you could add new ones"
                    }
                ]
            },
            {
                "conversation_id": "101",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T13:58:16.072000",
                        "user": "Bexon",
                        "text": ":meow:"
                    }
                ]
            },
            {
                "conversation_id": "102",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-25T17:10:58.816000",
                        "user": "Bexon",
                        "text": "if I had invalid unicode in the file my racket code would bail right? I\u2019d be fine with that"
                    }
                ]
            },
            {
                "conversation_id": "103",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-26T00:32:44.574000",
                        "user": "Miquel",
                        "text": "Do you guys know if you can do code highlighting for racket on discord?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-26T00:33:31.463000",
                        "user": "Miquel",
                        "text": "Like:```(define (addxanda x a) (+ x a))```making it appear like:"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-26T00:33:49.485000",
                        "user": "Miquel",
                        "text": "None"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-26T00:33:54.375000",
                        "user": "Miquel",
                        "text": "on discord"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-26T00:34:53.735000",
                        "user": "Kiam",
                        "text": "Yeah you have to add the word scheme right after the first three backticks"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-26T00:35:10.264000",
                        "user": "Miquel",
                        "text": "ooo"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-26T00:35:12.782000",
                        "user": "Miquel",
                        "text": "let me try"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-26T00:35:13.631000",
                        "user": "Kiam",
                        "text": "the highlighting doesn't show up on android however"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-26T00:35:28.372000",
                        "user": "Miquel",
                        "text": "```scheme(define (addxanda x a) (+ x a))```"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-26T00:35:30.273000",
                        "user": "Miquel",
                        "text": "Nice!"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-26T00:35:33.483000",
                        "user": "Miquel",
                        "text": "Thanks so much"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-26T00:35:47.431000",
                        "user": "Kiam",
                        "text": "```scheme(define (double x) ( x 2))```"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-26T00:35:51.298000",
                        "user": "Kiam",
                        "text": "welcome!"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-26T00:36:23.352000",
                        "user": "Miquel",
                        "text": "I kept typing in racket or drracket and it discord didn't recognize it lol"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-26T00:38:07.154000",
                        "user": "Miquel",
                        "text": "do you know if you can do it for single line code as well?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-26T00:39:30.803000",
                        "user": "Kiam",
                        "text": "I don't know of any way to do it for inline code"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-26T00:41:00.245000",
                        "user": "Daevion",
                        "text": "https://support.discord.com/hc/enus/articles/210298617MarkdownText101ChatFormattingBoldItalicUnderline"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-26T00:41:12.060000",
                        "user": "Daevion",
                        "text": "There isn\u2019t"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-26T05:11:22.799000",
                        "user": "Kiam",
                        "text": "not quite. sort+take would be like take the top N things this is take the biggest thing. if multiple things are tied for biggest take all of them."
                    }
                ]
            },
            {
                "conversation_id": "104",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-26T04:12:02.086000",
                        "user": "Kiam",
                        "text": "on a transducer kick again!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-26T04:12:24.690000",
                        "user": "Kiam",
                        "text": "I made one for finding _all_ of the greatest elements in a sequence rather than just one"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-26T18:09:02.629000",
                        "user": "Matt",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-27T03:44:47.157000",
                        "user": "Matt",
                        "text": ":meowloween:"
                    }
                ]
            },
            {
                "conversation_id": "105",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-26T04:31:19.354000",
                        "user": "Britten",
                        "text": "sorting + taking?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-26T11:21:47.278000",
                        "user": "Cortlin",
                        "text": ":meow:"
                    }
                ]
            },
            {
                "conversation_id": "106",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-26T10:15:09.091000",
                        "user": "Bexon",
                        "text": "update regarding my FFI adventure: I couldn't even install these C parsers gave up :meow:"
                    }
                ]
            },
            {
                "conversation_id": "107",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-27T03:12:09.995000",
                        "user": "Avik",
                        "text": "Racketeers who use racket in a distributed sense with containers"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-27T03:12:19.237000",
                        "user": "Avik",
                        "text": "How do you attack your logging? Any products you use?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-27T03:12:23.367000",
                        "user": "Avik",
                        "text": "Curious"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-27T03:47:07.826000",
                        "user": "Avik",
                        "text": "this is a good litmus test as to whether a language ecosystem has prod users who aren't in the research space lol"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-27T03:47:10.112000",
                        "user": "Avik",
                        "text": "but i am actually curiouys"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-27T03:48:24.066000",
                        "user": "Kiam",
                        "text": "there is definitely logging infrastructure available within the language the log receiver functionality is enough to implement configurable logging to stderr and syslog"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-27T03:48:46.237000",
                        "user": "Avik",
                        "text": "oh yeah for sure"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-27T03:48:46.683000",
                        "user": "Kiam",
                        "text": "I think I've heard of people hooking it up to log storage services before"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-27T03:48:58.618000",
                        "user": "Avik",
                        "text": "but clients for commercial log products"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-27T03:49:06.705000",
                        "user": "Avik",
                        "text": "the ones that let you track and do ci to measure occurances etc"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-27T03:49:13.317000",
                        "user": "Kiam",
                        "text": "ya"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-27T03:50:03.367000",
                        "user": "Kiam",
                        "text": "maybe check the package catalog for packages that implement clients to cloud logging services?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-27T03:50:33.906000",
                        "user": "Kiam",
                        "text": "presumably if there any then their authors had a use for them and you could ask them how it went"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-27T03:50:40.117000",
                        "user": "Avik",
                        "text": "true"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-27T03:50:48.782000",
                        "user": "Avik",
                        "text": "or google racketeers who've published their tech stack"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-27T03:51:01.945000",
                        "user": "Avik",
                        "text": "i'm digging around atm"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-27T03:51:23.023000",
                        "user": "Kiam",
                        "text": "let me know if you find anyone I'm curious"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-27T03:52:42.100000",
                        "user": "Avik",
                        "text": "\ud83d\ude42"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-27T03:56:39.775000",
                        "user": "Avik",
                        "text": "oh baby https://pkgs.racketlang.org/package/racketdogstatsd"
                    }
                ]
            },
            {
                "conversation_id": "108",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-27T03:40:49.804000",
                        "user": "Kiam",
                        "text": "I'd also like to hear from anyone with experience in that"
                    }
                ]
            },
            {
                "conversation_id": "109",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-27T19:41:48.728000",
                        "user": "Britten",
                        "text": "I have sent data into Splunk HEC but it's generally adhoc and bespoke"
                    }
                ]
            },
            {
                "conversation_id": "110",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T02:57:45.916000",
                        "user": "Caycee",
                        "text": "Hi! I'm thinking of trying racket are there any fun projects you'd recommend to get familiar with racket?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-28T03:00:24.735000",
                        "user": "Kiam",
                        "text": "Messing around with `pict` `pict3d` and animations can be really fun"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-28T03:01:01.240000",
                        "user": "Kiam",
                        "text": "There's something visceral about building graphical stuff in a REPL"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-28T03:04:38.966000",
                        "user": "Caycee",
                        "text": "What are contracts in racket?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-28T03:07:15.573000",
                        "user": "Kiam",
                        "text": "They're like types but checked at runtime and they can do more than types usually do."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-28T03:08:04.303000",
                        "user": "Caycee",
                        "text": "Are they like enums in ocaml/c?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-28T03:11:12.073000",
                        "user": "Kiam",
                        "text": "No. They\\'re more like checks in your code like this:```javavoid deleteIndex(List list int index) { if (index < 0) { throw new IllegalArgumentException(\"index cannot be negative\"); } if (index >= list.size()) { throw new IllegalArgumentException(\"index must be smaller than the list size\"); } ...}```"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-28T03:14:47.567000",
                        "user": "Kiam",
                        "text": "Racket contacts are an alternative to those sorts of explicit checks:```scheme(define/contract (deleteindex list index) (>i ([list list?] [index (list) (integerin 0 ( (listsize list) 1))]) [_ void?]) ...)```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-28T03:17:42.718000",
                        "user": "Caycee",
                        "text": "That made sense thanks!"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-28T13:49:38.181000",
                        "user": "Bexon",
                        "text": "I wish we could get some contractbased static analysis"
                    }
                ]
            },
            {
                "conversation_id": "111",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T04:13:11.905000",
                        "user": "Matt",
                        "text": "contracts are dope"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-28T04:13:21.996000",
                        "user": "Matt",
                        "text": "i got used to types too. i never tried typed racket \ud83e\udd14"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-28T17:48:24.405000",
                        "user": "Cortlin",
                        "text": "So... static typing?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-28T18:01:32.806000",
                        "user": "Alyiah",
                        "text": "Isn't that dependent types at that point?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-28T18:04:35.159000",
                        "user": "Cortlin",
                        "text": "Typed Racket has experimental refinement types."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-28T18:04:43.229000",
                        "user": "Cortlin",
                        "text": "https://docs.racketlang.org/tsreference/Experimental_Features.html"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-28T18:33:43.111000",
                        "user": "Bexon",
                        "text": "well I didn\u2019t mean turning all contracts to [dependent] types"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-28T18:37:48.641000",
                        "user": "Bexon",
                        "text": "I\u2019d like a complete (will never reject a correct program) unsound (will accept some incorrect programs) type systemas an aid basically"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-28T18:38:36.974000",
                        "user": "Bexon",
                        "text": "like \u201cthis will 100% not work you\u2019re trying to pass a struct to `+`!\u201d"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-28T18:39:01.999000",
                        "user": "Bexon",
                        "text": "so I get notified about these obvious silly mistakes earlier than at runtime when a contract fails"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-28T18:40:12.452000",
                        "user": "Bexon",
                        "text": "there are tools like this for python"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-28T18:40:51.904000",
                        "user": "Bexon",
                        "text": "but they either have to infer the types or you have to specify themthing I\u2019m talking about would infer them either from the contracts (if available) or the code"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-28T18:41:53.576000",
                        "user": "Bexon",
                        "text": "CS people don\u2019t seem to like unsound type systems though :/"
                    }
                ]
            },
            {
                "conversation_id": "112",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T19:22:33.867000",
                        "user": "Matt",
                        "text": "id love an unsound type system \ud83d\ude31"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-28T19:22:54.184000",
                        "user": "Matt",
                        "text": "i mean thats kind of what contracts feel like"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-28T19:23:10.451000",
                        "user": "Matt",
                        "text": "tbh i think contracts are better because they\u2019re written where they matter when you\u2019re exporting"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-28T19:23:14.716000",
                        "user": "Matt",
                        "text": "am I right?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-28T19:25:24.557000",
                        "user": "Matt",
                        "text": "allowing u to be unsafe if you want to"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-28T19:27:35.181000",
                        "user": "Matt",
                        "text": "uf but contracts are runtime right?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-28T19:35:24.683000",
                        "user": "Bexon",
                        "text": "oh yeah I think contracts are complete and unsound too"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-28T19:35:37.601000",
                        "user": "Bexon",
                        "text": "TR is sound and incomplete"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-28T19:36:04.190000",
                        "user": "Bexon",
                        "text": "and yeah contracts are runtime checks  but some you could use at compiletime too"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-28T19:37:00.702000",
                        "user": "Bexon",
                        "text": "like this example:```scheme(define/contract (deposit amount) (> number? any) ; implementation goes here ....)```"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-28T19:37:41.933000",
                        "user": "Bexon",
                        "text": "if you pass a string literal to this function something could warn you before you run the program :meow:"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-28T19:38:46.544000",
                        "user": "Bexon",
                        "text": "raku has these two mechanisms in their compiler (contracts + some static analysis) and it\u2019s kinda confusing because you don\u2019t know what gets checked when"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-28T19:38:57.128000",
                        "user": "Bexon",
                        "text": "if it was a separate tool it\u2019d be neato"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-28T21:23:22.012000",
                        "user": "Kiam",
                        "text": "complete and unsound static checkers have a huge problem: if you improve them to catch more errors you break existing code that used to compile fine"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-28T21:24:06.397000",
                        "user": "Kiam",
                        "text": "it's much easier to change a static check to admit more programs than to admit fewer"
                    }
                ]
            },
            {
                "conversation_id": "113",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T20:13:27.394000",
                        "user": "Matt",
                        "text": "true"
                    }
                ]
            },
            {
                "conversation_id": "114",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-28T21:23:50.640000",
                        "user": "Kiam",
                        "text": "this is usually why type systems start from the other direction of rejecting too many programs rather than too few"
                    }
                ]
            },
            {
                "conversation_id": "115",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T06:08:37.976000",
                        "user": "Bexon",
                        "text": "doesn\u2019t \u201ccomplete\u201d mean it never rejects a correct program?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-29T06:10:35.772000",
                        "user": "Kiam",
                        "text": "complete means never rejects a program that would run without error which is not always what people mean when they say correct"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-29T06:11:45.913000",
                        "user": "Bexon",
                        "text": "well having mypy spew an error doesn\u2019t prevent me from running my code and getting an exception in my face :meow:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-29T06:12:23.156000",
                        "user": "Kiam",
                        "text": "correct but mypy doesn't show you type errors for code that you know _won't_ throw an exception"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-29T06:15:15.252000",
                        "user": "Kiam",
                        "text": "example:```String foo() { boolean returnEarly = true; if (returnEarly) { return foo\"; } return 42;}```This function will never throw an exception. Most type systems however would reject it."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-29T06:16:01.806000",
                        "user": "Kiam",
                        "text": "A complete type system cannot reject it because it can\\'t prove it will throw an exception (because it doesn\\'t)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-29T06:17:39.955000",
                        "user": "Kiam",
                        "text": "(by throw an exception I mean fuck up and return results of the wrong type which I\\'m assuming will cause something somewhere to throw an exception\")"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-29T06:18:39.160000",
                        "user": "Bexon",
                        "text": "well yes that\u2019s exactly what I meant \ud83e\udd14"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-29T06:19:05.240000",
                        "user": "Bexon",
                        "text": "could you maybe rephrase \u201ccorrect but mypy doesn't show you type errors for code that you know _won't_ throw an exception\u201d? it\u2019s early in the morning and I don\u2019t think I got it :meow:"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-29T06:20:40.865000",
                        "user": "Kiam",
                        "text": "That function `foo` _does not cause any runtime type errors_ ever. It is a valid program. However it won't compile in languages like Java C# rust haskell or even C. So those languages have type systems that prevent you from running some valid programs."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-29T06:22:20.066000",
                        "user": "Bexon",
                        "text": "yes their type systems are incomplete right?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-29T06:22:28.062000",
                        "user": "Kiam",
                        "text": "Right"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-29T06:22:28.131000",
                        "user": "Bexon",
                        "text": "and all are sound (not sure about C)"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-29T06:22:36.787000",
                        "user": "Bexon",
                        "text": "then I got it \ud83e\udd14"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-29T06:23:12.303000",
                        "user": "Kiam",
                        "text": "They're mostly sound. Proving soundness of type systems for real world programming languages is complex and hard"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-29T06:23:24.167000",
                        "user": "Kiam",
                        "text": "They at least try to be sound most of the time"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-29T06:23:49.404000",
                        "user": "Kiam",
                        "text": "(C is extremely not sound however)"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-29T06:26:28.299000",
                        "user": "Bexon",
                        "text": "I think java had a soundness hole that was fixed? iirc"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-29T06:26:43.326000",
                        "user": "Bexon",
                        "text": "well all compilers have bugs even if they claim to be sound and stuff"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-29T06:26:59.434000",
                        "user": "Kiam",
                        "text": "And they all allow FFI stuff so \ud83e\udd37"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-29T06:27:10.442000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-29T06:27:21.753000",
                        "user": "Kiam",
                        "text": "soundness can have some practical obstacles"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-29T06:28:10.593000",
                        "user": "Bexon",
                        "text": "hope I don\u2019t turn into Rich Hickey because of stuff like that :meow:"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-29T06:28:48.342000",
                        "user": "Kiam",
                        "text": "yeah I would say that the practical obstacles of soundness pale in comparison to the obstacles of unsoundness"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-29T06:33:20.884000",
                        "user": "Bexon",
                        "text": "can a dynamically typed system be sound?"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-29T06:33:26.017000",
                        "user": "Bexon",
                        "text": "or is it only for static types"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-29T06:36:50.117000",
                        "user": "Kiam",
                        "text": "I think the term only makes sense in the context of static checkers"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-09-29T06:38:54.673000",
                        "user": "Bexon",
                        "text": "hm okay"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-09-29T06:40:06.768000",
                        "user": "Kiam",
                        "text": "(I'm also far from an expert on type systems)"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-09-29T07:00:40.934000",
                        "user": "Bexon",
                        "text": "yeah I\u2019m an armchair computer scientist :meow:"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-09-29T12:50:44.934000",
                        "user": "Bexon",
                        "text": "I just wrote python in racket"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-09-29T12:50:54.029000",
                        "user": "Bexon",
                        "text": "was way easier than I thought :meow:"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-09-29T12:51:25.990000",
                        "user": "Daevion",
                        "text": "What do you mean?"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-09-29T12:51:28.178000",
                        "user": "Bexon",
                        "text": "it's for work but this should give you the idea"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-09-29T12:51:46.050000",
                        "user": "Bexon",
                        "text": "I also used a box to keep track of state :meow:"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-09-29T12:53:23.797000",
                        "user": "Daevion",
                        "text": "Mmmm. Nested `for` loops."
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-09-29T12:53:57.354000",
                        "user": "Daevion",
                        "text": "But at least you are writing racket for work!"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-09-29T12:56:52.620000",
                        "user": "Bexon",
                        "text": "hope my manager doesn't ask me to upload this script anywhere :meow:"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-09-29T12:57:13.457000",
                        "user": "Daevion",
                        "text": "Just compile it."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-09-29T12:57:30.568000",
                        "user": "Cortlin",
                        "text": "Haha"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-09-29T13:01:05.820000",
                        "user": "Bexon",
                        "text": "lol"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-09-29T13:01:11.935000",
                        "user": "Bexon",
                        "text": "compile it and tell him I wrote in go"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-09-29T13:01:16.930000",
                        "user": "Bexon",
                        "text": "always works :meow:"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-09-29T13:01:34.619000",
                        "user": "Daevion",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-09-29T13:02:35.659000",
                        "user": "Cortlin",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-09-29T13:12:46.838000",
                        "user": "Bexon",
                        "text": "it works! :meow:"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-09-29T13:13:01.282000",
                        "user": "Bexon",
                        "text": "I mean the script not the golang coverup"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-09-29T13:16:27.807000",
                        "user": "Bexon",
                        "text": "the only thing I miss from python is `getpass`"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-09-29T13:16:35.597000",
                        "user": "Bexon",
                        "text": "for now I'm just using an `.env` file"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-09-29T13:31:13.018000",
                        "user": "Cortlin",
                        "text": "um https://docs.racketlang.org/getpass/index.html"
                    }
                ]
            },
            {
                "conversation_id": "116",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T07:33:23.471000",
                        "user": "Cortlin",
                        "text": "me 2"
                    }
                ]
            },
            {
                "conversation_id": "117",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T13:27:51.143000",
                        "user": "Daevion",
                        "text": "What does get pass do?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-29T13:29:43.720000",
                        "user": "Bexon",
                        "text": "gets a password from the terminal"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-29T13:30:08.510000",
                        "user": "Bexon",
                        "text": "(without showing what user types)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-29T13:34:00.069000",
                        "user": "Bexon",
                        "text": "_facepalms_"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-29T13:34:21.694000",
                        "user": "Bexon",
                        "text": "I searched for pass password getpass"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-29T13:34:26.929000",
                        "user": "Bexon",
                        "text": "thanks erkin :)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-29T13:35:26.222000",
                        "user": "Cortlin",
                        "text": "No problem! :meowblush:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-29T13:39:50.133000",
                        "user": "Cortlin",
                        "text": "The implementation is surprisingly simple too."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-29T13:40:19.874000",
                        "user": "Cortlin",
                        "text": "It's a little bit of termios FFI."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-29T13:42:14.186000",
                        "user": "Bexon",
                        "text": "~50 lines nice"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-29T13:42:52.866000",
                        "user": "Bexon",
                        "text": "hmm I have a problem with breaking"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-29T13:43:01.747000",
                        "user": "Bexon",
                        "text": "how do you do something and break in a for loop?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-29T13:43:16.198000",
                        "user": "Bexon",
                        "text": "I tried different combinations of #:break and #:final nothing really worked"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-29T13:43:31.145000",
                        "user": "Cortlin",
                        "text": "Maybe a recursive procedure would work better then?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-29T13:43:44.696000",
                        "user": "Cortlin",
                        "text": "How did you use `#:break`?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-29T13:43:52.529000",
                        "user": "Bexon",
                        "text": "oh hold on it was the nestedness"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-29T13:44:04.274000",
                        "user": "Cortlin",
                        "text": "Haha"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-29T13:46:29.745000",
                        "user": "Bexon",
                        "text": "also  (box #f) is truthy :meow:"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-29T13:47:26.021000",
                        "user": "Bexon",
                        "text": "lol it was literally these two"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-29T13:48:00.833000",
                        "user": "Bexon",
                        "text": "now it works perfectly :meowblush:"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-29T13:54:10.268000",
                        "user": "Cortlin",
                        "text": ":racket:"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-29T14:42:14.379000",
                        "user": "Bexon",
                        "text": "yeah I forgot to unbox it :meowblush:"
                    }
                ]
            },
            {
                "conversation_id": "118",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T14:17:31.709000",
                        "user": "Cortlin",
                        "text": "Never forget: If it ain't `eq? #f` it's truthy."
                    }
                ]
            },
            {
                "conversation_id": "119",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-29T16:29:54.054000",
                        "user": "Britten",
                        "text": "@sarna wip not getpass (but I should add a plugin) https://github.com/samdphillips/racketkeyring"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-29T16:30:42.009000",
                        "user": "Britten",
                        "text": "Re: json slowness I think it's related to general slowness of io ports"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-29T16:32:11.792000",
                        "user": "Bexon",
                        "text": "@oaktownsam oh neat thanks! I should learn how to use keyrings lol"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-29T16:32:26.823000",
                        "user": "Bexon",
                        "text": "can I somehow make io ports faster? \ud83d\udc40"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-29T16:32:34.579000",
                        "user": "Bexon",
                        "text": "like set some flag or whatever"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-29T16:33:06.215000",
                        "user": "Britten",
                        "text": "PLT_MAKE_PORTS=faster (kidding)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-29T16:33:37.885000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-29T16:34:08.687000",
                        "user": "Bexon",
                        "text": "in CL I\u2019d simply (declaim (speed 3) (safety 0))"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-29T16:34:18.708000",
                        "user": "Bexon",
                        "text": "it would segfault immediately but it\u2019d be fast"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-29T16:34:38.475000",
                        "user": "Britten",
                        "text": "I don't know what the plans are to make ports faster but I know there is an issue open for it."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-29T16:34:53.567000",
                        "user": "Bexon",
                        "text": "o I\u2019ll look for that"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-29T16:35:52.822000",
                        "user": "Britten",
                        "text": "It\\'s a bit stale last I checked but maybe worth a me too type post"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-29T16:36:17.671000",
                        "user": "Bexon",
                        "text": "https://github.com/racket/racket/issues/13884 years and no comments :meow:"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-29T16:36:46.080000",
                        "user": "Britten",
                        "text": "as for json an interesting experiment would be to try to port the lib to use an in memory bytes and parse from that and see if it would be faster."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-29T16:37:55.575000",
                        "user": "Bexon",
                        "text": "wouldn\u2019t I have to load the file into memory using a port anyway?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-29T16:38:48.350000",
                        "user": "Britten",
                        "text": "One big read is more efficient that the smaller reads"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-29T16:39:26.678000",
                        "user": "Bexon",
                        "text": "oh true I thought I was doing just that. I\u2019ll dig deeper \ud83d\udc40"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-29T21:39:23.393000",
                        "user": "Britten",
                        "text": "getpass doesn't seem to work on my system"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-29T21:39:34.706000",
                        "user": "Britten",
                        "text": "Linux w/ RacketCS"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-29T21:46:28.932000",
                        "user": "Britten",
                        "text": "Oh it might not work running under xrepl I think"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-29T21:50:42.909000",
                        "user": "Britten",
                        "text": "Yeah doesn't like if the `currentinputport` is not a terminal."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-29T21:51:05.530000",
                        "user": "Cortlin",
                        "text": "You can give it a different port with `#:in`"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-29T21:52:25.331000",
                        "user": "Britten",
                        "text": "Yes but if you give anything not a terminal you get an opaque error```Welcome to Racket v7.8 [cs].> r getpass> (getpass); apply: bad value for conversion; ctype: _int32; value: #f; [,bt for context]```"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-29T21:59:48.717000",
                        "user": "Britten",
                        "text": "Actually anything not a unix fd because it works if you pipe in a value but `(withinputfromstring secrets (lambda () (getpass))` fails."
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-29T22:00:23.248000",
                        "user": "Cortlin",
                        "text": "Hmm"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-29T22:00:38.143000",
                        "user": "Cortlin",
                        "text": "Maybe you could add a check to see if it's talking to a tty."
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-29T22:03:08.291000",
                        "user": "Britten",
                        "text": "https://github.com/smitchell556/getpass/issues/1"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-09-29T22:05:15.695000",
                        "user": "Britten",
                        "text": "It probably also has problems running in DrRacket"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-09-30T08:48:55.724000",
                        "user": "Bexon",
                        "text": "matchstring makes my emacs freeze :meow:"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-09-30T08:50:27.546000",
                        "user": "Yaw",
                        "text": "frown"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-09-30T10:04:53.697000",
                        "user": "Bexon",
                        "text": "@ json slow  I tried another niche language a compiled one this time  crystalwith a release build it takes 1s to parse this file :meow:"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-09-30T10:05:12.079000",
                        "user": "Bexon",
                        "text": "seems like we really can\u2019t compete with python"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-09-30T10:05:40.293000",
                        "user": "Bexon",
                        "text": "(racket 2.5s python 0.5s)"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-09-30T10:06:48.447000",
                        "user": "Daevion",
                        "text": "How much json do you need to parse and how often?"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-09-30T10:46:50.651000",
                        "user": "Bexon",
                        "text": "@StephenD to be honest 2.5s is totally bearable  it\u2019s a ~25MB file and I needed to run the program only once"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-09-30T10:47:03.043000",
                        "user": "Bexon",
                        "text": "but still annoying :meow:"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-09-30T10:47:23.315000",
                        "user": "Bexon",
                        "text": "I have to learn to live with annoyances tho :meowblush: or I\u2019ll go insane"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-09-30T10:48:35.355000",
                        "user": "Daevion",
                        "text": "if you only have to do it once then just use python."
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-09-30T10:49:08.589000",
                        "user": "Daevion",
                        "text": "I love racket but there is no point punishing yourself."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-09-30T10:49:08.980000",
                        "user": "Bexon",
                        "text": "@Deleted User yeah jsexprs are awesome! I haven\u2019t seen anything better for json in a lispy language"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-09-30T10:49:21.630000",
                        "user": "Bexon",
                        "text": "it was more fun in racket!"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-09-30T10:49:29.846000",
                        "user": "Daevion",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-09-30T10:49:30.598000",
                        "user": "Bexon",
                        "text": "just a bit slower :meowblush:"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-09-30T10:49:55.668000",
                        "user": "Cortlin",
                        "text": "Racket generally considers performance secondary to readable highlevel code."
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-09-30T10:49:58.677000",
                        "user": "Cortlin",
                        "text": "(not always mind you)"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-09-30T10:50:15.098000",
                        "user": "Cortlin",
                        "text": "I like it but it's probably because I don't use Racket in production."
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-09-30T10:51:19.924000",
                        "user": "Bexon",
                        "text": "I don\u2019t like that you can\u2019t turn off contracts"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-09-30T10:51:49.999000",
                        "user": "Bexon",
                        "text": "like at all  not even with a scoped (callwithoutchecking ...)style thing"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-09-30T10:52:28.101000",
                        "user": "Daevion",
                        "text": "it is an interesting idea."
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-09-30T10:52:29.401000",
                        "user": "Bexon",
                        "text": "(btw  what are you using in production? I don\u2019t really need the speed so mostly python)"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-09-30T10:53:13.445000",
                        "user": "Cortlin",
                        "text": "What I run in production is up to the product manager's whims. :meow:"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-09-30T10:53:24.388000",
                        "user": "Daevion",
                        "text": "I use cache objectscript on Intersystems cache Health Connect  I'm a health systems integrator in a hospital"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-09-30T10:53:45.134000",
                        "user": "Cortlin",
                        "text": "Hey isn't that the proprietary objectoriented Mumps dialect?"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-09-30T10:54:21.854000",
                        "user": "Daevion",
                        "text": "yes. But is it a OO language built a level above the core mumps code."
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-09-30T10:54:27.917000",
                        "user": "Cortlin",
                        "text": "Neat"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-09-30T10:54:48.058000",
                        "user": "Daevion",
                        "text": "(hospital IT security is so tight I cant even run racket scripts)"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-09-30T10:55:01.172000",
                        "user": "Cortlin",
                        "text": "Yeah understandable."
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-09-30T10:55:19.354000",
                        "user": "Cortlin",
                        "text": "The current place I work in is a Java house with occasional JavaScript. I don't touch the development parts though."
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-09-30T10:55:44.442000",
                        "user": "Cortlin",
                        "text": "At the previous work I wrote some Python and Ruby and then sneaked in some Perl and CHICKEN Scheme."
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-09-30T10:56:21.645000",
                        "user": "Daevion",
                        "text": "Nice. I did a little perl for digital library stuff a long time ago."
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-09-30T10:57:03.420000",
                        "user": "Cortlin",
                        "text": "Sneaked as in we had the liberty to do whatever we wanted for small glue scripts on our own servers rather than customers machines."
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-09-30T10:57:22.799000",
                        "user": "Bexon",
                        "text": "@Deleted User I mean that\\'s why I use python  my manager said what I write should be readable for him and team members :meow: (doesn\\'t matter that he doesn\\'t really code and my teammates know it so well they use camelCase variables in their scripts)((n once I got I don\\'t know what decorator means during code review :meow: ))"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-09-30T10:57:23.759000",
                        "user": "Daevion",
                        "text": "(I mostly meant nice about the chicken scheme)"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-09-30T10:58:06.682000",
                        "user": "Cortlin",
                        "text": "Ah"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-09-30T10:58:34.015000",
                        "user": "Daevion",
                        "text": "confession time. I don't know what a decorator is either. tis a java thing right??"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-09-30T10:58:44.710000",
                        "user": "Bexon",
                        "text": "no a python thing :meow:"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-09-30T10:59:11.339000",
                        "user": "Daevion",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-09-30T10:59:13.172000",
                        "user": "Bexon",
                        "text": "```python@foo # < decoratordef bar(): print(\"something\")```"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-09-30T10:59:23.548000",
                        "user": "Bexon",
                        "text": "it wraps a function definition"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-09-30T10:59:54.338000",
                        "user": "Cortlin",
                        "text": "bad memories"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-09-30T11:00:03.942000",
                        "user": "Cortlin",
                        "text": "I had to use it a lot."
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-09-30T11:00:06.311000",
                        "user": "Bexon",
                        "text": "you could make one called `@timeit` for example  and it'd time each function invocation"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-09-30T11:00:58.016000",
                        "user": "Daevion",
                        "text": "Nice"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-09-30T11:01:01.698000",
                        "user": "Bexon",
                        "text": "I tried using perl instead of python for our stuff but perl dead and unreadable :meow:"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-09-30T11:01:15.520000",
                        "user": "Bexon",
                        "text": "..then I tried ruby but why not just python :meow:"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-09-30T11:01:20.146000",
                        "user": "Cortlin",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-09-30T11:01:20.704000",
                        "user": "Bexon",
                        "text": "so python it is :meow:"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-09-30T11:01:36.708000",
                        "user": "Cortlin",
                        "text": "It sounds like they went why anything other than Python when you can Python?"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-09-30T11:01:40.901000",
                        "user": "Bexon",
                        "text": "yeah"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-09-30T11:01:49.267000",
                        "user": "Bexon",
                        "text": "basically the only reason is popularity"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-09-30T11:02:47.617000",
                        "user": "Daevion",
                        "text": "Python is fine. It\u2019s just not interesting to me."
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-09-30T11:03:08.248000",
                        "user": "Bexon",
                        "text": "but like.. people on my team write loops like this in python:```pythonfor i in range(0 len(regs)): reg = regs[i] rname = reg['RegionName']```(copypasted from some AWS glue)"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-09-30T11:03:26.499000",
                        "user": "Cortlin",
                        "text": "I wrote my bachelor's thesis project in Hy just to avoid Python."
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-09-30T11:03:42.060000",
                        "user": "Cortlin",
                        "text": "I find it too tedious to use. It tries to force you to its will. My way or highway"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-09-30T11:04:06.097000",
                        "user": "Bexon",
                        "text": "hope you'll never have to try go"
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-09-30T11:04:11.852000",
                        "user": "Cortlin",
                        "text": "hahah"
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-09-30T11:04:24.945000",
                        "user": "Cortlin",
                        "text": "Yeah Go is even more adamant about the one true way\"."
                    },
                    {
                        "message_number": "88",
                        "ts": "2020-09-30T11:04:35.702000",
                        "user": "Cortlin",
                        "text": "Completely stifles expressivity."
                    },
                    {
                        "message_number": "89",
                        "ts": "2020-09-30T11:04:50.487000",
                        "user": "Bexon",
                        "text": "btw have you tried raku? overall I want to like it but it's just so complex :meow: and that nil propagation stuff is.. I don't like it"
                    },
                    {
                        "message_number": "90",
                        "ts": "2020-09-30T11:05:36.708000",
                        "user": "Bexon",
                        "text": "(nil can be returned from any function even if it's typedand all methods cast on nil just return nil no exceptions)"
                    },
                    {
                        "message_number": "91",
                        "ts": "2020-09-30T11:05:52.474000",
                        "user": "Cortlin",
                        "text": "I want to try it but the ecosystem feels like a maze."
                    },
                    {
                        "message_number": "92",
                        "ts": "2020-09-30T11:05:53.626000",
                        "user": "Daevion",
                        "text": "Never tried it. Always seemed to be a response to python."
                    },
                    {
                        "message_number": "93",
                        "ts": "2020-09-30T11:06:52.542000",
                        "user": "Daevion",
                        "text": "None"
                    },
                    {
                        "message_number": "94",
                        "ts": "2020-09-30T11:06:55.407000",
                        "user": "Marilou",
                        "text": "> I wrote my bachelor's thesis project in Hy just to avoid Python.@Deleted User have you tried coconut? it is similar from what ive read"
                    },
                    {
                        "message_number": "95",
                        "ts": "2020-09-30T11:07:46.005000",
                        "user": "Bexon",
                        "text": "@StephenD well it was supposed to be Perl 6"
                    },
                    {
                        "message_number": "96",
                        "ts": "2020-09-30T11:08:15.411000",
                        "user": "Cortlin",
                        "text": "There's Perl 7 now."
                    },
                    {
                        "message_number": "97",
                        "ts": "2020-09-30T11:08:21.476000",
                        "user": "Cortlin",
                        "text": "@parlortricks No let me take a look."
                    },
                    {
                        "message_number": "98",
                        "ts": "2020-09-30T11:08:34.551000",
                        "user": "Daevion",
                        "text": "(Racket developer uses plot package to put earth on cube...because \u2018why not\u2019)"
                    },
                    {
                        "message_number": "99",
                        "ts": "2020-09-30T11:09:13.892000",
                        "user": "Bexon",
                        "text": "yeah good for perl (I think)"
                    },
                    {
                        "message_number": "100",
                        "ts": "2020-09-30T11:09:27.950000",
                        "user": "Marilou",
                        "text": "> @parlortricks No let me take a look.@Deleted User i got confused its functional not really lispy"
                    },
                    {
                        "message_number": "101",
                        "ts": "2020-09-30T11:09:34.339000",
                        "user": "Daevion",
                        "text": "So there is raku AND Perl 7?"
                    },
                    {
                        "message_number": "102",
                        "ts": "2020-09-30T11:09:46.591000",
                        "user": "Bexon",
                        "text": "perl 7 is just a perl version"
                    },
                    {
                        "message_number": "103",
                        "ts": "2020-09-30T11:10:01.047000",
                        "user": "Bexon",
                        "text": "they went from 5 straight to 7 not to confuse people"
                    },
                    {
                        "message_number": "104",
                        "ts": "2020-09-30T11:10:16.773000",
                        "user": "Bexon",
                        "text": "(actually not sure if there's perl 7 already or just in plans)"
                    },
                    {
                        "message_number": "105",
                        "ts": "2020-09-30T11:10:16.774000",
                        "user": "Cortlin",
                        "text": "Perl 7 is going to be different though."
                    },
                    {
                        "message_number": "106",
                        "ts": "2020-09-30T11:10:21.533000",
                        "user": "Cortlin",
                        "text": "They're going to make it more modern."
                    },
                    {
                        "message_number": "107",
                        "ts": "2020-09-30T11:10:31.948000",
                        "user": "Cortlin",
                        "text": "Make `use strict; use warnings;` etc default for example."
                    },
                    {
                        "message_number": "108",
                        "ts": "2020-09-30T11:10:41.248000",
                        "user": "Daevion",
                        "text": "Ahh it\u2019s still Perl without the perl6/raku breaking changes"
                    },
                    {
                        "message_number": "109",
                        "ts": "2020-09-30T11:10:44.880000",
                        "user": "Cortlin",
                        "text": "Yeah"
                    },
                    {
                        "message_number": "110",
                        "ts": "2020-09-30T11:10:49.624000",
                        "user": "Bexon",
                        "text": "function signatures? :meow:"
                    },
                    {
                        "message_number": "111",
                        "ts": "2020-09-30T11:10:53.944000",
                        "user": "Marilou",
                        "text": "its just perl with sane defaults?"
                    },
                    {
                        "message_number": "112",
                        "ts": "2020-09-30T11:10:54.356000",
                        "user": "Cortlin",
                        "text": "Raku no longer has much in common with Perl any more."
                    },
                    {
                        "message_number": "113",
                        "ts": "2020-09-30T11:11:11.011000",
                        "user": "Cortlin",
                        "text": "Kinda yeah. More strict and has boilerplates and folk idioms built in."
                    },
                    {
                        "message_number": "114",
                        "ts": "2020-09-30T11:11:37.090000",
                        "user": "Cortlin",
                        "text": "AFAICT you can still configure it to run Perl 5 scripts in a compatibility mode."
                    },
                    {
                        "message_number": "115",
                        "ts": "2020-09-30T11:11:57.315000",
                        "user": "Marilou",
                        "text": "wonder if my company will upgrade to new perl then"
                    },
                    {
                        "message_number": "116",
                        "ts": "2020-09-30T11:12:09.542000",
                        "user": "Cortlin",
                        "text": "It's supposedly easy to migrate from 5 to 7."
                    },
                    {
                        "message_number": "117",
                        "ts": "2020-09-30T11:12:31.807000",
                        "user": "Marilou",
                        "text": "unless the upgrade can be billable to a customer i doubt ittl happen for me ha"
                    },
                    {
                        "message_number": "118",
                        "ts": "2020-09-30T11:13:13.761000",
                        "user": "Cortlin",
                        "text": "haha yeah"
                    },
                    {
                        "message_number": "119",
                        "ts": "2020-09-30T11:16:55.358000",
                        "user": "Bexon",
                        "text": "we have machines with 5.16 :meow:"
                    },
                    {
                        "message_number": "120",
                        "ts": "2020-09-30T11:25:12.537000",
                        "user": "Daevion",
                        "text": "Yes about being a Perl shop (I\u2019m guessing recruitment or local govt)"
                    },
                    {
                        "message_number": "121",
                        "ts": "2020-09-30T11:25:59.356000",
                        "user": "Bexon",
                        "text": "ah no  I just meant we have 5.16 installed"
                    },
                    {
                        "message_number": "122",
                        "ts": "2020-09-30T11:26:02.029000",
                        "user": "Bexon",
                        "text": "we don't use it much"
                    },
                    {
                        "message_number": "123",
                        "ts": "2020-09-30T11:26:37.828000",
                        "user": "Bexon",
                        "text": "I know it's 5.16 because I wanted to use it instead of python 2 :meow:"
                    },
                    {
                        "message_number": "124",
                        "ts": "2020-09-30T11:26:43.549000",
                        "user": "Bexon",
                        "text": "turns out 5.16 is old as hell too"
                    },
                    {
                        "message_number": "125",
                        "ts": "2020-09-30T11:26:49.274000",
                        "user": "Cortlin",
                        "text": "In my secondary job they're trying to migrate from Perl to Python."
                    },
                    {
                        "message_number": "126",
                        "ts": "2020-09-30T11:26:57.350000",
                        "user": "Bexon",
                        "text": "a lot of people do that now"
                    },
                    {
                        "message_number": "127",
                        "ts": "2020-09-30T11:27:23.970000",
                        "user": "Bexon",
                        "text": "rewriting from python/java to go is a popular thing too"
                    },
                    {
                        "message_number": "128",
                        "ts": "2020-09-30T11:28:43.954000",
                        "user": "Daevion",
                        "text": "Not rust?"
                    },
                    {
                        "message_number": "129",
                        "ts": "2020-09-30T11:29:04.400000",
                        "user": "Daevion",
                        "text": "Or node?"
                    },
                    {
                        "message_number": "130",
                        "ts": "2020-09-30T11:30:49.974000",
                        "user": "Bexon",
                        "text": "not many companies rewrite stuff in rust"
                    },
                    {
                        "message_number": "131",
                        "ts": "2020-09-30T11:31:14.347000",
                        "user": "Bexon",
                        "text": "it's everywhere on the programming forums but in the industry it's pretty niche"
                    },
                    {
                        "message_number": "132",
                        "ts": "2020-09-30T11:31:23.276000",
                        "user": "Bexon",
                        "text": "zalando dropped rust a few months ago.."
                    },
                    {
                        "message_number": "133",
                        "ts": "2020-09-30T11:31:32.579000",
                        "user": "Bexon",
                        "text": "but node  yeah"
                    },
                    {
                        "message_number": "134",
                        "ts": "2020-09-30T11:31:45.835000",
                        "user": "Daevion",
                        "text": "i'm honestly surprised. I would have thought the safe+fast would push a lot of buttons"
                    },
                    {
                        "message_number": "135",
                        "ts": "2020-09-30T11:32:24.004000",
                        "user": "Bexon",
                        "text": "I wish my team didn't perceive ruby as legacy crap (it's because they have too many problems with the old chef version they have to support and they want to get rid of everything ruby now)"
                    },
                    {
                        "message_number": "136",
                        "ts": "2020-09-30T11:32:54.158000",
                        "user": "Bexon",
                        "text": "turns out safe+fast is not the right tradeoff for most enterprise stuff"
                    },
                    {
                        "message_number": "137",
                        "ts": "2020-09-30T11:33:22.505000",
                        "user": "Bexon",
                        "text": "popular+popular however.."
                    },
                    {
                        "message_number": "138",
                        "ts": "2020-09-30T11:33:50.393000",
                        "user": "Marilou",
                        "text": "fast just means throw more compute at the problem so youre left with safe...safe from what? memory issues just reboot"
                    },
                    {
                        "message_number": "139",
                        "ts": "2020-09-30T11:34:29.062000",
                        "user": "Bexon",
                        "text": "yeah basically  my friend works at zalando and their JVM services just spin 500 pods when needed"
                    },
                    {
                        "message_number": "140",
                        "ts": "2020-09-30T11:34:51.025000",
                        "user": "Bexon",
                        "text": "their rust service works perfectly fine but zalando wants more crossteam collaboration"
                    },
                    {
                        "message_number": "141",
                        "ts": "2020-09-30T11:35:06.611000",
                        "user": "Bexon",
                        "text": "so everything but node n jvm got trashed"
                    },
                    {
                        "message_number": "142",
                        "ts": "2020-09-30T11:35:30.875000",
                        "user": "Marilou",
                        "text": "at least they are putting their eggs into two baskets"
                    },
                    {
                        "message_number": "143",
                        "ts": "2020-09-30T11:36:10.858000",
                        "user": "Bexon",
                        "text": "it's funny because they rewrote that service from scala to rust  it was too slow and architecturally complexI wonder how it survives a rewrite from rust to kotlin/java"
                    },
                    {
                        "message_number": "144",
                        "ts": "2020-09-30T11:37:03.506000",
                        "user": "Bexon",
                        "text": "it'll probably be slow as heck and very complex because of all the performance hacks they had to apply  but hey people from other teams will be able to chime in"
                    },
                    {
                        "message_number": "145",
                        "ts": "2020-09-30T11:38:38.436000",
                        "user": "Daevion",
                        "text": "enterprise is weird cause you can throw more servers at the problem  so in that case rust was never going to prosper in a scala environment."
                    },
                    {
                        "message_number": "146",
                        "ts": "2020-09-30T11:39:01.357000",
                        "user": "Daevion",
                        "text": "(someone else is payign for the servers)"
                    },
                    {
                        "message_number": "147",
                        "ts": "2020-09-30T11:39:14.079000",
                        "user": "Daevion",
                        "text": "(and they are not a significant cost anyway)"
                    },
                    {
                        "message_number": "148",
                        "ts": "2020-09-30T11:39:44.789000",
                        "user": "Bexon",
                        "text": "programmers are more expensive than hardware these days"
                    },
                    {
                        "message_number": "149",
                        "ts": "2020-09-30T11:40:07.916000",
                        "user": "Marilou",
                        "text": "enterprise can be hilarious our architect decided we should have nvidia gtx1080ti in all our OCR machines because they do graphical work not because the app is coded for CUDA...."
                    },
                    {
                        "message_number": "150",
                        "ts": "2020-09-30T11:40:36.051000",
                        "user": "Marilou",
                        "text": "graphical being it opened an image as an input file"
                    },
                    {
                        "message_number": "151",
                        "ts": "2020-09-30T11:40:44.796000",
                        "user": "Marilou",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "152",
                        "ts": "2020-09-30T11:41:11.955000",
                        "user": "Marilou",
                        "text": "rust is great somewhere but ive not seen it at my work"
                    },
                    {
                        "message_number": "153",
                        "ts": "2020-09-30T13:21:52.455000",
                        "user": "Bexon",
                        "text": "csv reading and writing is still slower in racket than in python"
                    },
                    {
                        "message_number": "154",
                        "ts": "2020-09-30T13:21:54.821000",
                        "user": "Bexon",
                        "text": "I'm :meow:"
                    },
                    {
                        "message_number": "155",
                        "ts": "2020-09-30T13:45:18.366000",
                        "user": "Bexon",
                        "text": "I compiled it"
                    },
                    {
                        "message_number": "156",
                        "ts": "2020-09-30T13:45:21.430000",
                        "user": "Bexon",
                        "text": "and it's faster!!"
                    },
                    {
                        "message_number": "157",
                        "ts": "2020-09-30T13:45:28.981000",
                        "user": "Bexon",
                        "text": "(excluding startup)"
                    },
                    {
                        "message_number": "158",
                        "ts": "2020-09-30T13:45:36.089000",
                        "user": "Bexon",
                        "text": ":meowblush:"
                    },
                    {
                        "message_number": "159",
                        "ts": "2020-09-30T15:10:19.927000",
                        "user": "Bexon",
                        "text": "was it just loading the file from disk? or loading + parsing JSON"
                    },
                    {
                        "message_number": "160",
                        "ts": "2020-09-30T15:10:30.528000",
                        "user": "Bexon",
                        "text": "hm I didn\u2019t compile this one I think  I should\u2019ve"
                    },
                    {
                        "message_number": "161",
                        "ts": "2020-09-30T15:14:30.637000",
                        "user": "Britten",
                        "text": "Loading and parsing an 800k file 1000 times"
                    },
                    {
                        "message_number": "162",
                        "ts": "2020-09-30T16:22:02.421000",
                        "user": "Bexon",
                        "text": "oh interesting. I\u2019ll check again tomorrow"
                    },
                    {
                        "message_number": "163",
                        "ts": "2020-09-30T16:33:37.291000",
                        "user": "Britten",
                        "text": "It is totally possible that your document is a different shape and maybe there would be more GC pressure"
                    }
                ]
            },
            {
                "conversation_id": "120",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T10:16:37.483000",
                        "user": "Cortlin",
                        "text": "Racket's jsexprs are too high level and readable in comparison to Python's performanceoriented low level implementation."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T10:21:34.531000",
                        "user": "Cortlin",
                        "text": "There's an old parser implementation that uses streaming: https://www.neilvandyke.org/racket/jsonparsing/"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T10:21:37.319000",
                        "user": "Cortlin",
                        "text": "I wonder how it performs."
                    }
                ]
            },
            {
                "conversation_id": "121",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T11:24:04.377000",
                        "user": "Daevion",
                        "text": "Which industry/sector?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T11:24:39.723000",
                        "user": "Bexon",
                        "text": "is that a question for me?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T11:26:11.956000",
                        "user": "Bexon",
                        "text": "there are some old scripts but they're unused"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T11:26:23.297000",
                        "user": "Daevion",
                        "text": "Ahh"
                    }
                ]
            },
            {
                "conversation_id": "122",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T15:09:50.750000",
                        "user": "Britten",
                        "text": "> (racket 2.5s python 0.5s)@sarna odd. In my synthetic test I got Racket at about 1/2 as fast as Python"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T15:15:21.085000",
                        "user": "Britten",
                        "text": "I don't have the numbers but on this computer it was (from memory) Python: ~24s Racket: : ~56s"
                    }
                ]
            },
            {
                "conversation_id": "123",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T16:32:28.830000",
                        "user": "Britten",
                        "text": "> $ racket readbench.rkt > cpu time: 60036 real time: 60426 gc time: 1770> > $ python3 read_bench.py > 26.22542119026184 secs elapsed"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T16:43:21.902000",
                        "user": "Cortlin",
                        "text": "Racket also has a relatively slow startup time especially if you rely on too many libraries."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T16:43:45.180000",
                        "user": "Cortlin",
                        "text": "I try not to use `#lang racket` until the `require`s get cumbersome."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T16:48:21.537000",
                        "user": "Britten",
                        "text": "That script is `racket/base` and `raco make readbench.rkt` was run beforehand"
                    }
                ]
            },
            {
                "conversation_id": "124",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T17:08:25.995000",
                        "user": "Bexon",
                        "text": "`#lang racket` takes ~0.35s to load on my work laptop"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T17:08:46.155000",
                        "user": "Bexon",
                        "text": "that still leaves 2s+"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T17:08:52.614000",
                        "user": "Britten",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T17:09:51.689000",
                        "user": "Alyiah",
                        "text": "I wish Racket had something like Clojure's `>` and `>>` macros :P"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-30T17:11:48.956000",
                        "user": "Bexon",
                        "text": "same"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T17:11:58.476000",
                        "user": "Bexon",
                        "text": "I think they were implemented somewhere?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T17:12:17.819000",
                        "user": "Bexon",
                        "text": "https://docs.racketlang.org/threading/index.html"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T17:12:21.836000",
                        "user": "Bexon",
                        "text": "there ya go"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T17:14:28.966000",
                        "user": "Bexon",
                        "text": "I like how they solved ocaml\u2019s problem with a hole"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T17:14:32.880000",
                        "user": "Cortlin",
                        "text": "They're very easy to implement from memory."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-30T17:15:13.879000",
                        "user": "Cortlin",
                        "text": "I just put them in a utility file when I need them instead of depending on a library."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-30T17:15:20.558000",
                        "user": "Bexon",
                        "text": "the most popular OCaml stdlib replacement uses named arguments for everything instead"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-30T17:15:41.611000",
                        "user": "Bexon",
                        "text": "@Deleted User why? code reuse is good :meow:"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-30T17:15:45.895000",
                        "user": "Cortlin",
                        "text": "`doto` is also nice."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-30T17:16:06.574000",
                        "user": "Cortlin",
                        "text": "Depending on an external library is expensive. There's a slippery slope towards leftpadism here."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-30T17:16:51.645000",
                        "user": "Bexon",
                        "text": "this library is much bigger than leftpad"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-30T17:17:18.583000",
                        "user": "Bexon",
                        "text": "I noticed many people who code in Scheme dialects don\u2019t like dependencies"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-30T17:17:24.086000",
                        "user": "Bexon",
                        "text": "not sure why"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-30T17:18:20.709000",
                        "user": "Kiam",
                        "text": "lousy package managers plays a part i think"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-30T17:18:40.520000",
                        "user": "Bexon",
                        "text": "some Scheme dialects don\u2019t even have one"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-30T17:18:42.227000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-30T17:19:32.701000",
                        "user": "Caycee",
                        "text": "I wish scheme has 1 main implementation"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-30T17:19:51.197000",
                        "user": "Britten",
                        "text": "also unreliable/nonexistant library systems"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-30T17:20:10.489000",
                        "user": "Bexon",
                        "text": "racket is one true scheme :meow:"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-30T17:20:37.749000",
                        "user": "Bexon",
                        "text": "jokes aside maybe r7rslarge gets there"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-30T17:22:52.657000",
                        "user": "Alyiah",
                        "text": "Oh shit good to know this exists! Thanks @sarna!"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-30T17:23:16.505000",
                        "user": "Bexon",
                        "text": "it\u2019s only 125 lines surprisingly"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-09-30T17:23:21.192000",
                        "user": "Britten",
                        "text": "threading is a very good macro"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-09-30T17:23:34.006000",
                        "user": "Bexon",
                        "text": "`and~>` sounds very useful"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-09-30T17:24:59.081000",
                        "user": "Alyiah",
                        "text": "Wow that's a lot smaller than I would expect."
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-09-30T17:25:41.835000",
                        "user": "Alyiah",
                        "text": "Oh of course it's Lexi Lambda lol they have so much cool stuff"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-09-30T17:26:07.351000",
                        "user": "Kiam",
                        "text": "tip for using threading: _always_ use the hole markers"
                    }
                ]
            },
            {
                "conversation_id": "125",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T18:11:19.982000",
                        "user": "Cortlin",
                        "text": "I quite like Akku."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T18:11:35.065000",
                        "user": "Cortlin",
                        "text": "It's the only reliable package manager for Scheme I've seen."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T18:12:18.116000",
                        "user": "Cortlin",
                        "text": "It's in the tradition of pip w/ virtualenv though. Not in the tradition of CPAN like raco pkg (PlaneT) is."
                    }
                ]
            },
            {
                "conversation_id": "126",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T18:40:12.960000",
                        "user": "Bexon",
                        "text": "I heard good things about it"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T18:40:29.005000",
                        "user": "Bexon",
                        "text": "and personally I prefer this way of doing things instead of the CPAN way"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T18:40:52.291000",
                        "user": "Bexon",
                        "text": "problems arise when you gotta have more than one version of some library :/"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T18:41:09.908000",
                        "user": "Bexon",
                        "text": "Raku allows that idk about Perl"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-30T18:41:45.536000",
                        "user": "Bexon",
                        "text": "in OCaml I had a couple of cases like \u201coh you\u2019re pulling this library? I have to downgrade 10 of your packages from 3.0 to 0.12!\u201d"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T18:42:47.878000",
                        "user": "Alyiah",
                        "text": "Is this something Nix is able to solve? It's able to solve this issue with system packages idk about packages for language's package managers though"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T18:43:22.533000",
                        "user": "Bexon",
                        "text": "I heard they interact badly (Nix and language\u2019s package managers)"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T18:43:28.866000",
                        "user": "Bexon",
                        "text": "not sure though"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T18:43:53.170000",
                        "user": "Cortlin",
                        "text": "https://github.com/fractalide/racket2nix"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T18:43:58.331000",
                        "user": "Bexon",
                        "text": "as I\u2019ve never tried personally"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-30T18:44:30.261000",
                        "user": "Bexon",
                        "text": "can I have the same issue with Racket that I had in OCaml? \ud83d\udc40"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-30T18:56:39.954000",
                        "user": "Alyiah",
                        "text": "No idea I've never tried nix at all personally but I have some friends that have been shilling it recently and this problem is exactly what it's meant to solve \ud83e\udd37\\u200d\u2642\ufe0f"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-30T19:30:59.963000",
                        "user": "Bexon",
                        "text": "I tried nix too complex for me :meow:"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-30T19:38:36.304000",
                        "user": "Bexon",
                        "text": "same with guix"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-30T19:39:06.581000",
                        "user": "Kiam",
                        "text": "nix looks neat"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-30T19:39:12.383000",
                        "user": "Kiam",
                        "text": "I want to do Weird things to it though"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-30T19:39:41.187000",
                        "user": "Bexon",
                        "text": "it looks great but it\u2019s a big paradigm shift"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-30T21:02:18.463000",
                        "user": "Kiam",
                        "text": "feeling like sharing some Spice today so I'm here to say I've decided that `#true` and `#false` are much better than `#t` and `#f`"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-30T21:12:57.105000",
                        "user": "Britten",
                        "text": "That's some bold spice."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-30T21:14:36.140000",
                        "user": "Daevion",
                        "text": "Teaching languages got it right"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-30T21:17:03.351000",
                        "user": "Kiam",
                        "text": "_really_ bold spice would be saying it should just be `true` and `false` which should be bound to the values so it doesn't have to be Special Reader Magic but I don't think it's realistic to suggest that to other racketeers."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-30T21:18:09.176000",
                        "user": "Kiam",
                        "text": "the far more pressing problem is that `#t` and `#f` are pointlessly inscrutable shorthands that save three characters apiece at the expense of 1) preventing me from telling which is which and 2) having to explain this nonsense to nonlisp people"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-30T21:27:06.526000",
                        "user": "Bexon",
                        "text": "some fonts make t and f really similar :meow:"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-30T21:27:27.232000",
                        "user": "Olvin",
                        "text": "`true` and `false` would make more sense if matchexpanders could be identifiers"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-30T21:27:37.089000",
                        "user": "Bexon",
                        "text": "~~`#y` and `#n` gang~~"
                    }
                ]
            },
            {
                "conversation_id": "127",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T22:06:00.026000",
                        "user": "Cortlin",
                        "text": "Why not `#true` and `#false`?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T22:21:10.250000",
                        "user": "Britten",
                        "text": "Yeah I'm team `true` and `false`. Partly because I want `#` to be a magic reader hook. Also writing `#` reader hooks should be easier."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T22:36:54.126000",
                        "user": "Cortlin",
                        "text": "I don't really like the idea of hardcoding two plain identifiers as a different selfevaluating type."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T22:37:33.308000",
                        "user": "Cortlin",
                        "text": "I like the Scheme tradition of using the `#` prefix for tokens treated to be separately by the reader."
                    }
                ]
            },
            {
                "conversation_id": "128",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T23:01:31.842000",
                        "user": "Kiam",
                        "text": "Because that's how any other twoelement enum type you'd make would look"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T23:01:44.706000",
                        "user": "Kiam",
                        "text": "it'd have two constant values bound to identifiers and exported by a module"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-09-30T23:02:42.284000",
                        "user": "Kiam",
                        "text": "They wouldn't be hard coded `true` and `false` would be identifiers bound with `define` and imported from a module or the enclosing `#lang` just like any other constants would be."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-09-30T23:02:54.751000",
                        "user": "Kiam",
                        "text": "They wouldn't be hard coded `true` and `false` would be identifiers bound with `define` and imported from a module or the enclosing `#lang` just like any other named constants would be."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-09-30T23:14:35.346000",
                        "user": "Zayne",
                        "text": "you know stuff like `caddaddr`? at one point in like 2010 I was thinking of chaining front and tail operations like `fttftt`"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-09-30T23:15:33.821000",
                        "user": "Kiam",
                        "text": "_omg_"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-09-30T23:16:39.999000",
                        "user": "Zayne",
                        "text": "these would of course be booleans and you'd call a cons cell as a booleantaking function to get its front or tail"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-09-30T23:17:02.959000",
                        "user": "Zayne",
                        "text": "but that was a long time ago and feels silly now"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-09-30T23:18:50.779000",
                        "user": "Kiam",
                        "text": "I've had plenty of those ideas"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-09-30T23:19:38.024000",
                        "user": "Zayne",
                        "text": "or maybe it was first rather than front\"... either way really"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-09-30T23:21:02.426000",
                        "user": "Kiam",
                        "text": "one time I wanted to change `require` to perform a DNSlike hierarchical resolution of paths so `(require foo/bar/baz)` would first `(require foo)` look in a `#%links` export or something for a hash table to lookup `bar` in then require that and do another lookup for `baz` then finally require that"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-09-30T23:21:31.082000",
                        "user": "Zayne",
                        "text": "sounds great!"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-09-30T23:21:47.178000",
                        "user": "Kiam",
                        "text": "I can't remember _why_ I wanted this or what problem it was supposed to fix"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-09-30T23:22:08.106000",
                        "user": "Kiam",
                        "text": "and nowadays I just shrug and go if I\\'m changing something as fundamental as `require` specs fuck it just make them URLs"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-09-30T23:23:53.823000",
                        "user": "Zayne",
                        "text": "probably helpful for organizing codebases in ways that don't have their directory structure determined by their public interface or for dependency injection to replace one whole subtree of module paths with another as far as certain modules are concerned..."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-09-30T23:24:47.385000",
                        "user": "Kiam",
                        "text": "yeah but like"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-09-30T23:24:58.324000",
                        "user": "Kiam",
                        "text": "I couldn't remember why I would want to do either of those things instead of just organizing modules the normal way"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-09-30T23:26:13.193000",
                        "user": "Zayne",
                        "text": "peraonally though I like to think of the module path as being like a kind of authorization; if you're being loaded at a module path that means it's up to you and only you to define things that other modules are expecting at that path"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-09-30T23:28:37.751000",
                        "user": "Zayne",
                        "text": "I don't know if this is strictly true in Racket but it seems true as long as people don't do dynamic loading"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-09-30T23:33:16.805000",
                        "user": "Zayne",
                        "text": "My system of custom variables is an exciting project. Over the past week I've already made a big deal out of two hygienerelated surprises in Racket that turned out to be misunderstandings on ny part. :p"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-09-30T23:42:24.868000",
                        "user": "Zayne",
                        "text": "The motivation of this system is to represent something like type classes or implicit arguments. Where an operation would take an implicit argument or type class constraint I\\'m thinking of treating that like an anaphoric variable use.Not an anaphor that uses syntax parameters though. An anaphor more like `#%app`.And it wouldn\\'t be a single namebased binding so much as a database that contains compound relations like (handwavingly) collection type T works with iterator functionality F and here\\'s how."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-09-30T23:43:53.951000",
                        "user": "Kiam",
                        "text": "huh I definitely don't get the details but the big picture sounds neat"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-09-30T23:53:14.623000",
                        "user": "Zayne",
                        "text": "I'm not sure I've figured out all the details either. Currently I have a proofofconcept system of variables that consists of arbitrary transformerphase values (matched using `equal?) that are associated with some number of runtime value bindings."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-09-30T23:55:25.134000",
                        "user": "Zayne",
                        "text": "so it seems I could use this to represent values that have associated static info (including things like variables with ellipsis depths) as well as constraints that extrinsically hold static (and run time) information about other variables in scope"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-09-30T23:55:33.192000",
                        "user": "Zayne",
                        "text": "it could go a lot of places XD"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-09-30T23:56:36.132000",
                        "user": "Zayne",
                        "text": "yeah!"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-09-30T23:59:02.933000",
                        "user": "Zayne",
                        "text": "anyway the first thing I wanna use it for is to make a DSL for side effects wherein some side effect systems _can_ compile simply to Racket side effects but others can compile to other languages or compile to more complex ways to model side effects within Racket"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-10-01T00:00:03.195000",
                        "user": "Zayne",
                        "text": "well I have my sights set low enough at the moment that I'm not aiming to compile to languages other than Racket"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-10-01T00:05:23.451000",
                        "user": "Zayne",
                        "text": "speaking of overload resolution I've got some ideas in mind for modules that can be customized with a set of extensions and can determine a transformed set of extensions. So if you want one of my macros to have a `set!` transformer for instance maybe I can define my macro in a way that takes extensions like that into account."
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-10-01T00:07:23.736000",
                        "user": "Zayne",
                        "text": "the thing I'm most hoping to use that for is defining modules which can have customized contract policies like turning off the contracts of one of their dependencies"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-10-01T00:08:19.373000",
                        "user": "Kiam",
                        "text": "more easily configurable contracts is something I want though I'm not yet sure in what way I want them"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-10-01T00:08:47.259000",
                        "user": "Kiam",
                        "text": "since it's about turning off edges between modules rather than just a straight switch on each module"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-10-01T09:13:45.579000",
                        "user": "Kiam",
                        "text": "@sarna how long does it take if all you do is call `port>string`?"
                    }
                ]
            },
            {
                "conversation_id": "129",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-09-30T23:34:36.618000",
                        "user": "Kiam",
                        "text": "whatcha makin? :p"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-09-30T23:55:52.667000",
                        "user": "Kiam",
                        "text": "overload resolution seems related maybe?"
                    }
                ]
            },
            {
                "conversation_id": "130",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-01T08:34:52.187000",
                        "user": "Bexon",
                        "text": "@oaktownsam OCaml (on default settings) takes 0.6s Racket takes 2.5s Python takes 0.57s"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-01T08:39:35.631000",
                        "user": "Bexon",
                        "text": "interestingly if I comment everything out in Racket and leave only```scheme(define parsed (withinputfromfile jsonfile (\u03bb () (readjson))))```it takes longer than before (around 3s)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-01T08:55:54.409000",
                        "user": "Bexon",
                        "text": "```scheme(define parsed (withinputfromfile jsonfile (\u03bb () (string>jsexpr (port>string)))))```2.7s :meow:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-01T09:17:23.237000",
                        "user": "Bexon",
                        "text": "@notjack ~0.66s"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-01T09:17:37.552000",
                        "user": "Bexon",
                        "text": "startup is around 0.37s"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-01T09:46:47.678000",
                        "user": "Bexon",
                        "text": "hmm with idiomatic OCaml I got to Python speeds"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-01T10:51:08.379000",
                        "user": "Bexon",
                        "text": "Ruby takes 0.86s :meow:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-02T08:34:53.276000",
                        "user": "Bexon",
                        "text": "python's parser really is handtuned C there's no way around that"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-02T08:35:16.522000",
                        "user": "Bexon",
                        "text": "I'm gonna stop trying to make stuff faster I feel like it's giving me brain damage :meow:"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-02T08:55:55.939000",
                        "user": "Bexon",
                        "text": "which editor do y'all use? DrRacket?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-02T08:56:38.032000",
                        "user": "Bexon",
                        "text": "I've been using doom emacs but support for racket breaks pretty frequently"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-02T08:57:01.192000",
                        "user": "Bexon",
                        "text": "tried vscode it's missing half of the features :meow:"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-02T09:07:30.986000",
                        "user": "Caycee",
                        "text": "vim"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-02T09:08:02.768000",
                        "user": "Bexon",
                        "text": "with some plugins? or spartan"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-02T09:08:46.135000",
                        "user": "Caycee",
                        "text": "for racket/scheme i use autopairs and rainbow"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-02T09:11:58.783000",
                        "user": "Bexon",
                        "text": "just that? wow"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-02T09:22:22.653000",
                        "user": "Caycee",
                        "text": "yeah if i need something more powerful i'll use drracket"
                    }
                ]
            },
            {
                "conversation_id": "131",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T09:56:57.418000",
                        "user": "Marilou",
                        "text": "> I've been using doom emacs but support for racket breaks pretty frequently@sarna DrRacket or VSCode"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-02T09:59:46.636000",
                        "user": "Daevion",
                        "text": "> which editor do y'all use? DrRacket?@sarna DrRacket serves me well."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-02T10:00:35.289000",
                        "user": "Daevion",
                        "text": "Though I do customise with settings plugins & scripts"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-02T10:07:35.956000",
                        "user": "Trason",
                        "text": "I use vscode \ud83d\ude04 i dont like too many features"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-02T10:38:05.440000",
                        "user": "Daevion",
                        "text": "\ud83d\ude01I like lots of features! Arrows bubbles autocomplete scripts! Yes give it to me \ud83d\ude01"
                    }
                ]
            },
            {
                "conversation_id": "132",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T10:44:33.117000",
                        "user": "Cortlin",
                        "text": "Emacs :meow:"
                    }
                ]
            },
            {
                "conversation_id": "133",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T11:06:07.761000",
                        "user": "Caycee",
                        "text": "When I use drracket there's a noticable delay after a key press and the character being shown onscreen"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-02T11:06:13.230000",
                        "user": "Caycee",
                        "text": "Is this normal?"
                    }
                ]
            },
            {
                "conversation_id": "134",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T11:34:01.473000",
                        "user": "Bexon",
                        "text": "@Deleted User do you use a distribution like doom or spacemacs?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-02T11:34:33.428000",
                        "user": "Bexon",
                        "text": "@beru not really it doesn\u2019t differ much from other text editors I have latencywise"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-02T11:34:38.416000",
                        "user": "Cortlin",
                        "text": "Nope"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-02T11:34:41.387000",
                        "user": "Bexon",
                        "text": "I think it\u2019s bad with really big files tho"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-02T11:34:42.073000",
                        "user": "Cortlin",
                        "text": "Plain GNU Emacs"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-02T11:34:47.737000",
                        "user": "Bexon",
                        "text": ":meowblush:"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-02T11:34:48.595000",
                        "user": "Cortlin",
                        "text": "I don't like vistyle keybindings."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-02T11:35:15.300000",
                        "user": "Bexon",
                        "text": "I see"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-02T11:35:24.249000",
                        "user": "Bexon",
                        "text": "spacemacs also has a \u201choly\u201d mode"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-02T11:35:45.203000",
                        "user": "Bexon",
                        "text": "it keeps the emacs bindings then"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-02T11:36:19.860000",
                        "user": "Cortlin",
                        "text": "I just install a bunch of packages I need keep some .el files under `~/.emacs.d` and that's enough for me."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-02T12:05:49.528000",
                        "user": "Daevion",
                        "text": "Please log it to GitHub.com/racket/drracket with all the usual details  Racket distribution build type and version OS/architecture/word  display details (\u2018retina\u2019 dpi \u2018magnification\u2019)^ steps to reproduce /settings"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-02T12:11:31.028000",
                        "user": "Bexon",
                        "text": "I'll give dr racket a try again :meow:"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-02T12:12:48.486000",
                        "user": "Daevion",
                        "text": "I run it on a raspberry pi 4 with no typing lag"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-02T12:13:16.350000",
                        "user": "Bexon",
                        "text": "neato"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-02T12:13:21.895000",
                        "user": "Bexon",
                        "text": "on mine it was kinda slow iirc"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-02T12:13:26.029000",
                        "user": "Bexon",
                        "text": "but everything was slow :meow:"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-02T12:13:33.133000",
                        "user": "Daevion",
                        "text": "So it should run on low end chrome books and the like"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-02T12:13:50.705000",
                        "user": "Daevion",
                        "text": "> but everything was slow :meow:@sarna \u2639\ufe0f"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-02T12:14:15.521000",
                        "user": "Bexon",
                        "text": "the worst offender was youtube"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-10-02T12:14:24.366000",
                        "user": "Bexon",
                        "text": "everything worked fine just slower"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-10-02T12:14:35.033000",
                        "user": "Bexon",
                        "text": "but youtube was lagging as hell :meow:"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-10-02T12:16:09.434000",
                        "user": "Daevion",
                        "text": "Sounds like it\u2019s not Dr racket specific you might be better off with Emacs racket mode  But change the key bindings to what works for you"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-10-02T12:17:43.783000",
                        "user": "Daevion",
                        "text": "I recognise that I am probably quite privileged to have a 2012 MacBook Pro I7 As my main machine"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-10-02T12:17:59.022000",
                        "user": "Bexon",
                        "text": "I'll try to make racket layer better in doom emacs maybe someday.. but lemme experience a good IDE first"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-10-02T12:18:20.459000",
                        "user": "Bexon",
                        "text": "my main machine is a desktop dr racket is snappy there"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-10-02T12:18:35.026000",
                        "user": "Bexon",
                        "text": "on my work laptop even emacs is kinda :meow: sometimes"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-10-02T12:19:44.586000",
                        "user": "Daevion",
                        "text": "> my main machine is a desktop dr racket is snappy there@sarna \ud83d\udc4d"
                    }
                ]
            },
            {
                "conversation_id": "135",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T12:00:52.071000",
                        "user": "Daevion",
                        "text": "> Is this normal?@beru no"
                    }
                ]
            },
            {
                "conversation_id": "136",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T15:14:17.375000",
                        "user": "Caycee",
                        "text": "Var will be equal to #t"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-02T15:15:58.265000",
                        "user": "Caycee",
                        "text": "Or did you mean store the conditional expression not the result?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-02T15:16:06.559000",
                        "user": "Daevion",
                        "text": "Why not just `(define var #t)` or do you mean something like;```scheme(define isgreaterthanseven (lambda (b) (> 7 b)))```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-02T15:17:05.678000",
                        "user": "Caycee",
                        "text": "`(define var (> 7 5))` like this?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-02T15:17:07.836000",
                        "user": "Daevion",
                        "text": "`(define var <)` ?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-02T15:17:24.911000",
                        "user": "Olvin",
                        "text": "Is it an expression that you want to evaluate multiple times with possibly different results each time?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-02T15:18:02.240000",
                        "user": "Olvin",
                        "text": "The expression `(> 7 5)` will produce the same result each time so I'm confused"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-02T15:21:09.143000",
                        "user": "Olvin",
                        "text": "Please leave `'` quote out of this it's probably not what you want"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-02T15:22:47.762000",
                        "user": "Bexon",
                        "text": "but then you have to `(if var ..`"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-02T15:23:02.545000",
                        "user": "Bexon",
                        "text": "aight"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-02T15:25:13.235000",
                        "user": "Olvin",
                        "text": "What did you get to work?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-02T15:25:20.890000",
                        "user": "Olvin",
                        "text": "I'm just worried it only halfworks"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-02T15:29:52.058000",
                        "user": "Caycee",
                        "text": "Racket has a builtin for loop tho"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-02T15:32:16.289000",
                        "user": "Olvin",
                        "text": "But if you're using recursion anyway I don't understand why you would need to save a conditional expression instead of its value"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-02T15:33:35.993000",
                        "user": "Yaw",
                        "text": "i\\'m guessing this is for the loop invariant like i want to keep going until x is equal to 10 so i\\'ll keep comparing x and 10 on each iteration"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-02T15:34:45.832000",
                        "user": "Yaw",
                        "text": "so basically your function can take a function as a parameter"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-02T15:44:07.344000",
                        "user": "Yaw",
                        "text": "oh you agreed with what i said so i thought you were agreeing it was the answer"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-02T15:44:16.080000",
                        "user": "Yaw",
                        "text": "you just take a function as a parameter and call that function from yours"
                    }
                ]
            },
            {
                "conversation_id": "137",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T16:38:19.648000",
                        "user": "Olvin",
                        "text": "What problem are you running into?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-02T16:49:06.303000",
                        "user": "Olvin",
                        "text": "I'm not sure what you mean... are you talking about the `guard` procedure in the 2ndargument to `makeparameter` or something else?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-02T16:50:04.210000",
                        "user": "Bexon",
                        "text": "@Alex Knauth I think they mean \u201cfunction parameter/argument\u201d"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-02T16:50:23.332000",
                        "user": "Bexon",
                        "text": "you can just take functions as arguments in racket it\u2019s called \u201cfirst class functions\u201d"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-02T16:50:25.379000",
                        "user": "Olvin",
                        "text": "A function parameter like the `x` in `(define (f x) body)`?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-02T16:50:54.211000",
                        "user": "Olvin",
                        "text": "Oh an argument when calling a function."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-02T16:51:11.864000",
                        "user": "Olvin",
                        "text": "You can use `begin` to group multiple expressions together"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-02T16:52:06.982000",
                        "user": "Olvin",
                        "text": "Oh do you want the argument to be a function? Then put it in `lambda ()` or `thunk`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-02T16:53:30.664000",
                        "user": "Olvin",
                        "text": "A function with no inputs is commonly called a thunk"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-02T16:54:57.423000",
                        "user": "Olvin",
                        "text": "About 6 years"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-02T17:13:23.320000",
                        "user": "Cortlin",
                        "text": "The formatting makes it very difficult to read."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-02T17:15:34.308000",
                        "user": "Cortlin",
                        "text": "But here are a couple semantic tips:1. You don't need to check if the condition is equal to true. You can just say `if condition`.2. You don't need to use `begin` if your code is a single line. If you're dealing with an `if` statement with multiple lines per case you might want to consider using a `cond` instead."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-02T17:16:47.217000",
                        "user": "Cortlin",
                        "text": "The procedure takes a `code` argument but doesn't do anything with it."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-02T17:16:53.149000",
                        "user": "Cortlin",
                        "text": "So it just loops."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-02T17:18:25.864000",
                        "user": "Cortlin",
                        "text": "Well you can make it work but this isn't the idiomatic way to do loops in Racket."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-02T17:19:01.211000",
                        "user": "Cortlin",
                        "text": "Destructively incrementing an index for a loop is a very imperative idiom."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-02T17:19:05.685000",
                        "user": "Cortlin",
                        "text": "C style if you will."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-02T17:19:16.990000",
                        "user": "Cortlin",
                        "text": "In functional programming languages you should rely on natural recursion."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-02T17:19:39.565000",
                        "user": "Cortlin",
                        "text": "Don't worry I'm sure you'll get a hang of it in no time."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-02T17:21:28.186000",
                        "user": "Cortlin",
                        "text": "All forms of iteration in Racket uses recursion haha"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-10-02T17:21:43.482000",
                        "user": "Cortlin",
                        "text": "(or continuations but let's not get ahead of ourselves)"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-10-02T17:22:35.033000",
                        "user": "Cortlin",
                        "text": "I could go as far as to say while and for loops are just not used in functional programming."
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-10-02T17:24:02.147000",
                        "user": "Cortlin",
                        "text": "Yes but wouldn't you rather learn natural recursion?"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-10-02T17:25:21.390000",
                        "user": "Cortlin",
                        "text": "(the problem in your code is that you need to call `code` before recursing again)"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-10-02T17:26:29.276000",
                        "user": "Olvin",
                        "text": "Okay I see a problem with your while loop: the condition expression `(= 1 asd)` relies on the mutable variable `asd` but is only evaluated once so it will always be true. In order to fix this you would need a thunk there too"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-10-02T17:27:52.310000",
                        "user": "Olvin",
                        "text": "Turning `(= 1 asd)` into a thunk like `(thunk (= 1 asd))` means the argument is now a function with no inputs. This allows the expression `(= 1 asd)` to be evaluated multiple times to produce different results after `asd` is mutated"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-10-02T17:32:25.674000",
                        "user": "Olvin",
                        "text": "`begin` doesn't make it a thunk `thunk` does"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-10-02T17:33:02.946000",
                        "user": "Olvin",
                        "text": "also if it\\'s a thunk you also need to call it whenever you want to evaluate the condition"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-10-02T17:33:21.597000",
                        "user": "Olvin",
                        "text": "Like you're already doing with `(code)`"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-10-02T17:35:23.780000",
                        "user": "Olvin",
                        "text": "You're already making `code` a thunk just do the same with `condition`"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-10-02T17:36:51.036000",
                        "user": "Olvin",
                        "text": "Oh and I think I see another problem: an extra `thunk` wrapping the thenbody of the `if`"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-10-02T17:37:41.734000",
                        "user": "Olvin",
                        "text": "`condition` is a thunk the same way `code` is so evaluating it should be `(condition)` just like you're using `(code)` in the other place"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-10-02T18:00:06.471000",
                        "user": "Olvin",
                        "text": "Since `condition` is a thunk the same way `code` is you need to use `(condition)` in the ifequal stuff the same way you already have `(code)` in the begin stuff"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-10-02T18:04:47.276000",
                        "user": "Olvin",
                        "text": "Did you fix the `condition` in the ifequal?"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-10-02T18:07:40.287000",
                        "user": "Olvin",
                        "text": "Then I would have thought it would produce `\"final\"` almost immediately because `asd` starts out at `1` so `(= 10 asd)` should start out `#false`"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-10-02T18:10:56.526000",
                        "user": "Olvin",
                        "text": "Can you show how you fixed the `condition` in the ifequal?"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-10-02T18:11:53.008000",
                        "user": "Olvin",
                        "text": "Oh there shouldn't be a `thunk` in the if only 2 `thunks` in the call to `recursive_while`"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-10-02T18:12:40.542000",
                        "user": "Olvin",
                        "text": "And as I said before since `condition` is already a thunk the same way `code` is you need to use`(condition)` to call it in the ifequal stuff the same way you already have `(code)` in the begin stuff"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-10-02T18:13:05.646000",
                        "user": "Olvin",
                        "text": "`(thunk expr)` creates a thunk doesn't call it"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-10-02T18:26:07.348000",
                        "user": "Olvin",
                        "text": "Wait I'm still confused why doesn't it end immediately? `(condition)` should be false on the first round"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-10-02T18:48:15.853000",
                        "user": "Olvin",
                        "text": "when I run it it returns `\"final\"` right away"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-10-02T18:49:09.019000",
                        "user": "Olvin",
                        "text": "which is what I would expect from a while loop with that condition and body"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-10-02T18:49:27.892000",
                        "user": "Olvin",
                        "text": "I don't know why it looks like for you it's printing `test` over and over again"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-10-02T18:52:36.552000",
                        "user": "Olvin",
                        "text": "Can you copypaste directly instead of screenshoting?"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-10-02T19:10:53.743000",
                        "user": "Olvin",
                        "text": "Oh there's an extra `'` quote that shouldn't be there"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-10-02T19:12:16.224000",
                        "user": "Olvin",
                        "text": "Wait the screenshot is different now"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-10-02T19:12:40.254000",
                        "user": "Olvin",
                        "text": "It's not this anymore"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-10-02T19:12:55.116000",
                        "user": "Olvin",
                        "text": "What happened to that did you revert?"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-10-02T19:13:34.703000",
                        "user": "Olvin",
                        "text": "What was broken about that one?"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-10-02T19:13:45.415000",
                        "user": "Olvin",
                        "text": "When I run that it finishes with `\"final\"`"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-10-02T19:14:45.473000",
                        "user": "Olvin",
                        "text": "No that one's different"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-10-02T19:14:56.897000",
                        "user": "Olvin",
                        "text": "There was a version that looked like the image I posted above"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-10-02T19:15:01.638000",
                        "user": "Olvin",
                        "text": "what happened to that version?"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-10-02T19:15:34.790000",
                        "user": "Olvin",
                        "text": "You posted it here what happened to it?https://discordapp.com/channels/571040468092321801/618895179343986688/761651995559723049"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-10-02T19:17:01.183000",
                        "user": "Olvin",
                        "text": "That one looks closer to right than anything else"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-10-02T19:18:13.100000",
                        "user": "Olvin",
                        "text": "It's not the same. It doesn't have the `thunk` around the `(= 10 asd)` and it doesn't have the call around the use of the condition in the ifequal"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-10-02T19:19:18.519000",
                        "user": "Olvin",
                        "text": "You keep changing it faster than I can try to help you its hard to keep up"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-10-02T19:20:43.598000",
                        "user": "Olvin",
                        "text": "When I manually write that and run it it returns `\"final\"` without printing any `test` things. Is that what it does for you?"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-10-02T19:22:02.089000",
                        "user": "Olvin",
                        "text": "So that's a good start. It terminates doesn't go into an infinite loop that's progress"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-10-02T19:23:21.109000",
                        "user": "Olvin",
                        "text": "And it\\'s the result I would expect from a while loop like:```let asd = 1;while (10 === asd) { print(\"test\"); asd = asd + 1;}```"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-10-02T19:23:50.969000",
                        "user": "Olvin",
                        "text": "No it's adding 1 just fine"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-10-02T19:24:06.787000",
                        "user": "Olvin",
                        "text": "The problem is that the condition is false from the start"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-10-02T19:24:40.919000",
                        "user": "Olvin",
                        "text": "`asd` starts as 1so `(= 10 asd)` starts as false"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-10-02T19:25:56.524000",
                        "user": "Olvin",
                        "text": "Usually when writing while loops where you want many iterations you want the condition to be true at the start and remain true for as many times as you want iterations"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-10-02T19:31:02.914000",
                        "user": "Olvin",
                        "text": "At this point I think the definition of `recursive_while` looks right. But the use of the while loop is wrong in the same way```let asd = 1;while (10 === asd) { print(\"test\"); asd = asd + 1;}```is wrong"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-10-02T19:32:11.550000",
                        "user": "Olvin",
                        "text": "Well where did you learn to use while loops then?"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-10-02T19:33:01.364000",
                        "user": "Cortlin",
                        "text": "You should read the Racket tutorial."
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-10-02T19:35:35.215000",
                        "user": "Olvin",
                        "text": "Well the thing with `let asd = 1;` is in other languages\". I just meant to say that your Racket program isn\\'t wrong because of Racket stuff it\\'s wrong for reasons that would still be wrong in other languages"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-10-02T22:27:12.892000",
                        "user": "Olvin",
                        "text": "The `let asd = 1;` in other languages corresponds to the `(define asd 1)` in Racket"
                    }
                ]
            },
            {
                "conversation_id": "138",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T21:43:17.332000",
                        "user": "Yaw",
                        "text": "i think it is nice to explain that writing `thunk` is like writing `lambda ()`"
                    }
                ]
            },
            {
                "conversation_id": "139",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-02T22:26:42.238000",
                        "user": "Olvin",
                        "text": "I'm not sure what you mean"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-02T22:29:40.811000",
                        "user": "Olvin",
                        "text": "The `let` wasn't event the point of what I was talking about. I was talking about the `while` loop"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-02T22:30:49.485000",
                        "user": "Olvin",
                        "text": "The `while` loop there is wrong if you intended it to iterate multiple times"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-02T22:34:14.743000",
                        "user": "Olvin",
                        "text": "I'm wondering if you'll be able to understand why that while loop is wrong if I write it in a language you understand better... that's why I asked where you learned to use while loops"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-02T22:40:49.072000",
                        "user": "Olvin",
                        "text": "So do you see how the while loop here is wrong?:```asd = 1while 10 == asd: print(\"test\") asd = asd + 1```"
                    }
                ]
            },
            {
                "conversation_id": "140",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-04T17:51:38.481000",
                        "user": "Caycee",
                        "text": "is there a way to get vim keybindings on the racket repl?"
                    }
                ]
            },
            {
                "conversation_id": "141",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-04T19:48:23.146000",
                        "user": "Poema",
                        "text": "just use vim :p"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-04T19:48:45.286000",
                        "user": "Poema",
                        "text": "not the best lisper out there but i found a half decent plugin"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-04T19:51:21.319000",
                        "user": "Daevion",
                        "text": "https://github.com/takikawa/drracketvimtool"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-04T19:52:54.744000",
                        "user": "Poema",
                        "text": "did anyone finish sicp?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-04T19:53:41.480000",
                        "user": "Poema",
                        "text": "i have started it recently and not sure what's the correct plan to follow in order to get the most out of it been watching the lectures while following along in the book"
                    }
                ]
            },
            {
                "conversation_id": "142",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-04T20:58:34.469000",
                        "user": "Cortlin",
                        "text": "The best advice I can give is: Don't skip any exercises and don't move on to the next chapter until you make sure you've fully grasped what's being taught."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-04T20:59:10.793000",
                        "user": "Cortlin",
                        "text": "It's a very information dense book and every chapter builds on what is taught in prior chapters."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-04T21:00:00.427000",
                        "user": "Cortlin",
                        "text": "If you miss something in a hurry to move on it makes it even more difficult to move further later on."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-04T21:01:13.896000",
                        "user": "Cortlin",
                        "text": "So yeah very few people actually finish the book covertocover for this reason. But even reading only a part of it teaches a lot IMO."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-04T21:01:51.956000",
                        "user": "Cortlin",
                        "text": "I've personally only read 2/3 of it."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-05T10:18:02.496000",
                        "user": "Caycee",
                        "text": "I started racket/scheme around a month ago and at first I hated it. I can't do anything. But the more I code in racket the more I like it. It's fun."
                    }
                ]
            },
            {
                "conversation_id": "143",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-05T07:17:04.617000",
                        "user": "Zayne",
                        "text": "It's saying your function is missing the expression to compute its result. It just ends with definitions no result."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-05T07:19:51.946000",
                        "user": "Zayne",
                        "text": "(If you already do have an expression in there that you intend to be the result you might be able to fix this by simply moving it to the end after the definitions.)"
                    }
                ]
            },
            {
                "conversation_id": "144",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-05T08:42:31.989000",
                        "user": "Bexon",
                        "text": "or you\u2019re just not used to it"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-05T13:37:00.903000",
                        "user": "Bexon",
                        "text": "@Dav1s wasn\u2019t it like this when you first started coding in C++/Python?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-05T13:38:33.161000",
                        "user": "Bexon",
                        "text": "in Racket you\u2019ll get 0 precedence errors :meow:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-06T10:20:45.162000",
                        "user": "Bexon",
                        "text": "is there really no zlib racket wrapper? :meow:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-06T12:19:28.259000",
                        "user": "Marilou",
                        "text": "just discovered that VSCode has draw.io integration now thats pretty darn cool"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-06T14:01:54.563000",
                        "user": "Bexon",
                        "text": "@Deleted User yeah I tried as I couldn\u2019t really work now (internal network dead)"
                    }
                ]
            },
            {
                "conversation_id": "145",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-06T14:01:23.710000",
                        "user": "Cortlin",
                        "text": "@sarna You know what to make now!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-06T14:01:59.658000",
                        "user": "Bexon",
                        "text": "failed miserably once again"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-06T14:02:02.049000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-06T14:02:28.785000",
                        "user": "Cortlin",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-06T14:02:56.450000",
                        "user": "Cortlin",
                        "text": "Never worry for miserable failures are building blocks for glorious achievements."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-06T14:03:34.399000",
                        "user": "Cortlin",
                        "text": "I wanted it to sound like an exotic proverb but it ended up coming across like LinkedIn influencer deepity rubbish."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-06T14:03:45.183000",
                        "user": "Cortlin",
                        "text": "But you get the point"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-06T14:06:28.310000",
                        "user": "Bexon",
                        "text": ":meowblush:"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-06T14:08:16.916000",
                        "user": "Bexon",
                        "text": "http://zlib.net/manual.html"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-06T14:08:27.957000",
                        "user": "Bexon",
                        "text": "look at these structs though :meowloween:"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-06T14:08:58.839000",
                        "user": "Bexon",
                        "text": "I know basic C but it has so many weird things"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-06T14:10:09.085000",
                        "user": "Bexon",
                        "text": "what\u2019s z_const? what\u2019s FAR? pointers to alloc/free in the struct??"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-06T14:11:50.284000",
                        "user": "Bexon",
                        "text": "what\u2019s ZEXTERN and ZEXPORT lol"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-06T14:12:26.968000",
                        "user": "Cortlin",
                        "text": "It's a pointer."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-06T14:12:32.772000",
                        "user": "Bexon",
                        "text": "I tried to copy some other scheme\u2019s bindings (tried with guile and chicken) but well big surprise  FFI systems are kinda different"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-06T14:12:55.241000",
                        "user": "Cortlin",
                        "text": "Pointers are easy to represent in FFI because regardless of what type they point at they invariably have the same size."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-06T14:13:21.961000",
                        "user": "Bexon",
                        "text": "which one is a pointer though?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-06T14:13:38.058000",
                        "user": "Cortlin",
                        "text": "The ones with `` in the type name. :meow:"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-06T14:13:42.788000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-06T14:13:49.294000",
                        "user": "Bexon",
                        "text": "that I know"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-10-06T14:14:36.337000",
                        "user": "Cortlin",
                        "text": "At the end of the day all C is built on the trick of treating chunks of continuous memory as data structures (pseudoarrays unions structs) and doing pointer trickery to keep up the pretence."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-10-06T14:15:17.426000",
                        "user": "Bexon",
                        "text": "yeah and this approach is very confusing  for me at least"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-10-06T14:16:06.514000",
                        "user": "Cortlin",
                        "text": "Some hail it as being closer to the way the computer works but I think it\\'s actually very misleading because we aren\\'t using VAXen any more."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-10-06T14:16:34.705000",
                        "user": "Cortlin",
                        "text": "https://queue.acm.org/detail.cfm?id=3212479"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-10-06T14:17:23.978000",
                        "user": "Cortlin",
                        "text": "In reality pointers are secretly an abstraction over the black box of actual physical memory."
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-10-06T14:41:01.674000",
                        "user": "Bexon",
                        "text": "yeah C was close to PDP11.. it\u2019s not so close to modern CPUs (\u201cC abstract machine\u201d is a thing)"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-10-06T14:41:22.316000",
                        "user": "Bexon",
                        "text": "anyway that doesn\u2019t bring me closer to a working impl :meow:"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-10-06T14:43:40.249000",
                        "user": "Bexon",
                        "text": "https://github.com/r1b/zlib/blob/master/zlib.scm I\u2019ll try to copy this"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-10-06T14:51:39.960000",
                        "user": "Daevion",
                        "text": "https://youtu.be/vaLKm9FE8oo"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-10-06T14:55:22.890000",
                        "user": "Bexon",
                        "text": "sounds nice can you repost in #offtopic @StephenD? it\u2019s slowermoving than general \ud83d\udc40"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-10-06T14:55:54.866000",
                        "user": "Bexon",
                        "text": "~~this way I\u2019ll come back to it later instead of forgetting :meow:~~"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-10-06T15:09:04.700000",
                        "user": "Bexon",
                        "text": "thank you :meowblush:"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-10-06T15:13:39.555000",
                        "user": "Daevion",
                        "text": "I posted here deliberately as I really believe this video addresses an issue that affects all PL communities racket included. I've posted in #resources for future references but I've also put it in off topic too. (it also got posted in general on racket slack for the same reason)"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-10-06T15:33:37.676000",
                        "user": "Bexon",
                        "text": "yeah I skimmed through it and saw a lot of good stuff"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-10-06T15:36:49.676000",
                        "user": "Bexon",
                        "text": "I must say this discord is one of the friendliest and most humbling communities I\u2019ve been part of :meowblush:"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-10-06T16:05:29.313000",
                        "user": "Daevion",
                        "text": "Thanks for the feedback @AcerbicVeil#2790 & @sarna#3904  that is the goal"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-10-06T16:15:23.223000",
                        "user": "Bexon",
                        "text": "@oaktownsam trying to make a discord bot library"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-10-06T16:15:25.185000",
                        "user": "Bexon",
                        "text": "https://discord.com/developers/docs/topics/gateway#receivingpayloads"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-10-06T16:23:43.915000",
                        "user": "Daevion",
                        "text": ":meow:bot"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-10-06T16:24:06.351000",
                        "user": "Bexon",
                        "text": "kotbot"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-10-06T16:24:57.816000",
                        "user": "Kiam",
                        "text": "> Never worry for miserable failures are building blocks for glorious achievements.@Deleted User _wow_"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-10-06T16:24:58.277000",
                        "user": "Bexon",
                        "text": "there\u2019s already one library for racket but the author abandoned it and they write haskell now"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-10-06T16:29:41.772000",
                        "user": "Bexon",
                        "text": "wanted to post their github status but they changed it"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-10-06T16:29:54.429000",
                        "user": "Bexon",
                        "text": "but well there\u2019s a blog post"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-10-06T16:30:10.004000",
                        "user": "Bexon",
                        "text": "> polysemy: Higherorder lowboilerplate zerocost free monads."
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-10-06T16:30:11.956000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-10-06T16:30:29.767000",
                        "user": "Bexon",
                        "text": "and I\u2019m here trying to send a hello payload"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-10-06T16:49:35.388000",
                        "user": "Cortlin",
                        "text": "I have come to the conclusion that zerocost has no meaning in computer science."
                    }
                ]
            },
            {
                "conversation_id": "146",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-06T15:39:45.256000",
                        "user": "Mayalynn",
                        "text": "Fr i just joined and u peeps were really nice"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-06T16:13:52.736000",
                        "user": "Britten",
                        "text": "@sarna what are you going to do with zlib?"
                    }
                ]
            },
            {
                "conversation_id": "147",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-06T16:49:52.657000",
                        "user": "Cortlin",
                        "text": "zerocost abstractions is a marketing buzzword"
                    }
                ]
            },
            {
                "conversation_id": "148",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-06T17:05:24.434000",
                        "user": "Olvin",
                        "text": "zerocost abstractions usually are only zerocost in very limited circumstances. If you limit them to only situations where they have zerocost they aren\\'t really abstractions anymore. I guess it\\'s used as abstractions with specialcases that are zerocost when optimized\"?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-06T17:05:58.646000",
                        "user": "Olvin",
                        "text": "But then abstractions with specialcases is the part that confuses things"
                    }
                ]
            },
            {
                "conversation_id": "149",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-06T17:51:14.738000",
                        "user": "Yaw",
                        "text": "@sarna this is the nicest discord community i've joined (:"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-06T18:00:33.345000",
                        "user": "Kiam",
                        "text": "polysemy specifically is also definitely not zero cost"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-06T18:02:00.242000",
                        "user": "Kiam",
                        "text": "it has benchmarks but they're wrong along with most other effect system benchmarks because benchmarking haskell algebraic effects libraries is extremely complex and poorly understood"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-06T18:39:47.820000",
                        "user": "Kiam",
                        "text": "in this specific case it was mostly because the benchmarks are single files which _massively_ changes how aggressive GHC is when inlining and specializing typeclass instances"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-06T18:42:08.713000",
                        "user": "Kiam",
                        "text": "lol"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-06T18:42:52.912000",
                        "user": "Kiam",
                        "text": "package manager? I hardly know er!"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-06T18:43:20.069000",
                        "user": "Kiam",
                        "text": "(I am slightly delirious from lack of sleep)"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-07T00:32:39.087000",
                        "user": "Kiam",
                        "text": "@oaktownsam you've used transducers with IO right? I'm looking more closely at transducer finishing and trying to figure out what behavior I want"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-07T00:37:23.634000",
                        "user": "Britten",
                        "text": "I have but it's been a while."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-07T00:40:17.088000",
                        "user": "Britten",
                        "text": "@StephenD thanks for posting the video. It was long but worth it."
                    }
                ]
            },
            {
                "conversation_id": "150",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-06T18:24:58.140000",
                        "user": "Bexon",
                        "text": "benchmarks are always wrong"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-06T18:26:04.850000",
                        "user": "Bexon",
                        "text": "\u201chow fast this thing can be on a small batch of artificial inputs\u201d is never important \u201cis my program fast enough\u201d is always important"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-06T18:26:30.141000",
                        "user": "Bexon",
                        "text": "I\u2019m a guilty benchmarker I wrote this for myself :meowblush:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-06T18:41:27.273000",
                        "user": "Bexon",
                        "text": "How To Speed Up Your Haskell Program With This One Weird Trick"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-06T18:41:55.956000",
                        "user": "Bexon",
                        "text": "the weird trick: `cat .hs > optimized.hs`"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-06T18:47:40.966000",
                        "user": "Bexon",
                        "text": "go get some rest we\u2019ll be there when you come back :meowblush:"
                    }
                ]
            },
            {
                "conversation_id": "151",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-06T21:45:28.761000",
                        "user": "Britten",
                        "text": "Doing some scribble and package stuff today. I think one of the problems I have with the package system is how I just end up cribbing parts of `info.rkt` files from other packages on github."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-06T22:51:14.004000",
                        "user": "Kiam",
                        "text": "IMO `#lang info` would benefit more than any other `#lang` from a protocol for Racket languages to expose autoformatters and static analyzers to IDEs"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-06T22:57:15.472000",
                        "user": "Kiam",
                        "text": "anyway today I have a wish for a tool that would take a rebellion stream pipeline like this:```scheme(transduce (inrange 0 20) (filtering even?) (mapping ) (taking 5) #:into intolist)```...and generate an animated diagram showing the values moving through the pipeline and what order the state transitions happen in"
                    }
                ]
            },
            {
                "conversation_id": "152",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-07T07:33:44.680000",
                        "user": "Bexon",
                        "text": "None"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-07T07:34:01.435000",
                        "user": "Bexon",
                        "text": "> called hyphen>camelcase> performs hyphen>titlecase"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-07T07:34:18.575000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-07T07:48:46.138000",
                        "user": "Bexon",
                        "text": "yeah but why is the first letter uppercase :meow:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-07T07:49:02.996000",
                        "user": "Bexon",
                        "text": "I also have a weird error"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-07T07:49:19.368000",
                        "user": "Bexon",
                        "text": "it found zlib but not a definition that I'm fairly sure is in it?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-07T07:52:40.001000",
                        "user": "Bexon",
                        "text": "added a version same issue"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-07T07:57:22.863000",
                        "user": "Yaw",
                        "text": "so it doesn't end up being an actual symbol in the shared object"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-07T08:06:45.045000",
                        "user": "Bexon",
                        "text": "@Plane you're right!"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-07T08:06:47.121000",
                        "user": "Bexon",
                        "text": "https://refspecs.linuxbase.org/LSB_3.0.0/LSBCoregeneric/LSBCoregeneric/libz.html"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-07T08:07:02.211000",
                        "user": "Bexon",
                        "text": "chicken bindings just bind to `inflateInit` weird"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-07T10:05:32.281000",
                        "user": "Bexon",
                        "text": "describe doesn't work \ud83d\ude29"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-07T10:19:20.534000",
                        "user": "Bexon",
                        "text": "@Deleted User I'm progressing (very slowly) thanks for encouraging me to try again :meowblush:"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-07T11:51:58.643000",
                        "user": "Bexon",
                        "text": "yep"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-07T12:19:22.192000",
                        "user": "Bexon",
                        "text": "as for the next one  no idea"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-07T12:19:26.389000",
                        "user": "Bexon",
                        "text": "resources  https://nostarch.com/realmofracket.htm"
                    }
                ]
            },
            {
                "conversation_id": "153",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-07T07:46:04.961000",
                        "user": "Kiam",
                        "text": "missed opportunity to call it kebab case"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-07T07:56:30.900000",
                        "user": "Yaw",
                        "text": "i think `inflateInit` is a c macro which expands to a call to `inflateInit_`"
                    }
                ]
            },
            {
                "conversation_id": "154",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-07T11:42:15.945000",
                        "user": "Caycee",
                        "text": "What's gamejam?Is it an event where you develop games in a limited span of time?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-07T11:56:02.179000",
                        "user": "Caycee",
                        "text": "When's the next one?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-07T11:56:43.105000",
                        "user": "Caycee",
                        "text": "Also any resources on making a game I'd like to try making one"
                    }
                ]
            },
            {
                "conversation_id": "155",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-07T15:24:17.454000",
                        "user": "Olvin",
                        "text": "No but it will be scoped so it's only visible inside it not outside"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-07T15:24:58.016000",
                        "user": "Olvin",
                        "text": "My guess is the teacher is saying don't do it for now until they explain scope further then you can do it"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-07T15:26:04.293000",
                        "user": "Olvin",
                        "text": "If that's the case then you might have misheard or misunderstood? I'm confused about why v7.8 would be relevant?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-07T15:30:31.095000",
                        "user": "Olvin",
                        "text": "If he mentioned v7.8 specifically the teacher is probably referring to a different concept... idk if I can find it in the 7.8 release notes?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-07T15:36:43.405000",
                        "user": "Olvin",
                        "text": "It's also possible the teacher is talking about a slightly different language other than Racket. When I was first learning I was told something similar but about Beginning Student Language not Racket. Then eventually we as a class moved from Beginning Student Language up to Intermediate Student Language and suddenly we got scope and we could nest function definitions"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-07T15:37:43.514000",
                        "user": "Britten",
                        "text": "@sarna chicken can just use the name because they compile scheme to C so they can use all of the preprocessor stuff"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-07T15:38:09.807000",
                        "user": "Britten",
                        "text": "It's really annoying that you cannot make your own ffi naming conventions."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-07T15:46:38.091000",
                        "user": "Bexon",
                        "text": "@oaktownsam yeah :( I ended up using `#:cid`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-07T16:42:16.875000",
                        "user": "Britten",
                        "text": "I have finally published a Racket package. It only took me 12 years to get enough in order to do something.https://docs.racketlang.org/keyring/index.html"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-07T16:53:24.767000",
                        "user": "Daevion",
                        "text": "https://www.youtube.com/watch?v=QbF5NUgYL4"
                    }
                ]
            },
            {
                "conversation_id": "156",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-07T15:46:52.916000",
                        "user": "Bexon",
                        "text": "if you have some time please take a look at #help"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-07T15:47:01.119000",
                        "user": "Bexon",
                        "text": "I have no idea how to solve that"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-07T15:47:31.321000",
                        "user": "Britten",
                        "text": "@beru The LISP gamejam just completed https://itch.io/jam/autumnlispgamejam2020 . I can't remember when/if they do a Spring one. It probably won't be until March/April/May. We did a Racket one last November but I don't think there are plans for one this year (yet)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-07T20:54:32.241000",
                        "user": "Bexon",
                        "text": "\u201cracket\u201d is just syntax highlighting it\u2019s also kinda buggy IIRC"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-07T20:54:36.387000",
                        "user": "Bexon",
                        "text": "I used magic racket"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-07T20:54:54.704000",
                        "user": "Bexon",
                        "text": "it was.. okay but had like 10% of the features of dr racket"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-09T22:24:21.019000",
                        "user": "Chara",
                        "text": "Dav1ss  functions declared inside of other functions can't tested independently. I would agree that this makes it a bad idea for code written in a class. The only way I think it is ok is to capture arguments and then call the real function that you were able to test."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-13T20:36:01.623000",
                        "user": "Rynlee",
                        "text": "```scheme(define/contract (add x) (> natural? natural?) (+ x 1))```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-13T20:36:09.067000",
                        "user": "Rynlee",
                        "text": "Is it normal to write your functions with contracts?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-13T20:36:13.453000",
                        "user": "Rynlee",
                        "text": "Like just as a general rule?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-13T20:36:32.897000",
                        "user": "Rynlee",
                        "text": "I think I'm misunderstanding their use it looks like you can use them to check types"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-13T20:42:30.091000",
                        "user": "Olvin",
                        "text": "I think it's less encouraged to use `define/contract` and more encouraged to use `define` but export it with a contract with `provide`+`contractout` for example:```(provide (contractout [add (> natural? natural?)]))(define (add x) (+ x 1))```The difference is where the contract boundary goes: with `define/contract` the boundary is between the function and the rest of the module vs with `define`+`provide`+`contractout` the boundary is between the module and whoever uses it"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-13T21:25:45.833000",
                        "user": "Rynlee",
                        "text": "Thank you both for your answers"
                    }
                ]
            },
            {
                "conversation_id": "157",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-07T20:36:03.089000",
                        "user": "Daevion",
                        "text": "VSCode users what extensions do you use for Racket programming?https://marketplace.visualstudio.com/search?term=Racket&target=VSCode&category=Programming%20Languages&sortBy=RelevanceI\u2019m updating the wiki page https://github.com/racket/racket/wiki/IDE%27sandtexteditorsbut I\u2019m not a VSC user so I need your advice!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-09T15:24:22.454000",
                        "user": "Daevion",
                        "text": "sorry @Dav1s I'm deleting the video  please feel free to post in #offtopic"
                    }
                ]
            },
            {
                "conversation_id": "158",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-10T03:21:07.874000",
                        "user": "Brayan",
                        "text": "as in you want the return value of a function to be a function? if so you just return a function/lambda:```lisp#lang racket(define (makeadder x) (lambda (y) (+ x y)))> (define plus7 (makeadder 7))> (plus7 3)=> 10```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-10T03:24:36.932000",
                        "user": "Brayan",
                        "text": "or although there are some extra caveats to be aware of you could use `curry`:```lisp> (define plus7 (curry + 7))> (plus7 8)15```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-11T05:25:09.004000",
                        "user": "Brayan",
                        "text": "well Racket doesn't have return and not all languages have the same definition of return but that Racket code is functionally equivalent to this python code that returns a lambda (which is the sense of return to which I assume you're referring):```pythondef adder(x): return lambda y: x + y```"
                    }
                ]
            },
            {
                "conversation_id": "159",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-10T04:58:47.850000",
                        "user": "Olvin",
                        "text": "A curried function is a function that can be partially appliedor in other words it can take its arguments in multiple groups.This means when you apply it to the first group of arguments it produces a function that can then accept the second group of arguments.One class of these are functions with a first group of arguments as configuration options and a second group of arguments as user input. If you\\'re familiar with commandline stuff this might seem familiar as the commandline arguments and the stdin input stream\".For example: a searching function might take a first group of arguments as the needle to search for and the second group of arguments as the haystack to search through\"```(define ((search needle) haystack) ....)```If you\\'re searching for a needle in only one haystack you can call it like this```((search needle\") hayneedlestack\")```But the currying becomes more helpful when you might want to search for the same needle in multiple haystacks:```(define f (search needle\"))(f hayneedlestack\")(f hensneedleteeth\")(f phoneedlethimknow\")```By using the same first group partial function on many different second groups of inputs.Currying also helps when higherorder functions such as `map` take functions as input:```(map (search needle\") (list hayneedlestack hensneedleteeth phoneedlethimknow\"))```"
                    }
                ]
            },
            {
                "conversation_id": "160",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-13T20:53:34.763000",
                        "user": "Kiam",
                        "text": "If you're writing code in multiple files I recommend `contractout`. If you're writing all your code in a single file I recommend `define/contract`."
                    }
                ]
            },
            {
                "conversation_id": "161",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-14T04:06:48.029000",
                        "user": "Yaw",
                        "text": "those answers are helpful to me too it makes sense but i'd never really thought about it before"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-14T04:07:10.094000",
                        "user": "Yaw",
                        "text": "there are a lot of features in racket i don't have that much experience with but that seem pretty neat"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-14T06:01:02.479000",
                        "user": "Britten",
                        "text": "Also remember that contracts are not free and depending on the structure of your code can make things slow"
                    }
                ]
            },
            {
                "conversation_id": "162",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-14T06:13:41.892000",
                        "user": "Baleigh",
                        "text": "Adding to what @oaktownsam said: always use contract profiling if you use contracts and performance is important for your application."
                    }
                ]
            },
            {
                "conversation_id": "163",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-14T06:45:16.585000",
                        "user": "Bexon",
                        "text": "can I export a version of a function with and without a contract?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-14T06:45:22.854000",
                        "user": "Bexon",
                        "text": "foo and foo/unsafe let\u2019s say"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-14T08:31:16.997000",
                        "user": "Kiam",
                        "text": "yes `contractout` has a way to automatically do that"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-14T08:31:45.691000",
                        "user": "Kiam",
                        "text": "`#:unprotectedsubmodule`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-14T13:26:01.634000",
                        "user": "Bexon",
                        "text": "oh neat"
                    }
                ]
            },
            {
                "conversation_id": "164",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-15T10:38:42.601000",
                        "user": "Rynlee",
                        "text": "Hello everyone is R5RS chez scheme?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-15T10:38:47.098000",
                        "user": "Rynlee",
                        "text": "may be a silly question"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-15T10:40:14.592000",
                        "user": "Kiam",
                        "text": "Idle thought of the night: a much shorter notation for thunks would be nice so people stop feeling the need to create macros like this:```(definesimplemacro (withfoo foo body ...) (callwithfoo foo (lambda () body ...)))```I'd rather see a shorthand like `{body ...}` that gets turned into `(lambda () body ...)`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-15T10:41:23.110000",
                        "user": "Kiam",
                        "text": "@Markus R5RS is a specification. It's a document that describes a bunch of rules for how scheme code is supposed to work. Chez scheme is an implementation: it's an actual program that takes scheme code and runs it."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-15T10:42:27.500000",
                        "user": "Rynlee",
                        "text": "Thank you"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-15T10:42:38.441000",
                        "user": "Kiam",
                        "text": "chez scheme does not follow the rules of the R5RS specification. It does however follow the rules of the R6RS spec."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-15T10:42:41.282000",
                        "user": "Rynlee",
                        "text": "Is there a module for it for Dr Racket? I know Racket is being built on top of it"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-15T10:43:22.512000",
                        "user": "Kiam",
                        "text": "like something you can import in your code with `(require chezscheme)` and use somehow?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-15T10:44:07.063000",
                        "user": "Rynlee",
                        "text": "or like #lang chez"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-15T10:44:09.094000",
                        "user": "Rynlee",
                        "text": "yeah"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-15T10:44:51.126000",
                        "user": "Kiam",
                        "text": "Not really. Chez is being used to _implement_ racket so you don't write chez code  the Racket implementation turns your racket code into chez scheme code and then hands it off to chez scheme to compile and run."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-15T10:45:39.971000",
                        "user": "Kiam",
                        "text": "There is a `#lang r5rs` (and I think `#lang r6rs` too) though. That lets you write R5RS scheme code and it will run as that spec says it should."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-15T10:45:54.314000",
                        "user": "Rynlee",
                        "text": "okay thank you"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-15T11:07:50.104000",
                        "user": "Cortlin",
                        "text": "I usually try to write code that runs on Racket Chez and Guile with minimal changes."
                    }
                ]
            },
            {
                "conversation_id": "165",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-15T11:12:13.074000",
                        "user": "Yaw",
                        "text": "```scheme#lang racket/base(require (forsyntax racket/base) (renamein fancyapp [#%app fancyapp]) racket/stxparam syntax/parse/define)(provide (renameout [myapp #%app]))(definesyntaxrule (thunkapp expr ...) (\u03bb () expr ...))(definesyntax (myapp stx) (define appstx (case (syntaxproperty stx parenshape) [(#\\\\{) #'thunkapp] [(#f #\\\\( #\\\\[) #'fancyapp])) (syntaxparse stx [(_ v ...) #`(#,appstx v ...)]))```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-15T11:12:36.627000",
                        "user": "Yaw",
                        "text": "@notjack i tried to make a little thing to make `{}` make thunks and otherwise use fancyapp (:"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-15T11:14:56.238000",
                        "user": "Yaw",
                        "text": "i stole bits from your `delimitapp`!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-15T11:15:21.611000",
                        "user": "Kiam",
                        "text": "ooooo nice :3"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-15T15:30:33.573000",
                        "user": "Alyiah",
                        "text": "But overall Rackrt is a much nicer language"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-15T15:31:54.996000",
                        "user": "Bexon",
                        "text": "@RaycatWhoDat yep. CL is just old in a bad way"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-15T15:32:08.721000",
                        "user": "Bexon",
                        "text": "of course it\u2019s subjective but you asked for opinions :meow:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-15T15:32:32.298000",
                        "user": "Daevion",
                        "text": "Racket does have a \u2018defmacro\u2019 form that is like lisp macros but the core developers recommend the scheme style hygienic macros"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-15T15:33:58.759000",
                        "user": "Alyiah",
                        "text": "Like a `defmacro` that's not in the compatibility library?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-15T15:35:13.645000",
                        "user": "Daevion",
                        "text": "That\u2019s the one"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-15T15:38:57.251000",
                        "user": "Cortlin",
                        "text": "It's in the compatibility library."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-15T15:40:07.500000",
                        "user": "Daevion",
                        "text": "I did have a go at Common Lisp  read On Lisp and did the ELMART online lisp tutor but Racket was more attractive. (A long time ago)"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-15T15:40:27.062000",
                        "user": "Slavcho",
                        "text": "Well maybe for a bit of specificity..."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-15T15:40:52.012000",
                        "user": "Slavcho",
                        "text": "Could y'all chime in on the accuracy of this or if there are equivalents?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-15T15:41:01.798000",
                        "user": "Daevion",
                        "text": "You probably need to ask on the lisp discord for balance"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-15T15:41:14.496000",
                        "user": "Slavcho",
                        "text": "I'll level with you"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-15T15:41:21.637000",
                        "user": "Slavcho",
                        "text": "I hate the Lisp discord"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-15T15:41:30.499000",
                        "user": "Cortlin",
                        "text": "Same"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-15T15:41:44.278000",
                        "user": "Cortlin",
                        "text": "It's not exactly a friendly place."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-15T15:41:44.289000",
                        "user": "Slavcho",
                        "text": "Too :teenACTUALLY: and lol javascript bad for me"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-10-15T15:44:21.820000",
                        "user": "Daevion",
                        "text": "I see you have already checked the reddit"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-10-15T15:46:01.924000",
                        "user": "Bexon",
                        "text": "lisp discord >>>> lisp irc"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-10-15T15:46:24.207000",
                        "user": "Slavcho",
                        "text": "That's not exactly high regard lol."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-10-15T15:46:47.065000",
                        "user": "Slavcho",
                        "text": "If I'm mildly miffed at the Lisp Discord the IRC won't even acknowledge my existence"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-10-15T15:47:01.351000",
                        "user": "Bexon",
                        "text": "this gist seems to be written by a hardcore CLer it\u2019s exaggerating CL\u2019s pros downplaying its cons and posing design decisions made by Racket designers as flaws :meow:"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-10-15T15:47:01.565000",
                        "user": "Slavcho",
                        "text": "Because javascript dev"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-10-15T15:47:07.691000",
                        "user": "Daevion",
                        "text": "I\u2019m sure there are other communities for Common Lisp"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-10-15T15:47:21.838000",
                        "user": "Slavcho",
                        "text": "@sarna Oh?"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-10-15T15:47:36.653000",
                        "user": "Bexon",
                        "text": "yeah like \u201cracket bad no introspection\u201d"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-10-15T15:47:45.745000",
                        "user": "Slavcho",
                        "text": "@StephenD I have to take a look."
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-10-15T15:47:53.842000",
                        "user": "Bexon",
                        "text": "\u201cCL good because CL\u201d"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-10-15T15:50:53.120000",
                        "user": "Bexon",
                        "text": "@RaycatWhoDat I think fare\u2019s post was better here https://fare.livejournal.com/188429.html"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-10-15T15:51:07.466000",
                        "user": "Slavcho",
                        "text": "Didn't Fare go to Gerbil Scheme? EDIT: Yes they did."
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-10-15T15:52:31.356000",
                        "user": "Bexon",
                        "text": "yep"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-10-15T15:52:45.466000",
                        "user": "Bexon",
                        "text": "but this post compares racket with CL"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-10-15T15:52:53.340000",
                        "user": "Slavcho",
                        "text": "ye"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-10-15T15:52:56.340000",
                        "user": "Bexon",
                        "text": "and it\u2019s more honest I feel"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-10-15T15:54:02.511000",
                        "user": "Olvin",
                        "text": "One reason I prefer Racket over Common Lisp is that Racket makes it easier for me to think about types properly. Types like booleans symbols and lists are all disjoint in Racket where they intersect in Common Lisp with things like `t` and `nil` being both or all three. Lists being immutabe and structs being their own distinct things giving more control over mutability as well as encapsulation helps a lot as well. These things just make it easier for me reason about a program when I can't hold the whole thing in mind at once"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-10-15T15:58:44.290000",
                        "user": "Daevion",
                        "text": "For me it is DrRacket and the friendly community."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-10-15T16:00:12.671000",
                        "user": "Daevion",
                        "text": "And the gui toolkit"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-10-15T16:05:19.384000",
                        "user": "Slavcho",
                        "text": "I do enjoy that GUI toolkit"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-10-15T16:05:52.944000",
                        "user": "Slavcho",
                        "text": "If only Raku had all of those :lytCRYA:"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-10-15T16:06:04.216000",
                        "user": "Slavcho",
                        "text": "I do adore that language"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-10-15T16:09:48.018000",
                        "user": "Slavcho",
                        "text": "But back on topic: let's say you're doing things and evaluating stuff in the REPL"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-10-15T16:10:36.517000",
                        "user": "Slavcho",
                        "text": "How do you get those changes back into the source? Or are you only modifying things in the source and sending the form to the REPL to evaluate?"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-10-15T16:12:13.986000",
                        "user": "Bexon",
                        "text": "in CL? you write in the source file and send stuff to the REPL"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-10-15T16:12:26.484000",
                        "user": "Bexon",
                        "text": "you can also write in the REPL of course"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-10-15T16:12:30.937000",
                        "user": "Bexon",
                        "text": "for experimentation n stuff"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-10-15T16:12:49.599000",
                        "user": "Bexon",
                        "text": "but mainly you send things to the REPL test them there repeat"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-10-15T16:13:14.512000",
                        "user": "Bexon",
                        "text": "when you recompile something in CL all that state accumulated in the REPL is preserved"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-10-15T16:13:57.739000",
                        "user": "Bexon",
                        "text": "which is both good (you don\u2019t have to retype everything) and bad (you can have really weird bugs because of lots of accumulated state)"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-10-15T16:14:31.887000",
                        "user": "Bexon",
                        "text": "you can just restart your REPL therebut then we\u2019re back to racket\u2019s approach :)"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-10-15T16:17:15.266000",
                        "user": "Daevion",
                        "text": "https://blog.racketlang.org/2009/03/thedrschemereplisnttheoneinemacs.html"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-10-15T16:17:36.014000",
                        "user": "Daevion",
                        "text": "https://docs.racketlang.org/drracket/Keyboard_Shortcuts.html?q=keybinding#%28part._.Sending_.Program_.Fragments_to_the_.R.E.P.L%29"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-10-15T16:19:08.266000",
                        "user": "Slavcho",
                        "text": "Yeah I meant in Racket"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-10-15T16:22:48.496000",
                        "user": "Cortlin",
                        "text": "`##lisp` > `#lisp`"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-10-15T16:22:59.975000",
                        "user": "Cortlin",
                        "text": "@sarna"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-10-15T16:23:07.028000",
                        "user": "Cortlin",
                        "text": "The former is for all Lisps."
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-10-15T16:23:47.761000",
                        "user": "Bexon",
                        "text": "my lisp > your lisp"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-10-15T16:23:52.794000",
                        "user": "Bexon",
                        "text": "(I didn\u2019t get the joke sorry)"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-10-15T16:28:17.583000",
                        "user": "Alyiah",
                        "text": "While working in the REPL in CL is great and super fun a very tight feedback loop and an experience I wish more languages had I believe it would be way nicer to work like that in Clojure rather than CL due to the approach that things should be stateless and functional. Restarting the REPL constantly in CL defeats the purpose imo so I think Clojure would probably be better"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-10-15T16:31:35.869000",
                        "user": "Alyiah",
                        "text": "The other problem with the REPL is that because of unexpected side effects all over the place you might think something is working but then you restart and realize the only reason it worked was because of some buildup of state that now you've gotten rid of by restarting you REPL and then you're figuring out how to fix another unrelated problem"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-10-15T16:35:21.475000",
                        "user": "Bexon",
                        "text": "@Deleted User oh. told you I didn\u2019t get it!is there another lisp channel? I was only on #lisp"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-10-15T16:35:31.775000",
                        "user": "Bexon",
                        "text": "and #lispbeginners or something like that"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-10-15T16:36:49.296000",
                        "user": "Bexon",
                        "text": "@nixin72 yep I got into this even with small programs. I was a CL beginner but I don\u2019t think it\u2019d improve with time :/"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-10-15T16:37:47.155000",
                        "user": "Cortlin",
                        "text": "`##lisp` is for all Lisps not just CL."
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-10-15T16:37:54.065000",
                        "user": "Bexon",
                        "text": "oh!"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-10-15T16:38:05.971000",
                        "user": "Bexon",
                        "text": "now I got it"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-10-15T16:38:51.747000",
                        "user": "Alyiah",
                        "text": "Yea I was beginner when it happened too but I feel like it's more a fundamental problem in the design of CL than something that would be fixed by experience"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-10-15T16:40:09.287000",
                        "user": "Alyiah",
                        "text": "But it\\'s the same problem as I have all the time in Emacs. I make some changes to my config evaluate some buffers next time I open Emacs I\\'ve got errors in my config and I\\'m like it worked fine 5 minutes ago"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-10-15T16:40:27.300000",
                        "user": "Alyiah",
                        "text": "But I forgive Emacs for that because I love Emacs"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-10-15T16:44:54.344000",
                        "user": "Zayne",
                        "text": "I wonder if people experience(d) that a lot in Smalltalk as well"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-10-15T16:51:52.813000",
                        "user": "Bexon",
                        "text": "well in Smalltalk all you have is the REPL"
                    }
                ]
            },
            {
                "conversation_id": "166",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-15T14:37:31.722000",
                        "user": "Slavcho",
                        "text": "Has anyone here had to decide between Common Lisp and Racket? What made you choose Racket?"
                    }
                ]
            },
            {
                "conversation_id": "167",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-15T15:25:15.808000",
                        "user": "Alyiah",
                        "text": "@RaycatWhoDat I started learning Lisp with CL and much prefer Racket. It's much cleaner I prefer the lisp1 direction it's got a huge standard library whereas CLs is lacking in terms of modern languages it's got a standard package management tool that ship with the language and I overall just find it easier to work with. Only thing I find easier in CL is macros"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-15T15:28:21.870000",
                        "user": "Alyiah",
                        "text": "Oh I also think CL macros are easier to debug personally"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-15T15:40:04.536000",
                        "user": "Slavcho",
                        "text": "Thanks for the perspectives. I appreciate it."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-15T15:40:40.370000",
                        "user": "Slavcho",
                        "text": "<https://gist.github.com/vindarel/c1ef5e043773921e3b11d8f4fe1ca7ac>"
                    }
                ]
            },
            {
                "conversation_id": "168",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-15T16:30:31.180000",
                        "user": "Cortlin",
                        "text": "what joke"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-15T16:30:46.130000",
                        "user": "Cortlin",
                        "text": "@sarna Weren't you talking about the IRC channel?"
                    }
                ]
            },
            {
                "conversation_id": "169",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-15T20:40:11.459000",
                        "user": "Daevion",
                        "text": "On Thu 15 Oct 2020 at 20:56 Asumu Takikawa wrote:On 20200803 09:35:16 0400 John Clements via Racket Users wrote:> Racket version 7.8 is now available from> > https://racketlang.org/This is quite delayed but the Ubuntu PPA has been updated to 7.8 aswell. Ubuntu version 20.10 (Groovy) is newly supported while 19.10(Eoan) is phased out (will remain on Racket 7.7).Sorry for the delay this time. As usual please report any issues ongithub: https://github.com/takikawa/racketppaCheers,Asumu"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-17T14:10:17.822000",
                        "user": "Daevion",
                        "text": "RacketCon livestream!"
                    }
                ]
            },
            {
                "conversation_id": "170",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-17T18:59:50.966000",
                        "user": "Slavcho",
                        "text": "Does anyone reach for a different language for speeding things up\"?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-17T19:00:19.374000",
                        "user": "Slavcho",
                        "text": "That is to say what language do y'all normally reach for the FFI for?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-17T19:01:48.533000",
                        "user": "Daevion",
                        "text": "I don\u2019t but I\u2019m pretty sure it\u2019s c/c++"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-17T19:01:51.806000",
                        "user": "Alyiah",
                        "text": "Can you use Rust with Racket FFI?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-17T19:02:17.631000",
                        "user": "Alyiah",
                        "text": "Cause if you can I would reach for Rust. But I've never used FFI lol"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-17T19:05:40.202000",
                        "user": "Daevion",
                        "text": "Just asked on slack"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-17T19:05:51.137000",
                        "user": "Daevion",
                        "text": "> Rust exposes Clike ABI bindings iirc"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-17T19:30:54.015000",
                        "user": "Bexon",
                        "text": "yeah"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-17T19:32:24.626000",
                        "user": "Bexon",
                        "text": "or wait is one of them for calling C code \ud83e\udd14 I don\u2019t remember"
                    }
                ]
            },
            {
                "conversation_id": "171",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-17T19:31:28.788000",
                        "user": "Bexon",
                        "text": "you just use `extern C` and `no_mangle`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-17T19:33:31.775000",
                        "user": "Bexon",
                        "text": "https://doc.rustlang.org/book/ch1901unsaferust.html#callingrustfunctionsfromotherlanguages"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-17T19:33:38.188000",
                        "user": "Bexon",
                        "text": ":meow:"
                    }
                ]
            },
            {
                "conversation_id": "172",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-17T20:02:02.463000",
                        "user": "Slavcho",
                        "text": "I hate that I have to learn Rust"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-17T20:02:47.305000",
                        "user": "Slavcho",
                        "text": "I want one of the other languages (Nim D Crystal) to win the race but I don't think it's gonna happen"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-17T20:07:23.817000",
                        "user": "Alyiah",
                        "text": "What do you dislike about Rust?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-17T20:08:28.600000",
                        "user": "Bexon",
                        "text": "C already won the race I think you can stop worrying :meow:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-17T20:08:55.008000",
                        "user": "Alyiah",
                        "text": "Yea but I'd rather write code in just about anything else"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-17T20:31:34.450000",
                        "user": "Bexon",
                        "text": "I think in the no GC category you only have.. Rust C[++] D and Zig?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-17T20:32:24.265000",
                        "user": "Bexon",
                        "text": "but if you want to just use something faster.. if it\u2019s parsing JSON use Python :meow:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-17T20:34:53.711000",
                        "user": "Bexon",
                        "text": "oh or maybe inline Chez? Chez is pretty fast for some tasks as fast as SBCL/Java IIRC"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-17T20:35:48.089000",
                        "user": "Bexon",
                        "text": "https://discord.com/channels/571040468092321801/618895179343986688/699699251726385283"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-17T20:35:52.559000",
                        "user": "Bexon",
                        "text": ":meowloween:"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-17T20:38:11.933000",
                        "user": "Bexon",
                        "text": "it\u2019s even documented now! https://docs.racketlang.org/foreign/vm.html#%28def._%28%28lib._ffi%2Funsafe%2Fvm..rkt%29._vmeval%29%29"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-17T20:39:06.694000",
                        "user": "Bexon",
                        "text": "https://ecraven.github.io/r7rsbenchmarks/chez is the fastest scheme almost :meow:"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-17T20:55:33.920000",
                        "user": "Zayne",
                        "text": "another interesting language with manual memory management is ATS"
                    }
                ]
            },
            {
                "conversation_id": "173",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-17T20:30:42.872000",
                        "user": "Bexon",
                        "text": "lol"
                    }
                ]
            },
            {
                "conversation_id": "174",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-17T23:14:24.250000",
                        "user": "Slavcho",
                        "text": "> What do you dislike about Rust?@nixin72 The syntax and the feel of it."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-17T23:14:38.909000",
                        "user": "Slavcho",
                        "text": "I don't feel productive in it at all"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-17T23:15:25.841000",
                        "user": "Slavcho",
                        "text": "D gave me the choice which was cool."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-19T20:08:38.152000",
                        "user": "Britten",
                        "text": "Missed seeing some discord racketeers at racketcon last weekend. \ud83d\ude26"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-19T21:56:28.199000",
                        "user": "Britten",
                        "text": "Aw Stephen and I were there we're very kind \ud83d\ude42"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-19T21:57:52.380000",
                        "user": "Daevion",
                        "text": "it was great  got to listen in on some cool conversations \ud83d\ude42"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-19T21:58:10.030000",
                        "user": "Britten",
                        "text": "gather actually worked out pretty well I thought."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-19T21:58:34.673000",
                        "user": "Daevion",
                        "text": "someone suggested doing the racket users meetup on gather?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-19T21:59:04.644000",
                        "user": "Daevion",
                        "text": "(I believe it is free for <20 users)"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-19T21:59:11.760000",
                        "user": "Britten",
                        "text": "I was thinking something like that would be interesting people could gravitate to what they are interested in."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-19T22:00:34.507000",
                        "user": "Britten",
                        "text": "Having everything from rcon up on youtube nearly immediately is good too. Except they could have trimmed some of the waiting to start bits \ud83d\ude42"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-19T22:01:39.864000",
                        "user": "Britten",
                        "text": "bbiam work stuff ..."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-19T22:01:48.513000",
                        "user": "Daevion",
                        "text": "doing one person doing live video is crazy hard imho."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-19T22:02:57.462000",
                        "user": "Daevion",
                        "text": "its normally at least a twoperson job"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-19T22:08:22.429000",
                        "user": "Daevion",
                        "text": "https://gather.town/app/wH1EDG3McffLjrs0/racketusers"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-19T22:08:50.946000",
                        "user": "Daevion",
                        "text": "only chrome"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-19T22:20:00.862000",
                        "user": "Britten",
                        "text": "I love in gather there is furniture you can walk through and some you cannot."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-19T22:30:53.956000",
                        "user": "Daevion",
                        "text": "yeah"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-19T22:31:13.089000",
                        "user": "Daevion",
                        "text": "I don't quite understand the private area"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-19T22:31:46.116000",
                        "user": "Daevion",
                        "text": "are there rules or does gather behaviour change in private area"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-10-19T22:38:48.864000",
                        "user": "Britten",
                        "text": "Yeah I don\\'t quite get what it means private area"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-10-20T08:16:24.629000",
                        "user": "Daevion",
                        "text": "> :meow:@sarna yeah the chrome thing is annoying  I wonder if it excludes some people"
                    }
                ]
            },
            {
                "conversation_id": "175",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-18T09:22:26.751000",
                        "user": "Daevion",
                        "text": "Hi Racketeers,Hope you are having a great RacketCon weekend.Typed Racket was designed by a few people to serve a broad community \u2014you included.Today we are looking for feedback to guide the design going forward.Please share your thoughts and experiences (if any) regarding TypedRacket. Even if you've never used  or even heard about  TypedRacket we want to hear from you!https://tinyurl.com/typedracketsurveyFeel free to email Ben if you have more feedback or questions.The survey will remain open for 1 week. After it's closed we willshare the (anonymized) results.Thank you,Ben Greenman & Shriram Krishnamurthi"
                    }
                ]
            },
            {
                "conversation_id": "176",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-19T20:16:31.495000",
                        "user": "Kiam",
                        "text": "how was it otherwise? I wasn't able to make it"
                    }
                ]
            },
            {
                "conversation_id": "177",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-19T20:59:40.107000",
                        "user": "Zayne",
                        "text": "I was able to watch the YouTube stream for several talks and I tried out Gather once but was too shy"
                    }
                ]
            },
            {
                "conversation_id": "178",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-19T21:57:45.781000",
                        "user": "Britten",
                        "text": "I didn't get to everything but it was convenient to attend with my kids running around in the background"
                    }
                ]
            },
            {
                "conversation_id": "179",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-20T05:24:33.863000",
                        "user": "Bexon",
                        "text": "> only chrome:meow:"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-20T05:25:02.092000",
                        "user": "Bexon",
                        "text": "I only peeked twice :meowblush:"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-20T08:16:51.412000",
                        "user": "Bexon",
                        "text": "me I exclusively use firefox"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-20T08:17:38.355000",
                        "user": "Bexon",
                        "text": "say no to browser monopoly :meow:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-20T08:18:07.223000",
                        "user": "Daevion",
                        "text": "And I have a really old Mac with not much drive space so I\u2019m not keen on the filling it up with chrome"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-20T08:18:15.949000",
                        "user": "Bexon",
                        "text": "haha"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-20T08:18:37.993000",
                        "user": "Daevion",
                        "text": "It is huge"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-20T08:18:50.225000",
                        "user": "Bexon",
                        "text": "yeah browsers are OSs now"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-20T08:21:12.983000",
                        "user": "Daevion",
                        "text": "And chrome is the new IE46"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-20T08:21:26.487000",
                        "user": "Bexon",
                        "text": "just more privacyinvasive"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-20T08:22:03.155000",
                        "user": "Daevion",
                        "text": "What about Jitsi meet?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-20T08:22:14.591000",
                        "user": "Daevion",
                        "text": "Have you tried that?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-20T08:22:29.249000",
                        "user": "Bexon",
                        "text": "never used it"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-20T08:22:55.699000",
                        "user": "Daevion",
                        "text": "Open source version of zoom"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-20T08:23:44.606000",
                        "user": "Bexon",
                        "text": "oh by the way  if you\u2019re planning to switch a platform because of me don\u2019t do that  I don\u2019t have that much free time :meow: I do 99% of programming stuff at work"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-20T08:23:57.496000",
                        "user": "Bexon",
                        "text": "even now I\u2019m at work :meow:"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-20T08:24:16.583000",
                        "user": "Bexon",
                        "text": "45minute long daily meetings though y\u2019know"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-20T08:24:28.098000",
                        "user": "Daevion",
                        "text": "So am I"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-20T08:26:35.514000",
                        "user": "Daevion",
                        "text": "The feedback about gather is good thoughif it Means you are less likely to participate it will also affect others. I also worry that the 8 bit map interface doesn\u2019t help people with low vision either"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-20T08:32:20.000000",
                        "user": "Daevion",
                        "text": "Racket Users virtual meetup 28 NovemberPlatform to be decided; zoom / jitsi / ?  suggestions please 30 Minutes1pm Pacific Time9pm UK time(contact me so we can work out when this is in your time zone) If this is problematic let me know  this is intended to become a regular thing  maybe every 612 weeksKind regardsStephen & Sam Phillips"
                    }
                ]
            },
            {
                "conversation_id": "180",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-20T19:46:56.718000",
                        "user": "Miquel",
                        "text": "Do any of you use Magic Racket I don\\'t understand what it is but its supposed to be better than the regular DrRacket and should make coding easier?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-20T19:57:44.705000",
                        "user": "Cortlin",
                        "text": "Magic Racket is just the Racket plugin for VS Code loosely analogous to `racketmode` of Emacs."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-20T19:57:56.945000",
                        "user": "Cortlin",
                        "text": "VS Code Emacs and DrRacket are all different text editors and IDEs."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-20T20:06:22.196000",
                        "user": "Bexon",
                        "text": ":plusone: and which one\u2019s \u201cbetter\u201d is a matter of preference"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-20T20:09:33.328000",
                        "user": "Miquel",
                        "text": "Okay so I basically downloaded visual studios"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-20T20:09:42.270000",
                        "user": "Miquel",
                        "text": "and I'm completely lost with the amount of stuff on there"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-20T20:09:54.692000",
                        "user": "Miquel",
                        "text": "Have any of you downloaded magic racket before?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-20T20:14:28.488000",
                        "user": "Miquel",
                        "text": "I'm looking for an IDE for racket that will basically help fill in brackets auto format previously defined constants. Similar to REPL.it for python or what not. Is this even possible?"
                    }
                ]
            },
            {
                "conversation_id": "181",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-20T20:35:19.053000",
                        "user": "Kiam",
                        "text": "I don't think anything fits those exact features but some stuff gets pretty close"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-20T20:36:29.726000",
                        "user": "Kiam",
                        "text": "drracket has an autoindenter and (kind of lousy) autocompletion and it has a little graphical thing that highlights the code enclosed by a closing bracket so it's much easier to balance parens"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-20T20:46:54.064000",
                        "user": "Kiam",
                        "text": "eh not much point building up expertise in something if you just throw it away every six months when a new thing comes along"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-20T20:51:48.252000",
                        "user": "Miquel",
                        "text": "> drracket has an autoindenter and (kind of lousy) autocompletion and it has a little graphical thing that highlights the code enclosed by a closing bracket so it's much easier to balance parens@notjack Ah yes I use autoindenter and the graphical thing for brackets. But for autocompletion? I've never heard of this. Does it like fill in names of parameters already defined or..."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-20T20:52:24.444000",
                        "user": "Kiam",
                        "text": "there's a shortcut to turn it on on my mac I think it's cmd+/"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-20T20:52:36.242000",
                        "user": "Kiam",
                        "text": "so on windows it's probably ctrl+/"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-20T20:52:47.124000",
                        "user": "Miquel",
                        "text": "alright let met try"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-20T20:52:51.154000",
                        "user": "Miquel",
                        "text": "what does it do exactly?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-20T20:53:45.696000",
                        "user": "Kiam",
                        "text": "you know the background macro expansion that happens? assuming that succeeds the autocompletion thing gives you a little popup when you're typing identifiers and the popup lists every identifier in scope (narrowed down by what you've already typed I think)"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-20T20:54:23.932000",
                        "user": "Kiam",
                        "text": "it's not exactly snappy since it depends on macro expansion and it's annoying that it's not on by default so you have to know the magic shortcut to use it but it does work"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-20T20:54:43.460000",
                        "user": "Miquel",
                        "text": "what is the macro expansion?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-20T20:55:50.149000",
                        "user": "Daevion",
                        "text": "> There are several completion framework for Racket.> > Quickscript Extra's dynamic completion (dynamicabbrev) autocompletes words using existing words in the current file. Using it to autocomplete an identifier however means that it will suggest invalid identifiers taken from string literals.> > DrRacket itself has the completion functionality via ctrl .. It does not autocomplete identifiers defined within a module.> > Racket Mode has its own completion functionality. In addition to supporting identifiers required from other modules it supports identifiers within a module via Check Syntax (and also other things like autocompleting require). However it only considers identifiers that appear textually in the code so identifiers generated programmatically (e.g. from the struct form) are not considered. It does not autocomplete only identifiers that would be in scope.> > DrComplete enhances the completion functionality in DrRacket significantly. Similar to Racket Mode it can autocomplete variety of things including identifiers defined in a module. Additionally it can discover identifiers generated programmatically. However similar to Racket Mode it does not autocomplete only identifiers that would be in scope. https://github.com/sorawee/fishycompletion"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-20T20:56:40.503000",
                        "user": "Daevion",
                        "text": "(and there is fishycompletion where I got the above text from the related work section of the readme)"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-20T20:57:54.724000",
                        "user": "Miquel",
                        "text": "Do you use this extension?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-20T20:59:27.916000",
                        "user": "Daevion",
                        "text": "> > it's annoying that it's not on by default > @notjack  I want to release an alternative build of DrRacket with sensible defaults"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-20T21:00:07.220000",
                        "user": "Daevion",
                        "text": "(Or what \\\\I think\\\\ are sensible defaults)"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-20T21:01:25.620000",
                        "user": "Daevion",
                        "text": "> Do you use this extension?@Tictac I will  to my shame I've not done any code since the quickscript competition."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-20T21:01:41.750000",
                        "user": "Miquel",
                        "text": "Quickscript right? not fishy completion"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-20T21:02:00.957000",
                        "user": "Daevion",
                        "text": "I use quickscript."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-20T21:02:31.254000",
                        "user": "Daevion",
                        "text": "But I will use fishy completion when I start coding again."
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-10-20T21:02:34.535000",
                        "user": "Miquel",
                        "text": "nvm thats not it"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-10-20T21:02:46.247000",
                        "user": "Miquel",
                        "text": "How do I install it?"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-10-20T21:02:55.199000",
                        "user": "Miquel",
                        "text": "I want it \ud83d\ude4f"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-10-20T21:03:02.112000",
                        "user": "Daevion",
                        "text": "comes with DrRacket by default"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-10-20T21:03:07.700000",
                        "user": "Miquel",
                        "text": "oh"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-10-20T21:03:12.501000",
                        "user": "Miquel",
                        "text": "how come I've never used it"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-10-20T21:03:23.157000",
                        "user": "Daevion",
                        "text": "but doesnt include any scripts"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-10-20T21:03:33.692000",
                        "user": "Miquel",
                        "text": "what does that mean"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-10-20T21:03:59.275000",
                        "user": "Daevion",
                        "text": "you can get a starter set with `raco pkg install quickscriptextra`"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-10-20T21:04:14.824000",
                        "user": "Miquel",
                        "text": "Where do I type this?"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-10-20T21:04:37.891000",
                        "user": "Daevion",
                        "text": "None"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-10-20T21:04:49.023000",
                        "user": "Daevion",
                        "text": "at the command prompt"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-10-20T21:04:58.875000",
                        "user": "Miquel",
                        "text": "yes"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-10-20T21:05:08.685000",
                        "user": "Daevion",
                        "text": "you need to set your $PATH to include racket/bin"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-10-20T21:05:35.408000",
                        "user": "Miquel",
                        "text": "How do I set my $PATH to include racket/bin"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-10-20T21:06:03.228000",
                        "user": "Daevion",
                        "text": "I'll get the link"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-10-20T21:06:05.904000",
                        "user": "Daevion",
                        "text": "give me a moment"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-10-20T21:06:09.908000",
                        "user": "Miquel",
                        "text": "okay thanks so much"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-10-20T21:06:46.930000",
                        "user": "Daevion",
                        "text": "https://github.com/racket/racket/wiki/SetyourPATHenvironmentvariable"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-10-20T21:08:18.495000",
                        "user": "Daevion",
                        "text": "https://docs.racketlang.org/quickscript/ Quickscript manual"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-10-20T21:09:18.099000",
                        "user": "Miquel",
                        "text": "hey so like I'm on this screen and I'm confused where to go"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-10-20T21:09:25.692000",
                        "user": "Daevion",
                        "text": "https://docs.racketlang.org/quickscriptextra/ Quickscriptextra collection of scripts"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-10-20T21:09:27.822000",
                        "user": "Miquel",
                        "text": "None"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-10-20T21:10:32.769000",
                        "user": "Daevion",
                        "text": "is racket in Path the system variables? I can't tell"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-10-20T21:10:37.474000",
                        "user": "Daevion",
                        "text": "click Path"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-10-20T21:10:41.655000",
                        "user": "Daevion",
                        "text": "then click edit"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-10-20T21:10:43.632000",
                        "user": "Miquel",
                        "text": "okay"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-10-20T21:10:54.286000",
                        "user": "Miquel",
                        "text": "None"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-10-20T21:10:56.481000",
                        "user": "Miquel",
                        "text": "It opens up this page"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-10-20T21:11:47.794000",
                        "user": "Daevion",
                        "text": "> On Windows 10:> > Add the location of the racket folder to your Path(%Path%) environment variable. The default location is C:\\\\Program Files\\\\Racket\\\\.> > The follow page does a great job of showing all the steps for editing environment variables under Windows including the Path: https://www.hows.tech/2019/03/howtosetenvironmentvariablesinwindows10.html."
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-10-20T21:12:03.872000",
                        "user": "Miquel",
                        "text": "I don't understand what thats supposed to mean lol..."
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-10-20T21:13:18.371000",
                        "user": "Miquel",
                        "text": "wait I think I might have got it"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-10-20T21:13:18.471000",
                        "user": "Daevion",
                        "text": "Sorry I should explain"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-10-20T21:13:33.532000",
                        "user": "Miquel",
                        "text": "yeah"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-10-20T21:13:36.120000",
                        "user": "Miquel",
                        "text": "idk"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-10-20T21:14:03.009000",
                        "user": "Daevion",
                        "text": "if you type `raco` in the command prompt it should show you a list of options"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-10-20T21:14:14.080000",
                        "user": "Miquel",
                        "text": "ohh comand prompt"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-10-20T21:14:16.936000",
                        "user": "Miquel",
                        "text": "like cmd"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-10-20T21:14:27.986000",
                        "user": "Miquel",
                        "text": "yes I see"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-10-20T21:14:38.285000",
                        "user": "Daevion",
                        "text": "None"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-10-20T21:14:42.233000",
                        "user": "Miquel",
                        "text": "I was typing that into the terminal"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-10-20T21:14:45.844000",
                        "user": "Miquel",
                        "text": "of drracket"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-10-20T21:14:47.233000",
                        "user": "Daevion",
                        "text": "yes cmd is correct"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-10-20T21:14:55.349000",
                        "user": "Miquel",
                        "text": "okay"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-10-20T21:15:01.244000",
                        "user": "Daevion",
                        "text": "sorry I should have been clear"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-10-20T21:15:14.193000",
                        "user": "Miquel",
                        "text": "thats okay I'm new to this stuff"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-10-20T21:15:37.185000",
                        "user": "Miquel",
                        "text": "So do I then type `raco pkg install quickscriptextra`"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-10-20T21:15:42.081000",
                        "user": "Miquel",
                        "text": "I didn't install anything yet"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-10-20T21:16:07.058000",
                        "user": "Daevion",
                        "text": "you can also use drracket package manager"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-10-20T21:17:01.728000",
                        "user": "Daevion",
                        "text": "> So do I then type `raco pkg install quickscriptextra`@Tictac a bunch of text should scroll by ? \ud83d\ude26"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-10-20T21:17:13.347000",
                        "user": "Daevion",
                        "text": "yes"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-10-20T21:17:22.215000",
                        "user": "Miquel",
                        "text": "oh yeah"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-10-20T21:17:26.439000",
                        "user": "Miquel",
                        "text": "its downloading something"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-10-20T21:17:47.449000",
                        "user": "Daevion",
                        "text": "\ud83d\ude01"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-10-20T21:17:53.547000",
                        "user": "Daevion",
                        "text": "takes a minute"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-10-20T21:17:58.909000",
                        "user": "Miquel",
                        "text": "its done"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-10-20T21:18:08.221000",
                        "user": "Miquel",
                        "text": "so now what XD"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-10-20T21:19:14.946000",
                        "user": "Daevion",
                        "text": "If DrRacket is already running click on `Scripts`|`Manage scripts`|`Compile scripts and reload` in the menu bar."
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-10-20T21:20:16.255000",
                        "user": "Miquel",
                        "text": "alright"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-10-20T21:20:40.100000",
                        "user": "Miquel",
                        "text": "I did that"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-10-20T21:20:51.366000",
                        "user": "Daevion",
                        "text": "do you see https://media.discordapp.net/attachments/618895179343986688/768218139267432468/unknown.png?width=559&height=505"
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-10-20T21:21:30.639000",
                        "user": "Miquel",
                        "text": "I see a bunch of stuff"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-10-20T21:21:39.168000",
                        "user": "Miquel",
                        "text": "None"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-10-20T21:22:38.360000",
                        "user": "Daevion",
                        "text": "these are documented at https://docs.racketlang.org/quickscriptextra/"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-10-20T21:22:54.408000",
                        "user": "Miquel",
                        "text": "oh interesting"
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-10-20T21:24:29.923000",
                        "user": "Miquel",
                        "text": "which one is to complete a constant name or something when I am writing constants?"
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-10-20T21:27:02.139000",
                        "user": "Daevion",
                        "text": "> > Quickscript Extra's dynamic completion (dynamicabbrev) autocompletes words using existing words in the current file. Using it to autocomplete an identifier however means that it will suggest invalid identifiers taken from string literals.>  https://github.com/sorawee/fishycompletion"
                    },
                    {
                        "message_number": "88",
                        "ts": "2020-10-20T21:27:50.759000",
                        "user": "Miquel",
                        "text": "I see"
                    },
                    {
                        "message_number": "89",
                        "ts": "2020-10-20T21:28:06.909000",
                        "user": "Daevion",
                        "text": "I think you might want `fishycomplete` to get that you need to install `raco pkg install quickscriptcompetition2020`"
                    },
                    {
                        "message_number": "90",
                        "ts": "2020-10-20T21:28:51.623000",
                        "user": "Miquel",
                        "text": "It says that its similar to dynamic autocomplete"
                    },
                    {
                        "message_number": "91",
                        "ts": "2020-10-20T21:29:52.407000",
                        "user": "Daevion",
                        "text": "the readme has details https://github.com/sorawee/fishycompletion/blob/master/README.md"
                    },
                    {
                        "message_number": "92",
                        "ts": "2020-10-20T21:31:17.411000",
                        "user": "Daevion",
                        "text": "Sorry I've got to go now. You might like DrComplete"
                    },
                    {
                        "message_number": "93",
                        "ts": "2020-10-20T21:31:18.648000",
                        "user": "Daevion",
                        "text": "https://github.com/yjqww6/drcomplete/blob/master/README.md"
                    },
                    {
                        "message_number": "94",
                        "ts": "2020-10-20T21:31:39.624000",
                        "user": "Daevion",
                        "text": "`raco pkg install drcomplete`"
                    },
                    {
                        "message_number": "95",
                        "ts": "2020-10-20T21:33:16.544000",
                        "user": "Daevion",
                        "text": "if you don't like it you can remove with"
                    },
                    {
                        "message_number": "96",
                        "ts": "2020-10-20T21:33:26.188000",
                        "user": "Daevion",
                        "text": "`raco pkg remove drcomplete`"
                    },
                    {
                        "message_number": "97",
                        "ts": "2020-10-20T21:33:33.536000",
                        "user": "Daevion",
                        "text": "and restart drracket"
                    },
                    {
                        "message_number": "98",
                        "ts": "2020-10-20T21:34:37.597000",
                        "user": "Miquel",
                        "text": "I reloaded DrRacket and my scripts from before aren't there anymore"
                    },
                    {
                        "message_number": "99",
                        "ts": "2020-10-20T21:34:54.865000",
                        "user": "Miquel",
                        "text": "does that mean I have to like redo the raco thing every single time?"
                    },
                    {
                        "message_number": "100",
                        "ts": "2020-10-20T21:35:04.316000",
                        "user": "Daevion",
                        "text": "no"
                    },
                    {
                        "message_number": "101",
                        "ts": "2020-10-20T21:35:22.571000",
                        "user": "Daevion",
                        "text": "If DrRacket is already running click on Scripts|Manage scripts|Compile scripts and reload in the menu bar."
                    },
                    {
                        "message_number": "102",
                        "ts": "2020-10-20T21:35:43.027000",
                        "user": "Miquel",
                        "text": "yeah I did that"
                    },
                    {
                        "message_number": "103",
                        "ts": "2020-10-20T21:35:47.281000",
                        "user": "Miquel",
                        "text": "but I have this"
                    },
                    {
                        "message_number": "104",
                        "ts": "2020-10-20T21:35:48.844000",
                        "user": "Miquel",
                        "text": "None"
                    },
                    {
                        "message_number": "105",
                        "ts": "2020-10-20T21:36:02.410000",
                        "user": "Daevion",
                        "text": "click library in that menu"
                    },
                    {
                        "message_number": "106",
                        "ts": "2020-10-20T21:36:20.668000",
                        "user": "Miquel",
                        "text": "None"
                    },
                    {
                        "message_number": "107",
                        "ts": "2020-10-20T21:36:59.217000",
                        "user": "Daevion",
                        "text": "thats odd It looks like the quickscriptextra package has been removed"
                    },
                    {
                        "message_number": "108",
                        "ts": "2020-10-20T21:37:05.068000",
                        "user": "Miquel",
                        "text": "yeah"
                    },
                    {
                        "message_number": "109",
                        "ts": "2020-10-20T21:37:10.490000",
                        "user": "Miquel",
                        "text": "I should redownload it right"
                    },
                    {
                        "message_number": "110",
                        "ts": "2020-10-20T21:37:25.224000",
                        "user": "Daevion",
                        "text": "go into the drracket package manager and see if it is still installed?"
                    },
                    {
                        "message_number": "111",
                        "ts": "2020-10-20T21:37:42.344000",
                        "user": "Miquel",
                        "text": "how do I access that?"
                    },
                    {
                        "message_number": "112",
                        "ts": "2020-10-20T21:37:42.622000",
                        "user": "Daevion",
                        "text": "(check first)"
                    },
                    {
                        "message_number": "113",
                        "ts": "2020-10-20T21:38:13.259000",
                        "user": "Miquel",
                        "text": "where can I check the drracket package manager?"
                    },
                    {
                        "message_number": "114",
                        "ts": "2020-10-20T21:38:18.193000",
                        "user": "Daevion",
                        "text": "in the file menu"
                    },
                    {
                        "message_number": "115",
                        "ts": "2020-10-20T21:38:24.363000",
                        "user": "Miquel",
                        "text": "alright thanks"
                    },
                    {
                        "message_number": "116",
                        "ts": "2020-10-20T21:38:56.573000",
                        "user": "Miquel",
                        "text": "I think it says its installed"
                    },
                    {
                        "message_number": "117",
                        "ts": "2020-10-20T21:38:59.540000",
                        "user": "Miquel",
                        "text": "None"
                    },
                    {
                        "message_number": "118",
                        "ts": "2020-10-20T21:40:31.176000",
                        "user": "Daevion",
                        "text": "sorry close that"
                    },
                    {
                        "message_number": "119",
                        "ts": "2020-10-20T21:40:50.572000",
                        "user": "Daevion",
                        "text": "in the interactions do ` (require quickscriptextra/register)`"
                    },
                    {
                        "message_number": "120",
                        "ts": "2020-10-20T21:40:59.066000",
                        "user": "Miquel",
                        "text": "alright"
                    },
                    {
                        "message_number": "121",
                        "ts": "2020-10-20T21:41:10.840000",
                        "user": "Daevion",
                        "text": "Then click on Scripts|Manage scripts|Compile scripts and reload. (There is no need to restart DrRacket.)"
                    },
                    {
                        "message_number": "122",
                        "ts": "2020-10-20T21:41:14.485000",
                        "user": "Miquel",
                        "text": "okay"
                    },
                    {
                        "message_number": "123",
                        "ts": "2020-10-20T21:41:38.175000",
                        "user": "Miquel",
                        "text": "ye I got it now thanks!"
                    },
                    {
                        "message_number": "124",
                        "ts": "2020-10-20T21:41:43.189000",
                        "user": "Daevion",
                        "text": "it takes a moment or two to reload the menu but they should appear there"
                    },
                    {
                        "message_number": "125",
                        "ts": "2020-10-20T21:41:55.339000",
                        "user": "Miquel",
                        "text": "cool nice"
                    },
                    {
                        "message_number": "126",
                        "ts": "2020-10-20T21:42:36.167000",
                        "user": "Daevion",
                        "text": "instructions here: https://docs.racketlang.org/quickscript/index.html#%28part._.Quickscript_.Extra%29"
                    },
                    {
                        "message_number": "127",
                        "ts": "2020-10-20T21:42:54.192000",
                        "user": "Daevion",
                        "text": "sorry I have to go  I just got back from football and I need a shower."
                    },
                    {
                        "message_number": "128",
                        "ts": "2020-10-20T21:43:15.153000",
                        "user": "Miquel",
                        "text": "oh yeah thank you so muchhhhh"
                    },
                    {
                        "message_number": "129",
                        "ts": "2020-10-20T21:43:15.351000",
                        "user": "Daevion",
                        "text": "are you OK? I dont want to leave you in a state were you cant code"
                    },
                    {
                        "message_number": "130",
                        "ts": "2020-10-20T21:43:17.045000",
                        "user": "Daevion",
                        "text": "?"
                    },
                    {
                        "message_number": "131",
                        "ts": "2020-10-20T21:43:18.018000",
                        "user": "Miquel",
                        "text": "I'm good"
                    },
                    {
                        "message_number": "132",
                        "ts": "2020-10-20T21:43:19.615000",
                        "user": "Miquel",
                        "text": "I'm good"
                    },
                    {
                        "message_number": "133",
                        "ts": "2020-10-20T21:43:23.784000",
                        "user": "Miquel",
                        "text": "thanks!"
                    },
                    {
                        "message_number": "134",
                        "ts": "2020-10-20T21:43:27.189000",
                        "user": "Miquel",
                        "text": "you helped a lot"
                    },
                    {
                        "message_number": "135",
                        "ts": "2020-10-20T21:43:55.131000",
                        "user": "Daevion",
                        "text": "its good you set the %Path%"
                    },
                    {
                        "message_number": "136",
                        "ts": "2020-10-20T21:44:01.247000",
                        "user": "Miquel",
                        "text": "Thanks for all your help this was a very confusing process so I'm lucky you came to help"
                    },
                    {
                        "message_number": "137",
                        "ts": "2020-10-20T21:44:24.248000",
                        "user": "Daevion",
                        "text": "now you can use `raco exe` to compile your code for more speed!"
                    },
                    {
                        "message_number": "138",
                        "ts": "2020-10-20T21:45:01.539000",
                        "user": "Miquel",
                        "text": "Compile code with raco exe?"
                    },
                    {
                        "message_number": "139",
                        "ts": "2020-10-20T21:45:02.960000",
                        "user": "Daevion",
                        "text": "its good for me to find out what new users find confusing. It helps with documentation"
                    },
                    {
                        "message_number": "140",
                        "ts": "2020-10-20T21:45:16.262000",
                        "user": "Miquel",
                        "text": "oo"
                    },
                    {
                        "message_number": "141",
                        "ts": "2020-10-20T21:45:21.283000",
                        "user": "Miquel",
                        "text": "wait are you a developer?"
                    },
                    {
                        "message_number": "142",
                        "ts": "2020-10-20T21:45:25.169000",
                        "user": "Miquel",
                        "text": "for drracket?"
                    },
                    {
                        "message_number": "143",
                        "ts": "2020-10-20T21:46:27.149000",
                        "user": "Daevion",
                        "text": "not a core one but I make small contributions sometimes."
                    },
                    {
                        "message_number": "144",
                        "ts": "2020-10-20T21:46:30.014000",
                        "user": "Daevion",
                        "text": "https://github.com/rackettemplates/clicommand/blob/master/README.md"
                    },
                    {
                        "message_number": "145",
                        "ts": "2020-10-20T21:47:09.513000",
                        "user": "Daevion",
                        "text": "the readme and github repo has instructions to compile a small command line utility"
                    },
                    {
                        "message_number": "146",
                        "ts": "2020-10-20T21:47:55.340000",
                        "user": "Daevion",
                        "text": "try it out and let me know if you run into any problems  I can help tomorrow."
                    }
                ]
            },
            {
                "conversation_id": "182",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-20T20:44:12.307000",
                        "user": "Yaw",
                        "text": "i've been using vi for about 25 years vim for around 20ish of those i think. and my vim config hasn't changed in a long time. i feel like the way people use vim has changed and i'm a bit behind the times lol"
                    }
                ]
            },
            {
                "conversation_id": "183",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-20T21:34:27.068000",
                        "user": "Miquel",
                        "text": "okay"
                    }
                ]
            },
            {
                "conversation_id": "184",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-20T22:14:32.696000",
                        "user": "Miquel",
                        "text": "Alright cool I'll need to first try to get fishy completion to work"
                    }
                ]
            },
            {
                "conversation_id": "185",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-21T07:47:54.735000",
                        "user": "Bexon",
                        "text": "racketmode broke on me again :meow:"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-21T07:58:14.623000",
                        "user": "Bexon",
                        "text": "https://github.com/greghendershott/racketmode/issues/488"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-21T07:58:17.866000",
                        "user": "Bexon",
                        "text": "\u201cclosed\u201d"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-21T08:00:50.304000",
                        "user": "Daevion",
                        "text": "@sarna it was closed because they couldnt reproduce the issue. If you know how to reproduce add the details and reopen the issue \ud83d\ude42"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-21T08:01:50.632000",
                        "user": "Bexon",
                        "text": "@StephenD the worst thing is that it appears and disappears randomly"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-21T08:02:01.167000",
                        "user": "Bexon",
                        "text": "now it appeared two days after installing emacs"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-21T08:02:26.418000",
                        "user": "Bexon",
                        "text": "I nuked .emacs.d will see if it helps"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-21T08:02:34.637000",
                        "user": "Bexon",
                        "text": "but if I get it again I\u2019ll reopen this issue"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-21T08:02:36.260000",
                        "user": "Bexon",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-21T08:06:55.859000",
                        "user": "Daevion",
                        "text": "The %252F is part of the query. Maybe an encodign mismatch where the query is sendign UTF16 but racketmode is expecting UTF8"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-21T08:07:06.677000",
                        "user": "Daevion",
                        "text": "Only guessing though."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-21T08:08:50.027000",
                        "user": "Bexon",
                        "text": "I had a normallooking path.."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-21T08:09:12.399000",
                        "user": "Bexon",
                        "text": "like `/home/me/code/foo.rkt`"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-21T08:11:16.788000",
                        "user": "Daevion",
                        "text": "did you try > Move point to the for/fold and press Cu Cx =. In the resulting Help buffer where it describes text properties is there a racketxpdoc property and if so what is its value?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-21T08:12:07.293000",
                        "user": "Daevion",
                        "text": "Include that when you reopen."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-21T08:24:30.366000",
                        "user": "Bexon",
                        "text": "as I have doom emacs"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-21T08:24:58.664000",
                        "user": "Bexon",
                        "text": "I commented on the issue :/"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-21T08:25:34.027000",
                        "user": "Daevion",
                        "text": "Ahh  there are lots of doom users on the slack  if you dont use slack I can ask there what hte equivalent bindings in doom are?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-21T08:27:06.710000",
                        "user": "Bexon",
                        "text": "just the command would be enough"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-21T08:27:07.764000",
                        "user": "Daevion",
                        "text": "PS Good report  hoping that will help Greg identify the issue."
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-10-21T08:27:16.275000",
                        "user": "Bexon",
                        "text": "I tried :meowblush:"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-10-21T08:27:27.554000",
                        "user": "Bexon",
                        "text": "and you can ask if it\u2019s not much of a hassle thanks"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-10-21T08:27:39.438000",
                        "user": "Daevion",
                        "text": "I will do it now."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-10-21T08:28:39.992000",
                        "user": "Daevion",
                        "text": "(You should probably note in your update that you are usign doom as it might be relevant)"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-10-21T08:29:19.386000",
                        "user": "Bexon",
                        "text": "I try not to do that at least at first I had really unpleasant backandforth when using spacemacs"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-10-21T08:30:09.493000",
                        "user": "Bexon",
                        "text": "(asking on #emacs  \u201cspacemacs is not emacs ask on their channel!\u201dasking on #spacemacs  \u201cit\u2019s an emacs problem please try on #emacs\u201d)"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-10-21T08:30:39.727000",
                        "user": "Daevion",
                        "text": "Greg is not like that."
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-10-21T08:30:50.927000",
                        "user": "Bexon",
                        "text": "I\u2019ll update the issue then"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-10-21T08:32:50.020000",
                        "user": "Akshar",
                        "text": "Is anyone interested in nitpicks on Lisp syntax? Wrote some observations and would be interested in counterarguments"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-10-21T08:33:09.527000",
                        "user": "Bexon",
                        "text": "too many parens huh?"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-10-21T08:33:14.959000",
                        "user": "Akshar",
                        "text": "Oh not that \ud83d\ude42"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-10-21T08:33:28.610000",
                        "user": "Bexon",
                        "text": "oh then please go ahead"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-10-21T08:33:59.103000",
                        "user": "Akshar",
                        "text": "First one is about the concept of homoiconicity which is arguably underdefined. What I'm critiquing may not be what other people think about: https://mitranim.com/posts/langhomoiconic"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-10-21T08:35:25.121000",
                        "user": "Daevion",
                        "text": "FWIW the many in the racket community recognise that `(+ 2 ( 3 4))` is a barrier for learners and are actively looking at supporting more familiar infix notations `2+(34)`"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-10-21T08:36:10.772000",
                        "user": "Akshar",
                        "text": "Funny because personally I think that\\'s a feature we should never look to fix"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-10-21T08:36:25.401000",
                        "user": "Akshar",
                        "text": "There are other things to fix though such as silly indentation conventions"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-10-21T08:36:43.404000",
                        "user": "Daevion",
                        "text": "you are not alone. lots of different opinions here. that is fine."
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-10-21T08:36:46.019000",
                        "user": "Bexon",
                        "text": "wouldn\u2019t `(2 . + . (3 .  . 4))` work?"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-10-21T08:36:59.204000",
                        "user": "Akshar",
                        "text": "That's the topic for the next post I was gonna link to discuss..."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-10-21T08:37:16.707000",
                        "user": "Daevion",
                        "text": "yeah but you gotta admit it is unweildly"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-10-21T08:37:42.451000",
                        "user": "Daevion",
                        "text": "I'm going to read your post @Mitranim !"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-10-21T08:38:09.795000",
                        "user": "Daevion",
                        "text": "I'm over at the racket taiwan discord!"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-10-21T08:39:11.374000",
                        "user": "Akshar",
                        "text": "The other one is just observing how much Lisp users _don't_ want to write Sexpressions and hack their way around them: https://mitranim.com/posts/lispsexprhacks"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-10-21T08:39:26.403000",
                        "user": "Akshar",
                        "text": "Doesn't include indentbased conventions but probably should have"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-10-21T08:40:01.354000",
                        "user": "Akshar",
                        "text": "It's all coming from a fan mind you"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-10-21T08:40:38.301000",
                        "user": "Akshar",
                        "text": "There's probably a lot more hacks in obscure dialects"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-10-21T08:43:39.528000",
                        "user": "Bexon",
                        "text": "have you heard of Rhombus?"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-10-21T08:44:53.793000",
                        "user": "Bexon",
                        "text": "but yeah  my biggest issue is that while there\u2019s virtually no entry barrier (first thing is a function rest is arguments) lisp is still annoyingly hard for me to read"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-10-21T08:46:12.092000",
                        "user": "Daevion",
                        "text": "Have you tried Reading Perl ? \ud83e\udd23 \ud83d\ude2d \ud83d\ude31"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-10-21T08:46:47.640000",
                        "user": "Bexon",
                        "text": "I tried Raku and it\u2019s still more readable to me than Racket :meow:"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-10-21T08:47:00.287000",
                        "user": "Bexon",
                        "text": "Perl is harder"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-10-21T08:47:18.183000",
                        "user": "Daevion",
                        "text": "I've only read perl I've never tried raku"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-10-21T08:47:34.501000",
                        "user": "Bexon",
                        "text": "Raku can read like a human language"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-10-21T08:47:38.889000",
                        "user": "Bexon",
                        "text": "Racket never will"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-10-21T08:47:47.757000",
                        "user": "Bexon",
                        "text": "unless you use a different #lang"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-10-21T08:50:32.911000",
                        "user": "Bexon",
                        "text": "like take a look at how prime numbers are defined here https://github.com/Raku/examples/blob/8d106ca066d6d827d4727b8d78c37b71f4409171/categories/bestofrosettacode/primedecomposition.pl#L28"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-10-21T08:51:27.750000",
                        "user": "Daevion",
                        "text": "There is now a Racket Taiwan Discord at https://discord.gg/xpwzAcx  it accepts several languages: English Chinese and many languages in Taiwan! \ud83d\udcaf\ud83d\ude03\ud83d\udc4d"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-10-21T08:57:23.098000",
                        "user": "Akshar",
                        "text": "I guess nitpicks on Lisp syntax was poor phrasing. Makes people talk about syntax _in general_. The observations in the posts above are very specific and more about the implementation"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-10-21T08:58:14.112000",
                        "user": "Daevion",
                        "text": "> like take a look at how prime numbers are defined here https://github.com/Raku/examples/blob/8d106ca066d6d827d4727b8d78c37b71f4409171/categories/bestofrosettacode/primedecomposition.pl#L28@sarna wow! reminds me a lot of Applescript"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-10-21T08:58:41.395000",
                        "user": "Daevion",
                        "text": "(I need to be clear that is not a criticsm)"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-10-21T08:58:59.503000",
                        "user": "Bexon",
                        "text": "never heard of it"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-10-21T08:59:06.186000",
                        "user": "Bexon",
                        "text": "I\u2019ve never had a mac :meow:"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-10-21T08:59:59.776000",
                        "user": "Akshar",
                        "text": "\u2191 Requires a lot of special knowledge just to read"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-10-21T09:00:10.554000",
                        "user": "Akshar",
                        "text": "Needlessly high barrier"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-10-21T09:10:47.822000",
                        "user": "Bexon",
                        "text": "yeah but there\u2019s a trade off there"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-10-21T09:11:03.275000",
                        "user": "Bexon",
                        "text": "you have to learn quite a lot to read it fluently"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-10-21T09:11:39.554000",
                        "user": "Bexon",
                        "text": "lisps still have that \u201ceverything is secondclass\u201d feeling for me"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-10-21T12:22:00.401000",
                        "user": "Bexon",
                        "text": "oh that\u2019s a cool little package"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-10-21T12:43:25.643000",
                        "user": "Slavcho",
                        "text": "dammit did I miss the Raku conversation"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-10-21T14:07:19.299000",
                        "user": "Yaw",
                        "text": "a long time ago i was a professional perl programmer. it's not my favorite language for various reasons but i still kind of have a soft spot for it because it's so easy to get a lot of things done in it. or maybe because i've put enough time into it to be able to work quickly in it"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-10-21T14:07:48.519000",
                        "user": "Yaw",
                        "text": "i'll still use it for rather small things here and there"
                    }
                ]
            },
            {
                "conversation_id": "186",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-21T08:24:25.298000",
                        "user": "Bexon",
                        "text": "these bindings don\u2019t work for me"
                    }
                ]
            },
            {
                "conversation_id": "187",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-21T09:11:08.941000",
                        "user": "Bexon",
                        "text": "but when you do it\u2019s grand"
                    }
                ]
            },
            {
                "conversation_id": "188",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-21T12:12:45.164000",
                        "user": "Daevion",
                        "text": "[ANN] fastsequence (by Anna Bolotina copied from Racketusers)Hi,I'm pleased to announce fastsequence a package providing a set of efficient and expressive macros for fast sequences.The provided macros have high performance when used in a for (or its variants) clause. The best performance is provided when the macros are applied to fast sequences such as applications of inlist inrange etc. The aim of the package is to make it easier to define new fast sequence forms.Here is the documentation:https://docs.racketlang.org/fastsequence/index.htmlPlease write to me if operations from this package are useful for your work. Feedback is welcome!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-21T12:22:33.139000",
                        "user": "Daevion",
                        "text": "(by Anna Bolotina copied from Racketusers)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-21T12:23:29.457000",
                        "user": "Daevion",
                        "text": "nothing to do with me  I just thought it was a cool thing that should be shared"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-21T12:46:49.773000",
                        "user": "Daevion",
                        "text": "You didn't miss much. Someone said lisp syntax is hard to read I responded haha have tried perl someone else said raku is good and gave and example I saw the example and said it reminded me of applescript in a good way then someone else said whats applescript?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-21T12:48:14.784000",
                        "user": "Slavcho",
                        "text": "Raku causes me to flipflop language stacks more than I care to admit"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-21T12:48:34.156000",
                        "user": "Slavcho",
                        "text": "Sometimes I just get tired of parens"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-21T15:17:00.724000",
                        "user": "Bexon",
                        "text": "I wanted to use it at work but it got deprecated in favor of Python before I managed to actually write anything in it :meow:"
                    }
                ]
            },
            {
                "conversation_id": "189",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-21T12:47:42.000000",
                        "user": "Slavcho",
                        "text": "ah"
                    }
                ]
            },
            {
                "conversation_id": "190",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-21T17:45:02.896000",
                        "user": "Adelio",
                        "text": "Hello I wanna to know about how do the cartesian plane with Plot or an any information about 2D renders of this library... Thank u"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-21T19:20:29.507000",
                        "user": "Adelio",
                        "text": "Yes but i don't understand anything... I'm a beginner :c"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-21T19:37:22.126000",
                        "user": "Adelio",
                        "text": "how do u make a cartesian plane with plot? specifically with points https://docs.racketlang.org/plot/renderer2d.html?q=plot\"The first item in the #3.2... Sorry for the english but I am colombian xd"
                    }
                ]
            },
            {
                "conversation_id": "191",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-21T18:07:44.705000",
                        "user": "Brayan",
                        "text": "have you seen <https://docs.racketlang.org/plot/intro.html#%28part._.Plotting_2.D_.Graphs%29>?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-21T19:31:47.741000",
                        "user": "Brayan",
                        "text": "In that case could you ask a more specific question about something you don't understand?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-21T20:39:00.559000",
                        "user": "Brayan",
                        "text": "Kirby if you just want a grid with nothing plotted on it I would probably make `hrule`s and `vrule`s for the ranges and then plot them"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-21T20:40:57.420000",
                        "user": "Brayan",
                        "text": "if you do that you'll need to specify the bounds as arguments to the plot function because otherwise plot won't be able to decide what the bounds should be"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-22T10:23:21.694000",
                        "user": "Akshar",
                        "text": "> lisps still have that \u201ceverything is secondclass\u201d feeling for meInteresting way to phrase it. Might put this as a slogan on the next language because that's sort of by design"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-22T10:24:16.442000",
                        "user": "Akshar",
                        "text": "Allocating special syntax to make `ref` or `[]arr` firstclass has the massive cost of overfitting the language to a particular subset of problems/programs"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-22T10:26:25.926000",
                        "user": "Akshar",
                        "text": "I believe we should stop overfitting languages and start designing languages that can be fitted for any problem/program. Been trying to phrase this well enough for a post"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-22T10:26:48.817000",
                        "user": "Akshar",
                        "text": "Lisps are overfit too you have to start from scratch from C level and build a full stack language from there"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-22T10:28:53.338000",
                        "user": "Akshar",
                        "text": "Might be incendiary to say this in a Racket channel but from my perspective people implementing Lisp in C don't love Lisp enough"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-22T10:29:14.218000",
                        "user": "Akshar",
                        "text": "Bad phrasing here assumes too much about people and what they want from languages. Arguably a projection."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-22T10:29:43.584000",
                        "user": "Akshar",
                        "text": "Better suggestions are welcome"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-22T10:31:42.929000",
                        "user": "Akshar",
                        "text": "The idea is that we shouldn't confine good qualities of Lisps to the implementation and execution model that prevents them from being selfhosted"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-22T10:39:49.376000",
                        "user": "Akshar",
                        "text": "That level requires types and the syntax for types is kind of hard to fit into a Lisp especially when generics are involved. Can create syntactic ambiguities too. I can see why they don't usually bother. But it seems solvable"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-22T10:46:08.470000",
                        "user": "Akshar",
                        "text": "Anyway one consequence is that to make the language fittable for the full range of problems from C level to abstract business or scientific logic expressed in a DSL you can't afford to allocate special syntax for _any_ of them so _everything_ must be secondclass which is a useful insight"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-22T15:17:45.338000",
                        "user": "Akshar",
                        "text": "Oh yes just started reading about Typed Racket today and placing type declarations separately from definitions really helps alleviate the difficulties I thought we'd have"
                    }
                ]
            },
            {
                "conversation_id": "192",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-21T20:02:32.423000",
                        "user": "Zayne",
                        "text": "@Mitranim Both those blog posts were fantastic. I've come to a lot of the same conclusions in the designs of my languages eventually preferring to consider strings and symbols to be the same thing preferring readers that preserve formatting information and preferring syntaxes that completely avoid infix (even in small quantities). I also avoid letting nonparenthesized prefix operations be applied to parenthesized arguments because it messes with indentation style and paren visibility. Traditional Lispy syntax has a lot of room for improvement even with regard to some of the very principles that have supported it this far."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-21T20:07:06.113000",
                        "user": "Zayne",
                        "text": "@KirbySlayer A more specific question would make it easier to help. That section you linked gives two complete examples of using `points`. Do they work for you?"
                    }
                ]
            },
            {
                "conversation_id": "193",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-22T15:08:54.040000",
                        "user": "Zayne",
                        "text": "I don't think there's a special difficulty with fitting the syntax of types to sexpressions.Within the Racket ecosystem see the contract system the FFI Typed Racket Hackett (a proofofconcept `#lang` with a type system like Haskell's) and Magnolisp (a `#lang` which compiles to C++).Outside the Racket ecosystem see BitC (back when it used sexpressions)... and... I'm sure I've seen at least a couple of lowlevel Schemes meant to be selfhostable intermediate languages but I can't think of what they were called."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-22T15:16:29.895000",
                        "user": "Zayne",
                        "text": ".Scopes is a systems language with a syntax inspired by sexpressions: https://scopes.readthedocs.io/en/latest/dataformat/A lot of these make choices that do give them some specialized syntax aside from sexpressions but I think these can usually be brought back to sexpressions through a series of superficial tweaks to the syntax."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-22T15:20:06.343000",
                        "user": "Akshar",
                        "text": "> I'm sure I've seen at least a couple of lowlevel Schemes meant to be selfhostable intermediate languages but I can't think of what they were called.Would be curious to find truly selfhosted Lisps"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-22T15:20:53.794000",
                        "user": "Akshar",
                        "text": "In the sense that it compiles to assembly. I wrote a LisptoJS at some point and it's _technically_ selfhosted but that's not quite as useful"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-22T15:21:27.154000",
                        "user": "Britten",
                        "text": "Chez and ikarus do. (Ikarus may have been abandoned I can't keep track of all of those schemes anymore)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-22T15:22:53.733000",
                        "user": "Akshar",
                        "text": "Interesting! Didn't know checking Chez now thanks"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-22T15:24:24.590000",
                        "user": "Akshar",
                        "text": "Unsurprisingly Chez source includes C code for allocations GC etc..."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-22T15:26:07.783000",
                        "user": "Gianah",
                        "text": "what was the problem? your system using C"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-22T15:26:18.906000",
                        "user": "Gianah",
                        "text": "You can use Sexpression write a C"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-22T15:26:24.104000",
                        "user": "Gianah",
                        "text": "but that still a C"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-22T15:27:49.846000",
                        "user": "Akshar",
                        "text": "Could you please rephrase that? Hard to understand"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-22T15:28:28.854000",
                        "user": "Gianah",
                        "text": "`(define a (malloc ( Int)))`"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-22T15:28:36.702000",
                        "user": "Gianah",
                        "text": "so this is C or racket?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-22T15:29:37.468000",
                        "user": "Gianah",
                        "text": "You have to interact with your abstract computation model"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-22T15:29:47.835000",
                        "user": "Akshar",
                        "text": "Oh yes you could define a typed language using Sexpressions for syntax. It could start Clike but could also have higherlevel supersets all the way up to dynamic typing if desired. That's precisely my point. This could be far more useful than dynamic languages that depend on C instead of competing with it while bereaving their users of this power"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-22T15:31:06.992000",
                        "user": "Gianah",
                        "text": "You didn't lose your power: https://github.com/rjnw/sham"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-22T15:31:32.209000",
                        "user": "Gianah",
                        "text": "Anyone can make something like this maybe not that easy but possible"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-22T15:32:14.627000",
                        "user": "Gianah",
                        "text": "If you build on Clike something then users would like to interact with if they can't they would argue that"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-22T15:32:34.178000",
                        "user": "Gianah",
                        "text": "And what was the problem of FFI?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-10-22T15:32:47.171000",
                        "user": "Gianah",
                        "text": "Maybe you would like to learn PLT? \ud83d\ude42"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-10-22T15:34:24.529000",
                        "user": "Akshar",
                        "text": "Hmm would you care to explain the link above? It seems to have no documentation and I don't magically know what it's supposed to do..."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-10-22T15:34:29.577000",
                        "user": "Akshar",
                        "text": "By PLT are you referring to Racket?"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-10-22T15:35:24.095000",
                        "user": "Gianah",
                        "text": "Programming Language Theory"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-10-22T15:36:14.622000",
                        "user": "Akshar",
                        "text": "Maybe I should \ud83d\ude42 It's about time"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-10-22T15:36:19.816000",
                        "user": "Gianah",
                        "text": "I think they have a paper"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-10-22T15:36:44.012000",
                        "user": "Gianah",
                        "text": "https://arxiv.org/pdf/2005.09028.pdf"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-10-22T15:37:33.406000",
                        "user": "Gianah",
                        "text": "basically you can do code generation via reader macro and control link via something like require or something else or you make a runtime for startup. Then you get what you want."
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-10-22T15:38:19.140000",
                        "user": "Akshar",
                        "text": "Hmm curious"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-10-22T15:38:46.236000",
                        "user": "Akshar",
                        "text": "I'll check the paper will take a while to grok"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-10-22T15:42:22.531000",
                        "user": "Akshar",
                        "text": "So you could start with a dynamic language hosted by C then write code that outputs assembly (Sham DSL or not) and theoretically replace the C code with that code? Sounds suspiciously similar to making a language that uses Sexpressions for syntax to the point that I lose track of the distinction"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-10-22T15:43:33.648000",
                        "user": "Akshar",
                        "text": "Although I should read the paper first they probably have different uses in mind"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-10-22T15:43:55.652000",
                        "user": "Akshar",
                        "text": "Such as linking the generated assembly into the currently running program"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-10-22T15:50:13.880000",
                        "user": "Akshar",
                        "text": "Pretty exciting stuff thanks for linking it"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-10-22T16:02:53.693000",
                        "user": "Akshar",
                        "text": "Curious how easy or hard it would be to take the last logical step and turn this into executable binaries replacing C instead of going C \u2192 Scheme \u2192 macros \u2192 LLVM \u2192 execution generating that code every time at runtime"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-10-22T16:16:32.050000",
                        "user": "Akshar",
                        "text": "That was sort of my plan for bootstrapping a language haven't gotten around to learning how to yet"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-10-22T16:17:37.937000",
                        "user": "Akshar",
                        "text": "But I\\'ll challenge your claim you didn\\'t lose that power because it\\'s true in a _technical_ sense but not a _practical_ sense since most users of a dynamic language are indeed locked out of the option to compile to an efficient executable while benefitting from type checking sans writing a compiler themselves by using Sham or somesuch..."
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-10-22T16:21:26.307000",
                        "user": "Akshar",
                        "text": "On my system `raco` takes 250ms to print help so something must have gone wrong somewhere \ud83e\udd37\\u200d\u2640\ufe0f"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-10-22T16:22:00.559000",
                        "user": "Akshar",
                        "text": "Apologies I'm not here to offer critique"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-10-22T16:22:16.615000",
                        "user": "Gianah",
                        "text": "Hope chez can save that www"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-10-22T16:25:30.915000",
                        "user": "Gianah",
                        "text": "I understand your point but that kind of language would be really hard limitation removes flexibility. A different layer usually can't work well together then you still have to unify them together"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-10-22T16:27:15.161000",
                        "user": "Gianah",
                        "text": "I think https://github.com/SharkLang/Documentations/blob/main/doc.md trying to do what you thought but they use Chinese... I tell them use English..."
                    }
                ]
            },
            {
                "conversation_id": "194",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-22T16:09:42.679000",
                        "user": "Gianah",
                        "text": "We would have a computation model compiler make an executable format of that model whole stuff. So a macro generate `.o` file as compiler why not? \ud83d\ude42"
                    }
                ]
            },
            {
                "conversation_id": "195",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-22T16:48:03.530000",
                        "user": "Daevion",
                        "text": "https://translate.google.co.uk/translate?sl=zhCN&tl=en&u=https%3A%2F%2Fgithub.com%2FSharkLang%2FDocumentations%2Fblob%2Fmain%2Fdoc.md"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-22T16:48:12.218000",
                        "user": "Daevion",
                        "text": "(seems passable)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-22T19:50:28.540000",
                        "user": "Daevion",
                        "text": "Thank Leif !"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-27T22:15:39.306000",
                        "user": "Daevion",
                        "text": "https://youtu.be/Pk3c9XarfHU"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-30T12:34:13.698000",
                        "user": "Daevion",
                        "text": "Welcome @kilomeow Do you mean a pollen editor or a pollen compiler? (or both?)Notes:  RacketScript is currently not working as it is being updated to support the linklets changes in Racket. (vishesh has a new job and while he is still contributing he can't allocate as much time so has handed leadership over to Stephen Chang who is working on the update effort) I dont think whalesong will do this. We currently have wasm backend. The switch to the Chez Scheme backend will eventually make this possibly but I'm not aware of anyone working on wasm yet."
                    }
                ]
            },
            {
                "conversation_id": "196",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-22T17:35:45.940000",
                        "user": "Britten",
                        "text": "@StephenD Thank you for sharing Leif's paper. It's given me more to digest."
                    }
                ]
            },
            {
                "conversation_id": "197",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-10-30T12:08:38.728000",
                        "user": "Abdenacer",
                        "text": "hi everyone! how hard do you think it will be to compile the `pollen` to `js` using racketscript (https://github.com/vishesh/racketscript) or whalesong (https://planet.racketlang.org/packagesource/dyoo/whalesong.plt/1/8/planetdocs/manual/index.html) ? or maybe to `wasm`?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-10-30T12:09:08.923000",
                        "user": "Abdenacer",
                        "text": "the idea is to make fully clientside pollen webeditor"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-10-30T12:36:15.421000",
                        "user": "Abdenacer",
                        "text": "I'm talking more about pollen compiler. I want to do transformation from pollen markup/markdown to html on the clientside."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-10-30T12:37:00.451000",
                        "user": "Abdenacer",
                        "text": "thank you for information on current state of `js` compilers. Wasm backend seems very interesting"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-10-30T12:39:16.333000",
                        "user": "Daevion",
                        "text": "I don't know your constraints but I'd suggest having a web based editor with compiling happening on a server being much more achievable and would provide a stepping stone towards doing it all on the client."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-10-30T12:41:56.519000",
                        "user": "Abdenacer",
                        "text": "yeah it's already done with `pollenrock` and it rocks \ud83d\ude09"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-10-30T12:42:54.189000",
                        "user": "Daevion",
                        "text": "I didn't know about that  can you share the link?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-10-30T12:43:25.485000",
                        "user": "Abdenacer",
                        "text": "https://docs.racketlang.org/pollenrock/index.html"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-10-30T12:44:19.247000",
                        "user": "Abdenacer",
                        "text": "There is a deep difficulty in the fact that pollen is dsl for a racket and it seems that it's not so easy to compile to js/wasm. There is need to add some parts of the racket interpreter to js code \ud83d\ude42"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-10-30T12:45:26.761000",
                        "user": "Abdenacer",
                        "text": "but there is a real profit of doing this because fully clientside pollen webeditor would be much cooler"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-10-30T12:45:55.989000",
                        "user": "Abdenacer",
                        "text": "and it would be possible to add multiuser collaboration on the level of source editor"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-10-30T12:54:47.490000",
                        "user": "Daevion",
                        "text": "> and it would be possible to add multiuser collaboration on the level of source editor@kilomeow that could be added to pollenrock."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-10-30T12:56:13.386000",
                        "user": "Daevion",
                        "text": "I think multiuser collaboration is harder sansserver  I think there have been some projects to do it (not in racket)"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-10-30T12:57:41.955000",
                        "user": "Daevion",
                        "text": "Two people editing the same document onscreen at the same time probably also has disadvantages."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-10-30T12:58:07.458000",
                        "user": "Daevion",
                        "text": "(It certainly has technical challenges)"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-10-30T12:58:54.492000",
                        "user": "Daevion",
                        "text": "Can I suggest an alternative? Set up a github action that compiles a pollen repository on commits."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-10-30T13:12:33.546000",
                        "user": "Abdenacer",
                        "text": "oh that's cool idea"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-10-30T15:44:56.440000",
                        "user": "Daevion",
                        "text": "I can't recall one. would be fun. 2htdp/universe & 2htdp/image"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-10-30T15:45:15.367000",
                        "user": "Daevion",
                        "text": "or a console version!"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Racket",
        "channel_name": "general",
        "month": "Nov2019-Jan2020",
        "start_date": "2019-11-02T04:46:55.839000",
        "end_date": "2020-01-30T01:54:09.757000",
        "messages": [
            {
                "conversation_id": "1",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-02T04:46:55.839000",
                        "user": "Yiqun",
                        "text": "Game Jam has started! https://itch.io/jam/racket2019gamejam"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-03T09:40:25.704000",
                        "user": "Amri",
                        "text": "Honestly I'm so proud that I remembered all the syntax class stuff for macros. Someday I won't have to google it though xD"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-03T10:18:39.088000",
                        "user": "Amri",
                        "text": "@notjack for when you're next around. Will try to create the PR tomorrow for basic creation + contains."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-03T10:19:10.123000",
                        "user": "Amri",
                        "text": "gotta love macros xD"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-03T18:03:49.740000",
                        "user": "Amri",
                        "text": "\ud83e\udd14"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-03T21:55:03.805000",
                        "user": "Amri",
                        "text": "Alrighty there we go. https://github.com/jackfirth/rebellion/pull/333"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-05T06:15:02.969000",
                        "user": "Amri",
                        "text": "Appreciate the overview! Comparators are definitely on my mind but forgot to include it there. The macro does include a form that specifies all bound values and inclusivity: `(range [0 #t] [10 #f])`  this can be used if the type of endpoint is unknown.Beyond that I'll look at the rest later  probably won't make a comment response until I can mess around with things first. Night!"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-05T06:27:05.633000",
                        "user": "Suleiman",
                        "text": "night! \ud83d\udc4b"
                    }
                ]
            },
            {
                "conversation_id": "2",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-02T15:49:08.880000",
                        "user": "Yanelly",
                        "text": "@notjack @Deleted User `Multiple modules can be required at once multiple langs can't.` There is a tiny exception to that which I don't think addresses your needs but is awesome anyway; ```#lang atexp racket/base```The body of a #lang shorthand has no specific syntax because the syntax is determined by the language name that follows #lang.  https://docs.racketlang.org/guide/Module_Syntax.html#%28part._hashlang%29If you've not seen it check out http://www.greghendershott.com/2015/08/atexpressions.html for"
                    }
                ]
            },
            {
                "conversation_id": "3",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-05T05:14:19.620000",
                        "user": "Suleiman",
                        "text": "@WillBAnders Great job \ud83d\ude04 Was busy all weekend but I got a chance to review it tonight"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-06T05:12:29.105000",
                        "user": "Suleiman",
                        "text": "Going to try and work on this super neat transducer tonight. It's called `materializing` and it shows you the behavior of some other transducer:```racket> (transduce (innaturals) (materializing (taking 3)) #:into intolist)(list #<startevent> (consumeevent 0) (emitevent 0) (consumeevent 1) (emitevent 1) (consumeevent 2) #<halfcloseevent> (halfclosedemitevent 2) #<finishevent>)```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-06T05:15:34.838000",
                        "user": "Amri",
                        "text": "the frick xD"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-06T05:17:03.082000",
                        "user": "Suleiman",
                        "text": "Explanation here \ud83d\ude09 https://github.com/jackfirth/rebellion/issues/339"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-06T16:04:32.402000",
                        "user": "Yiqun",
                        "text": "Nice."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-07T23:17:31.396000",
                        "user": "Twyla",
                        "text": "oh god I'm cooking up some spicy spaghetti"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-07T23:21:00.504000",
                        "user": "Twyla",
                        "text": "Fact: Each note contains an offset value (in seconds) as distance from the first note.Problem: I need a tone length to create a note."
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-07T23:21:34.178000",
                        "user": "Twyla",
                        "text": "Wait no this code is further broken because it simply doesn't work: I need to subtract the next offset from the current one. \ud83e\udd14"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-07T23:22:01.432000",
                        "user": "Twyla",
                        "text": "Back to the drawing board"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-07T23:24:24.182000",
                        "user": "Twyla",
                        "text": "Also I need to multiply the velocity by 0.009 instead of 0.01 because `rsound` doesn't care about piano/forte values."
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-08T00:44:47.436000",
                        "user": "Twyla",
                        "text": "The same music parser stuff."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-08T00:45:37.410000",
                        "user": "Twyla",
                        "text": "I'm parsing the same tabseparated file again. One of the fields indicates an offset from zero (ie this field is always zero in the first line) instead of a duration."
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-08T00:45:53.160000",
                        "user": "Twyla",
                        "text": "I need a duration though which would be offset of next line  offset of this line"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-08T00:46:17.029000",
                        "user": "Twyla",
                        "text": "To generalise the problem:```foo\\tbar\\tbaz\\t0.0quux\\tblam\\tbob\\t3.0splat\\tbang\\tfred\\t5.0```becomes```{foo bar baz 3.0}{quux blam bob 2.0}{splat bang fred [some fixed value]}```"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-08T01:34:59.263000",
                        "user": "Twyla",
                        "text": "Can be provided externally."
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-08T01:36:08.944000",
                        "user": "Twyla",
                        "text": "The format doesn't mention any form of note length besides the time offset so I assume the last note just lingers a bit and fades away."
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-08T02:10:02.890000",
                        "user": "Twyla",
                        "text": "I'll reread the description paper tomorrow."
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-08T02:10:17.775000",
                        "user": "Twyla",
                        "text": ":meow:"
                    }
                ]
            },
            {
                "conversation_id": "4",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-08T00:40:53.836000",
                        "user": "Suleiman",
                        "text": "@Deleted User whatcha working on?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-08T00:51:23.966000",
                        "user": "Suleiman",
                        "text": "Ah I see what you mean. Tricky."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-08T00:52:48.929000",
                        "user": "Suleiman",
                        "text": "Where do you get that last fixed value from?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-08T01:59:09.226000",
                        "user": "Suleiman",
                        "text": "it's _ambiguous_?? \ud83d\ude31"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-08T04:00:49.928000",
                        "user": "Suleiman",
                        "text": "Totally unrelated but this is super cool to me:"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-08T04:19:40.154000",
                        "user": "Yiqun",
                        "text": "Great excuse to use the word reification."
                    }
                ]
            },
            {
                "conversation_id": "5",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-08T02:54:32.128000",
                        "user": "Yiqun",
                        "text": "Using slightly different from normal models of music are interesting for making generative art."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-08T04:28:59.914000",
                        "user": "Suleiman",
                        "text": "maybe `transducerreify`?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-08T04:30:39.259000",
                        "user": "Yiqun",
                        "text": "`reifying`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-08T04:31:36.866000",
                        "user": "Yiqun",
                        "text": "or I guess `transducerreify` could be sugar around `(transducer ... (materializing ...) #:into intolist)`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-08T04:32:59.629000",
                        "user": "Yiqun",
                        "text": "I didn't fully think the second part there through"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-08T04:35:14.261000",
                        "user": "Suleiman",
                        "text": "I dislike that it\\'s kind of hard to just guess what the word reify means whereas with materialize I can sort of guess even if I\\'ve never seen the word before. What do you think?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-08T04:37:03.324000",
                        "user": "Nyriah",
                        "text": "my first guess for what reify means in a programming context is preserve across a compilation step usually involving serializing a value or type into in the compiled result"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-08T04:37:39.415000",
                        "user": "Nyriah",
                        "text": "materialize means very little to me in a programming context"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-08T04:38:27.853000",
                        "user": "Suleiman",
                        "text": "I mean I can guess what they mean in an english context where I've never seen the word before at all not just in a programmer context where I've seen the word but not seen it used in code"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-08T04:38:55.965000",
                        "user": "Yiqun",
                        "text": "Reify is a word that is used heavily in PL and probably is best avoided. It's about equivalent to materialize."
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-08T04:41:30.778000",
                        "user": "Suleiman",
                        "text": "Maybe just `transducerobserveevents` would be better honestly"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-08T04:43:53.936000",
                        "user": "Suleiman",
                        "text": "Or `observingtransductionevents`"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-08T04:45:07.223000",
                        "user": "Nyriah",
                        "text": "I was thinking of saying this was about logging input dependencies or bugging the input or maybe using the input as a bait car so to speak... which I guess is what unit test spies are"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-08T04:45:36.902000",
                        "user": "Nyriah",
                        "text": "so `bugging` `baiting` `spying`..."
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-08T04:46:06.116000",
                        "user": "Nyriah",
                        "text": "but I like that you picked `materializing` with reference to RxJava too"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-08T04:46:38.313000",
                        "user": "Suleiman",
                        "text": "I think if rxjava didn't set the precedent I wouldn't have picked it. And even then I'm on the fence"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-08T04:46:51.459000",
                        "user": "Suleiman",
                        "text": "The name requires an explanation which isn't a great quality in a name"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-08T04:46:57.005000",
                        "user": "Nyriah",
                        "text": "there wouldn't be a really good `dematerializing` synonym if you started with `bugging` :p"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-08T04:47:05.185000",
                        "user": "Nyriah",
                        "text": "`debugging`"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-08T04:48:00.252000",
                        "user": "Yiqun",
                        "text": "Not familiar with RxJava but it reminded me of traces from a Mocked class in a way."
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-08T04:49:14.370000",
                        "user": "Suleiman",
                        "text": "`tracingtransductionevents`?"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-08T04:49:21.094000",
                        "user": "Suleiman",
                        "text": "hmm"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-08T04:50:24.603000",
                        "user": "Nyriah",
                        "text": "`loggingreads`?"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-11-08T04:50:56.249000",
                        "user": "Suleiman",
                        "text": "logging I want to stay away from because it implies actual racket loggers are involved somehow"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-08T04:51:21.378000",
                        "user": "Suleiman",
                        "text": "or something loggerlike with severity levels and humanreadable messages and whatnot"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-08T04:53:23.928000",
                        "user": "Suleiman",
                        "text": "I like `observingtransductionevents` the most out of these"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-08T04:56:14.429000",
                        "user": "Suleiman",
                        "text": "follow up question: `observingtransductionevents` or just `observingevents`?"
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-11-08T05:16:56.103000",
                        "user": "Suleiman",
                        "text": "yeah it doesn't sound super related to transducers"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-11-08T17:51:24.093000",
                        "user": "Grettell",
                        "text": "Oh I see. I guess I'll just have to try them. I think BiwaScheme is more like Urlang in that case"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-11-08T17:51:52.078000",
                        "user": "Grettell",
                        "text": "I just finished writing a wrapper for the PlayCanvas 3D engine last week for BiwaScheme and it's been going amazing"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-11-08T17:52:27.605000",
                        "user": "Grettell",
                        "text": "I'd like to submit something to the gamejam though so maybe I'll try writing a wrapper for Urlang or RacketScript"
                    }
                ]
            },
            {
                "conversation_id": "6",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-08T05:11:56.328000",
                        "user": "Nyriah",
                        "text": "observing and events make me think of the observer pattern"
                    }
                ]
            },
            {
                "conversation_id": "7",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-08T12:43:50.260000",
                        "user": "Grettell",
                        "text": "Hey I'm a pretty heavy user of BiwaScheme for Scheme > Javascript conversion. Does anyone know offhand how RacketScript and Urlang compare featurewise?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-08T13:30:55.215000",
                        "user": "Yanelly",
                        "text": "I only know the package descriptions; racketscript is Racket on JavaScript and urlang is JavaScript with scheme syntax"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-08T13:31:29.776000",
                        "user": "Yanelly",
                        "text": "I\u2019m probably over simplifying"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-08T14:16:32.767000",
                        "user": "Yanelly",
                        "text": "https://dustycloud.org/blog/terminalphaseprototype/"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-09T01:00:30.557000",
                        "user": "Amri",
                        "text": "What's Urlang?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-09T01:02:52.692000",
                        "user": "Yiqun",
                        "text": "https://github.com/soegaard/urlang"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-09T01:31:15.339000",
                        "user": "Amri",
                        "text": "Eh. Really don't like the name there. Thought it was something related to Erlang."
                    }
                ]
            },
            {
                "conversation_id": "8",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-09T01:39:58.367000",
                        "user": "Yiqun",
                        "text": "That was my first thought when it was first published."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-09T01:40:43.122000",
                        "user": "Yiqun",
                        "text": "If you like Erlang Marc Feeley built an Erlang > Gambit Scheme compiler"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-09T01:41:26.423000",
                        "user": "Yiqun",
                        "text": "https://www.researchgate.net/publication/2593118_Etos_an_Erlang_to_Scheme_compiler"
                    }
                ]
            },
            {
                "conversation_id": "9",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-09T19:17:13.549000",
                        "user": "Amri",
                        "text": "@notjack Want to get your opinion on comparators. How feasible is it to handle defaults? In a lot of cases ranges are just numbers and while we definitely want to support other times having to specify a comparator for that isn't too ideal."
                    }
                ]
            },
            {
                "conversation_id": "10",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-09T19:55:37.108000",
                        "user": "Suleiman",
                        "text": "Like defaulting to the `real<=>` comparator? That sounds fine to me"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-09T19:57:26.850000",
                        "user": "Amri",
                        "text": "Basically yeah. Theoretically in the future we might be able to get a bit more clever."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-09T21:07:30.917000",
                        "user": "Amri",
                        "text": "A fair number of things would  any polymorphism by definition. But I much prefer the OO approach."
                    }
                ]
            },
            {
                "conversation_id": "11",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-09T20:42:10.367000",
                        "user": "Suleiman",
                        "text": "That's what `intomax` `intomin` and `sorting` do too so there's good precedent"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-09T20:44:57.958000",
                        "user": "Amri",
                        "text": "This is something where I see OO being unparalleled with. I don't want to specify a comparator for everything. I don't want to rope myself in to all kinds of different implementations and such. I just want basic polymorphism especially with a standard library."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-09T20:47:27.853000",
                        "user": "Suleiman",
                        "text": "Typeclasses would also solve that"
                    }
                ]
            },
            {
                "conversation_id": "12",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-10T02:42:44.526000",
                        "user": "Yiqun",
                        "text": "Sending this here to get some feedback.How about this as the next Racket Community Event:https://gist.github.com/samdphillips/47ea14d6eb75f93e64ad20dfd1bee8dc"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-10T02:43:30.467000",
                        "user": "Yiqun",
                        "text": "\u2b06 : @StephenD @notjack \u2b06"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-10T02:44:26.180000",
                        "user": "Suleiman",
                        "text": "Ou I like that"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-10T02:45:19.287000",
                        "user": "Suleiman",
                        "text": "advent of code puzzles are usually pretty streamy"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-10T02:45:43.468000",
                        "user": "Suleiman",
                        "text": "would be a good way to get transducer use cases"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-10T02:46:51.538000",
                        "user": "Yiqun",
                        "text": "Yeah. I'm thinking of how Stephen has started a chain of monthly community events and doing this seem like a no brainer. We just need to get word out in advance so folks know."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-10T20:42:33.665000",
                        "user": "Yiqun",
                        "text": "Yeah it seems good to have some monthly events that keep the Racket community charged."
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-10T21:18:23.419000",
                        "user": "Yiqun",
                        "text": "I see these as: 1. Get users to make a jump and try Racket 2. Excite existing users"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-10T21:41:12.449000",
                        "user": "Yiqun",
                        "text": "This is good"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-10T21:41:32.274000",
                        "user": "Yiqun",
                        "text": "Planning is sometimes annoying but necessary"
                    }
                ]
            },
            {
                "conversation_id": "13",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-10T19:49:20.006000",
                        "user": "Yanelly",
                        "text": "@oaktownsam brilliant !"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-10T20:25:24.915000",
                        "user": "Yanelly",
                        "text": "@oaktownsam the Racket leaderboard for advent of code is a great idea"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-10T20:26:29.657000",
                        "user": "Yanelly",
                        "text": "There were also a bunch of suggestions for future events"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-10T21:03:24.048000",
                        "user": "Yanelly",
                        "text": "I also have some specifically LOP themed ideas"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-10T21:40:07.044000",
                        "user": "Yanelly",
                        "text": "Possible scheduleJan: text adventure!  based on https://mcacm.acm.org/magazines/2012/1/144809creatinglanguagesinracket/fulltextFeb: DrRacket quickscripts scripting comp Mar: RPG/roguelikeApr: simulations (conways life,bigbang/universe etc)May: solvers with Rosette (maybe in a game context)June: little language compJuly: music! Nothing set in stone  I\u2019m not overly committed to any of these. It\u2019s just brainstorming."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-10T21:41:40.247000",
                        "user": "Yanelly",
                        "text": "Picture comp in August \ud83d\udc1f"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-10T21:42:35.544000",
                        "user": "Yanelly",
                        "text": "Important to keep as lightweight as possible so you don\u2019t burn out"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-10T21:44:31.159000",
                        "user": "Yanelly",
                        "text": "And not get upset if something doesn\u2019t work  you never know how a community will react"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-10T21:44:43.506000",
                        "user": "Yanelly",
                        "text": "Just move on to the next one"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-11T20:03:53.043000",
                        "user": "Yanelly",
                        "text": "@oaktownsam suggestion: announce the racket leaderboard for Advent of code in the next week I\u2019ll tweet/post on Reddit"
                    }
                ]
            },
            {
                "conversation_id": "14",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-11T21:01:58.534000",
                        "user": "Yiqun",
                        "text": "\ud83d\udc4d"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-12T01:26:51.715000",
                        "user": "Suleiman",
                        "text": "I'm still waiting on Thanksgiving vacation so I can start the game jam :p"
                    }
                ]
            },
            {
                "conversation_id": "15",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-12T18:38:30.901000",
                        "user": "Twyla",
                        "text": "Is there a higherorder function that traverses through a list but operates in pairs?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-12T18:39:14.878000",
                        "user": "Twyla",
                        "text": "Like `(foo f (a b c d e))` \u2192 `(list (f a b) (f b c) (f c d) (f d e))`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-12T18:39:43.245000",
                        "user": "Suleiman",
                        "text": "there isn't one builtin but you can do it relatively easily with for comprehensions"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-12T18:40:53.455000",
                        "user": "Suleiman",
                        "text": "```(for/list ([x (inlist lst)] [y (inlist (rest lst))]) (f x y))```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-12T18:41:57.741000",
                        "user": "Twyla",
                        "text": "Ah I didn't think of using `for`."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-12T18:42:05.401000",
                        "user": "Twyla",
                        "text": "I was going through SRFI1 to find something close."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-12T18:42:07.789000",
                        "user": "Twyla",
                        "text": "Thanks!"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-13T06:14:26.010000",
                        "user": "Suleiman",
                        "text": "whatcha makin?"
                    }
                ]
            },
            {
                "conversation_id": "16",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-13T02:50:58.602000",
                        "user": "Yiqun",
                        "text": "work"
                    }
                ]
            },
            {
                "conversation_id": "17",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-13T06:37:16.827000",
                        "user": "Yiqun",
                        "text": "HUD type monitoring thing"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-13T06:37:59.022000",
                        "user": "Yiqun",
                        "text": "I actually already did this once as a console app but it\\'s pretty messy. This time trying to do it right"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-13T06:43:14.074000",
                        "user": "Yiqun",
                        "text": "The main monitoring routine is like a stateful World program. It get's a bunch of things. Then updates them periodically. Each one has a rendering routine and there is a routine to merge all of the renders.```(runhud  (> (Sequence T))  #:update! (> T any)  #:draw (> T pict?)  #:layout (> pict? ... pict?))```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-13T06:44:54.929000",
                        "user": "Yiqun",
                        "text": "The particular one above is just rendering plots with a random lines. It adds a new random point every 2 seconds and keeps 2 minutes of data."
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-13T06:46:06.583000",
                        "user": "Yiqun",
                        "text": "It is not quite 200 LOC (including a lot of scaffolding that I need to move out of the core) which is very satisfying."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-13T06:47:22.881000",
                        "user": "Suleiman",
                        "text": "That is super cool"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-13T06:47:40.633000",
                        "user": "Suleiman",
                        "text": "any way to see it in action as an animated gif or something?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-13T06:52:42.991000",
                        "user": "Suleiman",
                        "text": "Also today I wrote some code for analyzing the scribble cross reference index and I was _very_ pleased with transducer performance. Even though I was doing expensive things like sorting because I was aggregating filtering and summarizing the data the lazy and onepass nature of the `transduce` pipelines I wrote actually made the stream processing pretty fast. Much faster than it takes to just load the index with `loadcollectionsxref`."
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-13T06:54:44.027000",
                        "user": "Suleiman",
                        "text": "some code:"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-13T07:00:53.618000",
                        "user": "Yiqun",
                        "text": "I forgot I have licecap on this computer."
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-13T07:01:13.726000",
                        "user": "Yiqun",
                        "text": "None"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-13T07:07:35.295000",
                        "user": "Suleiman",
                        "text": "I love it"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-13T07:35:54.461000",
                        "user": "Suleiman",
                        "text": "@oaktownsam Unrelated just had a neat transducers idea: https://github.com/jackfirth/rebellion/issues/347"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-13T07:35:59.458000",
                        "user": "Suleiman",
                        "text": "whatcha think?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-13T07:37:19.291000",
                        "user": "Yiqun",
                        "text": "Yes. This is good."
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-13T07:37:39.419000",
                        "user": "Suleiman",
                        "text": "Got a use case in mind?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-13T07:38:13.532000",
                        "user": "Yiqun",
                        "text": "Not quite yet."
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-13T07:41:11.449000",
                        "user": "Suleiman",
                        "text": "I'm putting together a list of all the listprocessing functions in Racket's standard library because I want to work towards getting `rebellion/streaming` to feature parity with it"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-13T07:41:36.076000",
                        "user": "Suleiman",
                        "text": "and I came up with the idea for `forking` as a way to implement stuff like `splitat` and `partition`"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-13T07:46:54.506000",
                        "user": "Suleiman",
                        "text": "Hypothetical `splittingat` transducer:```(define (splittingat position beforetransducer aftertransducer) (define (before? e) (< (enumeratedposition e) position)) (transducerpipe enumerating (taggingbypredicate #:before before? #:after (negate before?)) (forking #:before beforetransducer #:after aftertransducer) (mapping variantvalue)))```Example:```> (transduce (inrange 0 100) (splittingat 50 (taking 5) (taking 3)) #:into intolist)(list 0 1 2 3 4 50 51 52)```"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-13T07:48:39.825000",
                        "user": "Suleiman",
                        "text": "Huh that is some wacky formatting and I have no idea why discord is doing that"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-16T09:18:44.217000",
                        "user": "Suleiman",
                        "text": "@WillBAnders What sort of operation are you trying to do?"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-16T09:20:28.801000",
                        "user": "Amri",
                        "text": "less than or equal. Right now I've got two layers of conditions and am using `(not (eq? cmp lesser))` or similar."
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-11-16T09:21:35.627000",
                        "user": "Amri",
                        "text": "```racket(let ([lower (rangelower range)]) (cond [(eq? lower unbounded) #t] [else (define cmp (compare comparator (boundvalue lower) value)) (if (boundincl lower) (not (eq? cmp greater)) (eq? cmp lesser))]))```"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-16T09:22:19.148000",
                        "user": "Amri",
                        "text": "Ideally there would something like `(compare<= comparator a b)` which would return a boolean."
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-16T09:23:03.069000",
                        "user": "Suleiman",
                        "text": "That looks about right to me yes. (But use `equal?` not `eq?`. You pretty much never want `eq?`.)"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-16T09:23:28.404000",
                        "user": "Suleiman",
                        "text": "It's wordy. There's three ways the situation could be improved:"
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-11-16T09:24:38.278000",
                        "user": "Amri",
                        "text": "I've been using `eq?` for identity."
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-11-16T09:28:53.754000",
                        "user": "Suleiman",
                        "text": "1. Add support for pattern matching with `racket/match` so you could do `(match (compare comparator x y) [greater ...] [lesser ...])` or whatnot.2. Add comparison functions like `compare<=`. Personally I'm not super excited at the idea because I _constantly_ screw up the argument order of the `<` / `>` / `<=` / `>=` functions particularly when used with two arguments where one is a constant and the other is a variable. It's a very bugprone API.3. Ask people to use comparators indirectly via things like `sorting` `intomax` / `intomin` and the range API. I think if these use cases are all addressed out of the box by Rebellion it will be very rare to actually _need_ to use comparators directly. So I lean towards this route."
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-11-16T09:30:17.498000",
                        "user": "Suleiman",
                        "text": "Don't bother using `eq?` for identity. Just use `equal?` everywhere the only time it won't do what you want is when comparing Racket's builtin mutable data structures. And I think it was a mistake to make mutable vectors / mutable lists / mutable hashes / etc. compare as `equal?` when they have the same elements but can be mutated independently."
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-11-16T09:31:44.206000",
                        "user": "Suleiman",
                        "text": "More background on the eq? / equal? / eqv? / = situation in racket: https://github.com/racket/rhombusbrainstorming/issues/16"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-11-16T21:07:38.430000",
                        "user": "Suleiman",
                        "text": "Hmmm. What about something like this:```racket(compareusing string<=> [\"foo < x <= bar\"])```"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-11-16T21:08:02.381000",
                        "user": "Suleiman",
                        "text": "Just don't even try to make it a function?"
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-11-16T22:24:54.023000",
                        "user": "Suleiman",
                        "text": "Definitely don't make it look like a function"
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-11-16T22:42:11.887000",
                        "user": "Suleiman",
                        "text": "Also thinking about indentation"
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-11-16T22:43:49.639000",
                        "user": "Suleiman",
                        "text": "Want to avoid this:```(compareusing string<=> foo\" <= x)```"
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-11-16T22:47:15.402000",
                        "user": "Suleiman",
                        "text": "@oaktownsam Sorted sets dicts multisets and multidicts would be a wonderful thing to have in Rebellion"
                    },
                    {
                        "message_number": "38",
                        "ts": "2019-11-16T22:57:30.065000",
                        "user": "Suleiman",
                        "text": "There's plenty to do \ud83d\ude42"
                    },
                    {
                        "message_number": "39",
                        "ts": "2019-11-17T01:06:38.729000",
                        "user": "Suleiman",
                        "text": "It would be handy to search for as many usages as possible of racket's `string<?` / `>=` / `symbol<=?` / etc. procedures to get a sense of how likely it is that a comparatorbased version would line wrap"
                    },
                    {
                        "message_number": "40",
                        "ts": "2019-11-17T07:26:00.137000",
                        "user": "Suleiman",
                        "text": "So `compose` combines functions in righttoleft order. This is hard to read compared to lefttoright order but there's no builtin function for that. What would a good name for lefttoright composition be?"
                    },
                    {
                        "message_number": "41",
                        "ts": "2019-11-17T07:27:52.794000",
                        "user": "Suleiman",
                        "text": "Things I've considered: `pipe` like you're sticking them together endtoend in a pipe `thrush` like the thrush combinator from To Mock a Mockingbird. Not a fan of this one anymore it's inscrutable. `fuse` meaning the same thing as `pipe` but it reads more clearly as a verb to me"
                    },
                    {
                        "message_number": "42",
                        "ts": "2019-11-17T07:29:42.128000",
                        "user": "Suleiman",
                        "text": "```racket(define foo1 (pipe abs sqrt number>string))(define foo2 (fuse abs sqrt number>string))```"
                    },
                    {
                        "message_number": "43",
                        "ts": "2019-11-17T08:25:19.412000",
                        "user": "Suleiman",
                        "text": "Setup of Rebellion's scribble docs is taking eight minutes and counting \ud83d\ude22"
                    },
                    {
                        "message_number": "44",
                        "ts": "2019-11-17T08:52:37.494000",
                        "user": "Suleiman",
                        "text": "oh for god's sake the problem was I wrote a oneoff script for querying scribble's crossreference index with `(loadcollectionsxref)` and I put that script in the rebellion/private folder so when raco setup was evaluating my scribble examples it somehow ended up trying to repeatedly reload the entire scribble cross reference table into memory several hundred times"
                    },
                    {
                        "message_number": "45",
                        "ts": "2019-11-17T08:53:03.380000",
                        "user": "Suleiman",
                        "text": "document build time before I removed the script: 20+ minutesdocument build time after I removed the script: 2 minutes"
                    }
                ]
            },
            {
                "conversation_id": "18",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-13T07:27:02.971000",
                        "user": "Yiqun",
                        "text": "Initially it was going to look more modernish but then I started set the font to a monospaced font and realized this is how it should look."
                    }
                ]
            },
            {
                "conversation_id": "19",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-13T11:17:18.314000",
                        "user": "Yanelly",
                        "text": "Hey is anyone working on gamejam"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-13T15:25:55.964000",
                        "user": "Yanelly",
                        "text": "@notjack I asked on rustlang discord and they said > `ctrl+r` to reload they seem to have (hot)fixed it"
                    }
                ]
            },
            {
                "conversation_id": "20",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-13T16:02:28.227000",
                        "user": "Yiqun",
                        "text": "Weird the formatting was fine for me the whole time (on Windows and Mac clients)"
                    }
                ]
            },
            {
                "conversation_id": "21",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-16T08:50:48.039000",
                        "user": "Amri",
                        "text": "@notjack How are you supposed to work with comparators? It seems like you have to pattern match on everything."
                    }
                ]
            },
            {
                "conversation_id": "22",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-16T17:40:19.085000",
                        "user": "Yanelly",
                        "text": "=tex \\\\int_0^{2\\\\pi} \\\\sin{(4\\\\theta)} \\\\mathrm{d}\\\\theta"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-16T17:40:21.799000",
                        "user": "Anakin",
                        "text": "None"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-16T17:42:27.904000",
                        "user": "Yanelly",
                        "text": "we now have mathbot if you don't know it you can type =help for instructions"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-16T19:35:35.770000",
                        "user": "Yiqun",
                        "text": "@WillBAnders @notjack I've considered conservatively adding some of https://srfi.schemers.org/srfi67/srfi67.html and https://docs.racketlang.org/data/Orders_and_Ordered_Dictionaries.html?q=data%2Fcompare features to comparators"
                    }
                ]
            },
            {
                "conversation_id": "23",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-16T22:14:34.527000",
                        "user": "Nyriah",
                        "text": "that's what I was saying (with fewer parens and it could be a function but being a function isn't the point)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-16T22:20:33.368000",
                        "user": "Nyriah",
                        "text": "Can't remember where I said it. Anyway it's my favorite option maybe with keywords for #:<= etc."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-16T22:37:42.061000",
                        "user": "Nyriah",
                        "text": "yeah those parens are good at visually separating the `string<=>` argument from the infix part so it doesn\\'t look like the arguments to `<` are `compareusing string<=> foo\"` and `x`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-16T22:52:31.732000",
                        "user": "Yiqun",
                        "text": "Oh I was just talking about comparison procedures/syntax"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-16T22:53:17.033000",
                        "user": "Yiqun",
                        "text": "I'll have to think more about `sorted` structures"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-17T00:41:54.337000",
                        "user": "Nyriah",
                        "text": "I would prefer not to use infix for things that span more than one line but `compareusing string<=>` probably is long enough that things will often be pushed off the end"
                    }
                ]
            },
            {
                "conversation_id": "24",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-17T10:48:24.430000",
                        "user": "Nyriah",
                        "text": "hooray! sounds like it'll be a lot more pleasant to develop the docs now XD"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-17T10:49:14.070000",
                        "user": "Nyriah",
                        "text": "the name I've been using for lefttoright composition is `chain`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-17T10:58:44.061000",
                        "user": "Nyriah",
                        "text": "Haskell uses `>>>` (and probably some others as well)... category theory uses a semicolon... looks like Scala uses `andThen`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-17T10:59:00.922000",
                        "user": "Suleiman",
                        "text": "`andThen` is what java and rust use too I think"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-17T10:59:27.936000",
                        "user": "Suleiman",
                        "text": "but that name really only works if its infix"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-17T10:59:46.636000",
                        "user": "Suleiman",
                        "text": "`(andthen foo bar baz)` just looks bizarre"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-17T10:59:51.111000",
                        "user": "Nyriah",
                        "text": "yeah all of those are infix names"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-17T11:01:04.574000",
                        "user": "Suleiman",
                        "text": "oh by the way transducer composition is merged now so you ought to be able to get a sorting transducer working :p"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-17T11:02:01.403000",
                        "user": "Nyriah",
                        "text": "the name `pipe` seems good to me especially for transducers since they've got input streams and output streams (even if they're not the port style of stream)"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-17T11:02:33.837000",
                        "user": "Nyriah",
                        "text": "that's awesome :) I'll look into it sometime in the next few days"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-17T11:03:49.920000",
                        "user": "Suleiman",
                        "text": "my recommendation is to wait until the package server renders the docs for it :p"
                    }
                ]
            },
            {
                "conversation_id": "25",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-17T20:15:27.129000",
                        "user": "Yiqun",
                        "text": "`pipe` and `thrush` are the first that come to mind. I prefer `pipe` myself"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-17T20:16:05.359000",
                        "user": "Yiqun",
                        "text": "The only reason I think `thrush` is because of doing FP for a while"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-18T22:14:36.560000",
                        "user": "Yiqun",
                        "text": "Thanks @StephenD !"
                    }
                ]
            },
            {
                "conversation_id": "26",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-18T22:12:55.597000",
                        "user": "Yanelly",
                        "text": "# 2019 Racket Advent of Code Leaderboard[Advent of Code](https://adventofcode.com/) is a fun contest to practice your Racket skills show off your Racket prowess and encourage others to explore the world of Language Oriented Programming. The contest starts December 1st and continues to Christmas (December 25.)This year I\\'ve organized a leaderboard for Racket enthusiasts. If you would like to participate use the leaderboard key below. Advent of Code Leaderboard Key: 22197a7a01707  Slack (invite link https://racketslack.herokuapp.com/):  #adventofcodeCheers,Sam"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-18T22:13:34.434000",
                        "user": "Yanelly",
                        "text": "(Copied from Racketusers)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-18T22:20:10.923000",
                        "user": "Yanelly",
                        "text": "Pinned a message."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-18T22:21:51.106000",
                        "user": "Yiqun",
                        "text": "@StephenD can we pin a link to how to join the Discord server? I've been unable to find it on my own."
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-18T22:28:05.173000",
                        "user": "Yanelly",
                        "text": "https://discord.gg/6Zq8sH5"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-18T22:28:30.337000",
                        "user": "Yanelly",
                        "text": "all they need is the link"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-18T22:32:37.628000",
                        "user": "Yiqun",
                        "text": "Yes that's the part I couldn't find"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-18T23:14:00.259000",
                        "user": "Yanelly",
                        "text": "https://racketnews.com/2019/11/racketnewsissue20.html"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-18T23:14:09.474000",
                        "user": "Yanelly",
                        "text": "Pinned a message."
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-19T05:13:09.533000",
                        "user": "Ahsan",
                        "text": "ooOoh a racket server"
                    }
                ]
            },
            {
                "conversation_id": "27",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T06:01:02.839000",
                        "user": "Suleiman",
                        "text": "oOoOo"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-19T07:21:59.452000",
                        "user": "Serenityrose",
                        "text": "morning"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-19T07:23:01.552000",
                        "user": "Serenityrose",
                        "text": "i'm starting with Racket and logged into IRC channel but wonder how active is slack channel (although i prefer discord over slack)?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-19T07:54:06.931000",
                        "user": "Suleiman",
                        "text": "The slack is more active than this discord. I think it's also more active than the irc but I'm not sure."
                    }
                ]
            },
            {
                "conversation_id": "28",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T08:12:48.452000",
                        "user": "Yanelly",
                        "text": "https://www.reddit.com/r/Racket/comments/dy9czt/whats_everyone_working_on_this_week_472019/?utm_source=share&utm_medium=ios_app&utm_name=iossmf"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-19T08:30:12.396000",
                        "user": "Serenityrose",
                        "text": "@notjack hmm...it would be good to integrate communication..."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-19T08:31:24.273000",
                        "user": "Suleiman",
                        "text": "I think it's okay that they're separate. The platforms might seem redundant but the user bases don't overlap as much as you'd think."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-19T08:32:20.073000",
                        "user": "Yanelly",
                        "text": "I miss the slack/irc integration."
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-19T08:33:29.067000",
                        "user": "Suleiman",
                        "text": "Me too"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-19T08:33:44.999000",
                        "user": "Suleiman",
                        "text": "I haven't been in the irc at all since the bridge went away"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-19T08:35:13.797000",
                        "user": "Suleiman",
                        "text": "unrelated transducers are making me sorely miss methodstyle function calls:```(intotransduced (taking 5) (mapping foo) #:into intolist)taking(5).andThen(mapping(foo)).andInto(intoList)```"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-19T08:36:05.956000",
                        "user": "Yanelly",
                        "text": "Why not have both?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-19T08:36:54.658000",
                        "user": "Suleiman",
                        "text": "maybe we will eventually!"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-19T08:37:06.564000",
                        "user": "Suleiman",
                        "text": "an sexp API and a Rhombus API"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-19T08:38:54.946000",
                        "user": "Yanelly",
                        "text": "I\u2019m not religious about it. I don\u2019t see a problem with Racket 1 (continuing ) to evolve."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-19T08:39:14.525000",
                        "user": "Yanelly",
                        "text": "I think it will anyway."
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-19T08:39:34.633000",
                        "user": "Suleiman",
                        "text": "Oh I'm certain it's gonna be more fork than replacement"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-19T08:39:53.124000",
                        "user": "Suleiman",
                        "text": "or maybe not fork so much as library\"?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-19T08:40:19.411000",
                        "user": "Suleiman",
                        "text": "`#lang` makes things that look like community splits actually not splits at all"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-19T08:40:29.747000",
                        "user": "Yanelly",
                        "text": "It\u2019s a great strength that there is no difference"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-19T08:40:52.347000",
                        "user": "Yanelly",
                        "text": "But a problem that most don\u2019t seem to understand this"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-19T08:41:11.954000",
                        "user": "Suleiman",
                        "text": "Gonna have to teach by example I suppose"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-19T08:43:06.871000",
                        "user": "Yanelly",
                        "text": "I think you are right  no one will believe it until racket itself is a mix of racket and rhombus just like it is currently a mix of typed and untyped racket"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-19T08:43:42.495000",
                        "user": "Suleiman",
                        "text": "Yup. Even when I tell people that racket is a mix of typed and untyped code and the type system is a library... it takes a few repetitions for that to actually sink in."
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-11-19T08:43:47.904000",
                        "user": "Suleiman",
                        "text": "what that _means_"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-11-19T08:44:26.650000",
                        "user": "Suleiman",
                        "text": "It's one of those things that sort of breaks some very fundamental assumptions people make about how programming languages work"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-11-19T08:44:42.347000",
                        "user": "Yanelly",
                        "text": "To be fair  it is completely alien and doesn\u2019t exist in any other language ecosystem"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-11-19T08:44:47.624000",
                        "user": "Suleiman",
                        "text": "That too"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-11-19T08:45:20.542000",
                        "user": "Suleiman",
                        "text": "the closest thing is like those extra type checkers you can run over annotated code but those are _tools_ and you have to like figure out how to set them up with your build system and your editor and your package manager and god knows what else"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-11-19T08:45:34.981000",
                        "user": "Suleiman",
                        "text": "a lot of people assume typed racket is like that too"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-11-19T08:48:25.213000",
                        "user": "Yanelly",
                        "text": "I\u2019m just thankful I found Racket. I\u2019ve learnt a lot."
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-11-19T08:48:47.763000",
                        "user": "Suleiman",
                        "text": "Me too \ud83d\ude42"
                    }
                ]
            },
            {
                "conversation_id": "29",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T10:36:30.834000",
                        "user": "Serenityrose",
                        "text": "_just decided to learn/use Racket for desktop gui app...instead of Eiffel \ud83d\ude07_"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-19T10:37:29.722000",
                        "user": "Serenityrose",
                        "text": "..but i wonder if I should wait for Rhombus \ud83d\ude15 \ud83d\ude09"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-19T15:19:20.878000",
                        "user": "Serenityrose",
                        "text": "@StephenD yeah i saw the Rhombus roadmap'...was just joking know when i decided to use Racket...but I did miss the info about compatibility with Racket  that's good to know!!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-19T15:20:03.417000",
                        "user": "Serenityrose",
                        "text": "@samth thanks. i'll leave IRC then..."
                    }
                ]
            },
            {
                "conversation_id": "30",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T13:19:33.874000",
                        "user": "Yanelly",
                        "text": "@gour Rhombus is in an early brainstorming phase that is specifically about the design of the language  the syntax and semantics . I\u2019m guessing it will be 23 years before anything called Rohmbus will be available. Certainly nothing in the near future."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-19T13:23:08.805000",
                        "user": "Yanelly",
                        "text": "@gour it will also be fully compatible with Racket and use the Racket crossplatform gui toolkit  so there is no benefit to waiting"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-19T14:05:57.555000",
                        "user": "Yanelly",
                        "text": "@notjack https://www.reddit.com/r/Racket/comments/dybh3q/racket_news_issue_20_racket_75_is_almost_here/f81bmu1/?utm_source=share&utm_medium=ios_app&utm_name=iossmf"
                    }
                ]
            },
            {
                "conversation_id": "31",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T14:28:57.174000",
                        "user": "Malichi",
                        "text": "Slack is significantly more active than IRC"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-19T17:20:58.604000",
                        "user": "Yiqun",
                        "text": "@notjack my $.02 I like the current transducer syntax better than a dot syntax."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-19T19:29:56.806000",
                        "user": "Yiqun",
                        "text": "I'm dealing with a python program I wrote a few years back this morning that essentially has a halfassed implementation of transducers in it."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-19T19:43:02.527000",
                        "user": "Yiqun",
                        "text": "None"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-19T19:44:00.357000",
                        "user": "Yiqun",
                        "text": "I probably have an implementation that is closer to transducers where I overload the pipe operator."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-19T19:44:48.705000",
                        "user": "Yiqun",
                        "text": "That is actually really explicit about passing around the data that is being munged"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-19T19:49:53.271000",
                        "user": "Yiqun",
                        "text": "If this script didn't have a bunch of scary additional parsing code (hidden inside `fixup_records`) this would be a good script to try to port to use transducers."
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-19T21:20:47.775000",
                        "user": "Yiqun",
                        "text": "No that is a bit of experiment for a hypothetical game jam entry that I probably won't finish in time but will probably hack around the edges of for 25 years"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-19T21:55:18.614000",
                        "user": "Yanelly",
                        "text": "FWIW as of right now these channels claim the following numbers"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-19T21:55:37.651000",
                        "user": "Yanelly",
                        "text": "racket discord 9"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-19T21:55:43.553000",
                        "user": "Yanelly",
                        "text": "slack 3"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-19T22:04:54.783000",
                        "user": "Yiqun",
                        "text": "Yeah that's surprising"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-19T22:07:04.490000",
                        "user": "Yiqun",
                        "text": "@StephenD `#racket: Total of 137 nicks`"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-19T22:07:08.522000",
                        "user": "Yiqun",
                        "text": "that's IRC"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-19T22:08:52.075000",
                        "user": "Suleiman",
                        "text": "Maybe a better metric would be something like number of distinct message / post authors in the last hour"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-19T22:09:00.353000",
                        "user": "Yiqun",
                        "text": "True."
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-19T22:09:18.827000",
                        "user": "Yiqun",
                        "text": "For IRC there were 2 people in since I last looked."
                    }
                ]
            },
            {
                "conversation_id": "32",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T18:36:46.022000",
                        "user": "Suleiman",
                        "text": "@StephenD yup I saw that person post about those on the scheme subreddit a while ago and we got to talking"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-19T18:37:45.052000",
                        "user": "Suleiman",
                        "text": "I still have no idea at all what they mean when they say their transducers are lazy and mine are eager. As far as I can tell they're both lazy."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-19T18:37:54.768000",
                        "user": "Yanelly",
                        "text": "Haha"
                    }
                ]
            },
            {
                "conversation_id": "33",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T20:31:38.437000",
                        "user": "Suleiman",
                        "text": "@oaktownsam is this what inspired that retrosheets repository you made recently?"
                    }
                ]
            },
            {
                "conversation_id": "34",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T21:55:27.883000",
                        "user": "Yanelly",
                        "text": "/r/racket 24"
                    }
                ]
            },
            {
                "conversation_id": "35",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T22:03:53.610000",
                        "user": "Suleiman",
                        "text": "Slack 3???"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-19T22:07:42.252000",
                        "user": "Jozee",
                        "text": "Perhaps not a lot of people idle there but instead check it now and then?Discord is a lot easier to just leave open for other servers"
                    }
                ]
            },
            {
                "conversation_id": "36",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-19T23:19:44.303000",
                        "user": "Yanelly",
                        "text": "https://racket.slack.com/stats#overview"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-19T23:20:45.057000",
                        "user": "Yanelly",
                        "text": "these stats are all a bit rubbish."
                    }
                ]
            },
            {
                "conversation_id": "37",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-20T00:00:34.177000",
                        "user": "Yiqun",
                        "text": "Too bad it doesn't look like the stats go back to when Matthew announced Racket2/Rhombus"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-20T18:09:32.804000",
                        "user": "Yiqun",
                        "text": "Goodbye old Rackets"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-20T22:15:28.221000",
                        "user": "Jozee",
                        "text": "A couple of professors at my university use Discord. Thankfully I've never heard about anything like that happening but the risk is definitely there."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-20T23:50:03.508000",
                        "user": "Yanelly",
                        "text": "I'm not that familiar with discord and its protections. I know you can block people and mark yourself as invisible. I was sort of assuming it was battletested due to being popular in with game communities."
                    }
                ]
            },
            {
                "conversation_id": "38",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-20T08:19:02.910000",
                        "user": "Serenityrose",
                        "text": "7.5 is out...CS is still beta..."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-20T08:22:59.183000",
                        "user": "Suleiman",
                        "text": "Oh God it's finally out now `rebellion/type` can actually work correctly with drracket's binding arrows"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-20T21:48:14.481000",
                        "user": "Yiqun",
                        "text": "Chat anecdote: my wife's friend is the Chair of the CS/Math Department at a nearby University and doesn't do Discord Slack or any other chat because it is too easy for students to harass him."
                    }
                ]
            },
            {
                "conversation_id": "39",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-20T22:23:44.387000",
                        "user": "Suleiman",
                        "text": "@oaktownsam (I\\'m assuming you meant harass as in pester for help on homework and not something like actively stalk\")"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-20T22:31:14.150000",
                        "user": "Yiqun",
                        "text": "Well...."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-20T22:32:16.122000",
                        "user": "Yiqun",
                        "text": "Apparently his gaming vice of choice is World of Warcraft so I joked Professor J\\'s office hours are 45 fighting Orcs."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-20T23:57:57.659000",
                        "user": "Suleiman",
                        "text": "There's the usual banning and kicking features as well"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-11-20T23:58:13.756000",
                        "user": "Suleiman",
                        "text": "also muting"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-11-21T00:02:09.641000",
                        "user": "Yanelly",
                        "text": "More pressing matters: only 9 days left in the gamejam!"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-11-21T00:04:02.797000",
                        "user": "Suleiman",
                        "text": "\ud83d\ude2e"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-11-21T00:04:15.681000",
                        "user": "Suleiman",
                        "text": "my vacation starts tuesday next week"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-11-21T00:06:44.875000",
                        "user": "Janaiah",
                        "text": "Sweet!"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-11-21T00:08:48.317000",
                        "user": "Yanelly",
                        "text": "Have a good vacation!"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-11-21T00:11:13.154000",
                        "user": "Jozee",
                        "text": "My vacation starts then too"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-11-21T00:12:01.601000",
                        "user": "Jozee",
                        "text": "I'm hoping to start really delving into learning Racket then. Perhaps sooner if I can! I've only been able to play around thus far"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-11-21T00:12:23.118000",
                        "user": "Yanelly",
                        "text": "If anyone who isn't going on vacation is interested there is a distinct lack of Frogger style games."
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-11-21T00:12:43.615000",
                        "user": "Suleiman",
                        "text": "Oh I was planning to start a game during my vacation :p sounds like fun"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-11-21T00:14:04.109000",
                        "user": "Yanelly",
                        "text": "If you are not familiar with frogger just think of a 2d crossy road with a top down perspective"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-11-21T00:17:57.386000",
                        "user": "Yanelly",
                        "text": "this is a python example https://github.com/WireframeMagazine/Wireframe27"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-11-21T08:49:56.437000",
                        "user": "Yanelly",
                        "text": "Submissions due in7days2hours9minutes57secondsJoin jamhttps://itch.io/jam/racket2019gamejam"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-11-25T08:49:27.258000",
                        "user": "Twyla",
                        "text": "I had to port my project from Racket to Hy. \ud83d\ude14"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-11-25T08:49:44.912000",
                        "user": "Twyla",
                        "text": "I really need Python libraries so it can't be helped."
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-11-25T08:50:39.811000",
                        "user": "Yanelly",
                        "text": "Which python libraries?"
                    }
                ]
            },
            {
                "conversation_id": "40",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-21T01:02:57.843000",
                        "user": "Yiqun",
                        "text": "If you are not familiar with frogger ... that makes me feel old. :p"
                    }
                ]
            },
            {
                "conversation_id": "41",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-23T08:59:31.960000",
                        "user": "Amri",
                        "text": "Sigh. Getting really tired of the complexity of Racket's macro system especially with the lack of types documentation and effective error messages. The less functional languages I work with the better."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-23T10:28:43.862000",
                        "user": "Amri",
                        "text": "@notjack Honestly I can't believe this even works.```racket(define r (range #:incl 1 10 #:cmp real<=> #:dom integers))```I'll clean it up an append a commit sometime in the next day or two with some info + updates."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-11-27T08:44:24.093000",
                        "user": "Amri",
                        "text": "@notjack Clarification on contracts please: Something like `range?` is simply `predicate/c` as it's `(> any/c boolean?)`. If I have something that's `(> range? boolean?)` would I write it like that each time or should I use `predicate/c` or is there something else I should do instead?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-11-28T02:13:36.348000",
                        "user": "Amri",
                        "text": "I think I'm making a mistake."
                    }
                ]
            },
            {
                "conversation_id": "42",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-25T09:03:54.316000",
                        "user": "Twyla",
                        "text": "Tensorflow & Keras"
                    }
                ]
            },
            {
                "conversation_id": "43",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-27T19:06:26.441000",
                        "user": "Suleiman",
                        "text": "@WillBAnders Correct. Use `predicate/c` instead of `(> any/c boolean?)`."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-11-27T19:08:01.931000",
                        "user": "Amri",
                        "text": "Right. And then in the other case testing shows that `predicate/c` isn't right which makes sense."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-02T21:18:15.367000",
                        "user": "Suleiman",
                        "text": "doin some Advent of Code with Rebellion!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-02T21:18:45.321000",
                        "user": "Suleiman",
                        "text": "puzzle 1 part 1 solution using transducer pipeline:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-02T21:18:52.618000",
                        "user": "Yanelly",
                        "text": "nice"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-02T21:19:57.090000",
                        "user": "Amri",
                        "text": "I've been chilling with Elixir on things. Need to set up some type of base library to help me to get through things quickly."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-02T21:20:51.130000",
                        "user": "Yanelly",
                        "text": "I've discovered from the programminglanguages discord server that it is possible to bridge discord server channels to irc(freenode) is this desirable? (I'm assuming slack/irc bridge gone forever)"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-02T21:22:29.265000",
                        "user": "Suleiman",
                        "text": "I think it's worth trying at the least"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-02T21:22:40.047000",
                        "user": "Amri",
                        "text": "Indeed. You're in there now too?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-02T21:24:19.870000",
                        "user": "Yanelly",
                        "text": "I've joined the the programminglanguages discord server yes."
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-02T21:24:54.681000",
                        "user": "Suleiman",
                        "text": "what server is that?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-02T21:26:17.676000",
                        "user": "Yanelly",
                        "text": "Do you want me to dig up the invite?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-02T21:26:23.096000",
                        "user": "Yanelly",
                        "text": "/website?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-02T21:31:31.148000",
                        "user": "Amri",
                        "text": "https://proglangdesign.net"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-02T21:32:01.091000",
                        "user": "Amri",
                        "text": "It's a server for discussing programming languages generally design and implementation. Most of the people there are creating their own languages and such."
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-02T21:33:31.811000",
                        "user": "Suleiman",
                        "text": "I might hop into that one later today"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-12-02T21:33:40.010000",
                        "user": "Suleiman",
                        "text": "right now tho I'm about to head onto a plane"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-12-02T21:33:49.782000",
                        "user": "Suleiman",
                        "text": "also I just finished day 1 part 2 of AoC \ud83d\ude04"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-12-02T21:33:50.284000",
                        "user": "Yanelly",
                        "text": "Yes but it seems more about compiler implementation than the HCI side of things. (my interest)"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-12-02T21:34:22.714000",
                        "user": "Yanelly",
                        "text": "But don't take my word for it  I've only ever looked briefly  so I havn't discarded it."
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-12-02T21:34:40.269000",
                        "user": "Amri",
                        "text": "There's things for both. I'd actually say it's less to do with compiler implementation and much more to do with design."
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-12-02T21:35:46.451000",
                        "user": "Yanelly",
                        "text": "@WillBAnders I'll have to spend some time there. And maybe look at the reddit too."
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-12-02T21:35:57.611000",
                        "user": "Amri",
                        "text": "no idea what happens with reddit"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-12-02T21:37:37.017000",
                        "user": "Yanelly",
                        "text": "https://www.reddit.com/r/ProgrammingLanguages/ some design stuff."
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-12-02T21:38:34.988000",
                        "user": "Suleiman",
                        "text": "Oh I'm in that subreddit already nice"
                    }
                ]
            },
            {
                "conversation_id": "44",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-11-28T09:32:35.175000",
                        "user": "Twyla",
                        "text": "Haha"
                    }
                ]
            },
            {
                "conversation_id": "45",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-02T22:01:53.750000",
                        "user": "Yiqun",
                        "text": "PL people are either kooks or sober grounded engineers."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-02T22:02:12.423000",
                        "user": "Yiqun",
                        "text": "This is based on twenty years of observation"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-02T22:03:22.434000",
                        "user": "Yiqun",
                        "text": "The scheme community has a similar problem."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-02T22:03:40.743000",
                        "user": "Yiqun",
                        "text": "those are my hot takes of the day"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-03T19:14:02.713000",
                        "user": "Suleiman",
                        "text": "The day 2 advent of code problem has me wishing that rebellion included a decent persistent vector API"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-04T10:23:57.324000",
                        "user": "Twyla",
                        "text": "I finished day 1 part 1 of AoC. I've just recently started to program"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-04T10:25:38.159000",
                        "user": "Twyla",
                        "text": "Not going to attempt the others"
                    }
                ]
            },
            {
                "conversation_id": "46",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-04T10:34:46.951000",
                        "user": "Twyla",
                        "text": "Why not?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-04T12:26:33.856000",
                        "user": "Twyla",
                        "text": "They seem a bit advanced we'll see"
                    }
                ]
            },
            {
                "conversation_id": "47",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-04T18:18:33.909000",
                        "user": "Suleiman",
                        "text": "The day 2 one seemed like a weirdly sudden jump in complexity"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-04T21:26:02.878000",
                        "user": "Suleiman",
                        "text": "Record type pattern matching idea: `(person name age)` as a synonym for `(person #:name name #:age age)`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-04T21:27:30.788000",
                        "user": "Suleiman",
                        "text": "Hmmm. Or maybe `(person p)` as a synonym for `(person #:name p.name #:age p.age)`."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-04T21:32:35.288000",
                        "user": "Suleiman",
                        "text": "The former"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-04T21:35:59.027000",
                        "user": "Suleiman",
                        "text": "Rebellion really needs pattern matching"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-04T21:36:11.482000",
                        "user": "Yiqun",
                        "text": "Yes."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-04T21:36:29.301000",
                        "user": "Yiqun",
                        "text": "I cobbled together a `variant` matcher somewhere"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-04T21:36:36.747000",
                        "user": "Suleiman",
                        "text": "(advent of code is harshly reminding me of this every day)"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-04T21:36:54.637000",
                        "user": "Suleiman",
                        "text": "Yes! I think it was in your gist of using rebellion in anger"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-04T21:36:59.199000",
                        "user": "Suleiman",
                        "text": "Super good idea"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-04T21:38:04.565000",
                        "user": "Yiqun",
                        "text": "From a macro reftransparency angle I kinda hate `(person p)` but ergonomically I love it."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-04T21:38:40.533000",
                        "user": "Suleiman",
                        "text": "Tell me more about your hate \ud83d\ude1b"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-04T21:38:57.206000",
                        "user": "Yiqun",
                        "text": "You don't totally know what names are getting bound"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-04T21:39:24.787000",
                        "user": "Yiqun",
                        "text": "I guess `syntaxparse` classes with attributes are about the same though"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-04T21:40:09.966000",
                        "user": "Suleiman",
                        "text": "Nesting would be tricky too"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-04T21:41:15.164000",
                        "user": "Suleiman",
                        "text": "How to bind `p.favoritecolor.redcomponent`?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-12-04T21:44:04.348000",
                        "user": "Suleiman",
                        "text": "At the least I think `(typename #:fieldname fieldpattern ...)` is a useful core pattern to build more complex sugar on top of"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-12-04T21:50:10.104000",
                        "user": "Yiqun",
                        "text": "Yes"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-12-04T21:50:53.302000",
                        "user": "Yiqun",
                        "text": "Record names don't bind any static information?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-12-04T21:51:02.828000",
                        "user": "Yiqun",
                        "text": "Last I remember seeing anyway..."
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-12-04T21:53:58.793000",
                        "user": "Suleiman",
                        "text": "Not yet"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-12-04T22:06:31.888000",
                        "user": "Suleiman",
                        "text": "my current plan is to first add a system for making it easier to bind static information"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-12-04T22:07:08.078000",
                        "user": "Suleiman",
                        "text": "since there are a lot of other kinds of static info I want to throw around including basic function arity information so I can finally have a damn static arity checker"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-12-04T22:07:52.670000",
                        "user": "Yiqun",
                        "text": "expansion time transducer protocol"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-12-04T22:07:57.535000",
                        "user": "Suleiman",
                        "text": "that too"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-12-04T22:14:27.216000",
                        "user": "Suleiman",
                        "text": "I\\'ve been calling the system syntax annotations and it works like this: An annotation is a pair of an annotation type and an identifier. That identifier must be bound with `definesyntax` to a value (the _annotation value_) and that value must satisfy a contract defined by the annotation type. You can add annotations to an identifier using `(makeannotationtransformer originalid annotationtype annotationid ... ...)` which makes a syntax transformer that\\'s basically just a rename transformer that points to `originalid`. So `syntaxlocalvalue` will still work and ignore annotations. You can get annotations by using something like `(identifierannotation id annotationtype)` which finds the `annotationid` for that type on the identifier and then calls `syntaxlocalvalue` on it to extract the value."
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-12-04T22:14:56.948000",
                        "user": "Suleiman",
                        "text": "So basically every identifier just gets an extensible expansiontime hashmap you can stick stuff into and the keys hold contracts that their corresponding values have to satisfy."
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-12-05T07:35:36.058000",
                        "user": "Suleiman",
                        "text": "day 5 advent of code reactions: gasp! Intcode is back!"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-12-05T18:55:54.927000",
                        "user": "Suleiman",
                        "text": "mflatt asked me to write a proposal for transducers in Rhombus!!"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-12-05T20:12:57.638000",
                        "user": "Suleiman",
                        "text": "Stdlib improvements would be wonderful"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-12-05T21:44:36.409000",
                        "user": "Yanelly",
                        "text": "@oaktownsam what\u2019s missing/weak in Net ?https://docs.racketlang.org/net/index.html"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-12-05T21:48:37.601000",
                        "user": "Suleiman",
                        "text": "so _so_ many things"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-12-05T21:49:10.361000",
                        "user": "Yanelly",
                        "text": "Ok"
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-12-05T21:49:21.378000",
                        "user": "Yanelly",
                        "text": "What\u2019s the worst omission"
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-12-05T21:58:24.691000",
                        "user": "Yiqun",
                        "text": "I can only comment on what I've used.The basic HTTP client in `net/url` is not good. `net/httpclient` is better but you have to roll your own message objects or somesuch. Neither support cookies (not that I'm a cookie fan but in the world we need to use cookies.)`net/head` is not a good (IMO) representation for RFC822 headers`net/smtp` only works for sending a message`net/imap` good the few times I've had to use it. (except it uses `net/head`)"
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-12-05T21:59:14.079000",
                        "user": "Yiqun",
                        "text": "Not that other languages libraries are better. Most of the builtin networking libs in Python have similar problems but there are good replacements in the community (`requests` comes to mind.)"
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-12-05T22:00:56.277000",
                        "user": "Yiqun",
                        "text": "I have a web library based on some ideas I've had python's `requests` library and the HTTP library that @notjack has on the pkg server."
                    },
                    {
                        "message_number": "38",
                        "ts": "2019-12-05T22:03:50.902000",
                        "user": "Yiqun",
                        "text": "Other stdlib thought I think there is some nice unixy things that are either not there obscured or used in a OS neutral way. Like file notifications."
                    },
                    {
                        "message_number": "39",
                        "ts": "2019-12-05T22:06:38.719000",
                        "user": "Suleiman",
                        "text": "just some decent data types would go a long way to improve the situation"
                    },
                    {
                        "message_number": "40",
                        "ts": "2019-12-05T22:06:57.886000",
                        "user": "Yiqun",
                        "text": "tru"
                    },
                    {
                        "message_number": "41",
                        "ts": "2019-12-05T22:07:25.091000",
                        "user": "Suleiman",
                        "text": "Like a `header?` type that casenormalized the keys and checked that keys and values are legal bytes"
                    },
                    {
                        "message_number": "42",
                        "ts": "2019-12-05T22:08:33.772000",
                        "user": "Suleiman",
                        "text": "Also the clientside stuff is very awkward to use. The `call/inputurl` + `getpureport` / `getimpureport` / `purifyport` combination is so painful and completely unnecessary"
                    },
                    {
                        "message_number": "43",
                        "ts": "2019-12-05T23:26:37.776000",
                        "user": "Suleiman",
                        "text": "random thought: sometimes the most impressive thing a library can do is not surprise you"
                    },
                    {
                        "message_number": "44",
                        "ts": "2019-12-06T00:03:23.363000",
                        "user": "Amri",
                        "text": "Did some socket stuff in Java and it sucks."
                    },
                    {
                        "message_number": "45",
                        "ts": "2019-12-06T00:07:38.158000",
                        "user": "Suleiman",
                        "text": "oh dear"
                    }
                ]
            },
            {
                "conversation_id": "48",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-04T18:44:59.432000",
                        "user": "Yiqun",
                        "text": "Yeah"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-04T21:32:13.903000",
                        "user": "Yiqun",
                        "text": "rebellion struct records or record records?"
                    }
                ]
            },
            {
                "conversation_id": "49",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-05T15:33:26.170000",
                        "user": "Yiqun",
                        "text": "By the end of this years advent of code you will have implemented MacLisp for your intcode machine."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-05T19:14:13.274000",
                        "user": "Yiqun",
                        "text": "neato"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-05T19:15:29.207000",
                        "user": "Yiqun",
                        "text": "I've kinda fallen off following Rhombus. I think they have a lot of good ideas for core but I feel like the standard lib could use improvements."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-05T19:15:46.639000",
                        "user": "Yiqun",
                        "text": "Like most of the networking stuff is ... not great"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-05T19:16:20.458000",
                        "user": "Yiqun",
                        "text": "(of course stdlib improvements can be done without a new core language)"
                    }
                ]
            },
            {
                "conversation_id": "50",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-06T00:03:57.360000",
                        "user": "Amri",
                        "text": "if you open the input stream before the output stream it hangs."
                    }
                ]
            },
            {
                "conversation_id": "51",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-06T00:55:41.687000",
                        "user": "Twyla",
                        "text": "Amazing."
                    }
                ]
            },
            {
                "conversation_id": "52",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-06T04:12:52.986000",
                        "user": "Twyla",
                        "text": "I put together a silly little script to try out `charterm` only to find out it doesn't support colours so I had to hack that in myself."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-06T04:13:03.889000",
                        "user": "Twyla",
                        "text": "https://gist.github.com/erkin/f3a4edb23fb11744926faeed77ea9124"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-06T04:14:02.019000",
                        "user": "Twyla",
                        "text": "So technically it only gets the terminal width from `charterm` and nothing else."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-06T05:59:33.557000",
                        "user": "Twyla",
                        "text": "Boo it's pointless. I'll just replace it with a call to `stty`."
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-06T06:15:03.211000",
                        "user": "Yiqun",
                        "text": "I found charterm lacking"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-06T06:33:35.378000",
                        "user": "Twyla",
                        "text": "I appreciate the effort put into making it compatible with a lot of platforms but there isn't much to use."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-06T18:17:32.938000",
                        "user": "Twyla",
                        "text": "The comments seem to be more or less on the negative side."
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-06T20:17:42.826000",
                        "user": "Yiqun",
                        "text": "None"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-06T22:31:08.327000",
                        "user": "Yiqun",
                        "text": "More re: stdlib stuff I think there are things that have been released as part of the core download that should not be there/moved into separate packages. Things like honu (which I conceptually like a lot and believe it is valuable research) are in the main distribution and probably shouldn't be."
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-06T23:00:12.452000",
                        "user": "Yiqun",
                        "text": "I'll defer to `racket/base` experts on that one. There lies a twisty set of requires and bootstrapping."
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-07T00:23:04.376000",
                        "user": "Yanelly",
                        "text": "there are a couple of plugins in DrRacket that should be off by default."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-07T05:33:06.558000",
                        "user": "Suleiman",
                        "text": "@sodaplayer I think they are except the output parameters:> Parameters that an instruction writes to will never be in immediate mode."
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-07T05:33:36.270000",
                        "user": "Suleiman",
                        "text": "(I'm about to try day 5 myself)"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-07T05:37:04.849000",
                        "user": "Rosemberg",
                        "text": "Ahh I think I have a clearer idea now. I was confused for a bit. I wasn't sure if something like `3,0` meant save the input at position `0` or save the input at the value in position `0` so `3`"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-07T05:38:39.835000",
                        "user": "Rosemberg",
                        "text": "So the results being`input,0` vs `3,0,,input` But I suppose the former matches Day 2 semanticsAhh this helps:https://www.reddit.com/r/adventofcode/comments/e7adao/2019_day_5_question_about_what_counts_as_an_opcode/f9wtvxy/"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-07T07:43:44.480000",
                        "user": "Yiqun",
                        "text": "@Deleted User You're right I think honu got moved out a couple years ago. I swear it was there."
                    }
                ]
            },
            {
                "conversation_id": "53",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-06T16:45:09.045000",
                        "user": "Yanelly",
                        "text": "Honu: Lisp with Algol Syntax (2012) [pdf] | Hacker Newshttps://news.ycombinator.com/item?id=21721163"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-06T18:54:34.469000",
                        "user": "Suleiman",
                        "text": "Yup"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-06T19:12:31.150000",
                        "user": "Yanelly",
                        "text": "That sounds like HN."
                    }
                ]
            },
            {
                "conversation_id": "54",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-06T22:38:11.068000",
                        "user": "Suleiman",
                        "text": "Also the `racket/base` module itself could use a lot of splitting up"
                    }
                ]
            },
            {
                "conversation_id": "55",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-07T04:50:42.713000",
                        "user": "Twyla",
                        "text": "Huh I never realised Honu is in the main distribution."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-07T04:51:29.786000",
                        "user": "Twyla",
                        "text": "Ah it's not it seems."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-07T04:51:34.270000",
                        "user": "Twyla",
                        "text": "At least not on my end."
                    }
                ]
            },
            {
                "conversation_id": "56",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-07T05:12:39.831000",
                        "user": "Rosemberg",
                        "text": "Anyone doing AoC day five do you know if opcodes 3 and 4 are also configurable with a mode?"
                    }
                ]
            },
            {
                "conversation_id": "57",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-07T06:29:59.360000",
                        "user": "Suleiman",
                        "text": "feature wishlist inspired by advent of code: data types for numbers packed together as separate digits of a single number"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-07T07:46:09.688000",
                        "user": "Suleiman",
                        "text": "Adjustable base is definitely good idea"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-07T07:46:29.813000",
                        "user": "Suleiman",
                        "text": "I think I lean towards just picking a few standard bases rather than making the API baseagnostic"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-07T07:46:49.730000",
                        "user": "Suleiman",
                        "text": "like `definepackedintegertype` / `definepackedbytestringtype` / `definepackedbitstringtype`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-07T07:47:03.810000",
                        "user": "Suleiman",
                        "text": "(or maybe `definepackedbytestype`)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-07T09:19:45.642000",
                        "user": "Suleiman",
                        "text": "I made a transducer that runs an Intcode program!```(transduce (list 1) (executingintcodeprogram programtext) #:into intolist)```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-07T09:20:22.877000",
                        "user": "Suleiman",
                        "text": "you give it a sequence of inputs to the program and it produces the program's sequence of outputs"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-07T09:20:41.892000",
                        "user": "Suleiman",
                        "text": "(for the day 5 version of the intcode machine that is)"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-07T10:29:18.502000",
                        "user": "Suleiman",
                        "text": "There's the announcement post I made about the transducers library that gives a quick overview: https://groups.google.com/forum/#!msg/racketusers/AxNC_9Xivlo/HGr5wq6CAQAJ"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-07T17:55:03.775000",
                        "user": "Suleiman",
                        "text": "Yup"
                    }
                ]
            },
            {
                "conversation_id": "58",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-07T06:34:34.710000",
                        "user": "Suleiman",
                        "text": "hypothetical example:```(definepackedintegertype instructiontype (thirdparametermode #:width 1 #:default 0) (secondparametermode #:width 1 #:default 0) (firstparametermode #:width 1 #:default 0) (opcode #:width 2))> (decodeinstructiontype 1002)(instructiontype #:opcode 2 #:firstparametermode 0 #:secondparametermode 1 #:thirdparametermode 2)```"
                    }
                ]
            },
            {
                "conversation_id": "59",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-07T07:38:35.269000",
                        "user": "Yiqun",
                        "text": "Make it so you can adjust the base. So base10 packed binary packeted nybble packed."
                    }
                ]
            },
            {
                "conversation_id": "60",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-07T10:25:22.396000",
                        "user": "Rosemberg",
                        "text": "Do you have any favorite resources for explaining what a transducer is? I vaguely remember hearing a Clojure talk mention them but I don\u2019t remember what they do"
                    }
                ]
            },
            {
                "conversation_id": "61",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-07T17:38:45.217000",
                        "user": "Yanelly",
                        "text": "@notjack you should add the quick overview from your announcement to https://docs.racketlang.org/rebellion/Transducers.html"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-08T05:53:31.035000",
                        "user": "Twyla",
                        "text": "Dealing with so much Python made me appreciate the beauty of Racket once again."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-08T05:53:52.716000",
                        "user": "Twyla",
                        "text": "The library support is almost worse for basic things I've grown to take for granted."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-08T05:54:15.384000",
                        "user": "Twyla",
                        "text": "It just has a lot of thirdparty libraries because it's popular."
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-08T05:54:27.410000",
                        "user": "Twyla",
                        "text": "That's pretty much the only upside I've seen."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-08T05:59:30.071000",
                        "user": "Twyla",
                        "text": "Maybe it's because I spent so much time with sexps but I think Python's syntax is actually super clunky. It tries to look clean by sweeping a lot of semantic baggage under the rug with things like tuples encourages repetitive and verbose code constantly mixes highlevel and lowlevel code in the same library and will go out of its way to sabotage your attempts to work around its opinionated semantics."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-08T06:01:58.928000",
                        "user": "Twyla",
                        "text": "A lot of its features that people sing praises of are actually hackish workarounds of its limitations."
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-08T08:49:55.180000",
                        "user": "Amri",
                        "text": "```Exceptions are cleared because with the traceback attached to them they form a reference cycle with the stack frame keeping all locals in that frame alive until the next garbage collection occurs.```I don't have the background to understand the solution space here but there's definitely some reason behind it. Personally I would just require unique names but whatev. Not a fan of dynamic languages anyways."
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-08T08:56:21.699000",
                        "user": "Suleiman",
                        "text": "Yeah the thing that\\'s whack to me is that they committed to no variables in `except` clauses are tied to function scope `except` doesn\\'t introduce a new scope"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-08T09:00:20.460000",
                        "user": "Amri",
                        "text": "\u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-08T09:00:27.377000",
                        "user": "Amri",
                        "text": "python's scope is wack"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-08T09:00:39.478000",
                        "user": "Amri",
                        "text": "C/++ does this with switch cases as well"
                    }
                ]
            },
            {
                "conversation_id": "62",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-08T08:27:46.538000",
                        "user": "Suleiman",
                        "text": "This is my (least?) favorite example of Python fully and purposefully committing to being fucking _whack_: https://stackoverflow.com/questions/29268892/python3exceptiondeletesvariableinenclosingscopeforunknownreason"
                    }
                ]
            },
            {
                "conversation_id": "63",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-08T09:57:58.795000",
                        "user": "Twyla",
                        "text": "Even with Hy I couldn\\'t get around Python\\'s my way or highway attitude."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-08T09:58:54.753000",
                        "user": "Twyla",
                        "text": "I still need to rely on `for` over `range` and `enumerate` to loop without shooting myself in the foot even for something as simple as `foreach`."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-08T10:02:56.304000",
                        "user": "Twyla",
                        "text": "Hy's `lfor` is a neat macro on top of Python's list comprehensions and I can poke and prod it until it resembles `for/list`."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-08T10:03:49.029000",
                        "user": "Twyla",
                        "text": "```Hy(lfor path (.iterdir (Path songdirectory)) :if (.is_file path) :setv song (readsong path) :if (not (none? song)) song)```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-08T10:05:30.200000",
                        "user": "Twyla",
                        "text": "I realised I could just do `song` in place of `(not (none? song))` since `None` is falsy."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-08T10:10:28.504000",
                        "user": "Twyla",
                        "text": "This is the pretty part. The grotty part follows:We have no `match` Hy uses a verbose `(get collection index)` in place of `collection[index]` resulting in this mess:```Hy(lfor ( line0 line1) (zip lines (rest lines)) :if (and (in (get line0 1) usefulnotes) ; Only take note lines (in (get line1 1) usefulnotes)) (makenote (int (get line0 4)) ; Holdrian comma (int (get line0 10)) ; Velocity (round (float (get line0 12)) 2) ; Offset (round ( (float (get line1 12)) ; Duration (float (get line0 12))) 2)))```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-08T10:13:46.219000",
                        "user": "Twyla",
                        "text": "Also `x y = foo` becomes `(setv ( x y) foo)` and `x[y] = bar` becomes `(setv (get x y) bar)` which meld into noise in nested loops.```Hy(defn readbatch [notes uniques] (setv batch (int (/ (get notes.shape 0) batchsize)) ; Batch shape batchcount (range 0 ( batch sequencelength) sequencelength)) (for [start batchcount] ; Batch (setv x (np.zeros ( batchsize sequencelength)) y (np.zeros ( batchsize sequencelength uniques))) (for [index (range batchsize)] ; Batch row (for [i (range sequencelength)] ; Batch column (setv (get x ( index i)) (get notes (+ start i ( index batch)))) (setv (get y ( index i (get notes (+ start i 1 ( index batch))))) 1))) (yield ( x y))))```"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-08T10:15:48.243000",
                        "user": "Twyla",
                        "text": "Using Hy to get Python to look better is like the cartoon gag of stomping on a bump in the carpet to flatten it only for another one to appear elsewhere. :("
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-08T19:22:51.907000",
                        "user": "Twyla",
                        "text": "Oh sorry my rant went a bit overboard."
                    }
                ]
            },
            {
                "conversation_id": "64",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-08T17:25:48.925000",
                        "user": "Yanelly",
                        "text": "Is `Hy` _Off Topic_ on this server?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-09T07:57:15.012000",
                        "user": "Suleiman",
                        "text": "I started working on an RFC for stream pipelines powered by transducers and reducers: https://github.com/jackfirth/rhombusbrainstorming/blob/streampipeline/stream_pipelines.md"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-10T00:00:45.273000",
                        "user": "Suleiman",
                        "text": "They're similar. The big difference is that transducers are not concurrent."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-10T00:02:10.617000",
                        "user": "Suleiman",
                        "text": "So you can do stuff like sorting and filtering but you can\\'t make a transducer that does something like add a onesecond delay between each element"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-10T00:05:48.990000",
                        "user": "Suleiman",
                        "text": "If you're familiar with Rx operators `debounce` and `throttle` are good examples of Rx features that can't be modeled with transducers (nor should they be)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-10T00:49:47.884000",
                        "user": "Suleiman",
                        "text": "You could but please don't :p"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-10T00:51:21.552000",
                        "user": "Suleiman",
                        "text": "Doing any sort of communication in the handlers given to `maketransducer` will cause problems"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-10T00:57:24.600000",
                        "user": "Suleiman",
                        "text": "(I'm not sure _what_ problems but there will definitely be problems)"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-10T02:29:10.905000",
                        "user": "Suleiman",
                        "text": "does it work like `mapping` where it just alternates between consuming and emitting?"
                    }
                ]
            },
            {
                "conversation_id": "65",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-09T21:21:44.782000",
                        "user": "Rosemberg",
                        "text": "Reading up on Transducers a bit more. I'm a bit reminded of Rx stuff. Am I on the right track in understanding them? What's the difference between Rx Observables and them?"
                    }
                ]
            },
            {
                "conversation_id": "66",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-10T00:30:47.454000",
                        "user": "Yiqun",
                        "text": "This is probably completely different from what you're talking about but ...Couldn't you make a transducer that spawns a thread and is connected to the rest of the pipeline using channels?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-10T00:31:46.350000",
                        "user": "Yiqun",
                        "text": "(or even one that starts a separate place?)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-10T01:52:12.328000",
                        "user": "Yiqun",
                        "text": "I tried to make a transducer (for fun\") that worked like this (but with continuations):```(magicking  (lambda (read write) ...))```Where the `read : > value` and `write : value > Void` are connected to the callbacks."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-10T01:54:28.640000",
                        "user": "Yiqun",
                        "text": "It's fairly trivial with channels and could be mostly synchronous with the rest of the transducer processes (I think.)Like some things I don't have a usecase so it's not really worth pursuing"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-10T02:33:02.022000",
                        "user": "Yiqun",
                        "text": "No you could call one or the other. Actually I can see it getting into a weird wedged state."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-10T02:33:09.932000",
                        "user": "Yiqun",
                        "text": "Anyway not worth doing \ud83d\ude42"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-10T02:33:23.284000",
                        "user": "Yiqun",
                        "text": "More of a puzzle to see if it could fit."
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-10T02:34:35.145000",
                        "user": "Suleiman",
                        "text": "Ohhhhhh now I see what you're going for"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-10T02:35:13.848000",
                        "user": "Suleiman",
                        "text": "So it'd work like `yield` does in Python coroutines?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-10T02:40:24.552000",
                        "user": "Yiqun",
                        "text": "yes"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-10T02:40:35.924000",
                        "user": "Yiqun",
                        "text": "Or like a unix process connected to pipes"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-10T02:41:22.538000",
                        "user": "Suleiman",
                        "text": "Yeah that'd be awesome and it should be totally doable"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-10T02:50:58.785000",
                        "user": "Suleiman",
                        "text": "@oaktownsam Can you actually write that idea down in a github issue?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-10T02:56:09.239000",
                        "user": "Yiqun",
                        "text": "Sure \ud83d\ude04"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-11T04:35:12.817000",
                        "user": "Suleiman",
                        "text": "@oaktownsam I spent some time trying to figure out how a continuationbased transducer thingy would work. This gist is as far as I got: https://gist.github.com/jackfirth/027411d567385dadb3202bee75a847b4"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-11T04:47:19.734000",
                        "user": "Yiqun",
                        "text": "I'll have to see if I can find what I worked out. It didn't quite work."
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-12-11T04:52:14.603000",
                        "user": "Suleiman",
                        "text": "this is the kind of thing I'd like to end up with:```(define (mapping f) (transducer (let loop () (define next (consume!)) (emit! (f next)) (loop))))```"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-12-11T19:06:25.552000",
                        "user": "Yiqun",
                        "text": "`consume!` and `emit!` would be local? or syntax?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-12-11T19:09:05.843000",
                        "user": "Suleiman",
                        "text": "Syntax parameters"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-12-11T19:09:36.481000",
                        "user": "Suleiman",
                        "text": "Also `(define f consume!)` shouldn't work"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-12-11T19:12:53.786000",
                        "user": "Suleiman",
                        "text": "I think"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-12-11T19:47:42.826000",
                        "user": "Yiqun",
                        "text": "Ok. You want to ensure the coroutine/continuation bits don't escape."
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-12-11T19:48:58.734000",
                        "user": "Yiqun",
                        "text": "Ugh I'm writing something right now where this would be handy..."
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-12-11T19:55:10.157000",
                        "user": "Suleiman",
                        "text": "Whatcha writing?"
                    }
                ]
            },
            {
                "conversation_id": "67",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-11T20:22:27.230000",
                        "user": "Nyriah",
                        "text": "Even with syntax parameters like those they can escape in all the same ways. Are there ways of escaping you want to prevent?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-11T20:23:05.790000",
                        "user": "Nyriah",
                        "text": "oh I missed the `(define f consume!)` thing"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-11T20:25:18.560000",
                        "user": "Nyriah",
                        "text": "should `(foreach (lambda (item) (emit! item)) lst)` work?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-11T20:27:31.698000",
                        "user": "Nyriah",
                        "text": "or `(define (f x) (emit! x))`?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-11T20:31:02.540000",
                        "user": "Suleiman",
                        "text": "I don't plan on preventing those. Maybe it's not worth bothering to prevent `(define f emit!)` either then."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-11T20:31:54.838000",
                        "user": "Suleiman",
                        "text": "I was looking more for a way to avoid surprising people who are used to things like `yield` and `return` not being actual functions"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-11T20:32:09.204000",
                        "user": "Nyriah",
                        "text": "I think I wouldn't prevent it"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-11T20:32:52.485000",
                        "user": "Nyriah",
                        "text": "in your example `loop` itself is a function that captures `emit!` and `consume!` and can let them escape"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-11T20:36:18.006000",
                        "user": "Nyriah",
                        "text": "I think if you want to enforce that `yield` only works directly within its body like JavaScript (maybe Python and C# too?) then that's possible by designing forms like `lambda` and `define` and `let` so that they unbind `consume!` and `emit!` (or if unbinding them isn't possible then at least binding them to things that cause errors)"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-11T20:36:31.648000",
                        "user": "Suleiman",
                        "text": "I get that yeah"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-11T20:37:58.503000",
                        "user": "Nyriah",
                        "text": "hmm essentially the point of that restriction is to make the power of `yield` be equivalent to a local CPS translation rather than needing a run time model of continuations"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-11T20:38:02.038000",
                        "user": "Suleiman",
                        "text": "I was vaguely imagining some distant future where there's a way for macros to communicate control flow information about their subexpressions so you could 1) enforce that stuff doesn't escape or 2) statically optimize continuations away"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-11T20:38:27.309000",
                        "user": "Suleiman",
                        "text": "like a type system but for control flow"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-11T20:38:58.671000",
                        "user": "Nyriah",
                        "text": "yeah statically optimizing this would be nifty"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-11T20:39:17.954000",
                        "user": "Suleiman",
                        "text": "I think there's no point trying to halfway (more like tenthway) enforce that though"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-11T20:39:41.087000",
                        "user": "Suleiman",
                        "text": "So sure higher order `emit!` and `consume!` sounds good"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-12-11T20:46:51.112000",
                        "user": "Nyriah",
                        "text": "Hmm I think `consume!` should return an option value unless you don't want these to be able to emit things after they're halfclosed"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-12-11T20:47:22.325000",
                        "user": "Suleiman",
                        "text": "Oh right good idea"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-12-11T20:51:10.958000",
                        "user": "Nyriah",
                        "text": "There was a generator library I wrote for Arc once... and I put in an operation for defining a generator in `yield` style using continuations"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-12-11T20:51:40.059000",
                        "user": "Nyriah",
                        "text": "and the performance was just bad enough that I decided not to implement anything with that operation"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-12-11T20:53:48.821000",
                        "user": "Nyriah",
                        "text": "so I do expect the same kind of disappointment here. Maybe there's a way to use local expansion with a stop list so that `consume!` and `emit!` are really turned into CPS style"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-12-11T21:01:56.856000",
                        "user": "Suleiman",
                        "text": "Yeah I'm fully expecting the performance of this to be atrocious."
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-12-11T21:02:21.273000",
                        "user": "Suleiman",
                        "text": "I'm not going to use it to implement any of the built in transducers"
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-12-11T21:03:11.739000",
                        "user": "Suleiman",
                        "text": "But it will help me get quick and dirty implementations made when I'm experimenting and I bet it will help teach people how transducers work."
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-12-11T21:12:14.738000",
                        "user": "Yiqun",
                        "text": "@notjack nothing fancy consuming a sequence of rebellion/record with heterogenous fields and having it normalize the fields filling the missing with a `missingvalue`. In a direct style/coroutine transducer I could just write one loop to consume and track the field names and another loop to emit the normalized records."
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-12-11T21:12:40.468000",
                        "user": "Yiqun",
                        "text": "In the current one I have to think about how it decomposes into the state machine"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-12-11T21:12:54.393000",
                        "user": "Yiqun",
                        "text": "which isn't hard just a little less natural"
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-12-11T21:21:28.176000",
                        "user": "Suleiman",
                        "text": "@oaktownsam is filling in missing values the only kind of normalizing or are there other steps too?"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-12-11T21:22:22.158000",
                        "user": "Suleiman",
                        "text": "also that sounds like `mapping` would work  is there state needed in order to normalize them?"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-12-11T21:23:54.438000",
                        "user": "Yiqun",
                        "text": "Yes it needs to have seen all of the fields."
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-12-11T21:24:24.657000",
                        "user": "Yiqun",
                        "text": "It actually needs to do a full pass over the data before it emits"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-12-11T21:28:23.998000",
                        "user": "Suleiman",
                        "text": "Huh why is that? (Wondering if there should be a transducer helper here)"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-12-11T21:28:44.604000",
                        "user": "Suleiman",
                        "text": "Oh right because it doesn't know what's missing until it's seen everything"
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-12-11T21:36:18.649000",
                        "user": "Yiqun",
                        "text": "yeah"
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-12-11T21:36:44.514000",
                        "user": "Yiqun",
                        "text": "It was either new transducer or hack a copy of `intotable`"
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-12-11T21:37:04.912000",
                        "user": "Yiqun",
                        "text": "Transducer seemed easier to do."
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-12-11T21:46:03.416000",
                        "user": "Suleiman",
                        "text": "Maybe there could be a transducer in `rebellion/collection/record` that fills in missing fields like that"
                    },
                    {
                        "message_number": "38",
                        "ts": "2019-12-11T21:48:22.806000",
                        "user": "Yiqun",
                        "text": "Oh I have that part"
                    },
                    {
                        "message_number": "39",
                        "ts": "2019-12-11T21:48:30.361000",
                        "user": "Yiqun",
                        "text": "already from something else"
                    },
                    {
                        "message_number": "40",
                        "ts": "2019-12-11T21:50:13.980000",
                        "user": "Yiqun",
                        "text": "`(ensurefields [#:missing any] (sequence/c keyword?)) > (record > record)`"
                    },
                    {
                        "message_number": "41",
                        "ts": "2019-12-11T21:50:48.568000",
                        "user": "Yiqun",
                        "text": "Not a transducer but easy to call from `mapping`"
                    },
                    {
                        "message_number": "42",
                        "ts": "2019-12-11T21:54:39.718000",
                        "user": "Yiqun",
                        "text": "The last time I did this I just had to normalize to a static set. So I used `(mapping (ensurefields ...))`This time was more ... dynamic.Here's what I worked out:https://gist.github.com/samdphillips/e140877368c94658b102a9e4cb2a1ee7"
                    },
                    {
                        "message_number": "43",
                        "ts": "2019-12-11T22:05:00.737000",
                        "user": "Suleiman",
                        "text": "What I was thinking was a transducer like `addingmissingrecordfields` that consumed all the records determined the total set of field names then emitted the records with values replaced by `option`s to indicate whether they were originally present or not."
                    },
                    {
                        "message_number": "44",
                        "ts": "2019-12-11T22:07:17.579000",
                        "user": "Yiqun",
                        "text": "that is a possibility. I know personally the first step after that I would just unwrap the options and put a sentinel for the `absents`s"
                    },
                    {
                        "message_number": "45",
                        "ts": "2019-12-11T22:07:36.967000",
                        "user": "Suleiman",
                        "text": "Related idea: a `(bufferingall [into (reducer/c any? (sequence/c any?))]) > transducer?` function"
                    },
                    {
                        "message_number": "46",
                        "ts": "2019-12-11T22:25:49.293000",
                        "user": "Suleiman",
                        "text": "@oaktownsam where did the data come from such that it has arbitrary fields you don't know up front?"
                    }
                ]
            },
            {
                "conversation_id": "68",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-11T22:26:33.647000",
                        "user": "Suleiman",
                        "text": "some sort of extensible schemaless storage system or something?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-11T22:32:17.914000",
                        "user": "Yiqun",
                        "text": "Configuration files. It's not that they're unknown it's just for day to day work it's easier to treat them as having an unknown schema and then having the system work it out.Also sometimes the files are in the same format but different schema."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-11T22:33:42.365000",
                        "user": "Suleiman",
                        "text": "Ah that makes sense. Are you the one who decides what goes in those files? Or is that up to other people?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-11T22:43:07.062000",
                        "user": "Yiqun",
                        "text": "It's enterprise software so the file design is out of my hands. I just can use whatever I want to manipulate it."
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-11T22:47:43.800000",
                        "user": "Suleiman",
                        "text": "Gotcha"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-12T04:02:07.787000",
                        "user": "Suleiman",
                        "text": "I put together a basic microbenchmarking system!"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-12T04:03:48.850000",
                        "user": "Suleiman",
                        "text": "This version might be easier to read"
                    }
                ]
            },
            {
                "conversation_id": "69",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-12T08:28:45.703000",
                        "user": "Jirah",
                        "text": "You know I saw a thread a couple months ago on hacker news that Racket 2.0 might not be a Lisp to get more investors. Is that still a thing?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-12T08:40:10.371000",
                        "user": "Yanelly",
                        "text": "I believe it is definitely on the cards. But it important to remember that \u2018lisp\u2019 Racket won\u2019t go away and it has had multiple major changes including splitting away from scheme because it is a language engineering platform. You can still run the code from The Little Schemer HTDP 1st Ed. or SICP. The rhombusbrainstorming github repository is where it is being worked through https://github.com/racket/rhombusbrainstorming/blob/master/resources/goals.md"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-12T08:41:08.110000",
                        "user": "Suleiman",
                        "text": "It\\'s less racket2 won\\'t be a lisp and more there\\'s going to be a new language you can choose to use instead of racket just like how you can choose to use typed racket instead of normal racket"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-12T08:41:33.171000",
                        "user": "Suleiman",
                        "text": "and it definitely has nothing to do with investors or anything like that"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-12T08:43:24.278000",
                        "user": "Yanelly",
                        "text": "A new language on racket is more like changing your boots. Contrast that to almost any other language (C++ Python Perl) where it is more like open heart surgery."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-12T08:44:30.506000",
                        "user": "Yanelly",
                        "text": "Plus the core team are massive \u2018Lispheads\u2019(M Flatt admitted to this live on stage)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-12T08:45:36.442000",
                        "user": "Jirah",
                        "text": "Hahaha yeah for sure. I was looking into C++ Schemes to put on top of Unreal 4 and the set up for the ones I looked at are all a real nightmare.Well that's all good to hear then"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-12T08:46:25.280000",
                        "user": "Yanelly",
                        "text": "(And they build languages like I collect stamps!  the main dist comes with Algol68!)"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-12T08:46:34.101000",
                        "user": "Jirah",
                        "text": "Hahaha"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-12T08:46:54.767000",
                        "user": "Jirah",
                        "text": "That does seem pretty unnecessary that's hilarious"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-12T08:47:56.091000",
                        "user": "Yanelly",
                        "text": "What about Chez?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-12T08:49:16.055000",
                        "user": "Yanelly",
                        "text": "https://groups.google.com/forum/m/#!msg/racketdev/2BV3ElyfF8Y/4RSd3XbECAAJ"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-12T08:49:20.807000",
                        "user": "Jirah",
                        "text": "Chez did actually look the best and possibly Bigloo. Guile Scheme was the one that I really didn't like the looks of. In the end I didn't need to implement one at all"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-12T08:49:47.787000",
                        "user": "Yanelly",
                        "text": "M Flatt is building a new racket backend on Chez"
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-12T08:50:04.822000",
                        "user": "Jirah",
                        "text": "Ah that's interesting!"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-12T08:50:48.900000",
                        "user": "Yanelly",
                        "text": "What did you end up using instead"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-12-12T08:50:51.054000",
                        "user": "Jirah",
                        "text": "I'd still kind of want to go through the process of implementing one of those at some point but somebody implemented Python into Unreal 4 and it's crazy mature. I just threw Hy on top of it and it's been working amazingly"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-12-12T08:54:17.534000",
                        "user": "Suleiman",
                        "text": "totally unrelated: today I am sad because `(transduce somevector #:into intolist)` is about _two thousand times slower_ than `(vector>list somevector)` \ud83d\ude26"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-12-12T08:54:46.672000",
                        "user": "Suleiman",
                        "text": "(for context see here https://github.com/jackfirth/rebellion/issues/351#issuecomment564909375)"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-12-12T08:55:42.558000",
                        "user": "Jirah",
                        "text": "Hahaha that's rough"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-12-12T20:05:54.174000",
                        "user": "Suleiman",
                        "text": "Atomichron docs available! https://docs.racketlang.org/atomichron/index.html?q=atomichron"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-12-12T20:33:02.312000",
                        "user": "Yiqun",
                        "text": "@notjack it is frustrating because the transducer protocol is actually a nicely elegant way to generalize the streaming problem."
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-12-12T20:40:05.063000",
                        "user": "Suleiman",
                        "text": "@oaktownsam agreed. Step 1 is write a bunch of benchmarks I guess."
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-12-12T21:18:18.874000",
                        "user": "Suleiman",
                        "text": "@oaktownsam how do you feel about the srfi 171 transducers?"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-12-12T21:27:48.691000",
                        "user": "Suleiman",
                        "text": "Me neither except I keep running into the person implementing them. Both on Reddit and the mailing list."
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-12-13T16:14:33.968000",
                        "user": "Yanelly",
                        "text": "yes he monitors the reddit and pops up whenever I post transducers news. Said he was working on a racket port."
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-12-13T22:39:32.595000",
                        "user": "Suleiman",
                        "text": "That tends to result from having lots of very largescale codebases and a community of people who do lots of refactoring of legacy code"
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-12-13T22:48:44.333000",
                        "user": "Suleiman",
                        "text": "```(struct left (value) #:transparent)(struct right (value) #:transparent)(define (eithercase either lefthandler righthandler) (match either [(left v) (lefthandler v)] [(right v) (righthandler v)]))```"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-12-13T22:48:57.854000",
                        "user": "Suleiman",
                        "text": "that's how I usually do it"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-12-14T06:12:22.298000",
                        "user": "Suleiman",
                        "text": "as part of advent of code day 6 I made a graph API for Racket:```(provide (contractout [graph? predicate/c] [emptygraph emptygraph?] [emptygraph? predicate/c] [nonemptygraph? predicate/c] [graphvertices (> graph? set?)] [graphedges (> graph? multidict?)] [graphinsertvertex (> graph? any/c graph?)] [graphinsertvertices (> graph? (sequence/c any/c) graph?)] [graphinsertedge (> (graph? any/c any/c) (#:undirected? boolean?) graph?)] [graphinsertedges (> (graph? (sequence/c entry?)) (#:undirected? boolean?) graph?)] [graphremovevertex (> graph? any/c graph?)] [graphremovevertices (> graph? (sequence/c any/c) graph?)] [graphremoveedge (> (graph? any/c any/c) (#:undirected? boolean?) graph?)] [intoundirectedgraph reducer?] [intodirectedgraph reducer?] [ingraphtopologicalsort (> graph? (sequence/c any/c))] [graphterminalvertices (> graph? set?)] [graphinitialvertices (> graph? set?)] [graphoutgoingedges (> graph? any/c set?)] [graphincomingedges (> graph? any/c set?)] [graphinverse (> graph? graph?)]))```"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-12-14T19:45:28.784000",
                        "user": "Suleiman",
                        "text": "@oaktownsam yup they're persistent immutable graphs!"
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-12-14T21:44:52.582000",
                        "user": "Yiqun",
                        "text": "Nice"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-12-15T10:14:15.213000",
                        "user": "Suleiman",
                        "text": "So here's an idea"
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-12-15T10:15:21.601000",
                        "user": "Suleiman",
                        "text": "Rust/C++/C/etc. can avoid a lot of work done by GC'd langs by passing around data structures on the stack rather than the heap especially when those structures don't have complex lifetimes"
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-12-15T10:15:46.087000",
                        "user": "Suleiman",
                        "text": "What if `rebellion/type` could fake stack allocation using Racket\\'s multiple return values?"
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-12-15T10:18:00.202000",
                        "user": "Suleiman",
                        "text": "So if you had a `point` type with an `x` and a `y` field and a `distance` function accepting two points you could call that function like this:```(distance [point p1] [point p2])```...and that would actually be short for passing the fields directly like this:```(define p1.x p1.y p2.x p2.y)```"
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-12-15T10:18:40.201000",
                        "user": "Suleiman",
                        "text": "and somehow combine that with a `point` constructor that doesn't actually construct a point but instead just returns the two fields as two separate return values"
                    },
                    {
                        "message_number": "38",
                        "ts": "2019-12-15T10:20:45.308000",
                        "user": "Suleiman",
                        "text": "I'm gonna sleep on that thought"
                    }
                ]
            },
            {
                "conversation_id": "70",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-12T21:21:33.296000",
                        "user": "Yiqun",
                        "text": "I really haven't looked at them besides reading the spec."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-12T21:29:04.176000",
                        "user": "Yiqun",
                        "text": "I've noticed \ud83d\ude42"
                    }
                ]
            },
            {
                "conversation_id": "71",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-13T22:21:48.215000",
                        "user": "Nashly",
                        "text": "are there general design patterns used in lisps? in the ML family I represented state as discriminated unions and matched on that but unsure what's best here. seems like it's pushing me to do something OOesque"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-13T22:37:27.824000",
                        "user": "Suleiman",
                        "text": "I don't think there's many named and wellstudied API design patterns in lisp like there are in Java/c#/c++/etc."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-13T22:41:18.902000",
                        "user": "Suleiman",
                        "text": "Pattern matching on an open union (different cases = actually different types of their own) would be my preferred way of doing what you describe"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-13T22:43:40.050000",
                        "user": "Nashly",
                        "text": "what's the best way to make unions in racket"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-13T22:48:58.626000",
                        "user": "Yiqun",
                        "text": "aside: someday the design patterns that exist should probably be documented."
                    }
                ]
            },
            {
                "conversation_id": "72",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-14T17:35:46.418000",
                        "user": "Yiqun",
                        "text": "Functional?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-14T17:52:22.961000",
                        "user": "Yiqun",
                        "text": "I just made a minimal interface to https://pkgs.racketlang.org/package/graphhttps://github.com/samdphillips/aoc2019/blob/master/06.rkt#L19"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-14T18:01:25.921000",
                        "user": "Yiqun",
                        "text": "@notjack https://github.com/jackfirth/rebellion/issues/192 \ud83d\ude04"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-14T18:01:49.110000",
                        "user": "Yiqun",
                        "text": "The best part of making a TODO list is checking things off."
                    }
                ]
            },
            {
                "conversation_id": "73",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-15T19:48:38.484000",
                        "user": "Yiqun",
                        "text": "I have a half baked http library that is built on `net/httpclient` and while I was working on interfacing to an httpresponse type I was thinking of something like that."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-15T19:49:16.930000",
                        "user": "Yiqun",
                        "text": "Like how you can avoid the allocation."
                    }
                ]
            },
            {
                "conversation_id": "74",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-18T05:21:12.423000",
                        "user": "Nashly",
                        "text": "is there for me to make a scoped block like in c++ or rust"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-18T05:21:20.987000",
                        "user": "Nashly",
                        "text": "without making a local function and executing it"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-18T05:22:21.251000",
                        "user": "Nashly",
                        "text": "```fn fn_name() { { // scope a let a = 0; } { // scope b let a = 3; }}```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-18T05:22:25.191000",
                        "user": "Nashly",
                        "text": "this kind of thing"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-18T05:26:05.755000",
                        "user": "Amri",
                        "text": "begin?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-18T05:31:40.160000",
                        "user": "Nashly",
                        "text": "```(define (f) (begin (define a 0)) (begin (define a 1)))```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-18T05:31:42.338000",
                        "user": "Nashly",
                        "text": "not working"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-18T05:31:57.113000",
                        "user": "Nashly",
                        "text": "they're in the same scope"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-18T05:40:11.820000",
                        "user": "Amri",
                        "text": "If you just want something temporary I would go with `let`"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-18T06:24:28.634000",
                        "user": "Nashly",
                        "text": "can i do something like (let () ...)"
                    }
                ]
            },
            {
                "conversation_id": "75",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-18T05:54:44.912000",
                        "user": "Yiqun",
                        "text": "```(let ([a 0]) ...)(let ([a 42] ...)```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-18T06:24:21.462000",
                        "user": "Nashly",
                        "text": "i'm not iterating over a list and i need a lot of variables in each scope"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-18T06:28:55.600000",
                        "user": "Amri",
                        "text": "You have a few options depending on what you need:```(let ([a 0] [b 1]) ...)``````(let ([a 0] [b a] ...)```The second allows for earlier bindings to be used."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-18T18:59:23.229000",
                        "user": "Yiqun",
                        "text": "Very true."
                    }
                ]
            },
            {
                "conversation_id": "76",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-18T06:49:09.953000",
                        "user": "Suleiman",
                        "text": "You can do `(let () ...)`. However there's also `block` from the `racket/block` module:```(define (f) (block (define a 0)) (block (define a 1)))```I find `block` to be more selfdescriptive than `(let () ...)`. With the latter it's not clear to people why you're using the let unless they've seen this trick before."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-18T19:17:15.026000",
                        "user": "Suleiman",
                        "text": "In practice I never use it either"
                    }
                ]
            },
            {
                "conversation_id": "77",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-18T18:59:37.392000",
                        "user": "Yiqun",
                        "text": "I'm too old and schemey to remember `block`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-21T10:19:38.565000",
                        "user": "Twyla",
                        "text": "Seems good to me."
                    }
                ]
            },
            {
                "conversation_id": "78",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-21T05:40:58.282000",
                        "user": "Suleiman",
                        "text": "Does this seem readable?```(definemicrobenchmark (sequencerefbenchmark indexedgetter maker) #:iterations 1000 #:microiterations 100000 (beforeallbenchmarks (define size 100) (define data (buildimmutablevector size values)) (define indices (vector>immutablevector (for/vector #:length numiterations ([_ (innaturals)]) (random size))))) (beforeeachbenchmark (define seq (maker data)) (collectgarbage) (collectgarbage) (collectgarbage)) (beforeeachiteration (define index (vectorref indices currentiteration)))  (indexedgetter seq index))```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-21T05:42:12.768000",
                        "user": "Suleiman",
                        "text": "The magic bits are `beforeallbenchmarks` `beforeeachbenchmark` `beforeeachiteration` `numiterations` and `currentiteration`. Those are all macros that cooperate with `definemicrobenchmark`."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-21T18:47:34.113000",
                        "user": "Yiqun",
                        "text": "\ud83d\udc4d"
                    }
                ]
            },
            {
                "conversation_id": "79",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-21T22:36:03.632000",
                        "user": "Yiqun",
                        "text": "Re: `block` I'm actually using it today. But it's not in `racket/base` or `racket` which is a bit nuts"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-21T22:56:34.888000",
                        "user": "Twyla",
                        "text": "Wow `block` is 80 lines."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-21T22:56:38.273000",
                        "user": "Twyla",
                        "text": "I thought it'd be a simple macro."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-22T13:44:58.785000",
                        "user": "Jirah",
                        "text": "Still using Hy in Unreal 4. It's still amazing. I wish I was working on it right now but instead I've been at the airport waiting for my flight to California for 9 hours with my twin brother"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-22T13:47:50.155000",
                        "user": "Twyla",
                        "text": "Such is life~"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-22T13:48:40.346000",
                        "user": "Jirah",
                        "text": "Yeah I don't mind the delays too much. I'm terrified of flying though"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-22T13:48:46.407000",
                        "user": "Jirah",
                        "text": "I wanna get it over with already"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-22T13:49:02.919000",
                        "user": "Twyla",
                        "text": "Ohh"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-22T13:49:24.135000",
                        "user": "Jirah",
                        "text": "Also we're landing in LAX instead of John Wayne so there's going to be a bunch of people protesting"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-22T13:49:28.368000",
                        "user": "Jirah",
                        "text": "Sounds like a nightmare"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-22T13:53:37.996000",
                        "user": "Twyla",
                        "text": "Xmas traffic sounds horrible."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-22T13:53:41.363000",
                        "user": "Twyla",
                        "text": ":meowmas:"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-22T21:03:26.932000",
                        "user": "Twyla",
                        "text": "I've got an idea."
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-22T21:03:57.020000",
                        "user": "Twyla",
                        "text": "Prompted by a thread on Mastodon: Top level pattern matching defun \u00e0 la Haskell and Erlang."
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-22T21:04:12.443000",
                        "user": "Twyla",
                        "text": "Like an exploded `define/match`"
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-22T21:06:05.312000",
                        "user": "Twyla",
                        "text": "eg```Racket(defun (factorial 0) 1)(defun (factorial n) ( n (factorial (sub1 n))))```"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-12-22T21:10:07.107000",
                        "user": "Twyla",
                        "text": "Pseudocode algorithm I'm thinking of:```(if (identifierbound? #'name) (let ((oldfunc name)) (set! name (\u03bb args (match args [params body] [else (oldfunc params)]))) (define name (\u03bb args (match args [params body])))))```"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-12-22T21:10:22.702000",
                        "user": "Twyla",
                        "text": "Probably with `syntaxparse`"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-12-22T21:11:30.451000",
                        "user": "Twyla",
                        "text": "Has anyone done something like this before?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-12-22T21:18:43.682000",
                        "user": "Twyla",
                        "text": "So the original definition becomes something along the lines of```Racket(define factorial (\u03bb args (match args [(list 0) 1])))(let ((old factorial)) (set! factorial (\u03bb args (match args [(list n) ( n (factorial (sub1 n)))] [else (apply oldfac args)]))))```"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-12-22T21:19:35.936000",
                        "user": "Twyla",
                        "text": "But no wait"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-12-22T21:19:39.932000",
                        "user": "Twyla",
                        "text": "The precedence matters... hmm"
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-12-22T21:20:08.459000",
                        "user": "Twyla",
                        "text": "If I gave it `(factorial 0)` it'd match it to `n` first and get stuck in a loop."
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-12-22T21:22:41.494000",
                        "user": "Twyla",
                        "text": "I wonder how Haskell handles it. I know Erlang considers procedures of different arities to be entirely different entities."
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-12-22T21:22:50.178000",
                        "user": "Twyla",
                        "text": "Maybe by keeping the patterns in a table?"
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-12-22T21:24:17.645000",
                        "user": "Twyla",
                        "text": "Ah right `define/match` is fixed arity too."
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-12-22T22:51:56.302000",
                        "user": "Suleiman",
                        "text": "I've wanted that too"
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-12-22T22:52:56.541000",
                        "user": "Suleiman",
                        "text": "I wonder if something based on `localexpand` would work like how racket transforms local definitions (with `define`) into nested lets."
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-12-22T22:53:48.555000",
                        "user": "Suleiman",
                        "text": "```(matchcasedefinitions (define (factorial 0) 1) (define (factorial n) ( n (factorial (sub1 n))))```"
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-12-22T22:54:20.916000",
                        "user": "Yiqun",
                        "text": "With a fixed number of patterns `match` will save you a list allocation"
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-12-22T22:54:23.068000",
                        "user": "Suleiman",
                        "text": "where `matchcasedefinitions` calls `localexpand` on its body with a stop list looking for inidividual case definitions"
                    }
                ]
            },
            {
                "conversation_id": "80",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-22T23:26:25.532000",
                        "user": "Twyla",
                        "text": "I wonder if it's possible to make it go through an arbitrarily sorted list of patterns and match the one that fits the best."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-22T23:26:45.394000",
                        "user": "Twyla",
                        "text": "eg `zero?` is more strict than `number?`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-22T23:26:55.670000",
                        "user": "Twyla",
                        "text": "I'm sure it'd be much easier with Typed Racket."
                    }
                ]
            },
            {
                "conversation_id": "81",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-23T00:15:33.836000",
                        "user": "Suleiman",
                        "text": "`syntaxparse` patterns do that"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-23T00:16:02.947000",
                        "user": "Suleiman",
                        "text": "the pattern matcher records how much progress each pattern makes and selects the pattern that makes the most progress"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-23T00:16:14.661000",
                        "user": "Twyla",
                        "text": "Oooh"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-23T00:16:21.107000",
                        "user": "Suleiman",
                        "text": "if none of the patterns match it selects the pattern that made the most progress and uses that one to show the error message"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-23T00:16:26.383000",
                        "user": "Suleiman",
                        "text": "there's a really neat paper about it"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-23T00:16:30.803000",
                        "user": "Twyla",
                        "text": "Lovely!"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-23T00:16:40.769000",
                        "user": "Twyla",
                        "text": "Can you link the paper?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-23T00:16:55.115000",
                        "user": "Twyla",
                        "text": "I assume it was mflatt's."
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-23T00:17:34.998000",
                        "user": "Suleiman",
                        "text": "it's ryan culpepper's (and matthias's) he designed the syntaxparse system"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-23T00:17:35.767000",
                        "user": "Suleiman",
                        "text": "https://www2.ccs.neu.edu/racket/pubs/icfp10cf.pdf"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-23T00:18:00.813000",
                        "user": "Twyla",
                        "text": "Oh I didn't know."
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-23T00:18:22.466000",
                        "user": "Twyla",
                        "text": "I know so little about `syntaxparse` now that I think of it."
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-23T00:18:53.545000",
                        "user": "Twyla",
                        "text": "I've used `syntaxrules` and `syntaxcase` only for a long time."
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-23T00:20:07.501000",
                        "user": "Twyla",
                        "text": "I really like what I've seen of `syntaxparse` enough to hope for its eventual backport to Scheme."
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-23T00:20:30.360000",
                        "user": "Suleiman",
                        "text": "to get started with `syntaxparse` quickly take any macro you've written with `definesyntaxrule` and change it to use `definesimplemacro` (from the `syntax/parse/define` library). You won't have to change anything about the macro it will work exactly the same. But then you can add syntax classes if you want."
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-23T00:21:31.100000",
                        "user": "Suleiman",
                        "text": "For example say you start with this:```(definesyntaxrule (mylet name expression body ...) (let ([name expression]) body ...))```"
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-12-23T00:21:50.983000",
                        "user": "Twyla",
                        "text": "So it's a superset?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-12-23T00:22:01.627000",
                        "user": "Suleiman",
                        "text": "You can switch it to this:```(require syntax/parse/define)(definesimplemacro (mylet name expression body ...) (let ([name expression]) body ...))```...and it works the same"
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-12-23T00:22:03.892000",
                        "user": "Suleiman",
                        "text": "Pretty much yes"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-12-23T00:23:17.270000",
                        "user": "Suleiman",
                        "text": "For that `mylet` macro you could then make it handle malformed input better by doing this:```(require syntax/parse/define)(definesimplemacro (mylet name:id expression:expr body:expr ...+) (let ([name expression]) body ...))```"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-12-23T00:23:47.208000",
                        "user": "Twyla",
                        "text": "Ohh"
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-12-23T00:24:05.993000",
                        "user": "Twyla",
                        "text": "That's the syntax system Honu's macros are built upon."
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-12-23T00:24:50.022000",
                        "user": "Suleiman",
                        "text": "The `:id` and `:expr` parts indicate that the thing to the left of the colon must match the _syntax class_ indicated on the right of the colon so `name` must be a single identifier `expression` and `body` must be expressions (which is anything except a `#:keyword`\") and `...+` means one or more times (in contrast to `...` which allows it to match zero times)."
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-12-25T00:05:44.494000",
                        "user": "Suleiman",
                        "text": "transducer qualityoflife improvements today!"
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-12-27T03:06:40.313000",
                        "user": "Suleiman",
                        "text": "@WillBAnders I think I'm going to work on adding ranges to rebellion. Should I try to pick up where your pull request leaves off? Alternatively I could attempt an entirely separate pull request."
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-12-27T03:07:57.133000",
                        "user": "Amri",
                        "text": "I haven't abandoned it; been working on other things a bit and awaiting some feedback. If you want to put something together as well a separate PR is probably best as you'll have some other ideas I'm sure."
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-12-27T03:12:29.157000",
                        "user": "Suleiman",
                        "text": "I'm feeling pretty motivated tonight so I think I'll give a separate PR a shot in order to explore the design space more. I'll still try to respond to your PR with more feedback and I'll ask for your feedback on mine."
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-12-27T03:13:58.084000",
                        "user": "Amri",
                        "text": "sounds good"
                    }
                ]
            },
            {
                "conversation_id": "82",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-23T02:32:16.395000",
                        "user": "Yiqun",
                        "text": "TIL: I am almost exactly 2 years younger than Scheme."
                    }
                ]
            },
            {
                "conversation_id": "83",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-27T07:21:49.647000",
                        "user": "Suleiman",
                        "text": "Here's what I've got so far:"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-27T07:23:58.672000",
                        "user": "Suleiman",
                        "text": "There's also several convenience constructors:```(closedrange 2 7) ; [2..7](openrange 2 7) ; (2..7)(closedopenrange 2 7) ; [2..7)(openclosedrange 2 7) ; (2..7](atleast 5) ; [5..)(atmost 5) ; (..5](greaterthan 5) ; (5..)(lessthan 5) ; (..5)```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-28T06:11:29.966000",
                        "user": "Suleiman",
                        "text": "@WillBAnders I've got enough range stuff implemented that I'm probably going to merge it soon just FYI"
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-28T21:08:04.694000",
                        "user": "Suleiman",
                        "text": "enum types!"
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-28T23:03:45.133000",
                        "user": "Suleiman",
                        "text": "@WillBAnders Happy to hear more about yours"
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-28T23:04:52.753000",
                        "user": "Suleiman",
                        "text": "@Deleted User Good question"
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-29T04:04:10.244000",
                        "user": "Yiqun",
                        "text": "@notjack I haven't caught up on my github emails have you replaced the comparator values with enum types?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-29T04:32:18.899000",
                        "user": "Yiqun",
                        "text": "@Deleted User a lot here https://www2.ccs.neu.edu/racket/pubs/"
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-29T08:12:46.752000",
                        "user": "Suleiman",
                        "text": "@oaktownsam not yet I haven't used enum types to implement anything yet"
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-29T08:13:42.318000",
                        "user": "Suleiman",
                        "text": "I probably will but it should only be backwards compatible changes in implementations"
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-29T08:13:56.633000",
                        "user": "Suleiman",
                        "text": "Shouldn't change any APIs anywhere"
                    }
                ]
            },
            {
                "conversation_id": "84",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-28T22:17:21.177000",
                        "user": "Twyla",
                        "text": "Is there a library of Racket papers somewhere?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-28T22:25:51.863000",
                        "user": "Amri",
                        "text": "@notjack I can take a look later tonight been out for an event for the past day. My main consideration would be whether that meets the design goals and in particular what those design goals are as mine are different from yours."
                    }
                ]
            },
            {
                "conversation_id": "85",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-29T23:19:48.638000",
                        "user": "Amri",
                        "text": "@notjack Okay so I think the main thing here is establishing the design goals and in particular what the use case is. The API you have is similar to Guava so I'm familiar with it in that regard.My primary design goal is to have short clear and consistent syntax for creating ranges. I see there being two primary use cases  one as a precursor for iteration and the other as being a container for predicates.One thing that consistently bothers me about many functional languages is the lack of namespacing on things. Things like `(atmost 5)` leave a bit to be desired in that regard and it seems like Racket is lacking polymorphism (or at least easy polymorphism) to improve the situation there. Elixir does both of these quite well.One of the goals that both of us shared was the case of dealing with inclusivity as an input parameter. In my opinion this problem still exists because you have to do `(if inclusive (inclusivebound value) (exclusivebound value)`. This is one of the reasons I decided to avoid making these singleton types as inclusivity is naturally true/false and I see this as overengineering.I think the core thing is to decide what this is supposed to do and get on the same page with that before anything else."
                    },
                    {
                        "message_number": "2",
                        "ts": "2019-12-30T00:02:04.467000",
                        "user": "Suleiman",
                        "text": "@WillBAnders My goals mostly center around using ranges to build other APIs like range collections and query DSLs.I hear you about the namespacing and inclusivityasaninputparameter. For the namespacing I think the `atmost` `atleast` `greaterthan` and `lessthan` names ought to be changed. Simplest change would be to add the `range` suffix to them like the `closedrange` `openrange` etc. constructors.For inclusivity what about adding a range bound constructor like `(rangebound [value any/c] [type rangeboundtype?])`? So instead of this:```(define (buildrange) (if (computeshouldbeinclusive?) (inclusivebound v) (exclusivebound v)))```You'd do this:```(define (buildrange) (rangebound v (computeboundtype)))(define (computeboundtype) (if (shouldbeinclusive?) inclusive exclusive))```I don't think booleans fit well here because boolean input parameters are hard to read without context. `(rangebound v #t)` doesn't clearly communicate that it's an inclusive bound. Normally I fix that problem with keyword parameters like `(rangebound v #:inclusive? #t)` but that's overly awkward for _required_ parameters. If the inclusivity were an optional parameter it'd have to default one way or the other but there isn't an obvious default so any choice would be arbitrary and make it hard to tell what `(rangebound v)` means."
                    },
                    {
                        "message_number": "3",
                        "ts": "2019-12-30T00:06:17.466000",
                        "user": "Amri",
                        "text": "I personally don't think bounds should be exposed in the API.Something like `(rangebound v #t)` is only awkward if you're providing a literal. If it's a variable then you end up with `(rangebound v lowerinclusive)` or whatever. If it is a literal then use one of the other default forms."
                    },
                    {
                        "message_number": "4",
                        "ts": "2019-12-30T00:07:17.591000",
                        "user": "Suleiman",
                        "text": "If it's a variable it's still awkward because you have to remember whether true or false means inclusive or exclusive when you're _producing_ the value."
                    },
                    {
                        "message_number": "5",
                        "ts": "2019-12-30T00:09:08.349000",
                        "user": "Amri",
                        "text": "True is always inclusive. There's plenty of other places to go wrong and somewhere along the line it's a boolean. Treating it as anything other than a boolean makes no sense to me."
                    },
                    {
                        "message_number": "6",
                        "ts": "2019-12-30T00:09:58.157000",
                        "user": "Suleiman",
                        "text": "I don't really see why true would always be inclusive. That doesn't seem obvious to me."
                    },
                    {
                        "message_number": "7",
                        "ts": "2019-12-30T00:10:26.344000",
                        "user": "Amri",
                        "text": "Always form the question as isInclusive"
                    },
                    {
                        "message_number": "8",
                        "ts": "2019-12-30T00:11:48.325000",
                        "user": "Suleiman",
                        "text": "I don't see why that's the default decision. I could certainly _choose_ to do that but I'd have to remember that choice and remember to always be consistent with it. The point of an enum is to use names so I don't have to remember things like that."
                    },
                    {
                        "message_number": "9",
                        "ts": "2019-12-30T00:12:38.043000",
                        "user": "Amri",
                        "text": "I'd be more comfortable with that if enums were easy to work with but they're not. Ultimately I don't use Racket though so it's whatever."
                    },
                    {
                        "message_number": "10",
                        "ts": "2019-12-30T00:12:59.972000",
                        "user": "Amri",
                        "text": "Dynamic typing and me do not get along in the slightest and no namespacing makes it significantly worse."
                    },
                    {
                        "message_number": "11",
                        "ts": "2019-12-30T00:13:08.769000",
                        "user": "Suleiman",
                        "text": "I did just add enum types to rebellion last night so you don't have to make a singleton for each case does that help?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2019-12-30T00:14:05.263000",
                        "user": "Suleiman",
                        "text": "i.e. instead of this:```(definesingletontype inclusive)(definesingletontype exclusive)(define (rangeboundtype? v) (or (inclusive? v) (exclusive? v)))```You can now write this:```(defineenumtype rangeboundtype (inclusive exclusive))```"
                    },
                    {
                        "message_number": "13",
                        "ts": "2019-12-30T00:14:40.457000",
                        "user": "Amri",
                        "text": "I saw. I would end up with something like this myself:```(enumcase x [up (...)] [down (...)] [left (...)] [right (...)] #:else (...))```"
                    },
                    {
                        "message_number": "14",
                        "ts": "2019-12-30T00:15:11.990000",
                        "user": "Amri",
                        "text": "At the same time I would personally always end up in the mindset of isItInclusive true/false."
                    },
                    {
                        "message_number": "15",
                        "ts": "2019-12-30T00:15:27.721000",
                        "user": "Amri",
                        "text": "Because there's only ever two possibilities."
                    },
                    {
                        "message_number": "16",
                        "ts": "2019-12-30T00:17:13.940000",
                        "user": "Suleiman",
                        "text": "That's a totally reasonable mindset. I merely would like to be considerate of those (such as myself) who have trouble being so consistent with decisions like that. I've got adhd so I tend to forget which way I did something the last time I did it."
                    },
                    {
                        "message_number": "17",
                        "ts": "2019-12-30T00:18:35.610000",
                        "user": "Amri",
                        "text": "It's a valid concern and one of the reasons I've grown fond of Elixir's atoms."
                    },
                    {
                        "message_number": "18",
                        "ts": "2019-12-30T00:19:57.567000",
                        "user": "Amri",
                        "text": "Ultimately the questions that are going to be asked are is it bounded or unbounded followed by is the bound inclusive or exclusive. Those are definitely boolean results there. Having to span out to an enumcase can get to be a mess at that point."
                    },
                    {
                        "message_number": "19",
                        "ts": "2019-12-30T00:22:05.539000",
                        "user": "Suleiman",
                        "text": "I mostly ended up with cond trees that looked like this:```(define bound (rangeupperbound range))(cond [(unbounded? bound) ...] [(inclusivebound? bound) ...] [else ...]))```"
                    },
                    {
                        "message_number": "20",
                        "ts": "2019-12-30T00:24:43.918000",
                        "user": "Amri",
                        "text": "\u00af\\\\_(\u30c4)_/\u00af"
                    },
                    {
                        "message_number": "21",
                        "ts": "2019-12-30T00:27:01.408000",
                        "user": "Amri",
                        "text": "Ultimately I feel like there's a things happening with types and other stuff that is adding unneeded complexity into things. Exposing bounds is not the way I would go with this as I don't think it's too helpful at that level."
                    },
                    {
                        "message_number": "22",
                        "ts": "2019-12-30T00:31:45.056000",
                        "user": "Amri",
                        "text": "API level."
                    },
                    {
                        "message_number": "23",
                        "ts": "2019-12-30T00:32:31.226000",
                        "user": "Amri",
                        "text": "Implementation can make some use of things but ultimately in order to use the bound you need to know whether it's a lower bound or upper bound which is encapsulated at the range level."
                    },
                    {
                        "message_number": "24",
                        "ts": "2019-12-30T00:37:50.826000",
                        "user": "Suleiman",
                        "text": "I think the API has two levels to it: the surface level and the data model. The latter needs to be exposed so you can convert ranges to and from other things like strings of the form 5 < x <=8 or database queries. I fully expect most users won\\'t need or care about that level but anyone who wants to build _libraries_ that incorporate ranges (like a SQL query builder) will need access to the data model. Everyone else will probably use only the smart constructors the query functions like `rangecontains?` and `rangeencloses?` and the operators like `rangespan`. In that case they never need to deal with the complexity of the range bound data model at all."
                    },
                    {
                        "message_number": "25",
                        "ts": "2019-12-30T00:40:36.882000",
                        "user": "Amri",
                        "text": "Most of my use cases are dynamic so I have more experience at that level that hardcoding things. I'll pull something."
                    },
                    {
                        "message_number": "26",
                        "ts": "2019-12-30T00:43:52.615000",
                        "user": "Amri",
                        "text": "```Range<Integer> range = Range.range( matcher.group(2).equals(\"\") ? Integer.MIN_VALUE : Integer.parseInt(matcher.group(2)), matcher.group(1).equals(\"(\") ? BoundType.OPEN : BoundType.CLOSED, matcher.group(3).equals(\"\") ? Integer.MAX_VALUE : Integer.parseInt(matcher.group(3)), matcher.group(4).equals(\")\") ? BoundType.OPEN : BoundType.CLOSED)```"
                    },
                    {
                        "message_number": "27",
                        "ts": "2019-12-30T00:45:45.226000",
                        "user": "Amri",
                        "text": "Which uses Guava's range API. Working with that is one of the main reasons I wanted to redesign things because it's a pain."
                    },
                    {
                        "message_number": "28",
                        "ts": "2019-12-30T00:47:33.689000",
                        "user": "Suleiman",
                        "text": "Hmm. What if the range API just provided some parsing utils?```Range<Integer> range = Range.parser(\"[ ) \").parse(str);```"
                    },
                    {
                        "message_number": "29",
                        "ts": "2019-12-30T00:47:46.904000",
                        "user": "Amri",
                        "text": "It's too specific."
                    },
                    {
                        "message_number": "30",
                        "ts": "2019-12-30T00:47:57.331000",
                        "user": "Amri",
                        "text": "`5 < x <= 7` couldn't be modeled in that way."
                    },
                    {
                        "message_number": "31",
                        "ts": "2019-12-30T00:48:33.882000",
                        "user": "Amri",
                        "text": "Ultimately what you have is you have a bound which could be a value or identifier for unbounded and some type of representation of whether that's inclusive or not."
                    },
                    {
                        "message_number": "32",
                        "ts": "2019-12-30T00:49:11.530000",
                        "user": "Suleiman",
                        "text": "What about `[5 ]` v.s. `[5 )`?"
                    },
                    {
                        "message_number": "33",
                        "ts": "2019-12-30T00:49:56.329000",
                        "user": "Suleiman",
                        "text": "Really I think the reason that code is a pain is because you're being forced to write a parser for an adhoc string format. That's always tricker than dealing with data already in known formats."
                    },
                    {
                        "message_number": "34",
                        "ts": "2019-12-30T00:50:42.093000",
                        "user": "Amri",
                        "text": "It's from user input. No alternative."
                    },
                    {
                        "message_number": "35",
                        "ts": "2019-12-30T00:51:15.435000",
                        "user": "Amri",
                        "text": "In that case the system overwrites it to handle as need be. Unbounded is always exclusive."
                    },
                    {
                        "message_number": "36",
                        "ts": "2019-12-30T00:51:54.233000",
                        "user": "Suleiman",
                        "text": "Not an error?"
                    },
                    {
                        "message_number": "37",
                        "ts": "2019-12-30T00:55:37.908000",
                        "user": "Amri",
                        "text": "No. This can have some consequences but there's a number of ways to handle them."
                    },
                    {
                        "message_number": "38",
                        "ts": "2019-12-30T00:56:17.512000",
                        "user": "Amri",
                        "text": "Ultimately an unbounded range does not have inclusivity which is the advantage that having a bound type has."
                    },
                    {
                        "message_number": "39",
                        "ts": "2019-12-30T00:57:14.347000",
                        "user": "Amri",
                        "text": "Alternatively you can define inclusivity for bounded types which is particularly interesting given that `inf.0` and `inf.0` exist."
                    },
                    {
                        "message_number": "40",
                        "ts": "2019-12-30T00:57:38.058000",
                        "user": "Amri",
                        "text": "Which gives you a concept of all real numbers."
                    },
                    {
                        "message_number": "41",
                        "ts": "2019-12-30T00:57:56.478000",
                        "user": "Suleiman",
                        "text": "right that's part of what the `Range.canonicalize(DiscreteDomain)` method does in Guava"
                    },
                    {
                        "message_number": "42",
                        "ts": "2019-12-30T00:58:08.473000",
                        "user": "Suleiman",
                        "text": "normalize representation of unboundedness for bounded types"
                    },
                    {
                        "message_number": "43",
                        "ts": "2019-12-30T00:58:23.440000",
                        "user": "Amri",
                        "text": "Right."
                    },
                    {
                        "message_number": "44",
                        "ts": "2019-12-30T00:59:41.591000",
                        "user": "Amri",
                        "text": "I believe this was roughly the approach I used however I don't recall if exclusive took unbounded things into account. I know the underlying inclusivity was kept."
                    },
                    {
                        "message_number": "45",
                        "ts": "2019-12-30T01:01:59.380000",
                        "user": "Suleiman",
                        "text": "fyi I just wrote this: https://github.com/jackfirth/rebellion/pull/375"
                    },
                    {
                        "message_number": "46",
                        "ts": "2019-12-31T04:56:39.594000",
                        "user": "Suleiman",
                        "text": "pattern matching for tuple types!"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-01-03T06:16:43.334000",
                        "user": "Suleiman",
                        "text": "\ud83c\udf89 \ud83c\udf89 \ud83c\udf89 https://github.com/jackfirth/rebellion/pull/379"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-01-03T06:18:25.545000",
                        "user": "Amri",
                        "text": "Do you have an example usage somewhere?"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-01-03T06:23:14.700000",
                        "user": "Suleiman",
                        "text": "In the docs. The tl;dr:```(definewrappertype fahrenheit)(definetupletype point (x y))(definerecordtype color (red green blue))(definesingletontype nullpointer)(defineenumtype direction (up down left right))(define (inspect v) (match v [(fahrenheit value) wrapper] [(point x y) tuple] ; all fields required [(color #:red r #:blue b) record] ; not all fields required [(== nullpointer) singleton] [(or (== up) (== down) (== left) (== right)) enum]))```"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-01-04T10:37:34.248000",
                        "user": "Twyla",
                        "text": "Ooh nice"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-01-04T10:42:34.548000",
                        "user": "Suleiman",
                        "text": "source code here: https://github.com/jackfirth/lambdacalculus"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-01-06T14:30:14.245000",
                        "user": "Twyla",
                        "text": "With continuations I suppose."
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-01-06T15:22:04.283000",
                        "user": "Nyriah",
                        "text": "I\\'m not sure about the details but for a while I\\'ve thought it would be possible to do using continuations yeah. It could take some interesting code to simulate the Common Lisp situation where a handler\\'s dynamic scope is mostly like that of the site being handled except with the active handlers of the site the handler was installed at.I don\\'t know if the full power of continuations is necessarily needed maybe just Racket\\'s firstclass parameterizations or even just a single current set of active condition handlers parameter. In fact I think many basic uses of conditions might be equivalent to simply having a Racket parameter that carries a handler object inside not unlike the way Racket already handles reading by using the current readtable or handles module name resolution using the current module name resolver."
                    }
                ]
            },
            {
                "conversation_id": "86",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-30T00:30:49.431000",
                        "user": "Suleiman",
                        "text": "Which level?"
                    }
                ]
            },
            {
                "conversation_id": "87",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2019-12-31T11:25:24.045000",
                        "user": "Nyriah",
                        "text": "hype :)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-04T10:07:54.958000",
                        "user": "Suleiman",
                        "text": "friday night lambda calculus fun"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-06T14:29:28.946000",
                        "user": "Twyla",
                        "text": "How would one implement conditional restarts in Racket?"
                    }
                ]
            },
            {
                "conversation_id": "88",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-06T19:23:52.435000",
                        "user": "Suleiman",
                        "text": "What are conditional restarts? Something different from regular retries?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-06T20:25:32.288000",
                        "user": "Suleiman",
                        "text": "Whoa neat"
                    }
                ]
            },
            {
                "conversation_id": "89",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-06T20:05:59.526000",
                        "user": "Yiqun",
                        "text": "I thought it was a REPL/IDE thing. Like when the program hits an error you get prompted on what to do."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-06T20:06:16.373000",
                        "user": "Yiqun",
                        "text": "Like replace the error with a value or retry it again etc."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-06T20:06:32.513000",
                        "user": "Yiqun",
                        "text": "In Smalltalk you can replace the code and rerun it even."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-06T21:40:49.681000",
                        "user": "Yiqun",
                        "text": "It's partially why TDD/JUnit/etc was mostly developed in Smalltalk. You'd write a few test cases run the tests they'd fail the exception window would drop you into the debugger or you could just directly write the code to make the tests work and resume running the test suite."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-06T21:41:55.088000",
                        "user": "Amri",
                        "text": "TDD shudder xD"
                    }
                ]
            },
            {
                "conversation_id": "90",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-07T00:14:12.651000",
                        "user": "Nyriah",
                        "text": "I was afraid that depth of support might come up. :p That doesn't seem so easy to achieve without a particularly reflective runtime. In Racket modules would probably need to be compiled with that in mind rather than doing something anywhere near as simple as putting a procedure in a parameter."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-07T00:16:08.520000",
                        "user": "Nyriah",
                        "text": "On the other hand I hear Racket has step debugging and code coverage tools which might be pretty similar in scope to that kind of project...? I don't have experience with using them."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-07T01:36:37.632000",
                        "user": "Nyriah",
                        "text": "For me the primary reason I\\'ve thought about this is that it\\'d be fun to say hey Common Lisp can be a library for Racket neat. :p"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-07T01:38:03.791000",
                        "user": "Nyriah",
                        "text": "making Smalltalk a library for Racket would be neat in a similar way"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-07T01:44:48.055000",
                        "user": "Nyriah",
                        "text": "but as far as I understand it making local modifications to a running system is pretty core to the culture of how Smalltalk programs are created and shared so stuffing it into the `#lang` world probably wouldn't give an impression of authenticity"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-07T01:45:13.581000",
                        "user": "Suleiman",
                        "text": "oh :p"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-07T01:45:19.151000",
                        "user": "Suleiman",
                        "text": "it would definitely be neat"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-07T01:45:28.006000",
                        "user": "Suleiman",
                        "text": "and it seems perfectly doable to me"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-07T01:45:56.488000",
                        "user": "Suleiman",
                        "text": "I just don't _want_ it for the problem domains I currently work in"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-07T01:50:03.702000",
                        "user": "Nyriah",
                        "text": "Same. I feel like it's something that should be built by someone who really wants it and knows how to tell when it's doing what it's supposed to do. XD"
                    }
                ]
            },
            {
                "conversation_id": "91",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-07T00:42:39.117000",
                        "user": "Suleiman",
                        "text": "Is that really so much better than just rerunning the test? Why the need for hot code reloading and suspension of execution?"
                    }
                ]
            },
            {
                "conversation_id": "92",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-07T03:38:44.306000",
                        "user": "Zeplyn",
                        "text": "i am having a moment of boredom what do i make in the racket"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-07T03:38:57.765000",
                        "user": "Zeplyn",
                        "text": "i completed my other thing"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-07T03:42:18.775000",
                        "user": "Twyla",
                        "text": "@notjack Here's a cool example usecase for conditional restarts: https://groups.google.com/forum/#!topic/comp.lang.dylan/gszO7d7BAok"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-07T03:44:20.574000",
                        "user": "Twyla",
                        "text": "Effectively exception handling is separated into conditions and restarts where you can set multiple different (dynamically bound) handlers to different possible conditions and then dynamically restart the evaluation. eg when you hit a divide by zero you can tell it to return a specific value log the error and continue (Racket's exceptions can do this too) or retry the last bit of evaluation with different values."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-07T03:47:27.973000",
                        "user": "Yiqun",
                        "text": "Making a traditional Smalltalk as a `#lang` would be difficult. A person could make a mostly ANSI compliant Smalltalk though since the standard cut out a lot of the reflective capabilities."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-07T03:48:12.160000",
                        "user": "Yiqun",
                        "text": "I've been kicking around the idea but really it just gets you an OOP language with a different syntax."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-07T03:48:25.715000",
                        "user": "Yiqun",
                        "text": "So it hasn't been too compelling."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-07T03:55:03.419000",
                        "user": "Twyla",
                        "text": "It's a shame too I think reflection is where Smalltalk truly shines."
                    }
                ]
            },
            {
                "conversation_id": "93",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-07T19:38:21.784000",
                        "user": "Suleiman",
                        "text": "@Deleted User that use case you linked is fascinating"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-07T19:38:42.252000",
                        "user": "Suleiman",
                        "text": "I like it"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-07T19:48:43.627000",
                        "user": "Twyla",
                        "text": ":3"
                    }
                ]
            },
            {
                "conversation_id": "94",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-08T21:51:17.486000",
                        "user": "Zeplyn",
                        "text": "my code i dont know why it works"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-08T21:51:20.523000",
                        "user": "Zeplyn",
                        "text": "but it do work"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-09T16:52:38.018000",
                        "user": "Zeplyn",
                        "text": "(big mood)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-10T16:50:03.026000",
                        "user": "Zeplyn",
                        "text": "hello racket folk"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-10T16:50:16.107000",
                        "user": "Zeplyn",
                        "text": "i am working on my first bigger language on racket"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-10T16:53:10.476000",
                        "user": "Amri",
                        "text": "@4984 yo whaddup"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-10T16:53:17.449000",
                        "user": "Zeplyn",
                        "text": "oh hi \ud83d\ude04"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-10T16:53:25.131000",
                        "user": "Amri",
                        "text": "o/"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-10T16:53:50.941000",
                        "user": "Zeplyn",
                        "text": "i have not figured out how i want control flow"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-10T16:53:59.375000",
                        "user": "Zeplyn",
                        "text": "it currently kinda looks like js"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-10T16:56:12.146000",
                        "user": "Amri",
                        "text": "runs"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-10T16:56:43.706000",
                        "user": "Zeplyn",
                        "text": "why are you running"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-10T16:57:33.567000",
                        "user": "Zeplyn",
                        "text": "it looks like js"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-10T16:58:09.254000",
                        "user": "Zeplyn",
                        "text": "i cant figure out how to make an early returnlike control structure"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-10T16:59:00.077000",
                        "user": "Amri",
                        "text": "Do you mean```func x() { if (cond) { return 0; } //...}```Or returning at the expression level?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-01-10T17:03:02.800000",
                        "user": "Zeplyn",
                        "text": "like the code example"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-01-10T17:05:31.474000",
                        "user": "Amri",
                        "text": "What's your reasoning for avoiding `return`?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-01-10T17:05:47.989000",
                        "user": "Zeplyn",
                        "text": "i dont really know what im doing"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-01-10T17:06:14.749000",
                        "user": "Amri",
                        "text": "xDD"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-01-10T17:09:23.397000",
                        "user": "Zeplyn",
                        "text": "so like i dont exactly know what to implement"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-01-10T17:13:44.835000",
                        "user": "Amri",
                        "text": "I don't follow."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-01-10T17:30:02.217000",
                        "user": "Suleiman",
                        "text": "@4984 You can use continuations and syntax parameters to implement that kind of thing. Examples here: https://gist.github.com/jackfirth/027411d567385dadb3202bee75a847b4"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-01-10T18:33:23.277000",
                        "user": "Zeplyn",
                        "text": "macros cause me confusion"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-01-10T18:33:27.235000",
                        "user": "Zeplyn",
                        "text": "like i get them"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-01-10T18:33:29.386000",
                        "user": "Zeplyn",
                        "text": "but i just"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-01-10T18:33:31.474000",
                        "user": "Zeplyn",
                        "text": "confused"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-01-10T18:35:08.800000",
                        "user": "Amri",
                        "text": "Mate it took me a week workshop to pretend like I knew what I was doing."
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-01-10T18:35:52.198000",
                        "user": "Suleiman",
                        "text": "I am very happy to help with any macro problems or questions"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-01-10T18:36:05.942000",
                        "user": "Zeplyn",
                        "text": "thank you"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-01-10T18:36:09.442000",
                        "user": "Zeplyn",
                        "text": "but there is no problem"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-01-10T18:36:14.557000",
                        "user": "Zeplyn",
                        "text": "i just dont know when to use them"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-01-10T18:36:59.541000",
                        "user": "Suleiman",
                        "text": "As a general rule they're best used when you want to do something that seems impossible"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-01-10T18:42:55.347000",
                        "user": "Zeplyn",
                        "text": "okie"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-01-10T18:45:49.988000",
                        "user": "Yiqun",
                        "text": "A lot of macros I write are best described as I can write this code like A but I would prefer to write it as B because it is [clearer/less repetitive/etc]"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-01-10T18:46:11.366000",
                        "user": "Yiqun",
                        "text": "So you write a macro to turn your B's into A's"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-01-10T19:02:41.373000",
                        "user": "Amri",
                        "text": "CMD + C CMD + Macro"
                    }
                ]
            },
            {
                "conversation_id": "95",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-09T06:07:13.999000",
                        "user": "Twyla",
                        "text": "mood"
                    }
                ]
            },
            {
                "conversation_id": "96",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-10T17:31:51.141000",
                        "user": "Amri",
                        "text": "Oh is that what the question was xD"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-10T17:34:39.066000",
                        "user": "Zeplyn",
                        "text": "yes i am bad at communicating"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-10T17:34:41.177000",
                        "user": "Zeplyn",
                        "text": "thank you"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-10T17:35:22.005000",
                        "user": "Amri",
                        "text": "I'm still in pldi mode :p"
                    }
                ]
            },
            {
                "conversation_id": "97",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-10T19:49:51.204000",
                        "user": "Zeplyn",
                        "text": "today\\'s I love racket moment:"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-10T19:49:58.090000",
                        "user": "Zeplyn",
                        "text": "i was running a lil benchmark"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-10T19:50:17.683000",
                        "user": "Zeplyn",
                        "text": "apparently racket does really well compared to the luajit"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-10T19:50:44.823000",
                        "user": "Zeplyn",
                        "text": "and hence i have a really fast language implemetation on my hands"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-11T08:52:28.022000",
                        "user": "Jla",
                        "text": "htdp anyone?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-11T08:56:01.580000",
                        "user": "Suleiman",
                        "text": "it's good"
                    }
                ]
            },
            {
                "conversation_id": "98",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-11T08:58:38.073000",
                        "user": "Jla",
                        "text": "im a beginner and which one do i get started with?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-11T08:58:44.113000",
                        "user": "Jla",
                        "text": "1st edition or the second one"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-11T08:58:46.738000",
                        "user": "Jla",
                        "text": ":c"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-11T09:04:06.383000",
                        "user": "Suleiman",
                        "text": "Definitely the second"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-11T09:04:10.850000",
                        "user": "Jla",
                        "text": "why"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-11T09:04:26.718000",
                        "user": "Jla",
                        "text": "the first one seems complete unlike the 2nd"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-11T09:04:37.929000",
                        "user": "Suleiman",
                        "text": "it's meant to replace the first edition and has corrections and such"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-11T09:04:54.956000",
                        "user": "Jla",
                        "text": "and the prefaces are just too scaryy :c"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-11T09:05:16.739000",
                        "user": "Suleiman",
                        "text": "If you find it easier to learn from the 1st that's okay"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-11T09:05:41.949000",
                        "user": "Jla",
                        "text": "oki I'll start with the second one"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-11T09:06:14.971000",
                        "user": "Jla",
                        "text": "its just the hard computational terms used in the prefaces of both the editions bothering me"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-11T09:07:35.300000",
                        "user": "Suleiman",
                        "text": "feel free to ask questions about any of those terms here \ud83d\ude42"
                    }
                ]
            },
            {
                "conversation_id": "99",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-11T11:23:23.468000",
                        "user": "Zeplyn",
                        "text": "it turns out its faster not to use macros for early return"
                    }
                ]
            },
            {
                "conversation_id": "100",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-11T17:07:29.195000",
                        "user": "Amri",
                        "text": "What in comparison to?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-11T19:38:05.341000",
                        "user": "Amri",
                        "text": "^"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-11T19:38:16.453000",
                        "user": "Amri",
                        "text": "Macros should have zero runtime impact."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-11T19:38:22.098000",
                        "user": "Amri",
                        "text": "Which is like the point of macros"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-11T21:29:42.343000",
                        "user": "Suleiman",
                        "text": "I could see it having a big impact on recursive functions"
                    }
                ]
            },
            {
                "conversation_id": "101",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-11T19:30:19.043000",
                        "user": "Suleiman",
                        "text": "it's probably the continuations that make things slower not the macros"
                    }
                ]
            },
            {
                "conversation_id": "102",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-11T20:24:42.886000",
                        "user": "Yiqun",
                        "text": "Early return continuations should have almost zero impact"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-11T23:03:35.576000",
                        "user": "Yiqun",
                        "text": "Hmm yes I think it might do something to the tail recursion.```#lang racket/base(define (count0 x) (unless (zero? x) (count0 (sub1 x))))(define (count1 x) (let/ec return (unless (zero? x) (count1 (sub1 x)))))(collectgarbage)(collectgarbage)(collectgarbage)'count0(time (count0 1000000))(collectgarbage)(collectgarbage)(collectgarbage)'count1(time (count1 1000000))``````'count0cpu time: 32 real time: 35 gc time: 0'count1cpu time: 844 real time: 848 gc time: 312```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-11T23:07:10.503000",
                        "user": "Yiqun",
                        "text": "One thing that you could do (that is a bit complicated) is when macroexpanding functions expand the body and check if it does an early return. If it is in a tail position the `return` should just disappear otherwise wrap the function body with `let/ec` and carry on. Then only early return functions have to pay the early return tax.Maybe you don't need to expand the body depends on what the language looks like."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-11T23:23:00.515000",
                        "user": "Yiqun",
                        "text": "I wonder why the `let/ec`continuations don't collapse in a tail context like that."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-11T23:24:15.501000",
                        "user": "Yiqun",
                        "text": "Maybe they do and the continuations aren't being stack allocated like I'm expecting."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-11T23:35:18.711000",
                        "user": "Suleiman",
                        "text": "@oaktownsam Try it on the chezscheme impl of racket I recall mflatt saying that the CS implementation of continuations is _much_ more efficient than the nonCS one"
                    }
                ]
            },
            {
                "conversation_id": "103",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-11T23:47:33.349000",
                        "user": "Suleiman",
                        "text": "What do y'all think of this:```> (rangeclamp (closedrange 1 9) 4)4> (rangeclamp (closedrange 1 9) 8000)9> (rangeclamp (closedrange 1 9) 8000)1```"
                    }
                ]
            },
            {
                "conversation_id": "104",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-12T07:00:51.319000",
                        "user": "Zeplyn",
                        "text": "why is the variant: cs of racket like 2.5x bigger"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-12T07:02:49.600000",
                        "user": "Suleiman",
                        "text": "it's implemented using chezscheme which is a big fast and complicated pile of code"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-12T07:04:41.172000",
                        "user": "Zeplyn",
                        "text": "chezscheme is only 18mb on my system"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-12T07:05:28.282000",
                        "user": "Suleiman",
                        "text": "when you say 2.5x bigger what two things are you comparing?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-12T07:07:12.922000",
                        "user": "Zeplyn",
                        "text": "119MiB vs 316MiB"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-12T07:09:02.735000",
                        "user": "Suleiman",
                        "text": "No like are those two installers you downloaded from the racketlang.org website? Or are they two docker images? or something else?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-12T07:09:23.039000",
                        "user": "Zeplyn",
                        "text": "https://download.racketlang.org/"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-12T07:12:31.004000",
                        "user": "Suleiman",
                        "text": "are those the linux installers for nonminimal racket?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-12T07:15:11.248000",
                        "user": "Suleiman",
                        "text": "I'm guessing it's the built packages. The racket bytecode format is different on the chezscheme vm because chezscheme compiles expanded racket code into actual machine code and that gets stored in the bytecode files. The nonCS racket vm compiles expanded code into a machineindependent intermediate form which is then compiled at runtime with a JIT."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-12T07:16:21.178000",
                        "user": "Suleiman",
                        "text": "The minimal racket installers for regular and CS racket are 11mb and 36mb which sounds like it fits with the chezscheme being about 18mb"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-12T07:17:20.296000",
                        "user": "Suleiman",
                        "text": "so tl;dr: it's a lot bigger because there's a lot of precompiled code"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-12T10:52:52.251000",
                        "user": "Suleiman",
                        "text": "@4984 change your `$PATH` to point to the right racket"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-12T10:53:12.931000",
                        "user": "Suleiman",
                        "text": "oh wait"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-12T10:53:41.468000",
                        "user": "Suleiman",
                        "text": "actually it might be that you should use the `racketcs` and `racocs` commands? I think?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-12T10:53:44.875000",
                        "user": "Suleiman",
                        "text": "not sure"
                    }
                ]
            },
            {
                "conversation_id": "105",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-12T08:10:16.623000",
                        "user": "Twyla",
                        "text": "@bub Feel free to ask about anything you struggle with and we'll gladly help you out."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-12T08:11:21.312000",
                        "user": "Jla",
                        "text": "@Deleted User oki i will  thanks!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-12T08:11:34.532000",
                        "user": "Twyla",
                        "text": "No problem!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-12T08:12:49.050000",
                        "user": "Zeplyn",
                        "text": "`readcompiledlinklet: virtualmachine mismatch expected: chezscheme found: racket\"` how do i tell it that racket is installed in ~/racket"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-12T11:19:38.853000",
                        "user": "Zeplyn",
                        "text": "i installed racket into my home"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-12T11:19:48.254000",
                        "user": "Zeplyn",
                        "text": "because i didnt want it to get rid of racket"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-12T13:39:45.688000",
                        "user": "Zeplyn",
                        "text": "i give up on that front"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-12T13:40:11.237000",
                        "user": "Zeplyn",
                        "text": "is there a good way to check what is making racket take so long to start"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-12T13:40:24.120000",
                        "user": "Zeplyn",
                        "text": "im not sure what its doing"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-12T13:40:41.420000",
                        "user": "Zeplyn",
                        "text": "like why my code is slow when no input is given and no processing is done"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-13T14:58:43.672000",
                        "user": "Zeplyn",
                        "text": "i dont know the profiler"
                    }
                ]
            },
            {
                "conversation_id": "106",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-12T22:26:37.906000",
                        "user": "Suleiman",
                        "text": "could be lots of things"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-13T15:05:35.736000",
                        "user": "Twyla",
                        "text": "It's fairly easy to use actually."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-13T15:07:24.464000",
                        "user": "Zeplyn",
                        "text": "i see"
                    }
                ]
            },
            {
                "conversation_id": "107",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-12T22:39:07.845000",
                        "user": "Nyriah",
                        "text": "was it always doing that or is it something new?"
                    }
                ]
            },
            {
                "conversation_id": "108",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-12T23:14:16.126000",
                        "user": "Twyla",
                        "text": "Have you tried the profiler?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-13T15:06:36.580000",
                        "user": "Twyla",
                        "text": "Instead of running your program with `% racket main.rkt` do `% raco profile main.rkt`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-13T15:07:25.548000",
                        "user": "Twyla",
                        "text": "`profiler` package allows for more finetuned hooks you can place in your code but `raco profile` is almost always enough."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-13T15:07:51.625000",
                        "user": "Twyla",
                        "text": "There's also `errortrace` but I don't know how to use that."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-13T15:08:14.193000",
                        "user": "Zeplyn",
                        "text": "apparently my parser is taking alot of time to start"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-13T15:09:42.686000",
                        "user": "Zeplyn",
                        "text": "I I KNOW HOW TO FIX THIS!!!!"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-13T15:09:43.641000",
                        "user": "Zeplyn",
                        "text": "wooo"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-13T15:09:54.563000",
                        "user": "Zeplyn",
                        "text": "okay so with that out of the way soon"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-13T15:10:07.942000",
                        "user": "Zeplyn",
                        "text": "how do i make my code into a `#lang`"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-13T15:10:27.832000",
                        "user": "Zeplyn",
                        "text": "i read about it but it confuses me"
                    }
                ]
            },
            {
                "conversation_id": "109",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-13T17:16:00.939000",
                        "user": "Twyla",
                        "text": "It's a hairy process admittedly."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-13T17:17:43.834000",
                        "user": "Twyla",
                        "text": "You can do it like this: https://docs.racketlang.org/guide/syntax_modulereader.html"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-13T17:18:16.507000",
                        "user": "Twyla",
                        "text": "Do your stuff in whatever you sublanguage you like then `provide` out the identifiers."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-13T17:19:04.702000",
                        "user": "Twyla",
                        "text": "Make a file in `syntax/modulereader` to import those identifiers and that's it."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-13T17:19:42.092000",
                        "user": "Twyla",
                        "text": "You can further adjust the parser in the latter file but it's not necessary for small DSLs."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-13T17:20:13.295000",
                        "user": "Twyla",
                        "text": "Then you can use `#lang` to call the latter file."
                    }
                ]
            },
            {
                "conversation_id": "110",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-13T17:47:07.091000",
                        "user": "Zeplyn",
                        "text": "is that only for racket like languages"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-13T17:47:11.788000",
                        "user": "Zeplyn",
                        "text": "my language is nothing similar"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-13T17:57:45.538000",
                        "user": "Amri",
                        "text": "All. The syntax you use isn't significant there."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-13T18:08:31.892000",
                        "user": "Suleiman",
                        "text": "I highly suggest reading Beautiful Racket that's what I do whenever I need to make a `#lang`."
                    }
                ]
            },
            {
                "conversation_id": "111",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-13T18:12:52.503000",
                        "user": "Amri",
                        "text": "^"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-13T18:14:07.620000",
                        "user": "Amri",
                        "text": "I don't know how to write macros. I know just enough to see what exists and how to go about doing what I need to and google takes me the rest of the way xD"
                    }
                ]
            },
            {
                "conversation_id": "112",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-13T18:39:37.531000",
                        "user": "Twyla",
                        "text": "I should get around to reading that book myself."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-14T19:11:04.070000",
                        "user": "Twyla",
                        "text": "Have you peeps seen this? https://github.com/exercism/racket/issues/150"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-14T19:11:44.203000",
                        "user": "Jla",
                        "text": "square this function is not defined?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-14T19:11:46.048000",
                        "user": "Jla",
                        "text": "help!"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-14T19:11:52.421000",
                        "user": "Twyla",
                        "text": "Hm?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-14T19:11:52.584000",
                        "user": "Jla",
                        "text": "in the drracket"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-14T19:11:53.379000",
                        "user": "Jla",
                        "text": "iide"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-14T19:12:08.835000",
                        "user": "Twyla",
                        "text": "Can you be more specific?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-14T19:12:41.842000",
                        "user": "Jla",
                        "text": "the intrepreter in drRacket ide shows an error"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-14T19:12:55.135000",
                        "user": "Jla",
                        "text": "square : this function is not defined"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-14T19:13:04.696000",
                        "user": "Twyla",
                        "text": "What are you trying to do?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-14T19:13:40.300000",
                        "user": "Jla",
                        "text": "(square 10 solid red\")"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-14T19:14:00.173000",
                        "user": "Twyla",
                        "text": "Is that all?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-14T19:14:06.595000",
                        "user": "Jla",
                        "text": "yes lul"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-14T19:14:11.057000",
                        "user": "Twyla",
                        "text": "If so you need to import the image library."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-01-14T19:14:18.002000",
                        "user": "Jla",
                        "text": "i did"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-01-14T19:14:32.570000",
                        "user": "Jla",
                        "text": "circle /rectangle do work"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-01-14T19:14:38.387000",
                        "user": "Twyla",
                        "text": "Well then that's not all. ;p"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-01-14T19:14:52.454000",
                        "user": "Jla",
                        "text": "im starting off with the htdp"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-01-14T19:15:11.274000",
                        "user": "Jla",
                        "text": "the second version's better than the first right? for beginners"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-01-14T19:15:25.827000",
                        "user": "Twyla",
                        "text": "I recommend the second version yeah."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-01-14T19:15:54.501000",
                        "user": "Twyla",
                        "text": "And if you're following the second version don't forget that the library name is `2htdp` not `htdp`."
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-01-14T19:16:21.559000",
                        "user": "Jla",
                        "text": "yeah"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-01-14T19:16:35.634000",
                        "user": "Jla",
                        "text": "but isnt it in the language<teachpacks thing?"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-01-14T19:17:23.132000",
                        "user": "Twyla",
                        "text": "Honestly I have no idea since I don't use DrRacket."
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-01-14T19:17:37.342000",
                        "user": "Twyla",
                        "text": "But you need `2htdp/image`."
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-01-14T19:17:43.035000",
                        "user": "Jla",
                        "text": "oh :c"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-01-14T19:19:42.533000",
                        "user": "Twyla",
                        "text": "Pick HtDP/2e from the menu instead of HtDP."
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-01-14T19:19:58.736000",
                        "user": "Jla",
                        "text": "ive done it  ty for the help tho!"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-01-14T19:20:19.206000",
                        "user": "Twyla",
                        "text": "Does it work now?"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-01-14T19:20:53.253000",
                        "user": "Jla",
                        "text": "yay"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-01-14T19:20:54.936000",
                        "user": "Jla",
                        "text": ":p"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-01-14T19:21:00.854000",
                        "user": "Twyla",
                        "text": "\ud83d\udc4d"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-01-14T19:21:32.683000",
                        "user": "Jla",
                        "text": "why does this thing take much time for giving the output :c"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-01-14T19:21:49.715000",
                        "user": "Twyla",
                        "text": "How long does it take?"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-01-14T19:22:14.289000",
                        "user": "Jla",
                        "text": "45 secs lul"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-01-14T19:22:16.879000",
                        "user": "Twyla",
                        "text": "DrRacket is a tad slow unfortunately."
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-01-14T19:22:20.486000",
                        "user": "Jla",
                        "text": "oh"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-01-14T19:22:33.300000",
                        "user": "Twyla",
                        "text": "That's the price to pay for extensibility."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-01-14T19:22:40.780000",
                        "user": "Jla",
                        "text": "ouii"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-01-14T19:23:15.598000",
                        "user": "Jla",
                        "text": "any racket app"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-01-14T19:23:22.470000",
                        "user": "Jla",
                        "text": "for android!?"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-01-14T19:24:07.457000",
                        "user": "Twyla",
                        "text": "Racket works on Android but I don't think anyone's ported a development environment to it."
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-01-14T19:24:30.802000",
                        "user": "Jla",
                        "text": "oh :("
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-01-14T19:25:21.303000",
                        "user": "Twyla",
                        "text": "I would try my hand at it if I knew anything about mobile development."
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-01-14T19:25:23.526000",
                        "user": "Twyla",
                        "text": "Haha"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-01-14T19:36:59.636000",
                        "user": "Twyla",
                        "text": "Oh I remember now. Racket is in Termux's repos."
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-01-14T19:37:10.074000",
                        "user": "Twyla",
                        "text": "I don't know if it comes with the GUI portions though."
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-01-14T19:38:47.243000",
                        "user": "Twyla",
                        "text": "Ah no it doesn't."
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-01-14T20:17:47.482000",
                        "user": "Twyla",
                        "text": "What's the problem?"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-01-15T11:34:30.202000",
                        "user": "Twyla",
                        "text": "Isn't that what the simplified version meant to do?"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-01-15T11:42:09.377000",
                        "user": "Jla",
                        "text": "yeah but its removing the content!"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-01-15T11:42:13.181000",
                        "user": "Jla",
                        "text": ":("
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-01-15T11:52:10.350000",
                        "user": "Twyla",
                        "text": "Firefox's reader view does the same thing."
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-01-15T12:15:55.915000",
                        "user": "Jla",
                        "text": "yeah but reading that way would probably skip some content right? @Deleted User"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-01-15T12:16:56.370000",
                        "user": "Twyla",
                        "text": "Check the page in both modes for a while and see."
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-01-15T12:22:55.613000",
                        "user": "Jla",
                        "text": "ouii"
                    }
                ]
            },
            {
                "conversation_id": "113",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-14T19:40:55.483000",
                        "user": "Twyla",
                        "text": "Better than nothing."
                    }
                ]
            },
            {
                "conversation_id": "114",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-14T20:07:32.934000",
                        "user": "Zeplyn",
                        "text": "so like... racket borken again \ud83d\ude26"
                    }
                ]
            },
            {
                "conversation_id": "115",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-15T11:32:29.850000",
                        "user": "Jla",
                        "text": "@Deleted User does the simplified version of any website in chrome remove the website's content?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-15T11:32:39.408000",
                        "user": "Jla",
                        "text": "simplified version"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-15T11:33:02.388000",
                        "user": "Jla",
                        "text": "original version"
                    }
                ]
            },
            {
                "conversation_id": "116",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-15T12:16:42.165000",
                        "user": "Twyla",
                        "text": "So far I've only seen it omit the table of contents."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-15T20:52:59.552000",
                        "user": "Twyla",
                        "text": "I came up with a creative way to comment out expressions."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-15T20:53:27.637000",
                        "user": "Twyla",
                        "text": "```Racket(definesyntax comment (syntaxrules () ((_ ...) (values))))```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-15T20:54:08.783000",
                        "user": "Amri",
                        "text": "`#;`?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-15T20:54:18.185000",
                        "user": "Twyla",
                        "text": "That's too easy. ;P"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-15T20:54:21.464000",
                        "user": "Amri",
                        "text": ".."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-15T20:54:52.602000",
                        "user": "Twyla",
                        "text": "I like how `values` with zero args returns nothing."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-15T20:55:54.478000",
                        "user": "Twyla",
                        "text": "Clojure's `comment` macro returns `nil` instead which kinda defeats the purpose IMO."
                    }
                ]
            },
            {
                "conversation_id": "117",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-15T22:03:58.688000",
                        "user": "Suleiman",
                        "text": "There's also that `todo` macro"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-15T22:05:54.386000",
                        "user": "Suleiman",
                        "text": "(see the `todolist` package)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-16T06:19:40.387000",
                        "user": "Suleiman",
                        "text": "Implemented my own contract combinator for comparators!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-16T18:49:39.802000",
                        "user": "Suleiman",
                        "text": "Reducer and transducer contracts are coming soon!"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-16T18:49:45.935000",
                        "user": "Suleiman",
                        "text": "(hopefully)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-16T23:51:26.415000",
                        "user": "Zeplyn",
                        "text": "i have no clue what that is but woo that sounds cool"
                    }
                ]
            },
            {
                "conversation_id": "118",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-17T00:12:45.710000",
                        "user": "Justo",
                        "text": "can someone help me with these questions? I've been stuck for days."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-17T00:12:47.597000",
                        "user": "Justo",
                        "text": "Define a constant ANGLE of value 120. Now design a function pinetree that takes two numbers a and d as input and returns the image of a simplistic holiday tree (lateseason as that may be) as follows. The tree consists of 5 upwardpointing isosceles triangles (of color green obviously\u2014forestgreen is nise and is a valid BSL color) stacked on top of each other. The top triangle\u2019s equallength sides have length a and are joined at an angle of ANGLE degrees. For the triangle below that the equallength side length increases to a+d and so forth with the bottom triangle having equallength side length a+4d. The angle does not change. The stack of triangles sits on top of a brown rectangle of width a and height 1.5a depicting the trunk of the tree."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-17T00:13:04.905000",
                        "user": "Justo",
                        "text": "Design a simple bouncingball animation. The animation should take place in a 300x300 scene with white background. A small ball (a black circle of radius 5) is initially located at position (0,150). The ball should now move straight southeast until it hits the bottom edge of the scene. At this time it should bounce off the edge toward the northeast until it hits the right edge of the frame (which will happen at position (300,150)). At this point the ball should turn red and stay at position (300,150) for the rest of the animation (as far as the viewer is concerned this ends the animation).To achieve this define constants for the scene and two samesize balls one black and one red. For the animation you need to define a single function drawball that takes the xcoordinate of the ball (a natural number) as input and draws the ball at the correct position (x,y); you do the math to figure out y. Like pinetree this function returns an image. Remember that for some values of x the ball moves southeast; for others it moves northeast. The origin of the coordinate system is the topleft corner! The color of the ball also depends on x.Once you have defined drawball to start the animation you pass the function name to the animate function: (animate drawball). For this to work your code must include the (require 2htdp/universe) directive (in addition to (require 2htdp/image))."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-17T00:14:07.594000",
                        "user": "Justo",
                        "text": "@everyone"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-17T00:15:09.703000",
                        "user": "Christabella",
                        "text": "Did you ask your instructor for help?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-17T00:15:13.473000",
                        "user": "Suleiman",
                        "text": "@Gix Please don't ping everyone to ask for help and please ask for help in the #help channel (which I just created for this)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-17T00:15:27.612000",
                        "user": "Justo",
                        "text": "sorry my bad!"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-17T00:15:42.060000",
                        "user": "Justo",
                        "text": "and yep I asked the TA but he didn;t know what to do"
                    }
                ]
            },
            {
                "conversation_id": "119",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-17T00:42:04.408000",
                        "user": "Zeplyn",
                        "text": "im bored and tired of writing a lua compiler"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-17T00:42:29.421000",
                        "user": "Zeplyn",
                        "text": "anyone need some help with stuff in racket that i could maybe do?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-17T00:53:00.747000",
                        "user": "Suleiman",
                        "text": "there's many things to do in my Rebellion project if you like"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-17T00:56:32.555000",
                        "user": "Zeplyn",
                        "text": "ill give a look"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-17T00:56:37.039000",
                        "user": "Zeplyn",
                        "text": "is there a link to it"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-17T00:57:09.415000",
                        "user": "Suleiman",
                        "text": "https://github.com/jackfirth/rebellion"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-17T00:58:29.937000",
                        "user": "Zeplyn",
                        "text": "before i can help my racket is giving a `\"readcompiledlinklet: virtualmachine mismatch expected: chezscheme\"` error do i need to install something better"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-17T00:58:36.249000",
                        "user": "Suleiman",
                        "text": "Something that would be easy to get started with and also really helpful: replace all uses of `cond` with `strictcond` which is in the `rebellion/private/strictcond` module."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-17T00:59:59.365000",
                        "user": "Suleiman",
                        "text": "@4984 unsure. Are you in the Racket slack as well? Asking there would be more likely to get you an answer or asking on the `racketusers` mailing list."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-17T01:00:22.083000",
                        "user": "Zeplyn",
                        "text": "i need to fix my slack installation too"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-17T01:00:22.935000",
                        "user": "Zeplyn",
                        "text": "\ud83d\ude26"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-17T01:00:27.995000",
                        "user": "Suleiman",
                        "text": ":'("
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-17T01:00:32.847000",
                        "user": "Zeplyn",
                        "text": "ill figure that one out myself"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-17T01:01:09.788000",
                        "user": "Suleiman",
                        "text": "Use slack in the web browser temporarily maybe?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-17T01:04:50.163000",
                        "user": "Zeplyn",
                        "text": "Total download size: 0.85MiB"
                    }
                ]
            },
            {
                "conversation_id": "120",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-17T01:24:32.309000",
                        "user": "Zeplyn",
                        "text": "i need to fix my entire system now"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-17T01:24:46.528000",
                        "user": "Zeplyn",
                        "text": "i dont know how i manage to break software so easily"
                    }
                ]
            },
            {
                "conversation_id": "121",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-17T13:11:07.357000",
                        "user": "Twyla",
                        "text": "Anyone know why racketrx code was suddenly taken down from GitHub?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-17T13:11:29.690000",
                        "user": "Twyla",
                        "text": "https://github.com/samvv/racketrx"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-17T13:11:47.766000",
                        "user": "Twyla",
                        "text": "There's still a raco pkg but it's broken because the repo is gone."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-17T13:11:54.691000",
                        "user": "Twyla",
                        "text": "The documentation is still up."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-17T13:13:22.496000",
                        "user": "Twyla",
                        "text": "They took down racketgaming and ramunk too."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-17T13:15:12.156000",
                        "user": "Twyla",
                        "text": "Oh he wiped his GitHub and deleted his Patreon and Twitter."
                    }
                ]
            },
            {
                "conversation_id": "122",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-17T16:55:53.051000",
                        "user": "Yiqun",
                        "text": "That's a shame"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-17T16:56:20.091000",
                        "user": "Yiqun",
                        "text": "Maybe you can find them on gitlab?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-18T03:49:59.387000",
                        "user": "Suleiman",
                        "text": "makes sense under the hood it's creating a promise for every single expression (including subexpressions)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-18T05:02:47.012000",
                        "user": "Suleiman",
                        "text": "yeah"
                    }
                ]
            },
            {
                "conversation_id": "123",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-18T03:08:14.067000",
                        "user": "Zeplyn",
                        "text": "darn lazy racket is not the fast one"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-18T05:02:24.862000",
                        "user": "Zeplyn",
                        "text": "oh geez"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-18T05:04:13.822000",
                        "user": "Zeplyn",
                        "text": "9535ms vs 164ms"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-18T05:06:48.626000",
                        "user": "Suleiman",
                        "text": "_ouch_"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-18T05:10:03.257000",
                        "user": "Zeplyn",
                        "text": "my language is slow"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-18T05:10:17.710000",
                        "user": "Zeplyn",
                        "text": "sorry the implementation"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-18T05:10:25.671000",
                        "user": "Zeplyn",
                        "text": "there are plenty of fast interpreters"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-18T05:47:28.397000",
                        "user": "Zeplyn",
                        "text": "def gonna pay for beautyful racket soon if i dont see a reason not to within the next week or so"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-18T05:50:32.055000",
                        "user": "Zeplyn",
                        "text": "lua"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-18T05:50:56.181000",
                        "user": "Zeplyn",
                        "text": "i could not find an implementation for racket"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-18T05:51:22.629000",
                        "user": "Zeplyn",
                        "text": "and i figure that any so called language oriented programming is valid without a lua implenetation"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-18T05:51:53.158000",
                        "user": "Zeplyn",
                        "text": "like geez there are like 4 for java and one for python i think"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-18T05:52:24.095000",
                        "user": "Suleiman",
                        "text": "hell yeah I'm all for a `#lang lua` implementation"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-18T05:52:35.899000",
                        "user": "Zeplyn",
                        "text": "i mean"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-01-18T05:52:44.159000",
                        "user": "Zeplyn",
                        "text": "i figured out how to `#lang lua`"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-01-18T05:52:50.602000",
                        "user": "Zeplyn",
                        "text": "but actually getting it to work is hard"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-01-18T05:52:58.500000",
                        "user": "Zeplyn",
                        "text": "because the lua library does some funky things"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-01-18T05:53:03.552000",
                        "user": "Suleiman",
                        "text": "I bet"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-01-18T05:53:13.537000",
                        "user": "Suleiman",
                        "text": "is your code online somewhere?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-01-18T05:53:16.762000",
                        "user": "Zeplyn",
                        "text": "soon"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-01-18T05:53:18.481000",
                        "user": "Zeplyn",
                        "text": "actually"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-01-18T05:53:22.447000",
                        "user": "Zeplyn",
                        "text": "within 5 minutes"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-01-18T05:53:24.730000",
                        "user": "Zeplyn",
                        "text": "gimmie a sec"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-01-18T05:53:34.783000",
                        "user": "Suleiman",
                        "text": "yay!"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-01-18T06:07:22.705000",
                        "user": "Zeplyn",
                        "text": "sorry both my wifi and dog decided to stop working for a bit"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-01-18T06:07:59.531000",
                        "user": "Zeplyn",
                        "text": "https://github.com/ShawSumma/lure"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-01-18T06:08:06.257000",
                        "user": "Zeplyn",
                        "text": "note that it is a BIG mess"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-01-18T06:08:22.740000",
                        "user": "Zeplyn",
                        "text": "it kinda takes some of the code from megaparsack"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-01-18T06:08:32.753000",
                        "user": "Zeplyn",
                        "text": "but not that much"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-01-18T06:08:48.075000",
                        "user": "Suleiman",
                        "text": "worry not you are allowed to make messes"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-01-18T06:09:15.345000",
                        "user": "Suleiman",
                        "text": "learning and trying are good things to do"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-01-18T06:09:37.342000",
                        "user": "Zeplyn",
                        "text": "this sounds very true"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-01-18T06:10:40.855000",
                        "user": "Zeplyn",
                        "text": "wait its broken!?"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-01-18T06:11:54.728000",
                        "user": "Suleiman",
                        "text": "broken how?"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-01-18T06:12:06.561000",
                        "user": "Zeplyn",
                        "text": "i commented out a line accedently"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-01-18T06:12:08.015000",
                        "user": "Zeplyn",
                        "text": "fixed"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-01-18T06:12:10.855000",
                        "user": "Zeplyn",
                        "text": "\ud83d\ude26"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-01-18T06:12:17.689000",
                        "user": "Suleiman",
                        "text": "\ud83d\ude2e"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-01-18T06:12:27.215000",
                        "user": "Zeplyn",
                        "text": "```lua#lang lualocal function fib(n) if n < 2 then return n else return fib(n2) + fib(n1) endendprint(fib(30))```"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-01-18T06:12:37.084000",
                        "user": "Zeplyn",
                        "text": "luckily lua only supports 1 `#` comment"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-01-18T06:12:44.096000",
                        "user": "Zeplyn",
                        "text": "but does not require a shebang"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-01-18T06:13:16.476000",
                        "user": "Suleiman",
                        "text": "Would you be interested in putting it on the package catalog too?"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-01-18T06:13:36.955000",
                        "user": "Zeplyn",
                        "text": "when it is a bit less incomplete yes"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-01-18T06:13:47.287000",
                        "user": "Suleiman",
                        "text": "wonderful \ud83d\ude42"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-01-18T06:14:19.698000",
                        "user": "Zeplyn",
                        "text": "i hope to start writing lua in lua"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-01-18T06:14:26.675000",
                        "user": "Zeplyn",
                        "text": "but like the whole time being on racket"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-01-18T06:14:37.762000",
                        "user": "Zeplyn",
                        "text": "thats far off"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-01-18T14:49:20.843000",
                        "user": "Zeplyn",
                        "text": "its very not ready and i am going on a flight today"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-01-18T14:49:34.802000",
                        "user": "Zeplyn",
                        "text": "so if you have any fixes/loops then feel free to help"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-01-18T14:54:24.496000",
                        "user": "Zeplyn",
                        "text": "basically no loops no comments no repl"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-01-18T14:54:37.873000",
                        "user": "Zeplyn",
                        "text": "ill add the first two now"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-01-21T21:17:19.792000",
                        "user": "Zeplyn",
                        "text": "updates to `#lang lua`"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-01-21T21:17:24.134000",
                        "user": "Zeplyn",
                        "text": "\ud83d\ude04"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-01-21T21:17:31.345000",
                        "user": "Zeplyn",
                        "text": "fixed some bugs here there"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-01-21T21:17:35.628000",
                        "user": "Zeplyn",
                        "text": "added for loops"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-01-22T01:04:21.143000",
                        "user": "Suleiman",
                        "text": "hooray! \ud83c\udf89"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-01-22T02:35:01.978000",
                        "user": "Twyla",
                        "text": "Progress!"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-01-23T20:22:19.445000",
                        "user": "Zeplyn",
                        "text": "well more progress no bug fixes"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-01-23T20:22:30.562000",
                        "user": "Zeplyn",
                        "text": "but performance has increased thanks to basic blocks"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-01-25T05:56:49.481000",
                        "user": "Zeplyn",
                        "text": "why does racket feel newer than python dispite being slightly older"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-01-28T09:39:17.810000",
                        "user": "Twyla",
                        "text": "Wow https://dl.acm.org/doi/10.1145/3371071"
                    }
                ]
            },
            {
                "conversation_id": "124",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-18T05:49:06.037000",
                        "user": "Suleiman",
                        "text": "what sort of language are you making?"
                    }
                ]
            },
            {
                "conversation_id": "125",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-18T14:23:32.070000",
                        "user": "Yanelly",
                        "text": "@4984 awesome. I'm just about to download and try it out"
                    }
                ]
            },
            {
                "conversation_id": "126",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-18T19:14:16.998000",
                        "user": "Zeplyn",
                        "text": "Racket development on android"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-18T19:14:21.411000",
                        "user": "Zeplyn",
                        "text": "What could go wronh"
                    }
                ]
            },
            {
                "conversation_id": "127",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-25T06:41:05.290000",
                        "user": "Twyla",
                        "text": "Since it's a vessel for PLT research Racket incorporates a lot of experimental ideas."
                    }
                ]
            },
            {
                "conversation_id": "128",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-28T10:33:55.433000",
                        "user": "Suleiman",
                        "text": "hell yeah"
                    }
                ]
            },
            {
                "conversation_id": "129",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-28T10:39:19.866000",
                        "user": "Nyriah",
                        "text": "nifty :)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-28T11:24:17.639000",
                        "user": "Twyla",
                        "text": "I wonder if it'll trickle down to a standard Racket language."
                    }
                ]
            },
            {
                "conversation_id": "130",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-28T17:54:37.109000",
                        "user": "Zeplyn",
                        "text": "this link does not work for me"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-29T02:17:47.409000",
                        "user": "Zeplyn",
                        "text": "`#lang lua` has v a p o r w a v e errors"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-29T02:17:54.802000",
                        "user": "Zeplyn",
                        "text": "unexpected: (f u n c t i o n)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-29T02:19:13.698000",
                        "user": "Zeplyn",
                        "text": "in other news its really slow"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-29T02:19:21.443000",
                        "user": "Zeplyn",
                        "text": "but i still have avoided optimzations"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-29T02:19:28.479000",
                        "user": "Zeplyn",
                        "text": "until i have a full fat lua"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-29T05:39:08.853000",
                        "user": "Suleiman",
                        "text": "Actually lemme upload a less blurry version:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-01-29T06:00:37.197000",
                        "user": "Yiqun",
                        "text": "Nice"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-01-29T06:54:21.249000",
                        "user": "Twyla",
                        "text": "Looks much more professional than my diagrams."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-01-29T06:54:30.669000",
                        "user": "Twyla",
                        "text": "None"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-01-29T06:54:32.623000",
                        "user": "Twyla",
                        "text": "case in point"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-01-29T18:40:47.309000",
                        "user": "Suleiman",
                        "text": "What did you use to make your diagram?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-01-29T19:27:56.375000",
                        "user": "Twyla",
                        "text": "Inkscape"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-01-29T19:28:00.713000",
                        "user": "Twyla",
                        "text": "But I think I lost the SVG file."
                    }
                ]
            },
            {
                "conversation_id": "131",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-29T05:38:10.613000",
                        "user": "Suleiman",
                        "text": "Experimenting with a collections cheat sheet diagram kind of thing. What do you all think?"
                    }
                ]
            },
            {
                "conversation_id": "132",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-01-30T01:34:31.102000",
                        "user": "Zeplyn",
                        "text": "im so happy"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-01-30T01:34:45.324000",
                        "user": "Zeplyn",
                        "text": "for the first time a package i made is somewhere"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-01-30T01:35:08.853000",
                        "user": "Zeplyn",
                        "text": "https://pkgd.racketlang.org/pkgn/package/lua look at how pretty it shines"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-01-30T01:51:27.516000",
                        "user": "Suleiman",
                        "text": "That's wonderful!"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-01-30T01:51:42.869000",
                        "user": "Suleiman",
                        "text": "Congrats \ud83d\ude42"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-01-30T01:54:05.968000",
                        "user": "Zeplyn",
                        "text": "basic blocks simplified my code so much"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-01-30T01:54:09.757000",
                        "user": "Zeplyn",
                        "text": "i love basic blocks"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Racket",
        "channel_name": "general",
        "month": "Feb2020-Apr2020",
        "start_date": "2020-02-03T08:10:31.436000",
        "end_date": "2020-04-30T17:32:34.142000",
        "messages": [
            {
                "conversation_id": "1",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-03T08:10:31.436000",
                        "user": "Shaiel",
                        "text": "inspired by https://apos.itch.io/binaryinput i made a way to enter text using only `a` and `d`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-03T08:11:13.376000",
                        "user": "Shaiel",
                        "text": "https://shawsumma.com/vuhicarasi.scm"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-12T02:34:39.882000",
                        "user": "Karanveer",
                        "text": "I like the CML system myself."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-12T02:53:42.752000",
                        "user": "Thaleia",
                        "text": "I want to learn `racket/places` sometime."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-12T04:25:31.387000",
                        "user": "Karanveer",
                        "text": "That's reasonable"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-12T04:26:17.465000",
                        "user": "Karanveer",
                        "text": "Unfortunately I think the preemption is baked into the runtime"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-12T04:27:29.705000",
                        "user": "Karanveer",
                        "text": "Although you could build a lang that probably did cooperative but it would probably have interfacing trickyness"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-12T04:28:08.910000",
                        "user": "Karanveer",
                        "text": "At least where it interfaced with the current runtime threads"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-12T04:32:44.776000",
                        "user": "Karanveer",
                        "text": "Doesn't disabling breaks get you a limited sort of atomicity?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-12T06:11:36.337000",
                        "user": "Reeyansh",
                        "text": "you can build a cooperative concurrency framework on top of noncooperative threading (and I do want both anyway)"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-12T06:12:11.393000",
                        "user": "Reeyansh",
                        "text": "there's this really _really_ cool cooperative async programming framework at my day job called Promise Graph"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-12T06:13:45.735000",
                        "user": "Reeyansh",
                        "text": "it's basically javascript Promises/A+ but with this added `PromiseRunner` thing that you use like this:```Future<Foo> result = runner.run(() > ... some code returning a Promise<Foo> ...)```"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-12T06:19:28.784000",
                        "user": "Reeyansh",
                        "text": "the semantics are basically this:1. everything in the lambda given to `run` makes up one _graph_2. within a graph all concurrency is cooperative3. across graphs it's noncooperative4. there's a shared thread pool for running all graphs and there's never any parallel execution within a graph (only singlethreaded concurrent execution)"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-12T06:22:42.224000",
                        "user": "Reeyansh",
                        "text": "That way you can use the runner to decide when you want to insert a noncooperative execution boundary letting you express how cooperative you want different pieces of code to be. For instance a webserver might want to wrap the code handling each request in a call to run() so that a problem in that graph (like a CPUhogging block of code that interferes with the cooperative concurrency system) doesn't prevent the handling of other requests. But within a single request handler there wouldn't be much point to use run() because it's kind of an allornothing deal anyway. No need to worry about fairness among the different pieces of code used to handle a single request."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-13T02:00:33.575000",
                        "user": "Reeyansh",
                        "text": "I took an experimental stab at the nonsense above: https://github.com/jackfirth/fiberweb"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-13T02:32:16.986000",
                        "user": "Reeyansh",
                        "text": "it doesn't even come close to working yet but the basic shape of the API is there"
                    }
                ]
            },
            {
                "conversation_id": "2",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-12T01:47:53.501000",
                        "user": "Reeyansh",
                        "text": "anyone here have experience with and/or feelings about Racket concurrency?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-12T03:40:29.136000",
                        "user": "Reeyansh",
                        "text": "I like the CML system but wish there was also something for cooperative concurrency"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-12T03:41:06.404000",
                        "user": "Reeyansh",
                        "text": "noncooperative concurrency is painful to write programs in because you need to make sure all mutable state is thread safe"
                    }
                ]
            },
            {
                "conversation_id": "3",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-13T02:30:24.419000",
                        "user": "Thaleia",
                        "text": "Ooh!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-13T02:33:13.645000",
                        "user": "Thaleia",
                        "text": "I like the topdown approach the DSL design."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-13T02:33:31.350000",
                        "user": "Thaleia",
                        "text": "ie First write the language you want then write the actual implementation."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-14T21:05:57.766000",
                        "user": "Macia",
                        "text": "Blog post: https://www.greghendershott.com/2020/02/usingdrracketchecksyntaxinracketmode.html"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-14T21:21:15.487000",
                        "user": "Thaleia",
                        "text": "I'm so glad to see Hendershott still working on Racket."
                    }
                ]
            },
            {
                "conversation_id": "4",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-14T13:55:13.339000",
                        "user": "Thaleia",
                        "text": "None"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-15T17:12:24.793000",
                        "user": "Macia",
                        "text": "https://pkgd.racketlang.org/pkgn/package/draculatheme"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-16T04:14:56.581000",
                        "user": "Reeyansh",
                        "text": "@oaktownsam whatcha think? https://github.com/jackfirth/rebellion/issues/418"
                    }
                ]
            },
            {
                "conversation_id": "5",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-16T04:28:21.796000",
                        "user": "Karanveer",
                        "text": "An enum would be a distinct type backed by a bitstring?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-16T04:28:40.462000",
                        "user": "Karanveer",
                        "text": "Oh an enum set"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-16T04:28:50.647000",
                        "user": "Karanveer",
                        "text": "Yes that sounds good"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-16T04:31:59.085000",
                        "user": "Reeyansh",
                        "text": "yeah so like given an enum for northeastsouthwest `(enumset north west)` would be represented by whatever fixnum corresponds to the bits `1001`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-16T04:47:00.740000",
                        "user": "Karanveer",
                        "text": "Got it"
                    }
                ]
            },
            {
                "conversation_id": "6",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-16T23:01:01.198000",
                        "user": "Karanveer",
                        "text": "Hey @notjack just skimming fiberweb... what is the operation to yield control back to the scheduler?"
                    }
                ]
            },
            {
                "conversation_id": "7",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-17T01:02:07.522000",
                        "user": "Reeyansh",
                        "text": "@oaktownsam `syncfiber` is the only way to pause execution"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-17T01:04:07.295000",
                        "user": "Reeyansh",
                        "text": "the idea being that the scheduler will keep track of all `syncfiber` fibers and simultaneously `sync` on their events then once one of the events is ready the engine will stop `sync`ing the other events in order to run any chained fibers that were waiting for the chosen sync fiber"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-17T01:04:42.288000",
                        "user": "Reeyansh",
                        "text": "once there's no more fiber transforms to run the engine goes back to `sync`ing on external events and waiting for something to be ready"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-17T01:09:42.776000",
                        "user": "Karanveer",
                        "text": "Ah I see"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-17T21:31:16.427000",
                        "user": "Reeyansh",
                        "text": "thinking about fiberweb more"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-17T21:31:34.011000",
                        "user": "Reeyansh",
                        "text": "it needs some way to support cancellation"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-20T09:42:37.093000",
                        "user": "Reeyansh",
                        "text": "@oaktownsam ended up designing an async task thing that\\'s like a long running operation that can be sync\\'d on multiple times and can be cancelled https://github.com/jackfirth/rebellion/pull/423"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-20T09:42:51.337000",
                        "user": "Reeyansh",
                        "text": "I'm thinking fiberweb would build on top of that"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-20T19:11:47.563000",
                        "user": "Reeyansh",
                        "text": "Interesting it gives me Java `Executor` vibes"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-20T19:12:30.256000",
                        "user": "Reeyansh",
                        "text": "Hmm I can't think of a good way to rewrite that example in a `define`style notation"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-20T19:12:54.047000",
                        "user": "Reeyansh",
                        "text": "since it uses the binders for the result after blocking"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-20T19:31:26.329000",
                        "user": "Karanveer",
                        "text": "The binders are mostly because I didn't want to have to write `(futureref v)` :p"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-20T19:55:20.296000",
                        "user": "Reeyansh",
                        "text": "Makes total sense"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-24T17:04:01.247000",
                        "user": "Gonzaga",
                        "text": "I aspire to be as productive as that one guy using DrRacket Emacs and Vim all at the same time."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-24T17:05:17.296000",
                        "user": "Kire",
                        "text": "\ud83d\ude02"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-24T17:10:53.511000",
                        "user": "Kire",
                        "text": "@WillBAnders  I guess would be appropriate for here then. I haven't played around with typed racket too much yet what are your concerns with it?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-02-24T17:12:17.275000",
                        "user": "Gonzaga",
                        "text": "In my case largely lack of familiarity making it difficult to get started and then macros."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-02-24T17:21:45.036000",
                        "user": "Kire",
                        "text": "I mean just at surface level it doesn't look too different from OCaml to me?```scheme(: functionname (> param1 param2 output))```Looks like it's missing ADTs which sucks but there's union types and recursive types which is nice."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-02-24T17:31:46.611000",
                        "user": "Gonzaga",
                        "text": "I mean I really don't like OCaml so yeah :p"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-02-24T17:32:47.755000",
                        "user": "Kire",
                        "text": "Lol I actually don't know OCaml at all I just know it's popular among language people \ud83d\ude02"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-02-24T17:32:57.687000",
                        "user": "Gonzaga",
                        "text": "It's something that takes getting used to but for me the main limitation is that it can't cover macros. And I learned how to create languages almost entirely using macros."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-02-24T17:33:16.121000",
                        "user": "Gonzaga",
                        "text": "I mean I'm not the typical language person. But that sounds more like a popular among theory people."
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-02-24T17:36:49.368000",
                        "user": "Kire",
                        "text": "Isn't the input to any macro just a symbol or list though? I'm not as familiar with Racket macros as Common Lisp macros so I don't know how Racket differs. But since macros are evaluated at compile time there won't be any resolution of the types yet so it's all just symbols or lists of symbols isn't it?"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-02-24T17:37:40.725000",
                        "user": "Kire",
                        "text": "And yea OCaml is definetely more academic. I've never really gone near it but I'm interested in it only cause it has official bindings in LLVM and I really hate C++ which is the only other one with official bindings."
                    }
                ]
            },
            {
                "conversation_id": "8",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-20T17:59:13.248000",
                        "user": "Karanveer",
                        "text": "So I ended up needing something like run a bunch of threads in parallel and get their results last week this is the simple solution I rolled (which works fine for a throwaway script situation.)https://gist.github.com/samdphillips/a45586488e0f632a9b1acc240e835830"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-20T19:32:13.328000",
                        "user": "Karanveer",
                        "text": "Also the API is fairly naive"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-20T19:35:45.461000",
                        "user": "Karanveer",
                        "text": "In the actual script I pulled that out of I was pulling from multiple HTTP APIs some data and in the body doing a comparison."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-24T16:25:40.381000",
                        "user": "Macia",
                        "text": "Racket editor usage survey results"
                    }
                ]
            },
            {
                "conversation_id": "9",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-24T18:13:28.399000",
                        "user": "Gonzaga",
                        "text": "With typed macros there doesn't need to be contextual information and such. To an extent you build the syntax. But doing things effectively is a bit of a mess to integrate in with a program. I'd like to be able to say something like `x: Expr<Boolean>` to identify something that produces a boolean when executed."
                    }
                ]
            },
            {
                "conversation_id": "10",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-24T18:25:40.966000",
                        "user": "Kire",
                        "text": "So what are you using for language development now?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-24T18:27:05.927000",
                        "user": "Kire",
                        "text": "And you're not the first person I've talked to who's mentioned a desire for typed macros  I wonder if it's something that would be worth making an issue/proposal for on the typed racket github repo? At least have a conversation with some of the devs about it?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-24T18:34:27.104000",
                        "user": "Karanveer",
                        "text": "You mean macros that expand to typed code?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-24T18:35:18.674000",
                        "user": "Karanveer",
                        "text": "Normally in TR at syntax time you are using `racket/base`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-24T18:35:32.474000",
                        "user": "Karanveer",
                        "text": "And you can expand to any TR code."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-24T18:35:35.659000",
                        "user": "Karanveer",
                        "text": "IIRC"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-24T18:43:51.810000",
                        "user": "Reeyansh",
                        "text": "@oaktownsam I think they mean macros where the syntax transforming function that `definesyntax` is bound to is typed."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-24T18:45:47.673000",
                        "user": "Reeyansh",
                        "text": "e.g `(: myor (Macro> (Expression A) ... (Expression (U A #f)))`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-24T18:46:35.717000",
                        "user": "Karanveer",
                        "text": "That was my second guess"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-24T18:47:09.870000",
                        "user": "Karanveer",
                        "text": "You can use TR at expand time but everything is Syntax iirc"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-24T18:48:15.623000",
                        "user": "Reeyansh",
                        "text": "Would need to implement chaperones and impersonators for syntax objects first. Then contracts then types."
                    }
                ]
            },
            {
                "conversation_id": "11",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-24T19:19:39.493000",
                        "user": "Karanveer",
                        "text": "Ah I was thinking of just liberal use of `ann` and `cast`"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-24T19:25:57.749000",
                        "user": "Karanveer",
                        "text": "But yeah you'd need some new type and all of the interacting with untyped machinery"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-24T19:29:19.709000",
                        "user": "Karanveer",
                        "text": "I kinda wish there were more industrial experiments with Turnstile. If you don\\'t need full blown gradual typing this seems like a good use case as an extension to one of their typed core languages."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-24T21:34:43.614000",
                        "user": "Karanveer",
                        "text": "Structural equivalence"
                    }
                ]
            },
            {
                "conversation_id": "12",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-24T20:50:37.386000",
                        "user": "Reeyansh",
                        "text": "Unrelatedly I have a survey question for you all. How would you summarize the behaviour of the `equal?` function?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-24T21:39:40.696000",
                        "user": "Reeyansh",
                        "text": "but `gensym`? also structural equivalence often isn't what you want with mutable data because it ignores whether updates will be reflected by both values"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-24T21:50:41.868000",
                        "user": "Macia",
                        "text": "Racket LONDON meetup AprilProposed date: Thursday 9th April 12pm, probably at a cafe near St Pancras station. (suggestions appreciated?)Please let me know if you are interested even if you can\u2019t confirm attendance. I\u2019ll take the afternoon out of my holiday leave so I can get there.(If the numbers get too big and I need to book a meeting room I think the best I can get is an hour at kingscross.impacthub.net for \u00a35.70 pp)It will be casual introductions and chat though if someone wants to do a short talk or demo that would be most welcome.Kind regards,Stephen"
                    }
                ]
            },
            {
                "conversation_id": "13",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-24T21:50:55.934000",
                        "user": "Macia",
                        "text": "Pinned a message."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-24T21:53:24.452000",
                        "user": "Kire",
                        "text": "If anyone ends up doing any talks would you stream it?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-24T21:56:07.778000",
                        "user": "Macia",
                        "text": "@nixin72 could try with OBS?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-24T21:56:34.849000",
                        "user": "Macia",
                        "text": "Are you too far away to attend?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-24T21:57:01.821000",
                        "user": "Kire",
                        "text": "Hahah I'm in North America."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-24T22:11:10.860000",
                        "user": "Gonzaga",
                        "text": "@nixin72 Self implemented. Recursive descent parser and standard treewalk interpreter. Will eventually get to an actual compiler but yeah."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-24T23:24:26.036000",
                        "user": "Karanveer",
                        "text": "@notjack equivalence is hard."
                    }
                ]
            },
            {
                "conversation_id": "14",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-25T00:04:14.928000",
                        "user": "Adelynne",
                        "text": "@notjackPessimistically I suppose I\\'d say `equal?` is a procedurally defined cyclecapable and hashcapable equality decision procedure over nonimpersonator non`eq?` values which inherit their relevant structure type property implementation from the same structure type. It\\'s susceptible to abstraction leaks arising from illbehaved userdefined implementations.Optimistically most implementations of `equal?` are wellbehaved in ways that make them consistent with intuitive notions of Racket code equivalence: Racket code that\\'s in functional style usually takes `equal?` inputs to `equal?` outputs. In order to play well with functional style Racket\\'s contract projections are `equal?` to the original value when possible (even going so far as to use impersonators and chaperones which `equal?` automatically unwraps). If two values `write` or `print` to the same representation they\\'re usually `equal?` when possible.The `equal?` behaviors generally traverse into the contents of mutable containers. This is a convention which meshes well with the idea that `equal?` is capable of comparing reference cycles: It means we can tell a story of data that has a short lifetime of mutability during which we wire up its cycles followed by a lifetime of immutabilitybyconvention during which we make comparisons using `equal?`. More broadly immutable by convention data has historically been pretty common in Lisp and Scheme with cons cells being mutable and many userdesigned data formats being represented as cons cells."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-25T00:35:37.451000",
                        "user": "Kire",
                        "text": "Here I am like `equal?` checks if two values are equal"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-25T00:36:11.700000",
                        "user": "Kire",
                        "text": "https://media.tenor.com/images/b1dbbc375b3e65cf0d2a1729c894762d/tenor.gif"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-25T00:41:14.720000",
                        "user": "Karanveer",
                        "text": "\ud83d\ude1b"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-25T00:41:47.946000",
                        "user": "Karanveer",
                        "text": "@rocketnia that is a very good Rackety answer."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-25T00:44:49.724000",
                        "user": "Karanveer",
                        "text": "`eq?` vs. `eqv?` vs. `equal?` is always a big think."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-25T00:52:17.497000",
                        "user": "Gonzaga",
                        "text": "`.EQV.`"
                    }
                ]
            },
            {
                "conversation_id": "15",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-25T01:04:03.476000",
                        "user": "Adelynne",
                        "text": "There are a lot of different factors involved and I\\'ve had to split a lot of these hairs \\'cause I\\'ve pursued: A notion of equality for Interconfection that\\'s more trustworthy even at the price of not allowing quite as many different kinds of custom behavior to be defined. Essentially every custom equality behavior in this system has to be cobbled out of some knowngood pieces to ensure that it\\'s wellbehaved. Another notion of equality for Lathe Morphisms that has a different kind of customizable operation. Namely if a user has a certain kind of value they can derive a contract from it that recognizes other values that are close enough."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-25T01:12:49.447000",
                        "user": "Reeyansh",
                        "text": "I actually don't think the behaviour of `equal?` on mutable lists and other containers is a good precedent to follow. New mutable collection types _shouldn't_ compare their contents like that."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-25T01:15:00.564000",
                        "user": "Reeyansh",
                        "text": "It makes it impossible to answer the question are these the same mutable collection"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-25T01:16:52.198000",
                        "user": "Reeyansh",
                        "text": "We shouldn't really just describe what `equal?` does for various standard types we should try to describe a philosophy that helps people figure out how to design equality for new types."
                    }
                ]
            },
            {
                "conversation_id": "16",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-25T01:40:00.650000",
                        "user": "Karanveer",
                        "text": "For mutable containers wouldn't you just use `eq?` then?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-25T01:40:53.222000",
                        "user": "Karanveer",
                        "text": "Of course impersonators et al. break that ..."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-25T01:41:12.655000",
                        "user": "Adelynne",
                        "text": "In programs that use two mutable collections is it really common to need to check whether two given collections are the same one? And why not check that by carrying it in a container whose `equal?` compares it by `eq?`? It's not like `equal?` actually enforces that the two values have the same behavior. (That's why I took the approach I've taken in Interconfection to really guarantee that two values are the same.)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-25T01:44:12.475000",
                        "user": "Reeyansh",
                        "text": "`eq?` doesn't work because contracts insert chaperones and impersonators"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-25T01:47:30.511000",
                        "user": "Reeyansh",
                        "text": "use case for testing whether two mutable collections are the same: a function that creates a copy of a mutable collection. You could write a contact that verifies it really is returning a fresh copy that doesn't reflect changes to the original."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-25T01:47:40.945000",
                        "user": "Karanveer",
                        "text": "`eqbutworksonindirects?`"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-25T01:49:51.781000",
                        "user": "Reeyansh",
                        "text": "@oaktownsam that could work but like... why? When mutable collections are involved in my experience structural equality stops being a useful default. If I really wanted to check for structural equality between mutable collections I'd just do `(equal? (>myimmutablecollection xs) (>myimmutablecollection ys))`"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-25T01:50:33.866000",
                        "user": "Reeyansh",
                        "text": "I'm way more likely to remember that than to remember the name of `eqbutworksonindirects?`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-25T02:10:57.417000",
                        "user": "Karanveer",
                        "text": "Honestly this sort of problem hasn't bitten me much in Racket."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-02-25T02:14:00.155000",
                        "user": "Reeyansh",
                        "text": "I blame that on the lack of generic collection interfaces"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-02-25T02:20:45.312000",
                        "user": "Adelynne",
                        "text": "I think of mutable vector that\\'s compared by present contents which are likely to be stable by the time we compare them and mutable vector that\\'s compared by potential future behavior ignoring its present contents altogether as two types that can coexist. So although I summarized `equal?` as traversing into mutable collections to find cycles I think that\\'s not a really essential factor in the design and I probably wouldn\\'t think twice if future collections were designed to have the other kind of equality."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-02-25T03:57:00.096000",
                        "user": "Reeyansh",
                        "text": "agreed I don't think it's essential either"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-02-25T18:17:04.706000",
                        "user": "Reeyansh",
                        "text": "@nixin72 does messing with `prettyprintcolumns` do what you want? also if some of the lists are fixed size you could replace them with structs or record types (https://docs.racketlang.org/rebellion/Record_Types.html) which will have more useful printed representations than lists"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-02-25T23:29:32.615000",
                        "user": "Reeyansh",
                        "text": "Events are amazing"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-02-25T23:33:47.676000",
                        "user": "Reeyansh",
                        "text": "They're frustratingly lowlevel but that's not really their fault. Locks are frustratingly lowlevel too. Code usually wants to be using something built on top of events or locks or what have you."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-02-25T23:34:10.584000",
                        "user": "Reeyansh",
                        "text": "and that stuff is way easier to build on top of events than locks"
                    }
                ]
            },
            {
                "conversation_id": "17",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-25T15:57:25.454000",
                        "user": "Karanveer",
                        "text": "I had some thought yesterday about what if there was some opaque value that you could interrogate a value for that you could use as a proxy for equivalence I just realized that I invented hash codes."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-25T21:34:27.741000",
                        "user": "Karanveer",
                        "text": "I\\'m trying to fix a python script so that it properly gracefully exits on SIGINT and all I can think about is this Mike Sperber video about CML https://www.youtube.com/watch?v=pf4VbP5q3P0"
                    }
                ]
            },
            {
                "conversation_id": "18",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-25T17:43:47.677000",
                        "user": "Kire",
                        "text": "Is there a way to pretty print lists the same way as in SBCL? Like if you print a big nested tree in SBCL it'll format it properly for you but this isn't the default behaviour in Racket. Is there a way to do this?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-25T17:46:42.004000",
                        "user": "Kire",
                        "text": "I'm trying to play around with the `prettyprint` function but can't figure out how to get it to behave the way I want."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-25T17:47:05.464000",
                        "user": "Kire",
                        "text": "It's not printing any differently than just `print` or `println`"
                    }
                ]
            },
            {
                "conversation_id": "19",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-26T15:45:26.435000",
                        "user": "Macia",
                        "text": "At 62 response sadly the histogram doesn't show\\xa0how many people use two or even three editors. https://www.surveymonkey.com/results/SMGBD6J7ST7/"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-26T16:05:09.367000",
                        "user": "Macia",
                        "text": "Yes"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-26T18:21:41.677000",
                        "user": "Macia",
                        "text": "Hi quick racket editor survey: https://www.surveymonkey.co.uk/r/H23ZTDW"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-28T21:20:21.133000",
                        "user": "Macia",
                        "text": "> PLT @ Northwestern is seeking out programs to help us understand the performance of Racket in the wild\".> If you have any Racket applications that you use and care about how it performs please let us know about them in the following survey: https://forms.gle/b2eKMZdvXjpRHKL38"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-28T21:23:52.604000",
                        "user": "Thaleia",
                        "text": "How game make racket \ud83e\udd14"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-28T21:26:31.669000",
                        "user": "Macia",
                        "text": "You could start with Realm of Racket"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-28T21:29:00.086000",
                        "user": "Macia",
                        "text": "Or https://docs.racketlang.org/teachpack/2htdpuniverse.html"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-28T21:35:56.434000",
                        "user": "Macia",
                        "text": "https://github.com/racket/racket/wiki/GameDevelopment"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-02-28T21:40:12.942000",
                        "user": "Macia",
                        "text": "https://itch.io/jam/racket2019gamejam"
                    }
                ]
            },
            {
                "conversation_id": "20",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-26T16:03:26.393000",
                        "user": "Thaleia",
                        "text": "Is the poll still open?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-26T16:05:17.607000",
                        "user": "Thaleia",
                        "text": "Where can I vote?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-27T12:30:28.089000",
                        "user": "Thaleia",
                        "text": "Emacs"
                    }
                ]
            },
            {
                "conversation_id": "21",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-02-28T22:24:32.949000",
                        "user": "Thaleia",
                        "text": "Is there a naming convention guide in Racket docs?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-02-28T22:24:56.657000",
                        "user": "Thaleia",
                        "text": "eg `foo%` is a class `#%bar` is a lowlevel procedure etc"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-02-28T22:25:22.627000",
                        "user": "Reeyansh",
                        "text": "There might be some suggestions in the style guide"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-02-28T22:27:07.418000",
                        "user": "Reeyansh",
                        "text": "See also https://github.com/racket/rhombusbrainstorming/issues/49"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-02-28T22:37:25.416000",
                        "user": "Thaleia",
                        "text": "That's a good one. I'll put it all in a single page for future reference."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-02-28T22:45:42.744000",
                        "user": "Thaleia",
                        "text": "It's missing `the` and `current`"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-02-28T22:47:14.824000",
                        "user": "Thaleia",
                        "text": "nvm `current` is there."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-02-29T03:46:06.256000",
                        "user": "Thaleia",
                        "text": "@StephenD thanks"
                    }
                ]
            },
            {
                "conversation_id": "22",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-01T18:13:00.385000",
                        "user": "Mysha",
                        "text": "hey!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-01T18:15:45.433000",
                        "user": "Mysha",
                        "text": "i need a help for a problem  im confused if i've done it right"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-01T18:16:17.129000",
                        "user": "Mysha",
                        "text": "None"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-01T18:16:42.193000",
                        "user": "Mysha",
                        "text": "@oaktownsam"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-01T18:17:21.924000",
                        "user": "Karanveer",
                        "text": "`i` should be the position not the character"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-01T18:17:54.912000",
                        "user": "Mysha",
                        "text": "\ud83d\ude26"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-01T18:18:20.912000",
                        "user": "Mysha",
                        "text": "but i got the result right"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-01T18:19:11.610000",
                        "user": "Karanveer",
                        "text": "The idea is that you could change `i` to a different number and it would change where the character would be inserted"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-01T18:19:28.036000",
                        "user": "Mysha",
                        "text": "and they've not shown about positioning of strings at i"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-01T18:19:51.565000",
                        "user": "Karanveer",
                        "text": "the text says at position i"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-01T18:21:12.476000",
                        "user": "Karanveer",
                        "text": "define `i` as 5 and replace all of the 5\\'s in the expression with `i` (and change the inserting string to `\"_\"`) then it would be correct"
                    }
                ]
            },
            {
                "conversation_id": "23",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-02T10:54:58.057000",
                        "user": "Mysha",
                        "text": "replace all of the 5's in the expression?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-02T11:03:15.392000",
                        "user": "Mysha",
                        "text": "i dont understand \ud83d\ude26"
                    }
                ]
            },
            {
                "conversation_id": "24",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-02T17:41:57.648000",
                        "user": "Aviahna",
                        "text": "Is anyone willing to help me out with my hw? I\u2019m so lost \ud83e\udd7a"
                    }
                ]
            },
            {
                "conversation_id": "25",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-02T20:41:18.414000",
                        "user": "Reeyansh",
                        "text": "@bub @GmaAnders I can't help now and I'm not sure if anyone else will have time to but for future reference please use the #help channel when asking for help especially for homework problems or school projects"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-02T20:51:51.073000",
                        "user": "Reeyansh",
                        "text": "@oaktownsam btw thanks again for sharing your `binarylib` adventures in the Racket slack people seem to keep coming back to that thread"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-02T21:58:56.139000",
                        "user": "Reeyansh",
                        "text": "Same and agreed"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-02T22:01:06.022000",
                        "user": "Reeyansh",
                        "text": "Even just one version back would be a huge improvement because people's CI builds that use my docker images and the builtpackage catalog would stop breaking during the few days to weeks between when a new version is released and when I get around to updating `jackfirth/racket:latest` to point to it"
                    }
                ]
            },
            {
                "conversation_id": "26",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-02T21:07:57.610000",
                        "user": "Karanveer",
                        "text": "I saw that. I wish I had some free time to work on package server stuff. It'd be nice to have a 12 revs back of binary libs."
                    }
                ]
            },
            {
                "conversation_id": "27",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-03T19:03:44.019000",
                        "user": "Karanveer",
                        "text": "https://weinholt.se/articles/driverslokoscheme/"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-04T05:11:16.249000",
                        "user": "Karanveer",
                        "text": "This is fascinating CML at the driver level in an R6RS scheme"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-05T14:28:43.168000",
                        "user": "Thaleia",
                        "text": "Ya guys use racket at work?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-05T18:48:32.255000",
                        "user": "Reeyansh",
                        "text": "Alas no"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-05T18:49:57.332000",
                        "user": "Reeyansh",
                        "text": "but it's useful to get some cross pollination from other ecosystems so I'm not too sad about it yet"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-05T18:58:25.902000",
                        "user": "Thaleia",
                        "text": "Oh"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-05T19:01:17.094000",
                        "user": "Reeyansh",
                        "text": "Mostly I use Java at work"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-05T19:06:34.781000",
                        "user": "Karanveer",
                        "text": "I do but it's mostly to replace my day to day python/bash usage."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-05T19:11:31.942000",
                        "user": "Kire",
                        "text": "Looking through public Racket repos on GitHub I've never found an organization using Racket except for Racket itself and a handful of orgs made to host Racket libs or frameworks  like Nanopass for example."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-05T19:16:04.287000",
                        "user": "Reeyansh",
                        "text": "It's not widely used"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-05T19:16:23.835000",
                        "user": "Reeyansh",
                        "text": "Relative to lisp and scheme in general it is but not nearly as much as Clojure"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-03-05T19:16:33.046000",
                        "user": "Kire",
                        "text": "Yea for sure"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-03-05T19:16:57.893000",
                        "user": "Kire",
                        "text": "Is there any organizations using Scheme either for real world work?"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-03-05T19:17:34.241000",
                        "user": "Kire",
                        "text": "I know there's a small handful using CL never seen Scheme though I think"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-03-05T19:23:44.178000",
                        "user": "Reeyansh",
                        "text": "There's a small bioinformatics company using racket one of the folks there gave a talk about it at racketcon last year"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-03-05T19:24:44.478000",
                        "user": "Kire",
                        "text": "Oh neat! Any idea if Naughty Dog still uses Racket? I know they were a few years back can't find anything recent though"
                    }
                ]
            },
            {
                "conversation_id": "28",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-05T20:19:11.955000",
                        "user": "Thaleia",
                        "text": "I use racket text processing and some scripting stuff"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-05T20:32:42.924000",
                        "user": "Macia",
                        "text": "I use it secretly at work. Don't tell."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-05T20:32:48.130000",
                        "user": "Macia",
                        "text": "London Racket Meetup Thursday 9th April 12pmMeet at 1pm at \u2018The Last Word\u2019 (cafe)[1] and after introductions we will move to The Alan Turing Institute[2].[1] The Last Word (cafe in front of British Library)96 Euston Rd London NW1 2DB Google maps: https://goo.gl/maps/SbUeExYddSnWPQbz6 [2] The Alan Turing Institute https://www.turing.ac.uk/It will be casual introductions and chat though if someone wants to do a short talk or demo that would be most welcome.Please register at https://forms.gle/XDvr5gtGKb6K2DXh8 (required for access to Turing Institute meeting room)Please let me know if you are interested even if you can\u2019t confirm attendance. Many thanks to Dr James Geddes and The Alan Turing Institute for hosting this event.Kind regards,Stephen"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-05T20:33:22.044000",
                        "user": "Macia",
                        "text": "Pinned a message."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-06T19:08:43.282000",
                        "user": "Macia",
                        "text": "https://stackoverflow.blog/2020/02/05/the2020developersurveyisnowopen/"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-06T19:08:51.549000",
                        "user": "Macia",
                        "text": "Represent!"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-08T10:40:43.368000",
                        "user": "Macia",
                        "text": "Oops"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-09T21:53:30.528000",
                        "user": "Macia",
                        "text": "I might be missing the point but sounds like a `(filter pred lst)`?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-09T21:57:38.296000",
                        "user": "Macia",
                        "text": "There is also things like `andmap` but I suspect you want to write a macro `(conscond? ...`\ud83d\ude03"
                    }
                ]
            },
            {
                "conversation_id": "29",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-06T07:03:16.335000",
                        "user": "Thaleia",
                        "text": "None"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-07T23:35:07.839000",
                        "user": "Karanveer",
                        "text": "Weird. The link for the survey has already expired."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-07T23:42:38.215000",
                        "user": "Gonzaga",
                        "text": "It's from February"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-07T23:44:09.310000",
                        "user": "Karanveer",
                        "text": "doh"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-09T19:56:36.142000",
                        "user": "Shaiel",
                        "text": "lua is causing me a headache!"
                    }
                ]
            },
            {
                "conversation_id": "30",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-09T20:28:29.210000",
                        "user": "Thaleia",
                        "text": "Are there forms of `cond` with different fallthroughs?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-09T20:29:34.150000",
                        "user": "Thaleia",
                        "text": "eg try all cases and cons the results of successful predicates or try all cases and cons the results of successful predicates until you hit the first case that fails"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-09T22:09:41.424000",
                        "user": "Thaleia",
                        "text": "I suppose it could be procedurally implemented like```Racket(define (cond preds) (filter values (map (\u03bb (p) (and ((car p)) ((cdr p)))) preds)))(cond `((,(thunk (zero? n)) . (thunk n is zero\")) (,(thunk (string=? foo fnord\")) . (thunk (runprocess! \\'foo))) (,(thunk #t) . (thunk \\'fallthrough))))```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-09T22:12:59.798000",
                        "user": "Thaleia",
                        "text": "Feels very Common Lispy."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-09T23:03:30.623000",
                        "user": "Thaleia",
                        "text": "How else would you do it without a macro?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-09T23:17:47.587000",
                        "user": "Thaleia",
                        "text": "That's my point."
                    }
                ]
            },
            {
                "conversation_id": "31",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-09T22:51:14.688000",
                        "user": "Gonzaga",
                        "text": "that seems like a lot of unnecessary thunks"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-09T23:17:34.083000",
                        "user": "Gonzaga",
                        "text": "I would use a macro."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-09T23:19:21.019000",
                        "user": "Gonzaga",
                        "text": "Looks like `(eval (+ 1 2))` is good."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-10T01:13:36.618000",
                        "user": "Karanveer",
                        "text": "@Deleted User `conde` in Kanren is kinda like that in a way."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-10T01:14:16.794000",
                        "user": "Thaleia",
                        "text": "Ooh"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-10T01:14:27.615000",
                        "user": "Thaleia",
                        "text": "Apparently I was thinking of `cond{e,a,u}`."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-10T01:15:09.314000",
                        "user": "Karanveer",
                        "text": "Of course then you are in the Kanren cinematic universe"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-10T01:16:50.364000",
                        "user": "Thaleia",
                        "text": "oh no"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-10T01:19:04.309000",
                        "user": "Karanveer",
                        "text": "Get yourself a copy of The Reasoned Schemer\". It\\'s a nice bit of Logic programming integrated into Scheme."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-10T01:20:12.080000",
                        "user": "Karanveer",
                        "text": "I just found a 67 line file with about 5 macros that I never remember having written"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-10T01:20:33.171000",
                        "user": "Karanveer",
                        "text": "And it is terse so I'm not even sure what I was trying to do."
                    }
                ]
            },
            {
                "conversation_id": "32",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-10T02:08:00.447000",
                        "user": "Thaleia",
                        "text": "Hahah"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-10T02:08:24.415000",
                        "user": "Thaleia",
                        "text": "I've got copies of all The \\\\ Schemers but I don't have much time to read lately."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-10T08:06:09.761000",
                        "user": "Thaleia",
                        "text": "Make a docs that detaily explains Android tv api"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-10T08:06:16.823000",
                        "user": "Thaleia",
                        "text": "I bet you can't"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-10T08:22:33.601000",
                        "user": "Shaiel",
                        "text": "is it because its hard or because i dont know enough"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-10T09:08:17.024000",
                        "user": "Thaleia",
                        "text": "@4984 it's hard af"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-10T10:42:27.783000",
                        "user": "Macia",
                        "text": "It\u2019s a wiki so you can remove completed tasks and add any new ones you identify."
                    }
                ]
            },
            {
                "conversation_id": "33",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-10T04:56:36.462000",
                        "user": "Shaiel",
                        "text": "i realize i have no clue how to write a parser"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-10T05:01:54.356000",
                        "user": "Shaiel",
                        "text": "im tired of making languages for a bit"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-10T05:02:19.827000",
                        "user": "Shaiel",
                        "text": "time to learn scribble? anyone need some docs rewriten"
                    }
                ]
            },
            {
                "conversation_id": "34",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-10T10:40:47.963000",
                        "user": "Macia",
                        "text": "@4984 I don\u2019t know how many of these are still active  the page is a little old https://github.com/racket/racket/wiki/DocumentationImprovements"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-10T10:44:33.389000",
                        "user": "Macia",
                        "text": "Maybe https://github.com/racket/racket/issues?q=is%3Aopen+is%3Aissue+scribble"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-11T21:29:52.099000",
                        "user": "Macia",
                        "text": "`#;` is awesome  I use it _all the time_"
                    }
                ]
            },
            {
                "conversation_id": "35",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-11T05:52:37.508000",
                        "user": "Shaiel",
                        "text": "its easy to make something neat in js because nobody knows what they are doing"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-11T05:52:47.500000",
                        "user": "Shaiel",
                        "text": "unlike racket where yall too smart"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-12T04:12:26.429000",
                        "user": "Shaiel",
                        "text": "just like some versions of tcl!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-12T04:12:45.531000",
                        "user": "Shaiel",
                        "text": "ooooh tcl + racket"
                    }
                ]
            },
            {
                "conversation_id": "36",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-11T19:35:09.081000",
                        "user": "Kire",
                        "text": "So a while back when I was working on my own programming language one thing that I really wanted was a type of comment that would span for only a single token. I've never seen another language that has a comment like that where you can just dump it inline but TIL that in Racket you can do it with `#;comment` and I think that's awesome!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-11T23:01:08.903000",
                        "user": "Kire",
                        "text": "Yea plus since it reads until the end of the next sexpr you can do `#;(this is a comment) thisisasymbol` to comment out specfic expressions and stuff which is super dope"
                    }
                ]
            },
            {
                "conversation_id": "37",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-13T01:20:47.251000",
                        "user": "Karanveer",
                        "text": "I think I used to know this but now I forget: is there a way to turn off blue boxes in DrRacket?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-13T01:27:43.328000",
                        "user": "Karanveer",
                        "text": "I think this does it but there is still a big lag right after I type in an identifier"
                    }
                ]
            },
            {
                "conversation_id": "38",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-13T21:49:29.249000",
                        "user": "Macia",
                        "text": "Hi All,\\xa0While I haven't yet I'm expecting it will be appropriate to cancel the meet up on 9 April.\\xa0Now the good news: I'm planning an After Work Racket London Picnic Tuesday 16 June in\\xa0Kensington GardensProbably start at 5pm sunset is around 9:20pm\\xa0Stephen"
                    }
                ]
            },
            {
                "conversation_id": "39",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-15T04:57:55.006000",
                        "user": "Thaleia",
                        "text": "Is there a way to change the Datalog backend to something that isn't `hasheq` without modifying the language?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-15T04:59:16.267000",
                        "user": "Thaleia",
                        "text": "I'm thinking about the feasibility of implementing a Datomicesque toy DB in Racket."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-15T16:30:37.169000",
                        "user": "Karanveer",
                        "text": "I think to make it work with a different kind of storage the existing runtime would need to be factored into a `theory` interface and then put together implementations for `hash` and persistent storage backends. Classic refactoring stuff."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-15T16:31:36.588000",
                        "user": "Karanveer",
                        "text": "The language side will probably need to be extended in some way to handle whatever additional configuration needed to use a different storage."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-15T16:43:52.230000",
                        "user": "Karanveer",
                        "text": "Oh! You could do a trick with external queries it looks like."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-15T16:44:25.063000",
                        "user": "Karanveer",
                        "text": "That would be easier probably."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-15T18:42:51.060000",
                        "user": "Karanveer",
                        "text": "External queries are probably not the right way. It would probably be a huge hack. Without recursion it looks tough."
                    }
                ]
            },
            {
                "conversation_id": "40",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-15T07:21:34.962000",
                        "user": "Reeyansh",
                        "text": "It's `hasheq`??? _why_"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-15T07:22:16.202000",
                        "user": "Reeyansh",
                        "text": "Honestly I'd file a bug for that and just go fix it to be a regular `equal?`based hash"
                    }
                ]
            },
            {
                "conversation_id": "41",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-15T16:26:53.742000",
                        "user": "Karanveer",
                        "text": "I think it is `equal?` based hashes already. https://github.com/racket/datalog/blob/master/runtime.rkt#L33"
                    }
                ]
            },
            {
                "conversation_id": "42",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-16T04:27:01.467000",
                        "user": "Gonzaga",
                        "text": "Is there a name for a group operation like `(group 3.4)`? I know it's not needed in lips but figured Racket might have something along those lines."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-16T04:30:38.069000",
                        "user": "Gonzaga",
                        "text": "There's `(identity x)`. Guess that's probably the closest I'd get."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-20T03:25:55.021000",
                        "user": "Karanveer",
                        "text": "yes"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-20T03:26:21.911000",
                        "user": "Karanveer",
                        "text": "```(callwithinputstring (car (cons 1 2)) read)```"
                    }
                ]
            },
            {
                "conversation_id": "43",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-18T20:08:00.162000",
                        "user": "Shaiel",
                        "text": "i thought someone was in voice"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-18T20:08:09.755000",
                        "user": "Shaiel",
                        "text": "but i was fooled tricked and even possibly bamboosled"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-18T20:11:14.392000",
                        "user": "Karanveer",
                        "text": "We were for a minute testing some stuff."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-20T17:53:45.204000",
                        "user": "Mathias",
                        "text": "is anyone active i need help on a for loop"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-20T17:54:12.546000",
                        "user": "Mathias",
                        "text": "nothing to complex"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-20T17:56:10.215000",
                        "user": "Kire",
                        "text": "What's up?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-20T17:56:27.278000",
                        "user": "Mathias",
                        "text": "basically i have this as a question"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-20T17:56:29.281000",
                        "user": "Mathias",
                        "text": "write a for loop that iterates over a list reverses it and subtracts 2 from each element"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-20T17:56:44.487000",
                        "user": "Mathias",
                        "text": "and i've never been confused"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-20T17:56:53.666000",
                        "user": "Mathias",
                        "text": "i know it's basic but im really bad at coding atm"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-20T17:59:59.952000",
                        "user": "Kire",
                        "text": "Hmm you have to reverse it with the loop? Or can you do that separately? You're not able to loop over lists backwards in Racket as they're singly linked lists"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-03-20T18:01:23.412000",
                        "user": "Mathias",
                        "text": "i guess separately then"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-03-20T18:06:33.830000",
                        "user": "Kire",
                        "text": "Okay what you could do to map the list is ```scheme(for/list ([n lst]) ( n 2))```Which would return a new list with each element subtracted by two. Then you could write a reverse function by recursively iterating over a list and appending the head to the tail"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-03-20T18:08:52.885000",
                        "user": "Mathias",
                        "text": "(define lst (1 2 3 4))(for/list ([n lst]) ( n 2))'(1 0 1 2)this is what i get in return"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-03-20T19:10:43.759000",
                        "user": "Mathias",
                        "text": "thanks everyone \ud83d\ude22"
                    }
                ]
            },
            {
                "conversation_id": "44",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-20T02:40:12.368000",
                        "user": "Kire",
                        "text": "Is there a way to use the Racket reader to transform a string into a list? Like just to read in the code as a string but don\\'t evaluate any of it. So you can do```scheme(read (println (if cond then (list 1 2 3)))\"); \\'(println (if cond then (list 1 2 3)))```To get the string as a racket syntax tree?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-20T17:42:14.613000",
                        "user": "Kire",
                        "text": "Thank you!"
                    }
                ]
            },
            {
                "conversation_id": "45",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-20T19:05:28.824000",
                        "user": "Temperance",
                        "text": "now reverse it"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-20T19:06:00.826000",
                        "user": "Kire",
                        "text": "Yea they got it in #help"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-20T19:06:32.368000",
                        "user": "Temperance",
                        "text": "o true my bad"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-20T19:06:41.939000",
                        "user": "Kire",
                        "text": "No problem!"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-20T19:10:51.805000",
                        "user": "Mathias",
                        "text": "you came through nixin and jack"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-20T19:12:22.580000",
                        "user": "Kire",
                        "text": "Anytime \ud83d\udc4d"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-20T22:40:45.656000",
                        "user": "Shaiel",
                        "text": "welcome user!!"
                    }
                ]
            },
            {
                "conversation_id": "46",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-20T23:02:24.331000",
                        "user": "Anvi",
                        "text": "thanks!"
                    }
                ]
            },
            {
                "conversation_id": "47",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-21T03:20:53.631000",
                        "user": "Shaiel",
                        "text": "hello all today!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-21T03:21:08.075000",
                        "user": "Shaiel",
                        "text": "i am thinking of starting a website!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-21T03:23:29.527000",
                        "user": "Shaiel",
                        "text": "i found a really good domain name"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-22T14:57:13.419000",
                        "user": "Thaleia",
                        "text": "I'm planning to make a DSL for knitting."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-22T14:57:22.953000",
                        "user": "Thaleia",
                        "text": "It's a good opportunity to study Racklog."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-22T14:57:53.029000",
                        "user": "Thaleia",
                        "text": "Or maybe miniKanren."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-22T15:08:38.257000",
                        "user": "Macia",
                        "text": "> i am thinking of starting a website!@4984 are you going to try Polyglot? https://sagegerard.com/racketpowered.html"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-22T15:54:10.733000",
                        "user": "Thaleia",
                        "text": "Since Racket doesn't implement `condexpand` is it possible to tell whether the Scheme implementation running a script (say `#lang r6rs`) is Racket in a way that doesn't break the script for other implementations?"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-22T18:21:17.427000",
                        "user": "Thaleia",
                        "text": "I think that defeats the point of writing a portable script."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-22T18:21:42.517000",
                        "user": "Thaleia",
                        "text": "I'd need to assume everyone running the script on Racket has that library."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-22T18:39:19.757000",
                        "user": "Thaleia",
                        "text": "Most of them just use `condexpand`. Chez and Racket are the only exceptions I know of."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-03-22T18:42:31.443000",
                        "user": "Thaleia",
                        "text": "Ugh"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-03-22T18:42:39.624000",
                        "user": "Thaleia",
                        "text": "That's so ugly."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-03-22T18:43:02.188000",
                        "user": "Karanveer",
                        "text": "At least it allows you to split of the platform specific ish"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-03-22T18:43:29.090000",
                        "user": "Thaleia",
                        "text": "That's true."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-03-22T23:26:17.007000",
                        "user": "Huxlee",
                        "text": "@StephenD that website is mind blowing! :D"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-03-22T23:26:28.010000",
                        "user": "Huxlee",
                        "text": "it looks like the future of web dev"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-03-26T23:41:14.295000",
                        "user": "Macia",
                        "text": "Nice: https://www.luisquintanilla.me/2020/03/21/serverlessracketazurefunctionscustomhandlers/"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-03-26T23:59:36.770000",
                        "user": "Thaleia",
                        "text": "Ooh!"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-03-27T00:38:11.765000",
                        "user": "Huxlee",
                        "text": "black magic"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-03-27T14:21:06.566000",
                        "user": "Thaleia",
                        "text": "Emacs does it this way: https://github.com/Mstrodl/elcord"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-03-27T16:24:09.584000",
                        "user": "Macia",
                        "text": "ooh only 500 lines of elisp. Might be able to do this as a quickscript"
                    }
                ]
            },
            {
                "conversation_id": "48",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-22T16:01:43.365000",
                        "user": "Temperance",
                        "text": "dejavu"
                    }
                ]
            },
            {
                "conversation_id": "49",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-22T16:32:14.356000",
                        "user": "Karanveer",
                        "text": "Isn't there a defacto standard for R6RS module loading that tries to load implementation specific modules?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-22T16:36:03.861000",
                        "user": "Karanveer",
                        "text": "https://docs.racketlang.org/r6rs/libpaths.html> In addition when an R6RS library path is converted a file extension is selected at compile time based on installed files. The search order for file extensions is .mzscheme.ss .mzscheme.sls .ss .sls and .rkt\". When resolving version constraints these extensions are all tried when looking for matches."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-22T16:36:49.269000",
                        "user": "Karanveer",
                        "text": "Make a library that just has `(define (implementation) racket)` (similarly for other schemes)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-22T18:37:32.052000",
                        "user": "Karanveer",
                        "text": "No other R6RS have similar conventions"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-22T18:42:07.439000",
                        "user": "Karanveer",
                        "text": "Well here's how they handle it on pffi https://github.com/ktakashi/r6rspffi/tree/master/src/pffi"
                    }
                ]
            },
            {
                "conversation_id": "50",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-27T00:38:09.009000",
                        "user": "Huxlee",
                        "text": "@StephenD how does your status say playing DrRacket\"?"
                    }
                ]
            },
            {
                "conversation_id": "51",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-27T08:54:19.450000",
                        "user": "Remiel",
                        "text": "He used the custom status it\u2019s different to the actual playing status if you compare it with another person"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-27T11:09:19.245000",
                        "user": "Macia",
                        "text": "I'd love to do a basic discord integration with DrRacket as a game https://discordapp.com/developers/docs/richpresence/howto"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-28T00:31:05.166000",
                        "user": "Karanveer",
                        "text": "@StephenD maybe we should have a homework flair on Reddit"
                    }
                ]
            },
            {
                "conversation_id": "52",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-27T18:03:45.685000",
                        "user": "Thaleia",
                        "text": "It uses a fifo file and comes with a C# script to simulate it on Windows."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-28T02:39:03.696000",
                        "user": "Thaleia",
                        "text": "Which one is more legible?```Racket(begin (foo) (bar) var)```or```Racket(begin0 var (foo) (bar))```where `var` is a static value."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-28T02:41:27.423000",
                        "user": "Thaleia",
                        "text": "I've seen the latter used like```Racket(begin0 var [...] (set! var foo))```although this sounds like a good usecase for Clojure's `doto` macro:```Racket(begin [...] (doto var (set! foo)))```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-28T02:42:47.850000",
                        "user": "Thaleia",
                        "text": "(`doto` is like `>` for sideeffects \u2014 it keeps passing the original object that gets mutated through the pipeline.)"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-28T02:44:37.534000",
                        "user": "Macia",
                        "text": "> @StephenD maybe we should have a homework flair on Reddit@oaktownsam DONE"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-28T02:45:42.835000",
                        "user": "Thaleia",
                        "text": "ie```Clojure(> foo (bar) (baz))```expands to```Clojure(baz (bar foo))```whereas```Clojure(doto foo (bar) (baz))```expands to```Clojure(do ; Clojure's `begin' (bar foo) (baz foo) foo)```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-28T03:01:52.169000",
                        "user": "Macia",
                        "text": "I don\u2019t know the clojure `doto` macro.Not a fan of `begin0`  I don\u2019t remember ever seeing it used and  in my opinion  I believe it is confusing/counterintuitive. I should be asleep but is that a Clojure `>` ? Not sure I understand.I sorta like the `doto`  but I\u2019m not keen on the syntax. Should be ```lisp(doto! foo bar baz)```More rackety."
                    }
                ]
            },
            {
                "conversation_id": "53",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-28T03:12:33.156000",
                        "user": "Macia",
                        "text": "@oaktownsam I\u2019m keen to push the homework questions (both on reddit and here) to `racketusers` > the best place to ask hw questions is on https://groups.google.com/forum/m/#!forum/racketusers On reddit I\u2019ve noticed what I believe is poor advice  and many students are using the teaching languages not Racket or Scheme."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-28T03:13:17.088000",
                        "user": "Macia",
                        "text": "They are better off on racketusers."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-28T03:13:18.500000",
                        "user": "Karanveer",
                        "text": "Yes. I was brainstorming some ideas around that."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-28T03:13:34.732000",
                        "user": "Karanveer",
                        "text": "Like how to ask homework questions advice"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-28T03:13:47.592000",
                        "user": "Karanveer",
                        "text": "Like did you ask your prof/TA first"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-28T03:14:23.031000",
                        "user": "Karanveer",
                        "text": "Or require more before we help. What do you have that is working so far?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-28T03:14:37.723000",
                        "user": "Karanveer",
                        "text": "etc."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-28T03:15:51.218000",
                        "user": "Macia",
                        "text": "I asked samt if it was appropriate to kick or ban;> I would prefer to be willing to help people but not to write their code for them similar to the response people get on the mailing list.> For someone who explicitly wants someone else to do the assignment,> I'm fine with saying no to that. I wouldn't want to ban people unless it's a repeat thing."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-28T03:17:27.148000",
                        "user": "Karanveer",
                        "text": "It would be good if we got better quality questions maybe?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-03-28T03:18:06.323000",
                        "user": "Macia",
                        "text": "> Or require more before we help. What do you have that is working so far?@oaktownsam my latest experiences have been the just want the answer. I was even offered payment"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-03-28T03:18:38.663000",
                        "user": "Karanveer",
                        "text": "There was a recent post about how it is depressing that pretty much all of the traffic is students asking for homework help. And I can see how we want to be a helpful welcoming community."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-03-28T03:19:06.224000",
                        "user": "Macia",
                        "text": "\u2018question\u2019 flair for actual question"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-03-28T03:19:28.426000",
                        "user": "Karanveer",
                        "text": "I saw that. I was going to ask you not to publicly shame a person but then they appeared to be doing it repeatedly"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-03-28T03:19:29.595000",
                        "user": "Macia",
                        "text": "\u2018\u2019homework\u2019 flair for homework"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-03-28T03:20:16.094000",
                        "user": "Macia",
                        "text": "> I saw that. I was going to ask you not to publicly shame a person but then they appeared to be doing it repeatedly@oaktownsam does applying the homework flair count as shaming?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-03-28T03:25:08.993000",
                        "user": "Karanveer",
                        "text": "No. I meant when you called someone out on what they said in private. My preferred stance would be to tell them privately that it is inappropriate etc. And not to call them out on a public forum unless it is repeated behavior. Without threads in Discord I catch up on hours of convo and then try not to derail back several hours."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-03-28T03:26:39.032000",
                        "user": "Macia",
                        "text": "Good point."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-03-28T03:27:10.541000",
                        "user": "Karanveer",
                        "text": "Also one of my frustrations around this is that I am not a CS Teacher."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-03-28T03:27:30.442000",
                        "user": "Macia",
                        "text": "Me neither"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-03-28T03:27:49.546000",
                        "user": "Karanveer",
                        "text": "And it's slightly not fair to our community in a way."
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-03-28T03:28:14.601000",
                        "user": "Karanveer",
                        "text": "To provide free tech support. Not sure how Python chats handle it."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-03-28T03:28:37.130000",
                        "user": "Macia",
                        "text": "Python has a separate reddit I believe"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-03-28T03:29:38.234000",
                        "user": "Karanveer",
                        "text": "Also somewhat hard to compare because the Python community is a lot larger"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-03-28T03:31:12.016000",
                        "user": "Macia",
                        "text": "They are very clear r/python is news and questions are for learnpython"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-03-28T03:31:30.862000",
                        "user": "Macia",
                        "text": "I think it\u2019s a good idea"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-03-28T03:32:43.946000",
                        "user": "Shaiel",
                        "text": "it has its benifits"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-03-28T03:32:54.925000",
                        "user": "Shaiel",
                        "text": "also hello all \ud83d\udc4b"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-03-28T03:34:06.816000",
                        "user": "Karanveer",
                        "text": "Yeah that does sound better."
                    }
                ]
            },
            {
                "conversation_id": "54",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-28T03:38:31.791000",
                        "user": "Anvi",
                        "text": "\ud83d\udc4b"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-28T03:54:44.991000",
                        "user": "Reeyansh",
                        "text": "@Deleted User in general don\\'t use `begin0` if it doesn\\'t let you get rid of a variable. So this usage would be fine:```scheme(begin0 (getfoo) (println Got the foo!\"))```because the alternative is this:```scheme(begin (define foo (getfoo)) (println Got the foo!\") foo)```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-28T03:57:11.293000",
                        "user": "Thaleia",
                        "text": "That's a good guideline."
                    }
                ]
            },
            {
                "conversation_id": "55",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-28T04:03:52.706000",
                        "user": "Huxlee",
                        "text": "Hi @4984 ! :D"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-28T04:04:01.708000",
                        "user": "Shaiel",
                        "text": "hi!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-28T04:04:21.957000",
                        "user": "Shaiel",
                        "text": "im doing programming but not racket \ud83d\ude48"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-28T16:05:55.012000",
                        "user": "Huxlee",
                        "text": "Oh sweet what language?"
                    }
                ]
            },
            {
                "conversation_id": "56",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-29T02:38:22.591000",
                        "user": "Mikkel",
                        "text": "Racket is pretty neat."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-29T09:30:55.172000",
                        "user": "Macia",
                        "text": "@thisisausername we all have different reasons for liking racket  why do you think it is neat?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-29T13:52:13.612000",
                        "user": "Mikkel",
                        "text": "I've been learning it for my programming paradigms class I just think it's a neat new way to program"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-29T13:52:25.390000",
                        "user": "Mikkel",
                        "text": "Infinitely better than logic programming with prolog"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-29T16:13:26.396000",
                        "user": "Thaleia",
                        "text": "You can mix both with Racklog!"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-29T16:22:20.427000",
                        "user": "Mikkel",
                        "text": "Yeah in my class we start with concurrent programming w/ golang then logic w/ prolog now functional w/ scheme/racket/whatever it's called"
                    }
                ]
            },
            {
                "conversation_id": "57",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-29T15:43:49.276000",
                        "user": "Kire",
                        "text": "Logic programming with Prolog is really hard"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-29T15:44:02.163000",
                        "user": "Kire",
                        "text": "Fun and rewarding when you get on a roll or get things right"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-29T15:44:04.489000",
                        "user": "Kire",
                        "text": "But hard"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-29T16:17:00.852000",
                        "user": "Kire",
                        "text": "I've never tried Racklog  the only time I ever use Prolog is when I'm teaching it \ud83d\ude02 Never found a practical usecase where Prolog/Racklog is better than some other tool"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-29T16:18:34.689000",
                        "user": "Karanveer",
                        "text": "Kanren > Prolog \ud83d\ude1b"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-03-29T16:25:08.550000",
                        "user": "Kire",
                        "text": "In the one I TA for we do logic programming with Prolog functional with Common Lisp imperative with C OOP with Ruby and then aspectoriented programming with AspectJ. It\\'s a lot for one class... I\\'ve tried getting it slimmed down but unfortunately I have no real control over the class... It\\'s kinda fun for some students but mostly useless since we can\\'t spend enough time on anything for them to really learn much."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-03-29T16:26:34.667000",
                        "user": "Mikkel",
                        "text": "My class technically includes Java for OOP but we've already learned that in the past so it's just one assignment worth 3% of our mark and it's not even included on exams"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-03-29T16:26:52.216000",
                        "user": "Mikkel",
                        "text": "Since we skip over that though we basically get one language/paradigm per month which isn't great but not horrible either"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-03-29T16:27:26.730000",
                        "user": "Mikkel",
                        "text": "Although Racket is being basically selftaught since COVID19"
                    }
                ]
            },
            {
                "conversation_id": "58",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-29T20:47:04.986000",
                        "user": "Karanveer",
                        "text": "https://twitter.com/whitequark/status/1239800500301836289?s=19"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-29T23:55:56.401000",
                        "user": "Karanveer",
                        "text": "I have a opinions about many of those things! Racket should be avoiding monomorphic functions (in general) especially when it's obvious you need one for lists and then vectors and then streams etc. Where is the line for what should obviously go into the core and what should go in an external package?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-29T23:59:38.453000",
                        "user": "Reeyansh",
                        "text": "I honestly don't think whether it's in an external package matters much here. If it's not useful enough to be in the core it's probably not useful enough for most racketeers to bother using at all. As a personal utility for an idiosyncratic style a package makes sense... but most of the time people put code like this into packages fully expecting they're useful enough for everyone and that being external and separate from the core API the utility is for is in of itself a benefit. Which it's not."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-30T00:02:48.029000",
                        "user": "Karanveer",
                        "text": "I think I specifically was looking for argmax over streams/sequences and just ended up rolling my own bespoke version."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-03-30T00:15:29.340000",
                        "user": "Reeyansh",
                        "text": "on the bright side Rebellion has `intomax` and `intomin` and they support `argmax`like features as well as custom comparators"
                    }
                ]
            },
            {
                "conversation_id": "59",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-03-29T22:58:31.329000",
                        "user": "Reeyansh",
                        "text": "@oaktownsam do you have any opinions on this feature? https://github.com/racket/racket/pull/3076"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-03-29T22:58:38.755000",
                        "user": "Reeyansh",
                        "text": "asking you since you've used transducers+reducers"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-03-29T23:00:45.002000",
                        "user": "Karanveer",
                        "text": "I'll take a look in a few."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-03-30T00:15:06.351000",
                        "user": "Reeyansh",
                        "text": "yeah \ud83d\ude26"
                    }
                ]
            },
            {
                "conversation_id": "60",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-02T00:24:03.493000",
                        "user": "Thaleia",
                        "text": "Hi is it possiblo to bind two .exes in one using racket?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-02T01:45:11.487000",
                        "user": "Thaleia",
                        "text": "Bind?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-02T01:46:59.699000",
                        "user": "Thaleia",
                        "text": "yep"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-02T10:47:47.040000",
                        "user": "Thaleia",
                        "text": "Put two execuable files together"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-02T10:50:52.288000",
                        "user": "Thaleia",
                        "text": "I don't think that's something you can do at all. At least not in the way I'm guessing you mean."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-02T16:16:02.910000",
                        "user": "Macia",
                        "text": "> Put two execuable files together@Deleted User do you mean a linker?(Edit)My mistake there are tools that do that but not in Racket."
                    }
                ]
            },
            {
                "conversation_id": "61",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-02T03:28:50.326000",
                        "user": "Huxlee",
                        "text": "I think erkin is asking what you mean by bind :)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-02T15:19:59.492000",
                        "user": "Xari",
                        "text": "`cat 1.exe 2.exe > 1+2.exe` duh \ud83d\ude05"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-02T15:21:21.134000",
                        "user": "Kire",
                        "text": "https://tenor.com/view/bigbrainmarkipliergif14835823"
                    }
                ]
            },
            {
                "conversation_id": "62",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-02T20:44:11.301000",
                        "user": "Temperance",
                        "text": "i wanted to make a DAW proof of concept and i made minor progress in that but i kind of want to put that on hold and make a music control DSL or soemthing"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-02T20:44:38.185000",
                        "user": "Temperance",
                        "text": "I want to explore some concepts in just intonation"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-02T20:45:01.616000",
                        "user": "Temperance",
                        "text": "in the past i used a parser and created a grammar that handled divisive rhythm and interpreting the symbols however i wanted (so i made different interpretations one being a pitch notation for equal temperemant another being a pitch notation for just intonation etc)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-02T20:47:13.624000",
                        "user": "Temperance",
                        "text": "and then i would make functions that worked with those parsed units allowing me to combine them and operate on them but i remember it felt clunky and wrong"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-02T20:47:53.296000",
                        "user": "Macia",
                        "text": "Sounds good (sorry bad pun)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-02T20:48:03.196000",
                        "user": "Temperance",
                        "text": "i'm wondering now if i could just make the language part more powerful"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-02T20:48:07.391000",
                        "user": "Temperance",
                        "text": "but i'm not sure how"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-02T20:48:50.116000",
                        "user": "Temperance",
                        "text": "something's telling me to just have some sort of symbol naming strategy so i can abstract entire chunks of music and then use that symbol but i feel like that's similar to what i was already doing."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-02T20:49:29.278000",
                        "user": "Temperance",
                        "text": "i really hate that my hard drive broke and i lost all my work"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-02T20:49:40.190000",
                        "user": "Temperance",
                        "text": "and i'm an idiot i just never put the effort into learning how to use git properly"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-02T20:50:03.945000",
                        "user": "Temperance",
                        "text": "i used git but in this weird way where only when i was sure i liked what i had would i upload it so the stuff i have on there is grossly outdated"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-02T20:51:03.073000",
                        "user": "Temperance",
                        "text": "but anyways that's the past. I remember the problem being that i always felt like i had to define a new function brute force in order to handle new concepts."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-02T20:51:37.796000",
                        "user": "Temperance",
                        "text": "for example appending one chunk to another was easy but what if i wanted to stretch times exponentially or something"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-02T20:51:50.483000",
                        "user": "Macia",
                        "text": "Make your life easier and just start off with the GitHub desktop software and github  at least you won\u2019t lose your work"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-02T20:52:12.823000",
                        "user": "Temperance",
                        "text": "yes i learned my mistake haha"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-02T20:53:12.419000",
                        "user": "Temperance",
                        "text": "can i get normal programming amidst the music notation \ud83e\udd14"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-02T20:53:53.141000",
                        "user": "Macia",
                        "text": "There are some music packages https://pkgd.racketlang.org/pkgn/search?q=Music"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-02T20:54:08.101000",
                        "user": "Temperance",
                        "text": "unlikely they will help"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-02T20:54:14.946000",
                        "user": "Temperance",
                        "text": "unless by some chance someone else is as esoteric as me"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-02T20:54:17.644000",
                        "user": "Temperance",
                        "text": "but i will check it out"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-02T20:54:40.136000",
                        "user": "Macia",
                        "text": "I\u2019ve been playing a little with puredata"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-02T20:54:46.871000",
                        "user": "Temperance",
                        "text": "i used puredata for a long time"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-02T20:55:01.851000",
                        "user": "Temperance",
                        "text": "save yourself the pain buy Max it's just 10$ a month"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-02T20:55:08.696000",
                        "user": "Temperance",
                        "text": "you can subscribe and unscubsribe at will"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-02T20:55:29.137000",
                        "user": "Macia",
                        "text": "I have an Organelle"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-02T20:55:33.082000",
                        "user": "Macia",
                        "text": "M"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-02T20:56:24.902000",
                        "user": "Temperance",
                        "text": "what's that now?"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-02T20:57:18.454000",
                        "user": "Temperance",
                        "text": "damn"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-02T20:57:50.517000",
                        "user": "Temperance",
                        "text": "come to think about it what i had in the past was essentially complete nowadays i'd remake in racket and have the parsing more integrated"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-02T20:57:53.554000",
                        "user": "Temperance",
                        "text": "am i wrong to think that?"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-02T20:58:34.412000",
                        "user": "Temperance",
                        "text": "being able to delineate the music parsing at any given point in the code and have it work would be ideal"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-02T20:58:51.228000",
                        "user": "Temperance",
                        "text": "hmm but also ways of deconstructing those musical objects \ud83d\ude29"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-02T20:58:57.820000",
                        "user": "Temperance",
                        "text": "this is going to be a lot of work \ud83d\ude14"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-02T20:59:03.134000",
                        "user": "Temperance",
                        "text": "idk if it's worth it"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-02T20:59:15.516000",
                        "user": "Temperance",
                        "text": "maybe i'm making it out to be more work than it really is i think i'm gonna go for it"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-02T20:59:47.320000",
                        "user": "Temperance",
                        "text": "so i guess my real first question though google probably will suffice: where do i turn for Racket parsing?"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-02T21:05:48.074000",
                        "user": "Temperance",
                        "text": "aha before i go any further to what extent can i have analysis built in? it would be awesome if while i'm coding i can check the values of certain things or listen to musical chunk is that an impossibility?"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-02T21:08:14.687000",
                        "user": "Macia",
                        "text": "There is the REPL"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-02T21:09:24.379000",
                        "user": "Temperance",
                        "text": "that works. is that my only option?"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-02T21:09:24.715000",
                        "user": "Macia",
                        "text": "https://github.com/racket/racket/wiki/CreatingLanguages"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-02T21:09:32.551000",
                        "user": "Temperance",
                        "text": "thanks"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-02T21:12:03.358000",
                        "user": "Temperance",
                        "text": "many times i can't tell if it's my own stupidity or if the tools just don't work with me,in the past i found myself getting lost in the REPL all the time. it always felt disorganized. but i'm sure i only felt that way becuase i never learned REPL functions/commands for figuring out what variables you have stored or whatever other functions that helps you stay grounded and organized"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-02T21:12:29.552000",
                        "user": "Temperance",
                        "text": "or is it that i should get better at quickly integrated text and REPL?"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-02T21:12:54.039000",
                        "user": "Temperance",
                        "text": "tbh one text file and one REPL with the file opened would probably suffice for a single musical work or experiment"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-02T21:12:58.181000",
                        "user": "Temperance",
                        "text": "i'm so dumb"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-02T21:13:10.697000",
                        "user": "Temperance",
                        "text": "in the past i caused my own pain i'm done with that now"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-02T21:13:12.796000",
                        "user": "Temperance",
                        "text": "this should be easy"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-02T21:16:07.568000",
                        "user": "Temperance",
                        "text": "I jsut need to parse something like [ [ a a ] a a ] as a tree with \\'a\\ just as a placeholder symbol but there are also questions of efficiency.So the tree ultimately represents divisions of rhythm but in the past I would parse the entire tree then run a function that traverses the tree and essentially counts the branches and applies rhythmic values to the symbols within the tree.but i\\'m thinking it would be more efficient that as it parses out the tree itself it keeps track of the numbers and applies them correctly"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-02T21:16:11.293000",
                        "user": "Temperance",
                        "text": "o wait that can't work"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-02T21:16:15.756000",
                        "user": "Temperance",
                        "text": "anyway let me not spam in here"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-02T21:22:15.713000",
                        "user": "Macia",
                        "text": "> I jsut need to parse something like [ [ a a ] a a ] as a tree,Using racket lists will do that"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-02T21:24:17.977000",
                        "user": "Macia",
                        "text": "No need for a parser just plain racket"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-02T21:26:33.645000",
                        "user": "Macia",
                        "text": "I think the pattern matching functionality will do what you need : https://docs.racketlang.org/reference/match.html"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-02T21:27:26.860000",
                        "user": "Macia",
                        "text": "This is just plain racket  no need for a parser  it is part of rackets own parser"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-02T21:27:50.559000",
                        "user": "Temperance",
                        "text": "hmmm"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-02T21:27:58.648000",
                        "user": "Temperance",
                        "text": "not sure how to accomplish what i want"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-02T21:28:09.854000",
                        "user": "Macia",
                        "text": "Start simple"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-02T21:28:22.819000",
                        "user": "Temperance",
                        "text": "can i count the number of open parenthesis and count the number of symbols within a parenthesized group?"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-04-02T21:28:22.865000",
                        "user": "Macia",
                        "text": "Building blocks first"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-04-02T21:28:38.920000",
                        "user": "Macia",
                        "text": "Yes"
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-04-02T21:30:16.427000",
                        "user": "Macia",
                        "text": "The data structure is called \u2018list\u2019 but it is a poor name because it is a syntax for building trees"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-04-02T21:30:51.344000",
                        "user": "Temperance",
                        "text": "true"
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-04-02T21:30:57.898000",
                        "user": "Temperance",
                        "text": "so i just run recursive length functions"
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-04-02T21:31:04.226000",
                        "user": "Temperance",
                        "text": "kek this will be easy"
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-04-02T21:31:35.698000",
                        "user": "Temperance",
                        "text": "can i have my symbols unquoted inside?"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-04-02T21:32:01.762000",
                        "user": "Temperance",
                        "text": "agh what does quote mean again"
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-04-02T21:32:05.526000",
                        "user": "Temperance",
                        "text": "quote is the symbol itself"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-04-02T21:32:16.885000",
                        "user": "Temperance",
                        "text": "not quoted is it evaluated"
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-04-02T21:32:19.370000",
                        "user": "Temperance",
                        "text": "?"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-04-02T21:33:16.661000",
                        "user": "Macia",
                        "text": "> can i have my symbols unquoted inside?@giftfromgod yes it\u2019s called quasiquote`\\\\`"
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-04-02T21:33:25.929000",
                        "user": "Temperance",
                        "text": "quasiquote o yes"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-04-02T21:33:38.073000",
                        "user": "Temperance",
                        "text": "i remember reading but didnt get the usage so it didnt stick"
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-04-02T21:33:41.090000",
                        "user": "Temperance",
                        "text": "now i understand"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-04-02T21:33:53.307000",
                        "user": "Macia",
                        "text": "Backtick is the shorthand"
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-04-02T21:34:23.387000",
                        "user": "Temperance",
                        "text": "bruh"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-04-02T21:34:27.035000",
                        "user": "Macia",
                        "text": "Then commas to unquote"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-04-02T21:34:30.668000",
                        "user": "Temperance",
                        "text": "racket is awesome"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-04-02T21:34:36.154000",
                        "user": "Temperance",
                        "text": "or lisp"
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-04-02T21:34:42.296000",
                        "user": "Temperance",
                        "text": "or whatever whoever thought of that"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-04-02T21:34:44.506000",
                        "user": "Temperance",
                        "text": "theyre a genius"
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-04-02T21:35:00.197000",
                        "user": "Macia",
                        "text": "Lisp can do that too as can Scheme"
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-04-02T21:35:26.307000",
                        "user": "Macia",
                        "text": "I don\u2019t know who invented quasiquote"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-04-02T21:37:06.407000",
                        "user": "Macia",
                        "text": "Sounds like you have a good understanding of what you want to achieve and Racket has some helpful features. Do you have a plan?"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-04-02T21:37:48.558000",
                        "user": "Temperance",
                        "text": "i think so."
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-04-02T21:37:52.159000",
                        "user": "Temperance",
                        "text": "not the details just yet"
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-04-02T21:38:35.694000",
                        "user": "Temperance",
                        "text": "like when i get what i want out of the list it should be remembered"
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-04-02T21:39:30.908000",
                        "user": "Macia",
                        "text": "Maybe start with some small things and build up?"
                    },
                    {
                        "message_number": "88",
                        "ts": "2020-04-02T21:39:49.137000",
                        "user": "Temperance",
                        "text": "yes"
                    },
                    {
                        "message_number": "89",
                        "ts": "2020-04-02T21:40:11.410000",
                        "user": "Macia",
                        "text": "What are the first three things you want to do?"
                    },
                    {
                        "message_number": "90",
                        "ts": "2020-04-02T21:40:46.883000",
                        "user": "Temperance",
                        "text": "but i\u2019m thinking about when all is said and done the rhythm and notes are decoded from the list representation do i make a datatype to store them"
                    },
                    {
                        "message_number": "91",
                        "ts": "2020-04-02T21:41:32.363000",
                        "user": "Temperance",
                        "text": "i like to see big picture before i start that way i realize stupid things earlier on so i dont waste time"
                    },
                    {
                        "message_number": "92",
                        "ts": "2020-04-02T21:41:51.093000",
                        "user": "Macia",
                        "text": "How will you specify rhythm ?"
                    },
                    {
                        "message_number": "93",
                        "ts": "2020-04-02T21:41:57.817000",
                        "user": "Temperance",
                        "text": "the tree"
                    },
                    {
                        "message_number": "94",
                        "ts": "2020-04-02T21:42:09.156000",
                        "user": "Temperance",
                        "text": "the tree is the rhythm lol"
                    },
                    {
                        "message_number": "95",
                        "ts": "2020-04-02T21:42:45.372000",
                        "user": "Macia",
                        "text": "`(1/4 1/4 1/2)`?"
                    },
                    {
                        "message_number": "96",
                        "ts": "2020-04-02T21:42:55.468000",
                        "user": "Temperance",
                        "text": "what is that"
                    },
                    {
                        "message_number": "97",
                        "ts": "2020-04-02T21:43:23.232000",
                        "user": "Temperance",
                        "text": "so for like (a a)each a is 1/2"
                    },
                    {
                        "message_number": "98",
                        "ts": "2020-04-02T21:43:32.509000",
                        "user": "Temperance",
                        "text": "(a a a) each one is 1/3"
                    },
                    {
                        "message_number": "99",
                        "ts": "2020-04-02T21:44:14.932000",
                        "user": "Temperance",
                        "text": "((a a) a a)the first two are each halves of a third or in other words 1/6th each,then the two remaining a\u2019s are 1/3"
                    },
                    {
                        "message_number": "100",
                        "ts": "2020-04-02T21:44:18.492000",
                        "user": "Temperance",
                        "text": "and so on and so forth"
                    },
                    {
                        "message_number": "101",
                        "ts": "2020-04-02T21:45:54.781000",
                        "user": "Macia",
                        "text": "I see"
                    },
                    {
                        "message_number": "102",
                        "ts": "2020-04-02T21:45:57.756000",
                        "user": "Temperance",
                        "text": "yup"
                    },
                    {
                        "message_number": "103",
                        "ts": "2020-04-02T21:46:12.293000",
                        "user": "Temperance",
                        "text": "there are arbitrary choices involved im pretty aware of them"
                    },
                    {
                        "message_number": "104",
                        "ts": "2020-04-02T21:46:56.471000",
                        "user": "Temperance",
                        "text": "like i can store them as consecutive intervals or i can store them as relative to the first element of the chunk,that choice determines how other functions work to concatenate and whatnot"
                    },
                    {
                        "message_number": "105",
                        "ts": "2020-04-02T21:47:25.691000",
                        "user": "Temperance",
                        "text": "im worried"
                    },
                    {
                        "message_number": "106",
                        "ts": "2020-04-02T21:48:08.629000",
                        "user": "Macia",
                        "text": "( 2 (c b a))(((a a a)(b b b)(c c c)))"
                    },
                    {
                        "message_number": "107",
                        "ts": "2020-04-02T21:48:13.974000",
                        "user": "Temperance",
                        "text": "im worried this isnt good enough. something about the rigidity of the divisions rubs me the wrong way,even if i have functions to loosen it up (a function to introduce random deviations for example)"
                    },
                    {
                        "message_number": "108",
                        "ts": "2020-04-02T21:48:44.737000",
                        "user": "Temperance",
                        "text": "@StephenD whats that?"
                    },
                    {
                        "message_number": "109",
                        "ts": "2020-04-02T21:48:44.935000",
                        "user": "Macia",
                        "text": "Repeat ( c b a ) twice"
                    },
                    {
                        "message_number": "110",
                        "ts": "2020-04-02T21:49:21.209000",
                        "user": "Macia",
                        "text": "I\u2019m not a musician but your description is hood"
                    },
                    {
                        "message_number": "111",
                        "ts": "2020-04-02T21:49:28.360000",
                        "user": "Macia",
                        "text": "Good"
                    },
                    {
                        "message_number": "112",
                        "ts": "2020-04-02T21:49:34.682000",
                        "user": "Temperance",
                        "text": "its good"
                    },
                    {
                        "message_number": "113",
                        "ts": "2020-04-02T21:49:36.381000",
                        "user": "Temperance",
                        "text": "but like"
                    },
                    {
                        "message_number": "114",
                        "ts": "2020-04-02T21:49:42.705000",
                        "user": "Temperance",
                        "text": "i also worry about parameters"
                    },
                    {
                        "message_number": "115",
                        "ts": "2020-04-02T21:49:54.522000",
                        "user": "Temperance",
                        "text": "at somepoint you just want knobs and sliders"
                    },
                    {
                        "message_number": "116",
                        "ts": "2020-04-02T21:50:15.848000",
                        "user": "Temperance",
                        "text": "or other means of gui control"
                    },
                    {
                        "message_number": "117",
                        "ts": "2020-04-02T21:50:21.104000",
                        "user": "Temperance",
                        "text": "but i dont want to overwhelm myself"
                    },
                    {
                        "message_number": "118",
                        "ts": "2020-04-02T21:50:31.878000",
                        "user": "Temperance",
                        "text": "but idk what if theres a smarter way of accomplishing what i want to accomplish"
                    },
                    {
                        "message_number": "119",
                        "ts": "2020-04-02T21:50:35.230000",
                        "user": "Macia",
                        "text": "There is a gui toolkit"
                    },
                    {
                        "message_number": "120",
                        "ts": "2020-04-02T21:50:40.677000",
                        "user": "Temperance",
                        "text": "yes"
                    },
                    {
                        "message_number": "121",
                        "ts": "2020-04-02T21:50:49.314000",
                        "user": "Temperance",
                        "text": "i got fairly good at it already \ud83d\ude02"
                    },
                    {
                        "message_number": "122",
                        "ts": "2020-04-02T21:50:55.220000",
                        "user": "Temperance",
                        "text": "its pretty awesome and straightforward"
                    },
                    {
                        "message_number": "123",
                        "ts": "2020-04-02T21:51:09.846000",
                        "user": "Temperance",
                        "text": "the docs are fantastic with how they show you the layout of the"
                    },
                    {
                        "message_number": "124",
                        "ts": "2020-04-02T21:51:13.282000",
                        "user": "Temperance",
                        "text": "idk what word to use"
                    },
                    {
                        "message_number": "125",
                        "ts": "2020-04-02T21:51:14.926000",
                        "user": "Macia",
                        "text": "How do you generate the sound? Supercollider ?"
                    },
                    {
                        "message_number": "126",
                        "ts": "2020-04-02T21:51:25.555000",
                        "user": "Temperance",
                        "text": "doesnt matter"
                    },
                    {
                        "message_number": "127",
                        "ts": "2020-04-02T21:51:32.255000",
                        "user": "Temperance",
                        "text": "even outputting midi could work \ud83e\udd37\\u200d\u2640\ufe0f"
                    },
                    {
                        "message_number": "128",
                        "ts": "2020-04-02T21:51:37.888000",
                        "user": "Temperance",
                        "text": "rsound seemed cool \ud83e\udd37\\u200d\u2640\ufe0f"
                    },
                    {
                        "message_number": "129",
                        "ts": "2020-04-02T21:51:48.505000",
                        "user": "Temperance",
                        "text": "actually outputting midi couldnt really work \ud83d\ude14"
                    },
                    {
                        "message_number": "130",
                        "ts": "2020-04-02T21:51:58.975000",
                        "user": "Macia",
                        "text": "> even outputting midi could work \ud83e\udd37\\u200d\u2640\ufe0f@giftfromgod OSC better"
                    },
                    {
                        "message_number": "131",
                        "ts": "2020-04-02T21:52:13.159000",
                        "user": "Temperance",
                        "text": "OSC is a lot better but barely anything accepts it"
                    },
                    {
                        "message_number": "132",
                        "ts": "2020-04-02T21:52:21.651000",
                        "user": "Temperance",
                        "text": "at that point i should just generate the sound myself"
                    },
                    {
                        "message_number": "133",
                        "ts": "2020-04-02T21:52:33.238000",
                        "user": "Temperance",
                        "text": "rsound supercollider csound anything like that"
                    },
                    {
                        "message_number": "134",
                        "ts": "2020-04-02T21:52:58.668000",
                        "user": "Macia",
                        "text": "I think there already bindings"
                    },
                    {
                        "message_number": "135",
                        "ts": "2020-04-02T21:53:00.356000",
                        "user": "Temperance",
                        "text": "and since i want to work with just intonation thats looking like what i\u2019ll have to do but no worries"
                    },
                    {
                        "message_number": "136",
                        "ts": "2020-04-02T21:53:11.206000",
                        "user": "Temperance",
                        "text": "ye that doesnt scare me"
                    },
                    {
                        "message_number": "137",
                        "ts": "2020-04-02T21:53:22.739000",
                        "user": "Temperance",
                        "text": "i do basic modal synthesis instruments everytime \ud83d\ude02"
                    },
                    {
                        "message_number": "138",
                        "ts": "2020-04-02T21:53:33.350000",
                        "user": "Temperance",
                        "text": "i need to learn how to make sophisticated resonators \ud83e\udd14"
                    },
                    {
                        "message_number": "139",
                        "ts": "2020-04-02T21:53:49.867000",
                        "user": "Macia",
                        "text": "(I\u2019m out if my depth here("
                    },
                    {
                        "message_number": "140",
                        "ts": "2020-04-02T21:53:50.903000",
                        "user": "Temperance",
                        "text": "idk if i should just fuck with delays until i intuitively figure it out"
                    },
                    {
                        "message_number": "141",
                        "ts": "2020-04-02T21:53:55.506000",
                        "user": "Temperance",
                        "text": "ye lol ur good"
                    },
                    {
                        "message_number": "142",
                        "ts": "2020-04-02T21:54:06.669000",
                        "user": "Temperance",
                        "text": "so whats my plan"
                    },
                    {
                        "message_number": "143",
                        "ts": "2020-04-02T21:54:10.450000",
                        "user": "Temperance",
                        "text": "i gotta go soon"
                    },
                    {
                        "message_number": "144",
                        "ts": "2020-04-02T21:54:23.814000",
                        "user": "Macia",
                        "text": "Good luck"
                    },
                    {
                        "message_number": "145",
                        "ts": "2020-04-02T21:54:47.687000",
                        "user": "Macia",
                        "text": "& welcome to racket discord come back any time"
                    },
                    {
                        "message_number": "146",
                        "ts": "2020-04-02T21:54:56.772000",
                        "user": "Macia",
                        "text": "\ud83d\ude01"
                    },
                    {
                        "message_number": "147",
                        "ts": "2020-04-02T21:55:48.639000",
                        "user": "Temperance",
                        "text": "plan:1. make functions to figure out the rhythm from the list2. figure out a pitch representation for the kind of just intonation work i want to do3. make a shitton of helper functions for working with the pitch and rhythm4. think about the big picture again"
                    },
                    {
                        "message_number": "148",
                        "ts": "2020-04-02T21:56:35.627000",
                        "user": "Temperance",
                        "text": "something tells me i should start with 4 and just keep thinking. rigidity hurts. but like there is no continuum with programming right?"
                    },
                    {
                        "message_number": "149",
                        "ts": "2020-04-02T21:57:01.381000",
                        "user": "Temperance",
                        "text": "approximating a continuum \ud83e\udd37\\u200d\u2640\ufe0f"
                    },
                    {
                        "message_number": "150",
                        "ts": "2020-04-02T21:57:14.611000",
                        "user": "Temperance",
                        "text": "i think i really just want to make the DAW \ud83d\ude02\ud83d\ude02\ud83d\ude02"
                    },
                    {
                        "message_number": "151",
                        "ts": "2020-04-02T21:57:25.090000",
                        "user": "Macia",
                        "text": "\u266b"
                    },
                    {
                        "message_number": "152",
                        "ts": "2020-04-02T21:57:31.770000",
                        "user": "Temperance",
                        "text": "i could never make it more than a proof of concept though \ud83d\ude14"
                    },
                    {
                        "message_number": "153",
                        "ts": "2020-04-02T21:57:42.358000",
                        "user": "Temperance",
                        "text": "not by myself. i would need a team or help otherwise"
                    },
                    {
                        "message_number": "154",
                        "ts": "2020-04-02T21:57:53.503000",
                        "user": "Macia",
                        "text": "Everything started as a prototype"
                    },
                    {
                        "message_number": "155",
                        "ts": "2020-04-02T21:58:25.498000",
                        "user": "Macia",
                        "text": "With a working prototype you might be able to attract a team"
                    },
                    {
                        "message_number": "156",
                        "ts": "2020-04-02T21:58:30.404000",
                        "user": "Macia",
                        "text": "OSS"
                    },
                    {
                        "message_number": "157",
                        "ts": "2020-04-02T21:58:51.827000",
                        "user": "Temperance",
                        "text": "that was my original plan \ud83d\ude02i\u2019d love to have a visual approximation of continuum and then have a lot of freedom power and control with overlaying grids."
                    },
                    {
                        "message_number": "158",
                        "ts": "2020-04-02T21:59:32.026000",
                        "user": "Macia",
                        "text": "But racketeers like to help  here(discord) Racket users mailing list/google group & the racket slack"
                    },
                    {
                        "message_number": "159",
                        "ts": "2020-04-02T21:59:33.952000",
                        "user": "Temperance",
                        "text": "but since i want to rxperiment with just intonation now i wanted to take an easy route out but the mathematician and programmer within me wanta me to keep generalizing and actually get the tool that i want"
                    },
                    {
                        "message_number": "160",
                        "ts": "2020-04-02T21:59:47.235000",
                        "user": "Temperance",
                        "text": "which requires more work"
                    },
                    {
                        "message_number": "161",
                        "ts": "2020-04-02T22:00:00.517000",
                        "user": "Temperance",
                        "text": "i guess i\u2019ll keep wrestling with what i want to work on first \ud83e\udd37\\u200d\u2640\ufe0f"
                    },
                    {
                        "message_number": "162",
                        "ts": "2020-04-02T22:00:09.111000",
                        "user": "Temperance",
                        "text": "thansk so much and goodbye"
                    },
                    {
                        "message_number": "163",
                        "ts": "2020-04-02T22:00:23.508000",
                        "user": "Macia",
                        "text": "Have you seen the new sonic pi yet?"
                    },
                    {
                        "message_number": "164",
                        "ts": "2020-04-02T22:00:29.734000",
                        "user": "Temperance",
                        "text": "no whats that"
                    },
                    {
                        "message_number": "165",
                        "ts": "2020-04-02T22:00:31.353000",
                        "user": "Macia",
                        "text": "\u266bbye"
                    },
                    {
                        "message_number": "166",
                        "ts": "2020-04-02T22:00:58.644000",
                        "user": "Macia",
                        "text": "Programmatic DAW for education /live coding"
                    },
                    {
                        "message_number": "167",
                        "ts": "2020-04-02T22:00:59.667000",
                        "user": "Temperance",
                        "text": "OMG"
                    },
                    {
                        "message_number": "168",
                        "ts": "2020-04-02T22:01:03.402000",
                        "user": "Temperance",
                        "text": "OMGGG"
                    },
                    {
                        "message_number": "169",
                        "ts": "2020-04-02T22:01:23.952000",
                        "user": "Macia",
                        "text": "Good fun! I recommend"
                    },
                    {
                        "message_number": "170",
                        "ts": "2020-04-02T22:01:26.083000",
                        "user": "Temperance",
                        "text": "dude that looks amazing"
                    },
                    {
                        "message_number": "171",
                        "ts": "2020-04-02T22:01:31.534000",
                        "user": "Temperance",
                        "text": "it just came out"
                    },
                    {
                        "message_number": "172",
                        "ts": "2020-04-02T22:01:33.126000",
                        "user": "Temperance",
                        "text": "wow"
                    },
                    {
                        "message_number": "173",
                        "ts": "2020-04-02T22:02:41.084000",
                        "user": "Macia",
                        "text": "Have a good evening"
                    },
                    {
                        "message_number": "174",
                        "ts": "2020-04-02T22:02:43.555000",
                        "user": "Temperance",
                        "text": "same"
                    },
                    {
                        "message_number": "175",
                        "ts": "2020-04-02T22:02:49.880000",
                        "user": "Macia",
                        "text": "Come back soon\ud83d\ude01"
                    },
                    {
                        "message_number": "176",
                        "ts": "2020-04-03T03:32:53.814000",
                        "user": "Thaleia",
                        "text": "Wow `definevalues` is surprisingly difficult to implement."
                    },
                    {
                        "message_number": "177",
                        "ts": "2020-04-03T03:33:05.872000",
                        "user": "Thaleia",
                        "text": "It keeps accidentally capturing the forms..."
                    },
                    {
                        "message_number": "178",
                        "ts": "2020-04-03T03:33:53.078000",
                        "user": "Thaleia",
                        "text": "At times like this I appreciate the simplicity of `definemacro`..."
                    },
                    {
                        "message_number": "179",
                        "ts": "2020-04-03T03:35:39.350000",
                        "user": "Thaleia",
                        "text": "Honestly never actually had to use `generatetemporaries` before."
                    },
                    {
                        "message_number": "180",
                        "ts": "2020-04-03T03:45:41.281000",
                        "user": "Thaleia",
                        "text": "oh my god I misspelt `expr` as `exp` and it thought I was trying to get the exponential function the whole time"
                    },
                    {
                        "message_number": "181",
                        "ts": "2020-04-03T03:45:52.250000",
                        "user": "Thaleia",
                        "text": "\ud83e\udd26"
                    },
                    {
                        "message_number": "182",
                        "ts": "2020-04-03T04:38:08.360000",
                        "user": "Thaleia",
                        "text": "```Scheme (definesyntax definevalues (syntaxrules () ((_ () body) (callwithvalues (thunk body) void)) ((_ (var . vars) body) (begin (define var (callwithvalues (thunk body) list)) (definevalues vars (apply values (cdr var))) (set! var (car var)))) ((_ var body) (define var (callwithvalues (thunk body) list)))))``` in the end"
                    },
                    {
                        "message_number": "183",
                        "ts": "2020-04-03T05:27:06.182000",
                        "user": "Thaleia",
                        "text": "Bad news: The expansion violates the definitions before expression rule some implementations obsess with."
                    }
                ]
            },
            {
                "conversation_id": "63",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-03T05:00:49.016000",
                        "user": "Karanveer",
                        "text": "ewww"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-03T05:01:33.668000",
                        "user": "Karanveer",
                        "text": "iirc `definevalues` is a core/kernel form in racket"
                    }
                ]
            },
            {
                "conversation_id": "64",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-03T05:10:56.337000",
                        "user": "Temperance",
                        "text": "what is going on there lol"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-03T16:26:54.491000",
                        "user": "Temperance",
                        "text": "are there text editors where you can click and drag numbers or something to change them"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-03T16:32:30.156000",
                        "user": "Temperance",
                        "text": "@StephenD sonic pi is not what i thought it was doesn't really interest me but i respect live coders"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-03T16:40:44.857000",
                        "user": "Macia",
                        "text": "\u2018Light table\u2019 I think. Based on Bret victor presentation"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-03T16:41:01.523000",
                        "user": "Macia",
                        "text": "> are there text editors where you can click and drag numbers or something to change them@giftfromgod \ud83d\udc46"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-03T18:05:10.107000",
                        "user": "Temperance",
                        "text": "@StephenD thanks"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-03T21:51:22.885000",
                        "user": "Macia",
                        "text": "I believe there are a bunch of HCI/CHI papers on zoomable user interfaces maybe check the acm digital library while it\u2019s free"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-03T22:00:15.480000",
                        "user": "Macia",
                        "text": "\\u202a Good PL design papers for Racket language designers ? While the acm digital library is free what papers (& dissertations) in Programming Language Design are worth a look for the aspiring language (or EDSL or DSL) designer ?See https://dl.acm.org"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-04T10:49:24.124000",
                        "user": "Trendon",
                        "text": "@StephenD I remeber seeing a PL reading group on the ProgrammingLanguages subreddit"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-04T10:50:15.566000",
                        "user": "Trendon",
                        "text": "I think this is the last of those threads:https://old.reddit.com/r/ProgrammingLanguages/comments/dae9tz/pl_reading_group_week_13_bohms_theorem/"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-04T10:51:04.306000",
                        "user": "Macia",
                        "text": "Thanks"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-04T10:55:56.444000",
                        "user": "Trendon",
                        "text": "I didn't know that acm made their library free"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-04T10:55:59.825000",
                        "user": "Trendon",
                        "text": "that's so cool"
                    }
                ]
            },
            {
                "conversation_id": "65",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-03T17:58:35.191000",
                        "user": "Reeyansh",
                        "text": "@Deleted User do those implementations have something like `splicinglet`? if not I don't see how it's possible to implement `definevalues` with only `syntaxrules`"
                    }
                ]
            },
            {
                "conversation_id": "66",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-03T20:02:38.827000",
                        "user": "Temperance",
                        "text": "where could i look to get some ideas of the ways of handling zooming?i have a window that i'll need control over both dimensions together and individually but i always hate the implementations i tend to see of that sort of thing"
                    }
                ]
            },
            {
                "conversation_id": "67",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-04T05:17:06.292000",
                        "user": "Thaleia",
                        "text": "@notjack R6RS doesn't have `splicinglet` although I can always use `syntaxcase` with `generatetemporaries`. However R7RS has a (really long) implementation of it in pure `syntaxrules`."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-04T05:17:41.814000",
                        "user": "Thaleia",
                        "text": "I'm on phone rn but IIRC it's on page 70 of the standard."
                    }
                ]
            },
            {
                "conversation_id": "68",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-04T14:01:21.642000",
                        "user": "Thaleia",
                        "text": "Hmm... I'm having trouble writing stateful macros."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-04T14:02:32.258000",
                        "user": "Thaleia",
                        "text": "It's supposed to be a simple enum macro but it's giving me trouble."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-04T14:03:13.772000",
                        "user": "Thaleia",
                        "text": "```Scheme(defineenum a b c)```should expand to```Scheme(begin (define a 0) (define b 1) (define c 2))```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-04T14:05:10.383000",
                        "user": "Thaleia",
                        "text": "I suppose I can keep a variable outside `syntaxcase` within the lambda and mutate it with each iteration?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-04T14:11:36.959000",
                        "user": "Thaleia",
                        "text": "I can do it if I pass an initial `0` value and iterate through that."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-04T14:12:13.641000",
                        "user": "Thaleia",
                        "text": "Maybe I'll do exactly that and make it into an aux macro."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-04T14:24:16.554000",
                        "user": "Thaleia",
                        "text": "```Scheme(definesyntax defineenumaux (lambda (stx) (define (incrementsyntax stxn) (datum>syntax stxn (add1 (syntax>datum stxn)))) (syntaxcase stx () ((_ val) #'(values)) ((_ val (id newval) rest ...) #'(defineenumaux newval id rest ...)) ((_ val id rest ...) (withsyntax ((inc (incrementsyntax #'val))) #'(begin (define id val) (defineenumaux inc rest ...)))))))(definesyntaxrule (defineenum vals ...) (defineenumaux 0 vals ...))```Ehh this works I guess."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-04T14:34:54.681000",
                        "user": "Thaleia",
                        "text": "Oh my god I wish R6RS had Racket's convenience procedures like `syntaxe` and `formatid`."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-04T14:35:18.798000",
                        "user": "Thaleia",
                        "text": "```Scheme(definesyntax definecenumaux (lambda (stx) (syntaxcase stx () ((_ enum val) #\\'(values)) ((_ enum val (id newval) rest ...) #\\'(definecenumaux enum newval id rest ...)) ((_ enum val id rest ...) (withsyntax ((inc (datum>syntax #\\'val (add1 (syntax>datum #\\'val)))) (name (datum>syntax #\\'id (string>symbol (stringappend (symbol>string (syntax>datum #\\'enum)) :\" (symbol>string (syntax>datum #\\'id))))))) #\\'(begin (define name val) (definecenumaux enum inc rest ...)))))))(definesyntaxrule (definecenum enum vals ...) (definecenumaux enum 0 vals ...))```"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-04T14:35:26.560000",
                        "user": "Thaleia",
                        "text": "That `withsyntax` is ugly as hell."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-04T16:17:12.962000",
                        "user": "Thaleia",
                        "text": "Ah it's a bad idea to preemptively evaluate the enum value (`inc` here). There's always a chance that the given value isn't actually `number?`."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-04T18:44:53.637000",
                        "user": "Karanveer",
                        "text": "That's too bad `syntaxe` is a primitive in `syntaxcase` iirc"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-05T01:17:40.357000",
                        "user": "Reeyansh",
                        "text": "In theory yes. But it's not easy. I suggest asking the racketusers mailing list you'll get much more thorough advice."
                    }
                ]
            },
            {
                "conversation_id": "69",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-04T23:30:16.610000",
                        "user": "Nouredine",
                        "text": "can scribble handle nonracket languages (e.g shell json python)? I'd like to write my literate dotfiles in racket instead of orgmode"
                    }
                ]
            },
            {
                "conversation_id": "70",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-06T21:32:43.547000",
                        "user": "Reeyansh",
                        "text": "@oaktownsam what do you think of a `takingmax` transducer that lets you take the top Nranked values of a stream? where ties are counted as a single rank. So `(transduce (list 7 8 8 6 7 4 5) (takingmax #:ranks 2) #:into intolist)` would return `(list 7 8 8 7)` (since 7 and 8 are the top two values and it tries to preserve encounter order)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-06T21:33:05.155000",
                        "user": "Reeyansh",
                        "text": "I've been trying to think of how I would do a similar operation with racket's `for` loops and it seems really tricky"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-06T21:35:14.607000",
                        "user": "Karanveer",
                        "text": "That seems good."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-06T21:35:41.686000",
                        "user": "Reeyansh",
                        "text": "context: https://www.reddit.com/r/Racket/comments/fw6zux/max_sums_of_cdr_values_in_pairs/"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-13T22:23:10.670000",
                        "user": "Macia",
                        "text": "samth/objectbacktrace: find out what keeps an object alivehttps://github.com/samth/objectbacktrace"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-14T18:56:49.839000",
                        "user": "Karanveer",
                        "text": "`vmeval` looks exciting"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-14T19:15:01.395000",
                        "user": "Karanveer",
                        "text": "In the objectbacktrace it uses an undocumented `ffi/unsafe/vm` module which I'm guessing reaches into the guts of Chez Scheme. So I'm guessing `vmeval` let's you run code directly in Chez from Racket.So exciting unsafe and dangerous."
                    }
                ]
            },
            {
                "conversation_id": "71",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-14T18:57:23.871000",
                        "user": "Dominik",
                        "text": "what is it?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-14T19:16:07.543000",
                        "user": "Dominik",
                        "text": "oh my"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-14T19:50:43.991000",
                        "user": "Dominik",
                        "text": "it stops being fun when they change the internals :GWsetmyxPeepoSad:"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-15T10:25:58.699000",
                        "user": "Dominik",
                        "text": "what do y'all use for editing racket code?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-15T10:26:29.303000",
                        "user": "Dominik",
                        "text": "I was using emacs but the racket layer in spacemacs is pretty buggy"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-15T10:31:32.891000",
                        "user": "Macia",
                        "text": "Hi @sarna Racket mode is very popularhttps://racketmode.com"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-15T10:31:49.202000",
                        "user": "Macia",
                        "text": "(I use DrRacket)"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-15T10:32:43.404000",
                        "user": "Macia",
                        "text": "Most people use Racket mode or DrRacket  I did a survey and it is split pretty evenly"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-15T10:54:55.238000",
                        "user": "Dominik",
                        "text": "@StephenD yep the racket layer uses racket mode. it doesn't map the right commands however.."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-15T10:55:17.094000",
                        "user": "Dominik",
                        "text": "eg the documentation is mapped in a wrong way"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-15T10:55:40.958000",
                        "user": "Macia",
                        "text": "I suggest asking on the record users mailing list \u2013 there are more Emacs users there. Or the racket slack"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-15T10:55:46.878000",
                        "user": "Dominik",
                        "text": "and I can't use xrepl commands in the repl"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-15T10:55:57.520000",
                        "user": "Dominik",
                        "text": "I think I'll try vscode"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-15T10:56:46.960000",
                        "user": "Macia",
                        "text": "There is a VS code plugin but it doesn\u2019t do all the stuff that Dr Racket and Racket mode do"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-15T10:57:13.857000",
                        "user": "Macia",
                        "text": "I\u2019d suggest plain Emacs it DrRacket(my preference)"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-15T10:58:23.878000",
                        "user": "Dominik",
                        "text": "are people really using DrRacket? to me it feels like a silly program aimed at beginners"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-15T10:58:31.877000",
                        "user": "Dominik",
                        "text": "maybe it's the icons/layout"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-15T10:59:09.049000",
                        "user": "Macia",
                        "text": "DrRacket is really powerful."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-15T10:59:26.741000",
                        "user": "Macia",
                        "text": "It just looks like a educational tool"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-15T10:59:47.856000",
                        "user": "Dominik",
                        "text": "does it have a vim mode? :GWcmeisterPeepoHug:"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-15T11:00:01.755000",
                        "user": "Macia",
                        "text": "It also supports Emacs key bindings"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-15T11:00:58.914000",
                        "user": "Macia",
                        "text": "> does it have a vim mode? @sarna not that I\u2019m aware of"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-15T11:01:22.431000",
                        "user": "Dominik",
                        "text": "https://github.com/takikawa/drracketvimtool I've found this but it doesn't look complete"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-15T11:01:27.130000",
                        "user": "Macia",
                        "text": "Some people use vim with racket"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-15T11:01:41.452000",
                        "user": "Macia",
                        "text": "Sorry it\u2019s not something I have any experience with"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-15T11:01:53.169000",
                        "user": "Dominik",
                        "text": "no worries"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-15T11:02:07.056000",
                        "user": "Dominik",
                        "text": "thanks for helping me out anyway :GWcmeisterPeepoLove:"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-15T19:08:40.427000",
                        "user": "Dominik",
                        "text": "thanks for the info :GWcmeisterPeepoLove:"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-15T19:08:59.685000",
                        "user": "Dominik",
                        "text": "vscode keeps segfaulting on me for some reason"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-16T06:57:33.223000",
                        "user": "Dominik",
                        "text": "I was using doom some time before hmm.. let me check out their racket thingy"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-16T17:26:15.321000",
                        "user": "Dominik",
                        "text": "I just use _ for those"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-16T19:00:56.540000",
                        "user": "Dominik",
                        "text": "a variable you won\u2019t use"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-16T19:01:12.885000",
                        "user": "Dominik",
                        "text": "_x isn\u2019t used anywhere in the code it\u2019s just being bound to"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-16T19:01:48.095000",
                        "user": "Dominik",
                        "text": "but in this specific case it is also a counter yes"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-16T20:32:28.997000",
                        "user": "Karanveer",
                        "text": "`_` in some contexts is bound to a syntax parameter and will throw an error"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-16T20:33:00.197000",
                        "user": "Karanveer",
                        "text": "At least I think it is ... seems to be working at a plain REPL"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-16T20:33:51.721000",
                        "user": "Karanveer",
                        "text": "Oh I remember if you're binding more than one you need unique names otherwise you get a duplicate binding error."
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-16T20:40:55.255000",
                        "user": "Dominik",
                        "text": "oh interesting"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-16T20:41:18.164000",
                        "user": "Dominik",
                        "text": "I\u2019ve only ever bound one"
                    }
                ]
            },
            {
                "conversation_id": "72",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-14T19:30:23.224000",
                        "user": "Thaleia",
                        "text": "tugs at shirt's collar and fans face"
                    }
                ]
            },
            {
                "conversation_id": "73",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-15T17:39:20.315000",
                        "user": "Karanveer",
                        "text": "The DrRacket vim mode is a valiant attempt but there were problems last I tried using it (some of the programmed into my brain key combos didn't work right.) I don't think Asumu or Leif are actively maintaining it"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-15T17:44:22.367000",
                        "user": "Karanveer",
                        "text": "I use VSCode most of the time with the Magic Racket extension and Vim extensions. My workflow is pretty similar to a vim workflow of bouncing between editor and terminal to run `racket` or `raco test p $whatimworkingon` or `raco setup Dmv pkgs $whatimworkingon`Magic Racket can open a file in racket and `,enter` the module for you which is convenient.I also have some build and test tasks for individual projects in VSCode which does the nice jump to problem error matching bit but I don't know how to package that up to be used in an extension."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-15T17:45:04.651000",
                        "user": "Karanveer",
                        "text": "I also keep a DrRacket open on pretty much every computer here to try something out."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-15T19:26:16.315000",
                        "user": "Karanveer",
                        "text": "If you are stumped making passwords for your Zoom meetings:```(define (zoompassword N) (for/fold ([s (~a (add1 (random 9)))])  ([_x (sub1 N)]) (~a s (random 10))))```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-15T21:47:43.913000",
                        "user": "Huxlee",
                        "text": "DOOM Emacs + Racket is a good workflow for me even though I don't know that much about Emacs"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-16T16:15:40.073000",
                        "user": "Karanveer",
                        "text": "It's a pythonism just a dummy variable unused otherwise"
                    }
                ]
            },
            {
                "conversation_id": "74",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-16T15:40:12.470000",
                        "user": "Huxlee",
                        "text": "@oaktownsam what's the _x in the snippet you made for the Zoom passwords?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-16T15:40:30.141000",
                        "user": "Huxlee",
                        "text": "On the third line"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-16T17:44:52.248000",
                        "user": "Huxlee",
                        "text": "Ah I see like a counter?"
                    }
                ]
            },
            {
                "conversation_id": "75",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-16T20:58:25.944000",
                        "user": "Keyonni",
                        "text": "```racket(let ((x 5) (y (+ 1 x))) ...)```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-16T20:58:34.425000",
                        "user": "Keyonni",
                        "text": "Is there a way to get something like this to work?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-16T21:05:27.479000",
                        "user": "Rio",
                        "text": "e.g.```lisp> (let ((x 1)) (let ((y (+ 1 x))) y))2```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-17T01:21:50.853000",
                        "user": "Reeyansh",
                        "text": "use `define`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-17T01:37:36.820000",
                        "user": "Rio",
                        "text": "does define have a form for binding multiple symbols in one statement?"
                    }
                ]
            },
            {
                "conversation_id": "76",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-16T21:04:29.269000",
                        "user": "Rio",
                        "text": "I'm hoping others that are more experienced will weigh in but from some experiments I was playing with yesterday it seems like you'd have to use that variable in the scope"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-16T21:20:35.363000",
                        "user": "Rio",
                        "text": "I take that back  I think `let` is what you want:```lisp> (let ((x 1) (y (+ 1 x))) y)x: undefined; cannot reference an identifier before its definition> (let ((x 1) (y (+ 1 x))) y)2```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-16T22:08:58.558000",
                        "user": "Kire",
                        "text": "Yes `let` allows you to access previous bindings"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-16T22:11:59.202000",
                        "user": "Kire",
                        "text": "And you can use `letrec` to access bindings recursively  this is the example from the Racket documentation:```scheme(letrec ([iseven? (lambda (n) (or (zero? n) (isodd? (sub1 n))))] [isodd? (lambda (n) (and (not (zero? n)) (iseven? (sub1 n))))]) (isodd? 11))```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-16T22:12:17.023000",
                        "user": "Kire",
                        "text": "Personally never used `letrec` but `let` is very helpful"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-17T01:49:07.876000",
                        "user": "Thaleia",
                        "text": "`definevalues`"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-17T01:49:28.997000",
                        "user": "Reeyansh",
                        "text": "also `matchdefine`"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-17T01:49:57.837000",
                        "user": "Thaleia",
                        "text": "eg```Scheme(definevalues (a b c d e f) (apply values (range 6)))```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-17T01:50:51.021000",
                        "user": "Reeyansh",
                        "text": "or```(matchdefine (list a b c d e f) (range 6))```"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-17T01:51:22.003000",
                        "user": "Thaleia",
                        "text": "Yeah!"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-17T01:51:50.132000",
                        "user": "Thaleia",
                        "text": "`matchdefine` is much more versatile for assigning dynamically computed values."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-17T01:52:00.842000",
                        "user": "Thaleia",
                        "text": "Underused imo"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-17T01:53:51.316000",
                        "user": "Reeyansh",
                        "text": "And it works with transparent structs automatically```scheme(struct point (x y) #:transparent)(matchdefine (point a b) (point 5 7)); a = 5 b = 7```"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-17T01:55:22.871000",
                        "user": "Rio",
                        "text": "and is there a way to use that like `let` where each binding is done before the next e.g. something like `(matchdefine (list x y) (1 (+ 1 x)))`?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-17T01:55:54.433000",
                        "user": "Reeyansh",
                        "text": "No. Just put each define on it's own line. It's more readable that way anyway."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-17T01:56:39.084000",
                        "user": "Reeyansh",
                        "text": "```(define x 1)(define y (+ x 1))```"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-17T02:01:17.240000",
                        "user": "Thaleia",
                        "text": "It can get pretty verbose when your entire file is 700 lines of `define`s (eg painstakingly handwriting API endpoints). You can write a macro to mimic behaviour of CL's `setq` then.```Scheme(definesyntax defines ((_ id val) (define id val)) ((_ id val id val rest ...) (begin (define id val) (defines id val rest ...)))))```"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-17T02:01:33.445000",
                        "user": "Thaleia",
                        "text": "Not that I had to deal with this exact same problem before no sirree"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-17T02:02:09.684000",
                        "user": "Reeyansh",
                        "text": "I don't think it helps. Each definition still ends up taking a line."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-17T02:02:45.203000",
                        "user": "Thaleia",
                        "text": "I find it easier to read without an endless column of bright green `define` distracting me. :P"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-17T02:04:26.998000",
                        "user": "Reeyansh",
                        "text": "I find it easier to read _with_ the `define` column. The alternative has more haphazard indentation. My personal coding style is a lot less indentationhappy than most lispy code."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-17T02:04:54.182000",
                        "user": "Thaleia",
                        "text": "Huh. Interesting."
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-17T02:05:09.450000",
                        "user": "Thaleia",
                        "text": "I'm spoilt by paredit I suppose."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-17T02:06:11.676000",
                        "user": "Reeyansh",
                        "text": "Examples: https://github.com/jackfirth/rebellion/blob/master/private/atomicfixnum.rkt"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-17T02:06:30.912000",
                        "user": "Reeyansh",
                        "text": "Part of it is that I also avoid long functions"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-17T02:07:07.809000",
                        "user": "Thaleia",
                        "text": "That's fairly readable indeed."
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-17T02:07:31.472000",
                        "user": "Thaleia",
                        "text": "Your style is a fine example of Racket style IMO."
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-17T02:08:17.157000",
                        "user": "Reeyansh",
                        "text": "It's heavily influenced by Googlestyle Java interestingly"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-17T02:09:27.563000",
                        "user": "Thaleia",
                        "text": "My style is covered in old Scheme style though. `let` over `define` no square brackets `if` over `cond`"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-17T02:09:30.778000",
                        "user": "Reeyansh",
                        "text": "Specifically the Rectangle Rule https://github.com/google/googlejavaformat/wiki/TheRectangleRule"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-17T02:10:18.720000",
                        "user": "Reeyansh",
                        "text": "Yeah portable scheme has a totally different flavor"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-17T02:10:43.306000",
                        "user": "Thaleia",
                        "text": "But some good Racketisms stuck with me. For instance I went back to replace onearmed `if`s with `when` in my old Scheme code after I got used to Racket."
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-17T02:11:18.768000",
                        "user": "Reeyansh",
                        "text": "Yeah differentiating between conditional expressions and conditional statements is so useful"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-17T02:11:28.478000",
                        "user": "Thaleia",
                        "text": "Mhm"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-17T02:13:29.866000",
                        "user": "Reeyansh",
                        "text": "Oh back to the point about multiple definitions in one statement: I completely forgot to mention `local`"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-17T02:14:41.060000",
                        "user": "Reeyansh",
                        "text": "```scheme(local [(define x 1) (define y (+ x 1))] (+ x y))```"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-17T02:17:23.354000",
                        "user": "Reeyansh",
                        "text": "When I really need definitions scoped to a particular expression (usually because I need `splicing` of some kind) I prefer `local` over `let` so that the syntax is consistent. It's useful to be about to cut and paste definitions between local scopes function scopes module scopes and the REPL"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-17T02:17:49.516000",
                        "user": "Reeyansh",
                        "text": "plus it's easier to teach"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-20T18:31:32.098000",
                        "user": "Reeyansh",
                        "text": "It's much much faster than python. I know less about how it compares to the other two."
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-20T18:42:16.098000",
                        "user": "Reeyansh",
                        "text": "No each `#lang` expands to base Racket code. The runtime performance of the `#lang` is entirely determined by what it expands to. So how fast a custom language runs depends on how well you optimized the expanded code it produces."
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-20T18:46:03.754000",
                        "user": "Reeyansh",
                        "text": "The only limitation is that the first part of the file must be `#lang yourlanguagename` and language names have to fit a pretty restricted grammar (no whitespace and only ascii az AZ and numbers I think)"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-20T18:46:41.303000",
                        "user": "Reeyansh",
                        "text": "But the rest of the file can be anything you want. Your language has full control over reading each character in the file and parsing it however it wants. It just has to _output_ regular racket code."
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-20T18:47:48.815000",
                        "user": "Devonna",
                        "text": "are there any tutorials other than the docs on the official page? I admit I spent ages looking for you know that perfect programming language and the idea of writing one appeals a lot... even if it\\'s just a toy DSL of the create Component A and affix it to Entity X kind \ud83d\ude1b"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-20T18:52:49.932000",
                        "user": "Reeyansh",
                        "text": "for DSL creation especially `#lang` creation Beautiful Racket is by far the best resource I know of"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-20T18:58:59.086000",
                        "user": "Devonna",
                        "text": "thanks! \u2764\ufe0f"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-20T18:59:18.350000",
                        "user": "Reeyansh",
                        "text": "welcome! link here: https://beautifulracket.com/"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-20T19:14:25.759000",
                        "user": "Devonna",
                        "text": "final q for the day how does one distribute Racket programs? I know Common Lisp can compile to C but e.g. Python distribution is a huge pita..."
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-20T19:19:33.458000",
                        "user": "Reeyansh",
                        "text": "There's a `raco distribute` command that bundles up a racket program into something you can ship to other computers and run. It's not a single binary though it's a binary plus a folder that contains whatever foreign libraries or static files the binary needs."
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-20T19:20:07.184000",
                        "user": "Reeyansh",
                        "text": "There's also some Docker images if you know how to use Docker. Those are good for shipping racket code to servers and serverlike environments."
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-20T19:20:43.039000",
                        "user": "Reeyansh",
                        "text": "the docker images are on Docker Hub under the name `jackfirth/racket` (I made them)"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-21T05:53:05.675000",
                        "user": "Dominik",
                        "text": "racket uses contracts liberally though so it probably won\u2019t be as fast :GWseremePeepoThink:"
                    }
                ]
            },
            {
                "conversation_id": "77",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-20T18:25:44.335000",
                        "user": "Devonna",
                        "text": "how does Racket compare to Common Lisp/Python/Lua re: speed? are various #lang languages somehow affected (e.g. slower)?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-20T18:36:19.871000",
                        "user": "Devonna",
                        "text": "good to know. and are the #languages slower? eg. pyret or stacker?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-20T18:41:51.413000",
                        "user": "Thaleia",
                        "text": "I think Racket is faster than vanilla Lua but not LuaJIT."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-20T18:44:51.336000",
                        "user": "Devonna",
                        "text": "wow that's awesome! any limitations on the syntax? (e.g. can I get rid of the ( ) and use whitespace for instance or am I limited to Rackety/Lispy syntax)"
                    }
                ]
            },
            {
                "conversation_id": "78",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-21T05:46:07.210000",
                        "user": "Dominik",
                        "text": "@Zireael racket is slower than common lisp for nowthe racket backend will be chez scheme now which is comparable to CL in speed  so there\u2019s potential of being as fast as CL"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-21T05:46:20.371000",
                        "user": "Dominik",
                        "text": "but you know first make it correct then make it fast"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-21T06:00:43.273000",
                        "user": "Thaleia",
                        "text": "I assume you're talking about SBCL in particular."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-21T06:00:51.367000",
                        "user": "Thaleia",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-21T06:05:31.148000",
                        "user": "Dominik",
                        "text": "sbcl ccl"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-21T06:05:43.101000",
                        "user": "Dominik",
                        "text": "maybe the llvm one"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-21T06:06:26.899000",
                        "user": "Dominik",
                        "text": "in CL you can also do stuff like this http://pvk.ca/Blog/2014/03/15/sbcltheultimateassemblycodebreadboard/"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-21T06:06:35.664000",
                        "user": "Dominik",
                        "text": "I doubt it\u2019s possible in racket"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-21T06:50:41.861000",
                        "user": "Dominik",
                        "text": "@Zireael it's faster only on one benchmark what do you mean?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-21T06:51:01.434000",
                        "user": "Dominik",
                        "text": "also benchmarks game doesn't really reflect how fast the language is in real life anymore"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-21T06:51:51.340000",
                        "user": "Dominik",
                        "text": "it's always good to look at the source"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-21T06:52:04.147000",
                        "user": "Dominik",
                        "text": "for example the benchmark in which racket is faster"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-21T06:52:15.708000",
                        "user": "Dominik",
                        "text": "https://benchmarksgameteam.pages.debian.net/benchmarksgame/program/pidigitssbcl3.htmlthe sbcl program is pretty normal lisp"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-21T06:52:34.161000",
                        "user": "Dominik",
                        "text": "https://benchmarksgameteam.pages.debian.net/benchmarksgame/program/pidigitsracket2.htmlthe racket one is super optimized with pointers and stuff"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-21T06:53:55.893000",
                        "user": "Devonna",
                        "text": "I'm not super married to Racket \ud83d\ude1b it drew my eye because of #lang is something like it doable with CommonLisp?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-21T06:54:25.889000",
                        "user": "Dominik",
                        "text": "though seems like racket just binds to gmp with ffi.. whereas CL has bindings already"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-21T06:54:48.079000",
                        "user": "Dominik",
                        "text": "if speed is that important to you I'd recommend rust"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-21T06:55:29.137000",
                        "user": "Dominik",
                        "text": "and everything is doable in every language (turing completeness) the question is  would it be easy or not"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-21T06:55:42.585000",
                        "user": "Dominik",
                        "text": "racket is the programming language programming language"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-21T06:56:46.732000",
                        "user": "Dominik",
                        "text": "you can achieve similar results in CL but it will be more difficult to do and you won't be able to use languages from racket other people have made"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-21T06:57:29.191000",
                        "user": "Devonna",
                        "text": "I tried Rust and I'm currently doing Dlang but I think I would be much more productive in a scripting language and all Lisps have the superpowered REPL compared to Python/Lua"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-21T06:58:56.903000",
                        "user": "Dominik",
                        "text": "the most overpowered repl is the CL one"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-21T06:59:07.880000",
                        "user": "Dominik",
                        "text": "you get conditions and restarts"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-21T07:00:07.130000",
                        "user": "Dominik",
                        "text": "in racket the repl is unimpressive as far as lisps go"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-21T07:03:02.036000",
                        "user": "Dominik",
                        "text": "that's what CL gets you"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-21T07:03:03.477000",
                        "user": "Dominik",
                        "text": "https://www.youtube.com/watch?v=6pMyhrDcMzw"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-21T07:03:34.244000",
                        "user": "Dominik",
                        "text": "unlimited power eh"
                    }
                ]
            },
            {
                "conversation_id": "79",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-21T06:33:35.336000",
                        "user": "Devonna",
                        "text": "@sarna that's interesting because benchmarks I found show racket as faster: https://benchmarksgameteam.pages.debian.net/benchmarksgame/fastest/racket.html"
                    }
                ]
            },
            {
                "conversation_id": "80",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-21T07:20:17.024000",
                        "user": "Devonna",
                        "text": "wow cool. where do I find real benchmarks between lisp and racket then? I'm curious what the performance difference really is whether the ease of making languages is worth being slower..."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-21T07:22:21.672000",
                        "user": "Dominik",
                        "text": "what do you mean real benchmarks\"?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-21T07:24:27.639000",
                        "user": "Devonna",
                        "text": "where the programs are roughly equally optimized not like the ones on benchmark game"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-21T07:44:34.819000",
                        "user": "Dominik",
                        "text": "you can try writing the same program in both"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-21T07:44:37.529000",
                        "user": "Dominik",
                        "text": "and benchmark that"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-21T07:56:13.176000",
                        "user": "Devonna",
                        "text": "I don't know enough of either to do that... and reading on CL is the unlimited power you showed only with whatever the Emacs support is named or can I get the same awesome in other IDE?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-21T08:00:30.622000",
                        "user": "Dominik",
                        "text": "I know about a plugin for atom it\u2019s called SLIMA"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-21T08:00:35.267000",
                        "user": "Dominik",
                        "text": "didn\u2019t use it though"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-21T08:01:44.191000",
                        "user": "Devonna",
                        "text": "(just remembered I'll probably be using bindings to a C dll/so library so does using those introduce any problems with REPL and recompiling?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-21T08:12:50.021000",
                        "user": "Dominik",
                        "text": "you won't recompile these though? I don't know what the problem would be"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-21T08:13:02.759000",
                        "user": "Dominik",
                        "text": "you just bind to them and that's it"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-21T12:17:55.808000",
                        "user": "Huxlee",
                        "text": "Maybe Smalltalk"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-21T12:18:12.861000",
                        "user": "Huxlee",
                        "text": "I know almost nothing about smalltalk though TBH"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-21T12:21:56.348000",
                        "user": "Huxlee",
                        "text": "And Python apparently :p"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-21T12:25:59.173000",
                        "user": "Macia",
                        "text": "And livelykernel / morphic"
                    }
                ]
            },
            {
                "conversation_id": "81",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-21T12:06:56.594000",
                        "user": "Huxlee",
                        "text": "My goal is to understand Racket then get to know the almost unbeatable LISP repl :)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-21T12:08:58.986000",
                        "user": "Dominik",
                        "text": "> almostwhat's first then? forth?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-21T12:09:04.907000",
                        "user": "Dominik",
                        "text": "lol"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-21T12:19:59.106000",
                        "user": "Macia",
                        "text": "Self  the small talk that influenced JavaScript and java"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-21T12:37:10.216000",
                        "user": "Dominik",
                        "text": "smalltalk doesn't have a repl"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-21T12:37:25.060000",
                        "user": "Dominik",
                        "text": "but people code in the debugger which is a similar experience"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-21T12:49:00.417000",
                        "user": "Macia",
                        "text": "> smalltalk doesn't have a repl@sarna I\u2019d argue that smalltalk doesn\u2019t need a repl!"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-21T12:49:22.094000",
                        "user": "Dominik",
                        "text": "well true"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-21T12:50:02.729000",
                        "user": "Dominik",
                        "text": "it has higher level features"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-21T12:51:50.614000",
                        "user": "Thaleia",
                        "text": "> I doubt it\u2019s possible in racket@sarna I don't see why not."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-21T12:52:16.328000",
                        "user": "Thaleia",
                        "text": "You can embed assembly into Racket code."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-21T12:53:19.088000",
                        "user": "Dominik",
                        "text": "yeah but there are a lot of sbclspecific features used there"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-21T12:54:02.941000",
                        "user": "Dominik",
                        "text": "they hook everything up to sbcl's virtual machine"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-21T12:54:24.570000",
                        "user": "Dominik",
                        "text": "maybe chez has something similar  but I'm sure it won't be documented"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-21T12:55:10.826000",
                        "user": "Thaleia",
                        "text": "Yeah you can reach into the guts of Chez but they don't want you to do that unless you know what you're doing."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-21T12:55:41.116000",
                        "user": "Dominik",
                        "text": "that's understandable  that's why these features are undocumented"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-21T12:58:16.464000",
                        "user": "Dominik",
                        "text": "does racket have anything like the `disassemble` function?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-21T12:58:42.286000",
                        "user": "Thaleia",
                        "text": "Oh wow it's not documented at all."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-21T12:58:56.962000",
                        "user": "Dominik",
                        "text": "https://www.reddit.com/r/scheme/comments/4j2gyr/how_to_inspect_generated_machine_code_in_chez/"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-21T12:59:02.289000",
                        "user": "Dominik",
                        "text": "9 points no answers"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-21T12:59:13.356000",
                        "user": "Dominik",
                        "text": "yes that's what I meant by undocumented"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-21T12:59:15.600000",
                        "user": "Thaleia",
                        "text": "`ffi/unsafe` is fairly well documented but `ffi/unsafe/vm` isn't mentioned once."
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-21T12:59:27.007000",
                        "user": "Thaleia",
                        "text": "I thought they'd at least list it there."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-21T12:59:34.719000",
                        "user": "Dominik",
                        "text": ":^)"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-21T13:01:05.770000",
                        "user": "Dominik",
                        "text": "https://github.com/samth/disassemble/blob/master/README.md there's this but I don't think it works on the chez backend"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-21T13:01:35.850000",
                        "user": "Dominik",
                        "text": "> for JITed functionsafaik chez isn't jited"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-21T13:01:52.873000",
                        "user": "Thaleia",
                        "text": "https://github.com/samth/disassemble/blob/2bf2d8c5dc07ec535ba008c7585c6d5cb12d10e6/disassemble/vm.rkt#L12"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-21T13:02:19.224000",
                        "user": "Dominik",
                        "text": "uwu"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-21T13:02:22.806000",
                        "user": "Dominik",
                        "text": "that's neat"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-21T13:02:57.020000",
                        "user": "Dominik",
                        "text": "now we only need a mutable repl and a condition system"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-21T13:05:49.973000",
                        "user": "Thaleia",
                        "text": "The former is easy."
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-21T13:05:51.051000",
                        "user": "Dominik",
                        "text": "I mean don't get me wrong I think racket is a better language than CL"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-21T13:06:01.689000",
                        "user": "Dominik",
                        "text": "but if you're after THE ABSOLUTE POWER common lisp is the way"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-21T13:06:21.444000",
                        "user": "Thaleia",
                        "text": "It's frowned upon in Racket but `(compileenforcemoduleconstants #f)`"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-21T13:06:55.124000",
                        "user": "Dominik",
                        "text": "yeah I tried that still couldn't modify the gui on the fly like in CL :("
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-21T13:07:08.726000",
                        "user": "Thaleia",
                        "text": "Hmm"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-21T13:07:20.252000",
                        "user": "Thaleia",
                        "text": "Do you remember what went wrong?"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-21T13:07:23.107000",
                        "user": "Dominik",
                        "text": "I think the closures are compiled and not replaced"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-21T13:07:27.669000",
                        "user": "Thaleia",
                        "text": "Ah"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-21T13:07:33.464000",
                        "user": "Dominik",
                        "text": "not sure though"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-21T13:07:47.380000",
                        "user": "Dominik",
                        "text": "I'm still a racket noob and idk how to debug this"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-21T13:07:56.186000",
                        "user": "Thaleia",
                        "text": "On RacketBC right?"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-21T13:08:01.432000",
                        "user": "Dominik",
                        "text": "yeah"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-21T13:08:26.065000",
                        "user": "Dominik",
                        "text": "I mean I was only able to send messages to the gui in the repl"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-21T13:08:50.981000",
                        "user": "Dominik",
                        "text": "but I couldn't for example replace the callback that's run after a button is pressed"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-21T13:09:18.030000",
                        "user": "Dominik",
                        "text": "I think when I recompiled the button it referred to another brand new button :( not to the first one"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-21T13:09:41.457000",
                        "user": "Dominik",
                        "text": "it's probably better default behavior but yeah"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-21T13:12:13.687000",
                        "user": "Thaleia",
                        "text": "Also I think you can implement conditions in Racket with few lines of code using continuations but it'd be really expensive probably."
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-21T13:14:03.868000",
                        "user": "Dominik",
                        "text": "yeah I thought about doing that when I finally grok continuations"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-21T13:14:16.839000",
                        "user": "Dominik",
                        "text": "on chez continuations are pretty cheap"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-21T13:15:23.805000",
                        "user": "Thaleia",
                        "text": "They're practically free on CHICKEN so I'm surprised nobody implemented them there."
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-21T13:15:38.922000",
                        "user": "Thaleia",
                        "text": "Especially considering how CLlike CHICKEN is."
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-21T13:15:43.926000",
                        "user": "Dominik",
                        "text": "MIT scheme has conditions but they're really buggy"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-21T13:16:07.309000",
                        "user": "Dominik",
                        "text": "after aborting 25% of my CPU continues being eaten"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-21T13:16:07.418000",
                        "user": "Thaleia",
                        "text": "And nobody uses them according to devs."
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-21T13:16:17.057000",
                        "user": "Dominik",
                        "text": "oh well"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-21T13:16:45.339000",
                        "user": "Dominik",
                        "text": "btw in which aspect is chicken cllike?"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-21T13:17:06.806000",
                        "user": "Dominik",
                        "text": "I didn't find it more clish than other schemes I tried"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-04-21T13:17:26.277000",
                        "user": "Thaleia",
                        "text": "It has very strong CL influences in the way it does things."
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-04-21T13:17:37.699000",
                        "user": "Thaleia",
                        "text": "For instance it's got read macros and compiler macros."
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-04-21T13:17:56.620000",
                        "user": "Thaleia",
                        "text": "It has a version of `defsystem`."
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-04-21T13:18:28.219000",
                        "user": "Thaleia",
                        "text": "It likes unhygienic macros and encourages the use of auto`gensym` (implicit renaming) in macros."
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-04-21T13:19:14.142000",
                        "user": "Thaleia",
                        "text": "It has quite a few builtin read macros like `#+` (expands to `condexpand`)."
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-04-21T13:19:33.081000",
                        "user": "Thaleia",
                        "text": "The internal code style is also reminiscent."
                    },
                    {
                        "message_number": "65",
                        "ts": "2020-04-21T13:19:35.549000",
                        "user": "Dominik",
                        "text": "oh didn't know it had unhygienic macros"
                    },
                    {
                        "message_number": "66",
                        "ts": "2020-04-21T13:20:03.726000",
                        "user": "Thaleia",
                        "text": "Check out explicit renaming macros. It's like a step up from `defmacro`."
                    },
                    {
                        "message_number": "67",
                        "ts": "2020-04-21T13:20:14.637000",
                        "user": "Dominik",
                        "text": "\ud83d\udc40"
                    },
                    {
                        "message_number": "68",
                        "ts": "2020-04-21T13:20:22.818000",
                        "user": "Thaleia",
                        "text": "It doesn't attempt to be very functional. It does things imperatively and mutatively."
                    },
                    {
                        "message_number": "69",
                        "ts": "2020-04-21T13:20:22.949000",
                        "user": "Dominik",
                        "text": "chicken is pretty slow though no?"
                    },
                    {
                        "message_number": "70",
                        "ts": "2020-04-21T13:20:32.255000",
                        "user": "Thaleia",
                        "text": "Well comparatively."
                    },
                    {
                        "message_number": "71",
                        "ts": "2020-04-21T13:20:39.097000",
                        "user": "Dominik",
                        "text": "to other schemes at least"
                    },
                    {
                        "message_number": "72",
                        "ts": "2020-04-21T13:20:41.345000",
                        "user": "Thaleia",
                        "text": "It's still pretty fast for most tasks."
                    },
                    {
                        "message_number": "73",
                        "ts": "2020-04-21T13:20:50.522000",
                        "user": "Dominik",
                        "text": "faster than python :GWcmeisterPeepoEZ:"
                    },
                    {
                        "message_number": "74",
                        "ts": "2020-04-21T13:21:10.550000",
                        "user": "Thaleia",
                        "text": "Its greatest performance advantage is that continuations are practically free thanks to Cheney on the MTA."
                    },
                    {
                        "message_number": "75",
                        "ts": "2020-04-21T13:21:38.140000",
                        "user": "Dominik",
                        "text": "otoh I heard that if you use continuations liberally you'll run into weird problems"
                    },
                    {
                        "message_number": "76",
                        "ts": "2020-04-21T13:22:28.558000",
                        "user": "Dominik",
                        "text": "eh so many schemes so little time"
                    },
                    {
                        "message_number": "77",
                        "ts": "2020-04-21T13:23:04.397000",
                        "user": "Thaleia",
                        "text": "CHICKEN was my first Scheme!"
                    },
                    {
                        "message_number": "78",
                        "ts": "2020-04-21T13:23:21.518000",
                        "user": "Thaleia",
                        "text": "I eventually switched to Racket because I'm a functional programmer at heart."
                    },
                    {
                        "message_number": "79",
                        "ts": "2020-04-21T13:23:31.708000",
                        "user": "Dominik",
                        "text": "even if I pick a scheme I can't stick to one because they don't have the libs for most of the useful stuff :GWsetmyxPeepoCry: so now I'm making a thing in reasonml"
                    },
                    {
                        "message_number": "80",
                        "ts": "2020-04-21T13:23:59.266000",
                        "user": "Thaleia",
                        "text": "CHICKEN has some really strong points such as the capability of trivially inlining C. You can even import C headers willy nilly."
                    },
                    {
                        "message_number": "81",
                        "ts": "2020-04-21T13:24:27.183000",
                        "user": "Thaleia",
                        "text": "Yeah I profess to be a Clojure programmer professionally."
                    },
                    {
                        "message_number": "82",
                        "ts": "2020-04-21T13:24:47.601000",
                        "user": "Dominik",
                        "text": "how's functional programming in dynamic langs? I've mostly programmed in statically typed ones and my racket experience is writing like three programs lol"
                    },
                    {
                        "message_number": "83",
                        "ts": "2020-04-21T13:24:59.783000",
                        "user": "Dominik",
                        "text": "ew clojure"
                    },
                    {
                        "message_number": "84",
                        "ts": "2020-04-21T13:25:14.580000",
                        "user": "Dominik",
                        "text": "typo in a hashmap 300line stack trace day ruined"
                    },
                    {
                        "message_number": "85",
                        "ts": "2020-04-21T13:25:45.658000",
                        "user": "Thaleia",
                        "text": "Oh and CHICKEN does firstclass keywords."
                    },
                    {
                        "message_number": "86",
                        "ts": "2020-04-21T13:25:59.309000",
                        "user": "Thaleia",
                        "text": "Instead of using quoted symbols for everything."
                    },
                    {
                        "message_number": "87",
                        "ts": "2020-04-21T13:26:15.083000",
                        "user": "Dominik",
                        "text": "doesn't racket have firstclass keywords?"
                    },
                    {
                        "message_number": "88",
                        "ts": "2020-04-21T13:26:15.442000",
                        "user": "Thaleia",
                        "text": "And it lets you use plists and symbol tables."
                    },
                    {
                        "message_number": "89",
                        "ts": "2020-04-21T13:26:19.029000",
                        "user": "Thaleia",
                        "text": "Nope."
                    },
                    {
                        "message_number": "90",
                        "ts": "2020-04-21T13:26:26.601000",
                        "user": "Thaleia",
                        "text": "You can't use keywords as values."
                    },
                    {
                        "message_number": "91",
                        "ts": "2020-04-21T13:26:27.469000",
                        "user": "Dominik",
                        "text": "what are those then? #:something"
                    },
                    {
                        "message_number": "92",
                        "ts": "2020-04-21T13:26:29.082000",
                        "user": "Dominik",
                        "text": "ah"
                    },
                    {
                        "message_number": "93",
                        "ts": "2020-04-21T13:26:32.628000",
                        "user": "Dominik",
                        "text": "right"
                    },
                    {
                        "message_number": "94",
                        "ts": "2020-04-21T13:26:43.765000",
                        "user": "Thaleia",
                        "text": "They're only for kwargs in funcalls."
                    },
                    {
                        "message_number": "95",
                        "ts": "2020-04-21T13:27:00.109000",
                        "user": "Dominik",
                        "text": "confused about the definition of firstclass \ud83e\udd26\\u200d\u2642\ufe0f"
                    },
                    {
                        "message_number": "96",
                        "ts": "2020-04-21T13:27:10.010000",
                        "user": "Thaleia",
                        "text": "No worries haha"
                    },
                    {
                        "message_number": "97",
                        "ts": "2020-04-21T13:27:24.039000",
                        "user": "Thaleia",
                        "text": "WRT FP in dynlangs honestly there are only two schools of thought here."
                    },
                    {
                        "message_number": "98",
                        "ts": "2020-04-21T13:27:33.460000",
                        "user": "Thaleia",
                        "text": "Lisp and Erlang"
                    },
                    {
                        "message_number": "99",
                        "ts": "2020-04-21T13:27:52.672000",
                        "user": "Thaleia",
                        "text": "I do Clojure and Scheme and I'm learning Elixir."
                    },
                    {
                        "message_number": "100",
                        "ts": "2020-04-21T13:28:28.198000",
                        "user": "Dominik",
                        "text": "elixir is pretty lispy isn't itthough it's good at hiding it"
                    },
                    {
                        "message_number": "101",
                        "ts": "2020-04-21T13:28:31.776000",
                        "user": "Thaleia",
                        "text": "I find this approach of FP to be very flexible and expressive."
                    },
                    {
                        "message_number": "102",
                        "ts": "2020-04-21T13:29:02.842000",
                        "user": "Thaleia",
                        "text": "Yeah haha. I like how it's got atoms."
                    },
                    {
                        "message_number": "103",
                        "ts": "2020-04-21T13:29:06.430000",
                        "user": "Thaleia",
                        "text": "Err"
                    },
                    {
                        "message_number": "104",
                        "ts": "2020-04-21T13:29:26.639000",
                        "user": "Thaleia",
                        "text": "I should clarify that in Erlang atoms are symbols (interned immutable strings)."
                    },
                    {
                        "message_number": "105",
                        "ts": "2020-04-21T13:29:40.794000",
                        "user": "Thaleia",
                        "text": "What other languages call symbols or keywords."
                    },
                    {
                        "message_number": "106",
                        "ts": "2020-04-21T13:30:00.879000",
                        "user": "Thaleia",
                        "text": "Confusingly enough Clojure uses atoms to mean boxes."
                    },
                    {
                        "message_number": "107",
                        "ts": "2020-04-21T13:30:25.990000",
                        "user": "Thaleia",
                        "text": "Instead of the traditional Lisp meaning of nonpair."
                    },
                    {
                        "message_number": "108",
                        "ts": "2020-04-21T13:30:29.389000",
                        "user": "Dominik",
                        "text": "to me dynamic typing kinda feels like something which only creates problems giving you practically nothing"
                    },
                    {
                        "message_number": "109",
                        "ts": "2020-04-21T13:30:37.511000",
                        "user": "Dominik",
                        "text": "yeah atoms in clojure are mutable refs right?"
                    },
                    {
                        "message_number": "110",
                        "ts": "2020-04-21T13:30:38.226000",
                        "user": "Dominik",
                        "text": "iirc"
                    },
                    {
                        "message_number": "111",
                        "ts": "2020-04-21T13:30:43.294000",
                        "user": "Thaleia",
                        "text": "Yeah"
                    },
                    {
                        "message_number": "112",
                        "ts": "2020-04-21T13:31:20.263000",
                        "user": "Dominik",
                        "text": "dynamic typing  worse editor support worse docs (usually) easily avoided runtime errorsbenefits  ?????"
                    },
                    {
                        "message_number": "113",
                        "ts": "2020-04-21T13:31:33.435000",
                        "user": "Dominik",
                        "text": "that's how it looks for meand idk how to get out of that mindset lol"
                    },
                    {
                        "message_number": "114",
                        "ts": "2020-04-21T13:31:48.058000",
                        "user": "Thaleia",
                        "text": "I think the benefits of static typing are way overblown. I don't deny that they're useful not only for modelling the language but also for static analysis."
                    },
                    {
                        "message_number": "115",
                        "ts": "2020-04-21T13:32:19.023000",
                        "user": "Thaleia",
                        "text": "But that's it. You need to use other things for those things as well. It's not a golden hammer but people sure love treating it as one."
                    },
                    {
                        "message_number": "116",
                        "ts": "2020-04-21T13:33:13.928000",
                        "user": "Dominik",
                        "text": "now it's very fashionable to bash dynamically typed langs that doesn't help either"
                    },
                    {
                        "message_number": "117",
                        "ts": "2020-04-21T13:33:52.565000",
                        "user": "Thaleia",
                        "text": "It also gets in your way of expressiveness and you often need to work around the restrictions. I found that a good portion of programming in Haskell was just working around the language getting in your way."
                    },
                    {
                        "message_number": "118",
                        "ts": "2020-04-21T13:33:55.640000",
                        "user": "Dominik",
                        "text": "maybe I should stop reading HN :GWseremePeepoThink: would be a good choice for my overall mental health"
                    },
                    {
                        "message_number": "119",
                        "ts": "2020-04-21T13:34:01.408000",
                        "user": "Thaleia",
                        "text": "(I like OCaml better.)"
                    },
                    {
                        "message_number": "120",
                        "ts": "2020-04-21T13:34:10.055000",
                        "user": "Dominik",
                        "text": "yep ocaml is pretty sweet"
                    },
                    {
                        "message_number": "121",
                        "ts": "2020-04-21T13:34:38.056000",
                        "user": "Thaleia",
                        "text": "> now it's very fashionable to bash dynamically typed langs that doesn't help eitherI think that's reminiscent of how people used to love to hate on garbage collected languages because the only ones they used were garbage."
                    },
                    {
                        "message_number": "122",
                        "ts": "2020-04-21T13:34:59.987000",
                        "user": "Thaleia",
                        "text": "(couldn't help it sorry)"
                    },
                    {
                        "message_number": "123",
                        "ts": "2020-04-21T13:35:13.782000",
                        "user": "Thaleia",
                        "text": "And yes Orange Website bad."
                    },
                    {
                        "message_number": "124",
                        "ts": "2020-04-21T13:35:38.788000",
                        "user": "Thaleia",
                        "text": "My quality of life improved ever since I stopped reading that wobsite and started reading ngate instead."
                    },
                    {
                        "message_number": "125",
                        "ts": "2020-04-21T13:35:49.306000",
                        "user": "Dominik",
                        "text": "what's ngate?"
                    },
                    {
                        "message_number": "126",
                        "ts": "2020-04-21T13:36:05.453000",
                        "user": "Thaleia",
                        "text": "Weekly summary of top Hacker News posts."
                    },
                    {
                        "message_number": "127",
                        "ts": "2020-04-21T13:36:12.284000",
                        "user": "Thaleia",
                        "text": "http://ngate.com"
                    },
                    {
                        "message_number": "128",
                        "ts": "2020-04-21T13:36:35.666000",
                        "user": "Dominik",
                        "text": "lol"
                    },
                    {
                        "message_number": "129",
                        "ts": "2020-04-21T13:36:36.765000",
                        "user": "Dominik",
                        "text": "neat"
                    },
                    {
                        "message_number": "130",
                        "ts": "2020-04-21T13:36:56.755000",
                        "user": "Dominik",
                        "text": "btw thanks for talking to me I was having a pretty shitty day and now I\u2019m a bit better \ud83d\ude47\\u200d\u2642\ufe0f"
                    },
                    {
                        "message_number": "131",
                        "ts": "2020-04-21T13:37:16.246000",
                        "user": "Thaleia",
                        "text": "Aww happy to hear that."
                    },
                    {
                        "message_number": "132",
                        "ts": "2020-04-21T13:37:35.474000",
                        "user": "Dominik",
                        "text": "it\u2019s quarantine and I don\u2019t have frickin have running water"
                    },
                    {
                        "message_number": "133",
                        "ts": "2020-04-21T13:37:46.099000",
                        "user": "Thaleia",
                        "text": "Ouch"
                    },
                    {
                        "message_number": "134",
                        "ts": "2020-04-21T13:37:48.928000",
                        "user": "Thaleia",
                        "text": "That sucks."
                    },
                    {
                        "message_number": "135",
                        "ts": "2020-04-21T13:38:09.354000",
                        "user": "Dominik",
                        "text": "yeah idk who thought maintenance works at this point in time would be a good idea"
                    },
                    {
                        "message_number": "136",
                        "ts": "2020-04-21T13:38:37.016000",
                        "user": "Dominik",
                        "text": "so the only things I ate today are toast and some takeout :GWvertiPeepoSadMan:"
                    },
                    {
                        "message_number": "137",
                        "ts": "2020-04-21T13:38:48.856000",
                        "user": "Thaleia",
                        "text": "\ud83d\ude14"
                    },
                    {
                        "message_number": "138",
                        "ts": "2020-04-21T13:39:07.025000",
                        "user": "Dominik",
                        "text": "btw is there any scheme that can compile to JS nicely?"
                    },
                    {
                        "message_number": "139",
                        "ts": "2020-04-21T13:39:18.338000",
                        "user": "Dominik",
                        "text": "except clojurescript"
                    },
                    {
                        "message_number": "140",
                        "ts": "2020-04-21T13:39:27.236000",
                        "user": "Thaleia",
                        "text": "That's no Scheme!"
                    },
                    {
                        "message_number": "141",
                        "ts": "2020-04-21T13:39:38.810000",
                        "user": "Thaleia",
                        "text": "There are a few but none of them are popular."
                    },
                    {
                        "message_number": "142",
                        "ts": "2020-04-21T13:39:39.145000",
                        "user": "Dominik",
                        "text": "racket>JS would be ideal tbh"
                    },
                    {
                        "message_number": "143",
                        "ts": "2020-04-21T13:39:44.274000",
                        "user": "Dominik",
                        "text": "ah \ud83d\ude14"
                    },
                    {
                        "message_number": "144",
                        "ts": "2020-04-21T13:39:46.885000",
                        "user": "Thaleia",
                        "text": "Schemers don't seem to like JS."
                    },
                    {
                        "message_number": "145",
                        "ts": "2020-04-21T13:40:02.202000",
                        "user": "Dominik",
                        "text": "idk what people even use lisp for"
                    },
                    {
                        "message_number": "146",
                        "ts": "2020-04-21T13:40:14.842000",
                        "user": "Dominik",
                        "text": "nobody does web dev nobody does GUIs nobody does mobile dev"
                    },
                    {
                        "message_number": "147",
                        "ts": "2020-04-21T13:40:15.486000",
                        "user": "Thaleia",
                        "text": "Have you tried RacketScript?"
                    },
                    {
                        "message_number": "148",
                        "ts": "2020-04-21T13:40:18.597000",
                        "user": "Dominik",
                        "text": "what are they doing?"
                    },
                    {
                        "message_number": "149",
                        "ts": "2020-04-21T13:40:30.603000",
                        "user": "Dominik",
                        "text": "I think it\u2019s still in alpha no?"
                    },
                    {
                        "message_number": "150",
                        "ts": "2020-04-21T13:40:44.209000",
                        "user": "Thaleia",
                        "text": "BRB"
                    },
                    {
                        "message_number": "151",
                        "ts": "2020-04-21T13:41:29.124000",
                        "user": "Dominik",
                        "text": "o7"
                    },
                    {
                        "message_number": "152",
                        "ts": "2020-04-21T13:42:06.801000",
                        "user": "Dominik",
                        "text": "> RacketScript doesn't support Racket features which are expensive for example proper tail calls and continuations.:GWvertiPeepoSadMan:"
                    },
                    {
                        "message_number": "153",
                        "ts": "2020-04-21T13:42:21.368000",
                        "user": "Dominik",
                        "text": "how to do loops in scheme without tail calls lol"
                    },
                    {
                        "message_number": "154",
                        "ts": "2020-04-21T13:43:32.581000",
                        "user": "Thaleia",
                        "text": "Back"
                    },
                    {
                        "message_number": "155",
                        "ts": "2020-04-21T13:43:49.198000",
                        "user": "Thaleia",
                        "text": "I think it converts `for` to JS directly."
                    },
                    {
                        "message_number": "156",
                        "ts": "2020-04-21T13:44:50.274000",
                        "user": "Adelynne",
                        "text": "Whalesong was a more comprehensive implementation of Racket>JS but was much slower from what I hear"
                    },
                    {
                        "message_number": "157",
                        "ts": "2020-04-21T13:44:53.787000",
                        "user": "Thaleia",
                        "text": "> nobody does web dev nobody does GUIs nobody does mobile devPeople do all of those but Lisps remain unpopular meaning most libraries don't get developed to fruition."
                    },
                    {
                        "message_number": "158",
                        "ts": "2020-04-21T13:45:10.964000",
                        "user": "Adelynne",
                        "text": "Doesn't Racket have firstclass keywords? `'#:keyword`"
                    },
                    {
                        "message_number": "159",
                        "ts": "2020-04-21T13:45:13.743000",
                        "user": "Thaleia",
                        "text": "It doesn't help that they're seldom corporate funded."
                    },
                    {
                        "message_number": "160",
                        "ts": "2020-04-21T13:45:31.124000",
                        "user": "Thaleia",
                        "text": "You can make everything firstclass with quoting. ;p"
                    },
                    {
                        "message_number": "161",
                        "ts": "2020-04-21T13:45:54.781000",
                        "user": "Dominik",
                        "text": "yeah but when I talk to ocaml devs I often get \u201cnot many people do web dev in ocaml\u201d as a justification of not having good web libraries"
                    },
                    {
                        "message_number": "162",
                        "ts": "2020-04-21T13:46:06.697000",
                        "user": "Dominik",
                        "text": "there\u2019s a lot of compiler nerds in the ocaml community"
                    },
                    {
                        "message_number": "163",
                        "ts": "2020-04-21T13:46:28.878000",
                        "user": "Dominik",
                        "text": "there aren\u2019t many compiler jobs out there though sadly"
                    },
                    {
                        "message_number": "164",
                        "ts": "2020-04-21T13:46:54.229000",
                        "user": "Thaleia",
                        "text": "It's often used in stock trading companies."
                    },
                    {
                        "message_number": "165",
                        "ts": "2020-04-21T13:46:59.906000",
                        "user": "Thaleia",
                        "text": "Cljs is a solid choice for JS btw"
                    },
                    {
                        "message_number": "166",
                        "ts": "2020-04-21T13:47:01.977000",
                        "user": "Dominik",
                        "text": "in one :^)"
                    },
                    {
                        "message_number": "167",
                        "ts": "2020-04-21T13:47:28.780000",
                        "user": "Thaleia",
                        "text": "Well I met someone who used OCaml in one such company that wasn't Jane Street."
                    },
                    {
                        "message_number": "168",
                        "ts": "2020-04-21T13:47:34.469000",
                        "user": "Thaleia",
                        "text": "So that makes it two."
                    },
                    {
                        "message_number": "169",
                        "ts": "2020-04-21T13:47:36.410000",
                        "user": "Dominik",
                        "text": "oh"
                    },
                    {
                        "message_number": "170",
                        "ts": "2020-04-21T13:47:40.687000",
                        "user": "Dominik",
                        "text": "that\u2019s not one!"
                    },
                    {
                        "message_number": "171",
                        "ts": "2020-04-21T13:47:46.578000",
                        "user": "Thaleia",
                        "text": "Sample bias tho"
                    },
                    {
                        "message_number": "172",
                        "ts": "2020-04-21T13:48:29.193000",
                        "user": "Thaleia",
                        "text": "Either way I found mobile dev in Scheme to be very easy with LambdaNative."
                    },
                    {
                        "message_number": "173",
                        "ts": "2020-04-21T13:48:48.210000",
                        "user": "Thaleia",
                        "text": "But it quickly gets complicated when you want to do more than simple stuff."
                    },
                    {
                        "message_number": "174",
                        "ts": "2020-04-21T13:49:05.503000",
                        "user": "Dominik",
                        "text": "there\u2019s a guy on #ocaml who moved to ocaml from clojure bc at his clojure work he was getting gored by regressions it\u2019s still at the back of my head somehow :GWsetmyxPeepoSad:"
                    },
                    {
                        "message_number": "175",
                        "ts": "2020-04-21T13:49:17.060000",
                        "user": "Dominik",
                        "text": "yeah on gambit right?"
                    },
                    {
                        "message_number": "176",
                        "ts": "2020-04-21T13:49:20.902000",
                        "user": "Thaleia",
                        "text": "Yeah"
                    },
                    {
                        "message_number": "177",
                        "ts": "2020-04-21T13:49:31.816000",
                        "user": "Dominik",
                        "text": "there\u2019s a very nice scheme on top of gambit called gerbil"
                    },
                    {
                        "message_number": "178",
                        "ts": "2020-04-21T13:49:43.508000",
                        "user": "Dominik",
                        "text": "but they don\u2019t support lambda native yet"
                    },
                    {
                        "message_number": "179",
                        "ts": "2020-04-21T13:50:34.072000",
                        "user": "Thaleia",
                        "text": "I made this in less than an hour with zero prior mobile dev experience."
                    },
                    {
                        "message_number": "180",
                        "ts": "2020-04-21T13:50:47.960000",
                        "user": "Dominik",
                        "text": "it was built by a guy who liked racket\u2019s module system but didn\u2019t like there were no escape hatches for performance at the time"
                    },
                    {
                        "message_number": "181",
                        "ts": "2020-04-21T13:50:51.474000",
                        "user": "Thaleia",
                        "text": "Most of that time went to installing Android NDK though."
                    },
                    {
                        "message_number": "182",
                        "ts": "2020-04-21T13:51:05.257000",
                        "user": "Dominik",
                        "text": "YEET"
                    },
                    {
                        "message_number": "183",
                        "ts": "2020-04-21T13:51:08.480000",
                        "user": "Dominik",
                        "text": "lol"
                    },
                    {
                        "message_number": "184",
                        "ts": "2020-04-21T13:52:28.370000",
                        "user": "Thaleia",
                        "text": "I thought Lisps sucked because everything felt incomplete then I realised all software sucks because everything ever is incomplete."
                    },
                    {
                        "message_number": "185",
                        "ts": "2020-04-21T13:53:07.823000",
                        "user": "Dominik",
                        "text": "true"
                    },
                    {
                        "message_number": "186",
                        "ts": "2020-04-21T13:53:22.893000",
                        "user": "Dominik",
                        "text": "I thought emacs sucked but then I tried the alternatives"
                    },
                    {
                        "message_number": "187",
                        "ts": "2020-04-21T13:53:35.670000",
                        "user": "Thaleia",
                        "text": "same"
                    },
                    {
                        "message_number": "188",
                        "ts": "2020-04-21T13:54:43.255000",
                        "user": "Dominik",
                        "text": "which lisp would you use instead of python? I mostly make scripts at work now I need something low friction"
                    },
                    {
                        "message_number": "189",
                        "ts": "2020-04-21T13:54:51.087000",
                        "user": "Dominik",
                        "text": "racket sounds good for this tbh"
                    },
                    {
                        "message_number": "190",
                        "ts": "2020-04-21T13:54:55.383000",
                        "user": "Dominik",
                        "text": "good docs"
                    },
                    {
                        "message_number": "191",
                        "ts": "2020-04-21T13:54:55.746000",
                        "user": "Thaleia",
                        "text": "Racket."
                    },
                    {
                        "message_number": "192",
                        "ts": "2020-04-21T13:54:59.823000",
                        "user": "Thaleia",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "193",
                        "ts": "2020-04-21T13:55:11.965000",
                        "user": "Dominik",
                        "text": ":meowmas:"
                    },
                    {
                        "message_number": "194",
                        "ts": "2020-04-21T13:55:22.029000",
                        "user": "Thaleia",
                        "text": "It's a great sysprog language."
                    },
                    {
                        "message_number": "195",
                        "ts": "2020-04-21T13:55:34.594000",
                        "user": "Dominik",
                        "text": "omw to make a dsl for every little task"
                    },
                    {
                        "message_number": "196",
                        "ts": "2020-04-21T13:55:43.098000",
                        "user": "Thaleia",
                        "text": "hell yeah"
                    },
                    {
                        "message_number": "197",
                        "ts": "2020-04-21T13:55:54.077000",
                        "user": "Thaleia",
                        "text": "But isn't that with Unix does too though?"
                    },
                    {
                        "message_number": "198",
                        "ts": "2020-04-21T13:56:07.662000",
                        "user": "Thaleia",
                        "text": "Write DSLs for everything in C"
                    },
                    {
                        "message_number": "199",
                        "ts": "2020-04-21T13:56:19.319000",
                        "user": "Dominik",
                        "text": "also most frameworks are DSLs but awkward"
                    },
                    {
                        "message_number": "200",
                        "ts": "2020-04-21T13:56:34.245000",
                        "user": "Thaleia",
                        "text": "Why not make them Less Awkward while at it?"
                    },
                    {
                        "message_number": "201",
                        "ts": "2020-04-21T13:56:43.016000",
                        "user": "Dominik",
                        "text": "right?"
                    },
                    {
                        "message_number": "202",
                        "ts": "2020-04-21T13:57:17.309000",
                        "user": "Thaleia",
                        "text": "Honestly I love Racket to bits. Easily my favourite language despite the bumps and nicks here and there."
                    },
                    {
                        "message_number": "203",
                        "ts": "2020-04-21T13:57:46.301000",
                        "user": "Thaleia",
                        "text": "I gained a new appreciation for it after having to write lots of Python."
                    },
                    {
                        "message_number": "204",
                        "ts": "2020-04-21T13:58:57.564000",
                        "user": "Thaleia",
                        "text": "Even if you avoid LOP it's great for everyday tasks with its included batteries."
                    },
                    {
                        "message_number": "205",
                        "ts": "2020-04-21T13:59:17.281000",
                        "user": "Dominik",
                        "text": "thoa heavy framework: uses some obscure syntax featuresmy superior: ohh there you go. sweet beautifula DSL: is simple and expressive afmy superior: you fucking donkey who will learn that syntax? we have work to do"
                    },
                    {
                        "message_number": "206",
                        "ts": "2020-04-21T14:00:21.853000",
                        "user": "Thaleia",
                        "text": "The secret is showing to your workmates that you can trivially achieve something with that DSL instead of having to churn out lower level code for every little task."
                    },
                    {
                        "message_number": "207",
                        "ts": "2020-04-21T14:01:00.617000",
                        "user": "Thaleia",
                        "text": "Unless you get paid by line or something. :meow:"
                    },
                    {
                        "message_number": "208",
                        "ts": "2020-04-21T14:01:24.193000",
                        "user": "Thaleia",
                        "text": "I do hear tales of people getting fired for reducing the size of code in projects."
                    },
                    {
                        "message_number": "209",
                        "ts": "2020-04-21T14:01:28.923000",
                        "user": "Dominik",
                        "text": ":meow: thank god I don\u2019t"
                    },
                    {
                        "message_number": "210",
                        "ts": "2020-04-21T14:01:41.083000",
                        "user": "Dominik",
                        "text": "we have open space office though"
                    },
                    {
                        "message_number": "211",
                        "ts": "2020-04-21T14:01:53.437000",
                        "user": "Dominik",
                        "text": "gotta have one bad thing"
                    },
                    {
                        "message_number": "212",
                        "ts": "2020-04-21T14:02:06.310000",
                        "user": "Dominik",
                        "text": "we don\u2019t have managers though? that\u2019s pretty nice"
                    },
                    {
                        "message_number": "213",
                        "ts": "2020-04-21T14:02:11.475000",
                        "user": "Thaleia",
                        "text": "Nice"
                    },
                    {
                        "message_number": "214",
                        "ts": "2020-04-21T14:02:16.539000",
                        "user": "Thaleia",
                        "text": "Autonomy ftw"
                    },
                    {
                        "message_number": "215",
                        "ts": "2020-04-21T14:02:47.944000",
                        "user": "Dominik",
                        "text": "only team leadersbut they\u2019re coders too and don\u2019t watch you from behind your back"
                    },
                    {
                        "message_number": "216",
                        "ts": "2020-04-21T14:03:10.238000",
                        "user": "Thaleia",
                        "text": "relevant btw"
                    },
                    {
                        "message_number": "217",
                        "ts": "2020-04-21T14:04:43.796000",
                        "user": "Thaleia",
                        "text": "I once deployed a small statically linked CHICKEN program for something but I don't remember what exactly. It wasn't in prod though just an inhouse utility that works behind the scenes."
                    },
                    {
                        "message_number": "218",
                        "ts": "2020-04-21T14:05:08.014000",
                        "user": "Dominik",
                        "text": "actually a thing i\u2019ve never seen in other companies: we work 8 hour workdays right? but our \u201cavailability\u201d (can\u2019t find a better word) is 6 hoursyou get two hours for meetings having lunch administrative stuffI think that\u2019s pretty sweet"
                    },
                    {
                        "message_number": "219",
                        "ts": "2020-04-21T14:05:26.818000",
                        "user": "Thaleia",
                        "text": "I now realise they never asked me anything about that so chances are that it's still running with no one having noticed it."
                    },
                    {
                        "message_number": "220",
                        "ts": "2020-04-21T14:05:34.187000",
                        "user": "Dominik",
                        "text": "you can go out to have lunch for an hour and nobody bats an eye"
                    },
                    {
                        "message_number": "221",
                        "ts": "2020-04-21T14:05:39.497000",
                        "user": "Thaleia",
                        "text": "Oh that's nice."
                    },
                    {
                        "message_number": "222",
                        "ts": "2020-04-21T14:05:52.135000",
                        "user": "Dominik",
                        "text": "lol"
                    },
                    {
                        "message_number": "223",
                        "ts": "2020-04-21T14:06:20.152000",
                        "user": "Dominik",
                        "text": "I wanted to push reasonml once to have a simpler stack for front end"
                    },
                    {
                        "message_number": "224",
                        "ts": "2020-04-21T14:06:44.912000",
                        "user": "Dominik",
                        "text": "i\u2019m just a junior so my team leader called for a meeting with a senior front end dev"
                    },
                    {
                        "message_number": "225",
                        "ts": "2020-04-21T14:06:55.361000",
                        "user": "Dominik",
                        "text": "he said no don\u2019t use reason it\u2019s too complicated"
                    },
                    {
                        "message_number": "226",
                        "ts": "2020-04-21T14:07:13.125000",
                        "user": "Dominik",
                        "text": "but he insisted I needed to use redux sagas immutable.js and all that zoo"
                    },
                    {
                        "message_number": "227",
                        "ts": "2020-04-21T14:07:13.487000",
                        "user": "Thaleia",
                        "text": "rip [x2]"
                    },
                    {
                        "message_number": "228",
                        "ts": "2020-04-21T14:07:47.254000",
                        "user": "Dominik",
                        "text": "it was a simple thing so I spent two weeks just learning these then working for a week then the client bailed lol"
                    },
                    {
                        "message_number": "229",
                        "ts": "2020-04-21T14:07:58.646000",
                        "user": "Dominik",
                        "text": "in reason I\u2019d be done already \ud83d\ude14"
                    },
                    {
                        "message_number": "230",
                        "ts": "2020-04-21T14:08:33.099000",
                        "user": "Dominik",
                        "text": "fuck sagas tbh XHR is where it\u2019s at"
                    },
                    {
                        "message_number": "231",
                        "ts": "2020-04-21T14:08:35.506000",
                        "user": "Thaleia",
                        "text": "\ud83d\ude14"
                    },
                    {
                        "message_number": "232",
                        "ts": "2020-04-21T14:09:04.506000",
                        "user": "Thaleia",
                        "text": "I have absolutely zero experience with frontend dev I should warn you."
                    },
                    {
                        "message_number": "233",
                        "ts": "2020-04-21T14:09:06.358000",
                        "user": "Dominik",
                        "text": "the water is back but it\u2019s orange :GWvertiPeepoSadMan:"
                    },
                    {
                        "message_number": "234",
                        "ts": "2020-04-21T14:09:12.978000",
                        "user": "Dominik",
                        "text": "oh"
                    },
                    {
                        "message_number": "235",
                        "ts": "2020-04-21T14:09:28.675000",
                        "user": "Thaleia",
                        "text": "My website is handwritten HTML and CSS."
                    },
                    {
                        "message_number": "236",
                        "ts": "2020-04-21T14:09:48.623000",
                        "user": "Dominik",
                        "text": "well the gist is he pushed a stack you should use only if your app is so large you cant manage with the simple tools"
                    },
                    {
                        "message_number": "237",
                        "ts": "2020-04-21T14:10:31.364000",
                        "user": "Dominik",
                        "text": "like I wanna chop a carrot what should I use?a flaming chainsaw"
                    },
                    {
                        "message_number": "238",
                        "ts": "2020-04-21T14:12:50.183000",
                        "user": "Thaleia",
                        "text": "None"
                    },
                    {
                        "message_number": "239",
                        "ts": "2020-04-21T14:39:12.796000",
                        "user": "Dominik",
                        "text": "lol"
                    },
                    {
                        "message_number": "240",
                        "ts": "2020-04-21T14:39:56.920000",
                        "user": "Dominik",
                        "text": "how did you get this theme @Deleted User?"
                    },
                    {
                        "message_number": "241",
                        "ts": "2020-04-21T14:40:12.893000",
                        "user": "Dominik",
                        "text": "is this a custom browser or a stylus thing or"
                    },
                    {
                        "message_number": "242",
                        "ts": "2020-04-21T14:40:32.959000",
                        "user": "Dominik",
                        "text": "oh it\u2019s a prepared image :meow:"
                    },
                    {
                        "message_number": "243",
                        "ts": "2020-04-21T15:15:58.483000",
                        "user": "Dominik",
                        "text": "really? I\u2019m too young"
                    },
                    {
                        "message_number": "244",
                        "ts": "2020-04-22T10:41:32.294000",
                        "user": "Dominik",
                        "text": "does racket work on ARM?"
                    },
                    {
                        "message_number": "245",
                        "ts": "2020-04-22T10:47:19.723000",
                        "user": "Dominik",
                        "text": "oh nice there's even a package in raspbian repos"
                    },
                    {
                        "message_number": "246",
                        "ts": "2020-04-22T10:47:20.791000",
                        "user": "Dominik",
                        "text": "sweet"
                    },
                    {
                        "message_number": "247",
                        "ts": "2020-04-22T11:39:17.286000",
                        "user": "Dominik",
                        "text": "too bad there\u2019s no termux for ios :GWvertiPeepoSadMan:"
                    },
                    {
                        "message_number": "248",
                        "ts": "2020-04-22T14:26:44.116000",
                        "user": "Dominik",
                        "text": "there\u2019s a racket library for discord api :GWcmeisterPeepoEZ:"
                    },
                    {
                        "message_number": "249",
                        "ts": "2020-04-22T14:26:51.950000",
                        "user": "Dominik",
                        "text": "it doesn\u2019t have any tests :GWsetmyxPeepoSad:"
                    },
                    {
                        "message_number": "250",
                        "ts": "2020-04-22T15:13:22.731000",
                        "user": "Huxlee",
                        "text": ":/"
                    },
                    {
                        "message_number": "251",
                        "ts": "2020-04-22T15:16:09.110000",
                        "user": "Macia",
                        "text": "https://github.com/FabAlchemy/racketcord/commits/master"
                    },
                    {
                        "message_number": "252",
                        "ts": "2020-04-22T15:16:09.533000",
                        "user": "Dominik",
                        "text": "https://github.com/nitros12/racketcord"
                    },
                    {
                        "message_number": "253",
                        "ts": "2020-04-22T15:16:16.931000",
                        "user": "Dominik",
                        "text": "oh"
                    },
                    {
                        "message_number": "254",
                        "ts": "2020-04-22T15:16:28.623000",
                        "user": "Dominik",
                        "text": "well yeah there\u2019s a PR"
                    },
                    {
                        "message_number": "255",
                        "ts": "2020-04-22T15:16:33.879000",
                        "user": "Dominik",
                        "text": "for fixing failing contracts"
                    },
                    {
                        "message_number": "256",
                        "ts": "2020-04-22T15:16:40.310000",
                        "user": "Dominik",
                        "text": "but that\u2019s it :GWvertiPeepoSadMan:"
                    },
                    {
                        "message_number": "257",
                        "ts": "2020-04-22T15:18:29.758000",
                        "user": "Macia",
                        "text": "its on my todo list but not at the top \ud83d\ude26"
                    },
                    {
                        "message_number": "258",
                        "ts": "2020-04-22T15:19:30.541000",
                        "user": "Dominik",
                        "text": "I could contribute to it but I\u2019d like to focus on making a bot now :GWvertiPeepoSadMan:"
                    },
                    {
                        "message_number": "259",
                        "ts": "2020-04-22T15:22:32.463000",
                        "user": "Macia",
                        "text": "make the bot first \ud83d\ude42"
                    }
                ]
            },
            {
                "conversation_id": "82",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-21T15:06:51.031000",
                        "user": "Thaleia",
                        "text": "It's the old style of SO."
                    }
                ]
            },
            {
                "conversation_id": "83",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-22T10:45:17.065000",
                        "user": "Macia",
                        "text": "Yes"
                    }
                ]
            },
            {
                "conversation_id": "84",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-22T11:36:19.120000",
                        "user": "Thaleia",
                        "text": "It's also in Termux's unstable repo which is super nifty."
                    }
                ]
            },
            {
                "conversation_id": "85",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-22T15:13:55.256000",
                        "user": "Macia",
                        "text": "someone was working on that recently  or a fork"
                    }
                ]
            },
            {
                "conversation_id": "86",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-22T17:47:02.047000",
                        "user": "Karanveer",
                        "text": "Whenever I see `racketcord` I think it's a light weight implementation of ropes."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-22T17:50:28.070000",
                        "user": "Macia",
                        "text": "There is a rope package https://planet.racketlang.org/packagesource/dyoo/rope.plt/3/0/doc.txt"
                    }
                ]
            },
            {
                "conversation_id": "87",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-22T18:25:24.484000",
                        "user": "Dominik",
                        "text": "how\u2019s planet different from the regular package index?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-22T18:25:30.085000",
                        "user": "Dominik",
                        "text": "https://pkgd.racketlang.org/pkgn/search?q=rope"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-22T18:25:35.306000",
                        "user": "Dominik",
                        "text": "can\u2019t find the rope package here :("
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-22T18:25:58.450000",
                        "user": "Karanveer",
                        "text": "planet is the old package system"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-22T18:26:41.377000",
                        "user": "Karanveer",
                        "text": "Not all of the old planet packages got repackaged."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-22T18:27:37.692000",
                        "user": "Karanveer",
                        "text": "https://planet.racketlang.org/"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-22T18:30:53.646000",
                        "user": "Macia",
                        "text": "and no licence on that one"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-23T09:46:55.405000",
                        "user": "Treyton",
                        "text": "> too bad there\u2019s no termux for ios :GWvertiPeepoSadMan:There's an alternative for iOS but it uses APK (Alpine Package Manager) instead of APT and Idk if you can use Racket here cuz I can't test ithttps://ish.app/"
                    }
                ]
            },
            {
                "conversation_id": "88",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-22T19:39:17.925000",
                        "user": "Dominik",
                        "text": "ah I see"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-23T12:56:14.932000",
                        "user": "Dominik",
                        "text": "I didn\u2019t know about this one thanks @NTBBloodbath :GWcmeisterPeepoLove:"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-23T12:56:22.875000",
                        "user": "Dominik",
                        "text": "lol"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-24T06:30:00.954000",
                        "user": "Dominik",
                        "text": "I find the last one the easiest to parse"
                    }
                ]
            },
            {
                "conversation_id": "89",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-23T11:51:11.752000",
                        "user": "Thaleia",
                        "text": "Not sure if Racket builds with musl."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-23T13:52:03.160000",
                        "user": "Adelynne",
                        "text": "test case fails for sufficiently large values of 3"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-24T06:22:29.556000",
                        "user": "Thaleia",
                        "text": "It just occurred me to implement `(ifnot pred yes no)` as `(if pred no yes)` instead of `(if (not pred) yes no)`."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-24T06:46:58.096000",
                        "user": "Thaleia",
                        "text": "It's under the macro's hood though."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-24T06:47:29.642000",
                        "user": "Thaleia",
                        "text": "I doubt `not` adds any notable performance overhead anyway."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-24T06:53:57.245000",
                        "user": "Dominik",
                        "text": "the last one is literally ifnot maybe that's why I find it the easiest :GWseremePeepoThink:"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-24T19:19:47.902000",
                        "user": "Dominik",
                        "text": "boss: what are these?you: python scriptsscript.py:```#!/usr/bin/env py1hon#lang python...```"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-25T10:26:07.473000",
                        "user": "Macia",
                        "text": "I think there is a `#lang python`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-25T11:21:18.413000",
                        "user": "Dominik",
                        "text": "I thought so too but couldn't find anything like it"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-25T12:12:38.822000",
                        "user": "Macia",
                        "text": "It might have evolved into `#lang pyret`"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-25T13:43:12.851000",
                        "user": "Macia",
                        "text": "Maybe that was it. I\u2019m sure it was about 10 years ago. Pretty sure SK was involved"
                    }
                ]
            },
            {
                "conversation_id": "90",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-24T14:11:06.014000",
                        "user": "Zarin",
                        "text": "My boss asked for a list of software we need while working from home. I low key slipped Dr. Racket into the list. XD"
                    }
                ]
            },
            {
                "conversation_id": "91",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-25T13:27:29.252000",
                        "user": "Bellamee",
                        "text": "Are you thinking of `#lang dssl2` the pythonlike language for teaching data structures?"
                    }
                ]
            },
            {
                "conversation_id": "92",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T12:26:00.167000",
                        "user": "Macia",
                        "text": "DrRacket"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-28T12:28:14.908000",
                        "user": "Dominik",
                        "text": "oh my where did you get that \ud83d\udc40"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-28T12:29:22.140000",
                        "user": "Macia",
                        "text": "DrRacket plugins!"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-28T12:31:16.209000",
                        "user": "Macia",
                        "text": "filesviewer and DrRacket theme (so I could set the background image)"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-28T12:32:02.117000",
                        "user": "Macia",
                        "text": "https://pkgs.racketlang.org/package/DrRacketTheme"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-28T12:33:23.719000",
                        "user": "Macia",
                        "text": "https://pkgs.racketlang.org/package/filesviewer"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-28T12:33:57.885000",
                        "user": "Macia",
                        "text": "https://pkgs.racketlang.org/package/DrRacketThemehttps://pkgs.racketlang.org/package/filesviewer"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-28T13:14:37.671000",
                        "user": "Macia",
                        "text": "background image from https://users.cs.northwestern.edu/~robby/logos/"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-28T13:14:49.178000",
                        "user": "Macia",
                        "text": "I'm also trialing I\u2019m trying out https://github.com/yjqww6/drcomplete"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-28T19:53:02.967000",
                        "user": "Thaleia",
                        "text": "I'm not allowed to view messages in #rules."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-28T19:53:42.155000",
                        "user": "Macia",
                        "text": "@Deleted User sorry I\u2019ve made a mistake . Give me a moment"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-28T19:54:29.652000",
                        "user": "Macia",
                        "text": "@Deleted User can you try now?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-28T20:20:47.223000",
                        "user": "Thaleia",
                        "text": "Yes all clear."
                    }
                ]
            },
            {
                "conversation_id": "93",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T12:49:29.341000",
                        "user": "Dominik",
                        "text": "many thanks I'll get them :GWcmeisterPeepoLove:"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-28T13:36:14.645000",
                        "user": "Dominik",
                        "text": "the first logo was pretty metal lol"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-28T13:40:27.279000",
                        "user": "Dominik",
                        "text": "I actually like all of the previous ones more than the current one :^("
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-28T13:42:52.746000",
                        "user": "Dominik",
                        "text": "drcomplete sounds very cool let us know if it works"
                    }
                ]
            },
            {
                "conversation_id": "94",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T20:41:31.062000",
                        "user": "Treyton",
                        "text": "Hi there!As I use Termux (because I have not had a PC for 2 years) and I use an x11 system inside my mobile which doesn't have many apps I was thinking of making some using Racket (with `racket/gui` lib). So a question came up to me and I want to know if it is possible to make a deb package with Racket (using some library or something to export)"
                    }
                ]
            },
            {
                "conversation_id": "95",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T20:57:24.074000",
                        "user": "Macia",
                        "text": "HI @NTBBloodbath are your running racket in your phone?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-28T20:57:47.070000",
                        "user": "Treyton",
                        "text": "Yeah I'm using it on Termux"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-28T20:59:59.045000",
                        "user": "Treyton",
                        "text": "None"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-28T21:00:10.281000",
                        "user": "Macia",
                        "text": "nice"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-28T21:00:49.449000",
                        "user": "Treyton",
                        "text": "(Set alias for racket ... It is a little more comfortable to run using `rkt` instead of `racket`)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-28T21:01:05.984000",
                        "user": "Treyton",
                        "text": "It works very well"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-28T21:01:17.841000",
                        "user": "Macia",
                        "text": "racket gui expects gnome I think to run gui apps"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-28T21:01:49.136000",
                        "user": "Treyton",
                        "text": "And since Termux has x11 support I got to experimenting a bit with GUI lol"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-28T21:02:05.543000",
                        "user": "Treyton",
                        "text": "Rlly? It works with Xfce4 on mobile \ud83e\udd14"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-28T21:02:07.936000",
                        "user": "Macia",
                        "text": "will racket run with just x111?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-28T21:02:14.119000",
                        "user": "Treyton",
                        "text": "Yeah"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-28T21:02:18.038000",
                        "user": "Macia",
                        "text": "gracket that is"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-28T21:02:19.974000",
                        "user": "Macia",
                        "text": "wow"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-28T21:02:32.906000",
                        "user": "Treyton",
                        "text": "Gimme a moment I'll show it to you"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-28T21:03:13.891000",
                        "user": "Macia",
                        "text": "(If you screenshare from your phone to discord my head will explode)"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-28T21:07:11.590000",
                        "user": "Treyton",
                        "text": "Hahaha I think that is not possible at the moment"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-28T21:07:29.092000",
                        "user": "Macia",
                        "text": "I was just lookign at the termux website"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-28T21:08:24.445000",
                        "user": "Treyton",
                        "text": "None"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-28T21:09:25.424000",
                        "user": "Macia",
                        "text": "that is really cool."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-28T21:09:44.646000",
                        "user": "Macia",
                        "text": "do you have a hdmi adaptor and a keyborad"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-04-28T21:09:56.513000",
                        "user": "Treyton",
                        "text": "Yes this opens up a lot of possibilities"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-04-28T21:10:36.614000",
                        "user": "Treyton",
                        "text": "No the x11 system runs directly inside the mobile and I connect to VNC. And yeah I have a external keyboard"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-04-28T21:11:07.923000",
                        "user": "Macia",
                        "text": "that looks like its bigger than a phone screen"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-04-28T21:11:30.239000",
                        "user": "Macia",
                        "text": "so drracket? or is that pushing things too far?"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-04-28T21:11:45.660000",
                        "user": "Treyton",
                        "text": "It is a little more comfortable than the Android keyboard ... Sometimes I have very long codes and with the mobile keyboard it is a bit uncomfortable haha"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-04-28T21:12:06.286000",
                        "user": "Treyton",
                        "text": "Ahh yes the x11 screen size can be configured"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-04-28T21:12:27.027000",
                        "user": "Macia",
                        "text": "I notice you are on 7.4? I'm guessing that is because 7.6 is too big?"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-04-28T21:13:07.968000",
                        "user": "Treyton",
                        "text": "I think DrRacket isn't available for Termux at the moment... So I'm using Vim with some plugins"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-04-28T21:13:50.044000",
                        "user": "Macia",
                        "text": "i'm amazed."
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-04-28T21:14:01.770000",
                        "user": "Treyton",
                        "text": "Is there a newer version? NiceI may have to wait for the Termux team to compile it for Android and my architecture to update"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-04-28T21:14:03.434000",
                        "user": "Macia",
                        "text": "have you tried `raco distribute`"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-04-28T21:14:40.397000",
                        "user": "Treyton",
                        "text": "No I know very little about Racket yet I'm learning \ud83d\ude42 Anyway what it does?"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-04-28T21:14:41.395000",
                        "user": "Macia",
                        "text": "7.7 due to be released soon. probably early may."
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-04-28T21:15:04.831000",
                        "user": "Macia",
                        "text": "raco distribute produces standalone executables"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-04-28T21:15:27.032000",
                        "user": "Treyton",
                        "text": "> 7.7 due to be released soon. probably early may.Wow and what's new?"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-04-28T21:15:45.077000",
                        "user": "Treyton",
                        "text": "> raco distribute produces standalone executablesOh I'll see it thanks!"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-04-28T21:16:37.400000",
                        "user": "Macia",
                        "text": "I've not been following the release testing."
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-04-28T21:17:04.798000",
                        "user": "Macia",
                        "text": "I expect racket(cs) will just keep getting better (faster)."
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-04-28T21:18:00.637000",
                        "user": "Treyton",
                        "text": "That's nice :o"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-04-28T21:18:25.431000",
                        "user": "Macia",
                        "text": "> I want to know if it is possible to make a deb package with Racket"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-04-28T21:19:08.061000",
                        "user": "Treyton",
                        "text": "At first with Racket I was a bit confused by the syntax (I come from other languages \\u200b\\u200blike Ruby and JavaScript) however I adapted quickly and am comfortable using the parentheses \ud83d\ude42"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-04-28T21:19:19.651000",
                        "user": "Macia",
                        "text": "is `raco distribute` and `raco exe` what you were lookign for? I know it doesn't answer the deb package but maybe a start?"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-04-28T21:20:38.541000",
                        "user": "Treyton",
                        "text": "```Unrecognized command: distribute```I got that maybe I need to execute `raco setup` first?"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-04-28T21:20:46.531000",
                        "user": "Macia",
                        "text": "wow! you have the three big syntax traditons!smalltalk>rubyc>javascriptlisp>racket"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-04-28T21:21:38.970000",
                        "user": "Macia",
                        "text": "> The raco distribute command combines a standalone executable created by raco exe with all of the shared libraries that are needed to run it along with any runtime files declared via defineruntimepath. The resulting package can be moved to other machines that run the same operating system."
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-04-28T21:23:14.817000",
                        "user": "Treyton",
                        "text": "Wow I had not noticed that until now"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-04-28T21:23:35.224000",
                        "user": "Macia",
                        "text": "```% raco distributeraco distribute: expects <destdir> [<executable>] ... on the command line given 0 arguments% raco hUsage: raco <command> <option> ... <arg> ...```"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-04-28T21:24:05.961000",
                        "user": "Treyton",
                        "text": "Ruby's syntax seemed very nice ... However the racket syntax does not stay behind. Despite not being what I'm used to it's very interesting"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-04-28T21:25:02.958000",
                        "user": "Treyton",
                        "text": "Hmmm there are bad news for me... I can't use `distribute` or `exe`"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-04-28T21:25:15.670000",
                        "user": "Treyton",
                        "text": "I got `Unrecognized command`... So I think I'll create executables by myself"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-04-28T21:25:36.270000",
                        "user": "Kire",
                        "text": "Have you tried using raco setup first?"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-04-28T21:25:40.294000",
                        "user": "Macia",
                        "text": "I've still not learnt ruby  I'm learning a little smalltalk because I'm thinking about making a small smalltalk `#lang` based on self"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-04-28T21:27:33.500000",
                        "user": "Kire",
                        "text": "Ruby is pretty dope imo"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-04-28T21:40:43.456000",
                        "user": "Treyton",
                        "text": "> Have you tried using raco setup first?I'm doing it rn thx"
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-04-28T21:41:51.051000",
                        "user": "Treyton",
                        "text": "> I've still not learnt ruby  I'm learning a little smalltalk because I'm thinking about making a small smalltalk `#lang` based on selfOh it's a good idea!Ruby is very easy to learn... It's like python syntax lol"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-04-28T22:15:10.587000",
                        "user": "Treyton",
                        "text": "Hmm I don't know much about that"
                    },
                    {
                        "message_number": "57",
                        "ts": "2020-04-28T22:17:16.057000",
                        "user": "Treyton",
                        "text": "I think scribblelib is missing idk lolI'll install it manually and after run `raco setup` again"
                    },
                    {
                        "message_number": "58",
                        "ts": "2020-04-28T22:20:03.732000",
                        "user": "Treyton",
                        "text": "I ran again and there are no more errors :GWomoGabSmile:"
                    },
                    {
                        "message_number": "59",
                        "ts": "2020-04-28T22:26:51.796000",
                        "user": "Karanveer",
                        "text": "@StephenD I'm putting together a simplistic lexer and parser for building Smalltalk langs"
                    },
                    {
                        "message_number": "60",
                        "ts": "2020-04-28T22:28:15.901000",
                        "user": "Karanveer",
                        "text": "I want to see if it could be a wrapper around `racket/class` but there needs to be some shims for keyword messages."
                    },
                    {
                        "message_number": "61",
                        "ts": "2020-04-28T22:43:53.256000",
                        "user": "Macia",
                        "text": "FYI https://leastfixedpoint.com/tonyg/kcbbs/projects/thing.html (some racket)"
                    },
                    {
                        "message_number": "62",
                        "ts": "2020-04-29T00:03:41.108000",
                        "user": "Karanveer",
                        "text": "I seem to recall that project way back."
                    },
                    {
                        "message_number": "63",
                        "ts": "2020-04-29T00:04:13.230000",
                        "user": "Karanveer",
                        "text": "I've been reading Tony's Thesis the past few weeks. Good stuff."
                    },
                    {
                        "message_number": "64",
                        "ts": "2020-04-29T01:55:32.866000",
                        "user": "Karanveer",
                        "text": "..whispers.. tailcall consing onto a list accumulator and reverse is bad ... pass it on"
                    }
                ]
            },
            {
                "conversation_id": "96",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T21:22:22.679000",
                        "user": "Macia",
                        "text": "> the command> > `raco exe gui hello.rkt`> > produces either hello.exe (Windows) hello.app (Mac OS) or hello (Unix) which runs the same as running the hello.rkt module in gracket."
                    }
                ]
            },
            {
                "conversation_id": "97",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-28T22:10:10.236000",
                        "user": "Treyton",
                        "text": "```raco setup:  summary of errors  [18:06:45]raco setup: error: during making for <pkgs>/scribblelib/scribbleraco setup: instantiate: unknown moduleraco setup: module name: #<resolvedmodulepath:\"/data/data/com.termux/files/usr/share/racket/collects/setup/maindoc.rkt\">raco setup: compiling: <pkgs>/scribblelib/scribble/run.rkt```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-28T22:14:09.354000",
                        "user": "Macia",
                        "text": "Missing stuff?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-28T22:17:48.352000",
                        "user": "Macia",
                        "text": "Good luck"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-28T22:20:54.187000",
                        "user": "Treyton",
                        "text": "However I can't use `distribute` or `exe` \ud83d\ude14"
                    }
                ]
            },
            {
                "conversation_id": "98",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T02:24:24.398000",
                        "user": "Anvi",
                        "text": "why?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-29T03:13:27.207000",
                        "user": "Anvi",
                        "text": "doesn't it avoid stack overflows?"
                    }
                ]
            },
            {
                "conversation_id": "99",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T02:41:16.945000",
                        "user": "Bellamee",
                        "text": "It definitely needs to be documented or expressed in a comment and if it isn't explicitly stated that's bad. But why is it bad when it is explicit?"
                    }
                ]
            },
            {
                "conversation_id": "100",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T03:04:50.978000",
                        "user": "Reeyansh",
                        "text": "there's no benefit to doing it instead of nontail recursion it just obscures the code"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-29T03:59:57.265000",
                        "user": "Reeyansh",
                        "text": "no there are no stack overflows in racket/scheme"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-29T04:00:29.009000",
                        "user": "Reeyansh",
                        "text": "stack memory and heap memory are the same thing. a stack overflow is just another way to get an out of memory error."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-29T04:01:27.190000",
                        "user": "Reeyansh",
                        "text": "if you create a huge nontailrecursive call stack the runtime just moves stack frames to the heap for you automatically"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-29T04:03:52.568000",
                        "user": "Reeyansh",
                        "text": "this is why there's no difference between building a list with tail recursion and without tail recursion. when you do it tail recursively you're just redoing the exact same work of building a list of arguments that the runtime would do anyway in order to keep track of what's on the stack"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-29T04:05:55.303000",
                        "user": "Reeyansh",
                        "text": "(this is only the case if you're _building a list_ tail recursively. if you're doing something _else_ tail recursively like computing a sum then the tail recursive approach is much better because you're not _moving_ where a list of values gets built up because you're not building up a list of values at all)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-29T04:07:21.078000",
                        "user": "Reeyansh",
                        "text": "in general: aggregation operations (sum max min average count etc.) should be done tail recursively. collection operations (make a list make a hash table make a tree etc.) shouldn\\'t."
                    }
                ]
            },
            {
                "conversation_id": "101",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T06:53:22.618000",
                        "user": "Karanveer",
                        "text": "Also in the list case you end up building the list up in reverse and so `reverse` gets applied to get it in the correct order. Which generally will double the real time the function takes to run."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-29T06:56:16.233000",
                        "user": "Karanveer",
                        "text": "I was checking out answers to a list building kata on codewars and ~90% did a tail recursive cons with a reverse."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-29T06:56:42.968000",
                        "user": "Dominik",
                        "text": "I\u2019ve always done it this way what would the alternative look like?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-29T06:57:45.291000",
                        "user": "Karanveer",
                        "text": "Roughly```(define (naive x) (if (zero? x) null (cons x (naive (sub1 x)))))```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-29T06:59:37.685000",
                        "user": "Dominik",
                        "text": "hmm :GWseremePeepoThink:"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-29T06:59:44.849000",
                        "user": "Karanveer",
                        "text": "Also tail call + reverse uses twice the memory"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-29T06:59:57.740000",
                        "user": "Dominik",
                        "text": "and this would build it in the correct order?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-29T07:00:36.933000",
                        "user": "Karanveer",
                        "text": "order is this case is from the value you give the function to 1"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-29T07:00:52.815000",
                        "user": "Dominik",
                        "text": "yes"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-29T07:02:31.388000",
                        "user": "Karanveer",
                        "text": "Over a list in order.```(define (myfilter pred? ls) (cond [(null? ls) null] [(pred? (car ls)) (cons (car ls) (myfilter pred? (cdr ls)))] [else (myfilter pred? (cdr ls))]))```"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-29T07:02:52.884000",
                        "user": "Karanveer",
                        "text": "I guess I could've done onearg'd map..."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-04-29T07:04:45.473000",
                        "user": "Dominik",
                        "text": "oh right :GWseremePeepoThink: now I see it"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-04-29T07:04:51.029000",
                        "user": "Dominik",
                        "text": "thanks :GWcmeisterPeepoLove:"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-04-29T07:05:08.155000",
                        "user": "Dominik",
                        "text": "so in general I shouldn\u2019t worry about making stuff tail recursive in racket?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-04-29T07:07:08.604000",
                        "user": "Karanveer",
                        "text": "> notjack: in general: aggregation operations (sum max min average count etc.) should be done tail recursively. collection operations (make a list make a hash table make a tree etc.) shouldn\\'t."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-04-29T07:08:07.530000",
                        "user": "Dominik",
                        "text": "\ud83d\ude4f\ud83d\ude47\\u200d\u2642\ufe0f"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-04-29T07:11:01.917000",
                        "user": "Karanveer",
                        "text": "A lot of times I have an instinct when I look at a problem on how to handle it. But if I\\'m feeling my way through a problem I try to use one of the `for` forms first."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-04-29T07:12:47.208000",
                        "user": "Dominik",
                        "text": "actually that made me think  is foldl tail recursive + reverse or body recursive in racket?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-04-29T07:12:57.781000",
                        "user": "Dominik",
                        "text": "foldl/reduce/whatyanameit"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-04-29T07:13:13.591000",
                        "user": "Dominik",
                        "text": "yeah fors are awesome"
                    }
                ]
            },
            {
                "conversation_id": "102",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T16:02:00.461000",
                        "user": "Huxlee",
                        "text": "I wish I understood what was going on in this chat but I haven't had much time to goof around with Racket this past week :("
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-29T16:11:34.204000",
                        "user": "Macia",
                        "text": "They are helping someone understand recursion and tail calls."
                    }
                ]
            },
            {
                "conversation_id": "103",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-29T17:14:33.580000",
                        "user": "Reeyansh",
                        "text": "@spacey \ud83c\udf0c that's okay \ud83d\ude42"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-29T17:15:02.514000",
                        "user": "Reeyansh",
                        "text": "I haven't been goofing around with Racket much lately either"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-29T17:15:12.954000",
                        "user": "Reeyansh",
                        "text": "been too hard to focus"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-29T22:07:29.970000",
                        "user": "Karanveer",
                        "text": "I've been able to find some time but today I had to do some unix sysadmin tech support facilitating zoom calls and now order replacement parts for a laptop my 7yo is hellbent on destroying"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-29T22:07:46.856000",
                        "user": "Karanveer",
                        "text": "(only one of those things I get paid to do)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-29T22:08:04.329000",
                        "user": "Macia",
                        "text": "\ud83d\ude2d"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-29T22:11:42.558000",
                        "user": "Karanveer",
                        "text": "The laptop still works enough that I'm running discord on it \ud83d\ude42"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-29T22:12:13.494000",
                        "user": "Karanveer",
                        "text": "Something up with the lcd. Nice that the hdmi port actually works."
                    }
                ]
            },
            {
                "conversation_id": "104",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T03:39:38.152000",
                        "user": "Kire",
                        "text": "So I'm thinking of writing a paper in Pollen but I need to be able to include FSMs in the paper. Does anyone know of a Racket library/language that I can use for building FSMs like in graphviz that would work with Pollen?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-04-30T03:40:24.601000",
                        "user": "Kire",
                        "text": "As soon as I finished typing that I realized I should really just search the page for `graphviz` and found this: https://docs.racketlang.org/graphviz/index.html"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-04-30T03:40:33.277000",
                        "user": "Kire",
                        "text": "So I'm gonna try that out and see if it works how I want"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-04-30T03:58:13.056000",
                        "user": "Kire",
                        "text": "Hmm doesn't look like there would be an easy way to do that all in one file the image would need to be included in the Pollen page as an external asset. Was hoping I could just do something like ```scheme#lang pollen\u25ca(require graphviz)this is some text ; Or something like this I guess\u25ca(img>svg (makediagraph `(some code for the graphviz library)))some more text after a picture of my FSM```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-04-30T04:01:12.068000",
                        "user": "Kire",
                        "text": "It would be a dream though to be able to embed a graphviz diagram right inside markdown like this so easily... Of course you can do stuff like this in latex but latex is way more complicated than anything I need for 99% of use cases."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-04-30T04:01:33.379000",
                        "user": "Kire",
                        "text": "Maybe after classes are done I'll try making something like it..."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-04-30T14:46:45.357000",
                        "user": "Rainen",
                        "text": "Just joined Discord and saw this very useful to me as I was just using graphviz & tikz two days ago will be doing more."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-04-30T16:00:56.469000",
                        "user": "Kire",
                        "text": "Ohh excellent thank you @StephenD! I'll post my question there then"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-04-30T16:01:44.571000",
                        "user": "Macia",
                        "text": "I\u2019ve only done a little pollen so I\u2019m out of my depth \ud83d\ude31"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-04-30T16:04:48.696000",
                        "user": "Kire",
                        "text": "I've not done any! I just really want something to replace my markdown workflow cause markdown doesn't do enough"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-04-30T17:32:34.142000",
                        "user": "Kire",
                        "text": "You can make custom tags for the Pollen markup so I think it should be pretty easy to do this actually"
                    }
                ]
            },
            {
                "conversation_id": "105",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T08:36:49.565000",
                        "user": "Macia",
                        "text": "Hi @nixin72 the author of pollen is not on discord \u2639\ufe0f.The pollen manual https://docs.racketlang.org/pollen/Getting_more_help.html#%28part._.Questions___discussion%29 recommends that questions should be posted on github https://github.com/mbutterick/pollenusers/issues"
                    }
                ]
            },
            {
                "conversation_id": "106",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T14:53:02.454000",
                        "user": "Dominik",
                        "text": "hello new person \ud83d\udc4b"
                    }
                ]
            },
            {
                "conversation_id": "107",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-04-30T16:07:18.148000",
                        "user": "Macia",
                        "text": "https://groups.google.com/d/msg/pollenpub/AAvs798fLpI/l8lNBPcCAgAJ"
                    }
                ]
            }
        ]
    },
    {
        "team_domain": "Racket",
        "channel_name": "general",
        "month": "May2020-July2020",
        "start_date": "2020-05-01T02:07:59.304000",
        "end_date": "2020-07-31T09:48:13.492000",
        "messages": [
            {
                "conversation_id": "1",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-01T02:07:59.304000",
                        "user": "Neema",
                        "text": "When using Racket in Emacs I get syntax highlighting at the REPL  how can I get syntax highlighting at a REPL when using my normal terminal emulator?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-01T03:31:37.839000",
                        "user": "Gorka",
                        "text": "I don't think that is supported."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-01T09:19:02.281000",
                        "user": "Angelus",
                        "text": "That could be interesting."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-01T09:19:11.938000",
                        "user": "Angelus",
                        "text": "Some languages repls support that."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-01T13:04:35.461000",
                        "user": "Belmiro",
                        "text": "ocaml has colorful repls with frames autocompletion and stuff"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-01T13:05:10.010000",
                        "user": "Belmiro",
                        "text": "None"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-01T13:05:20.228000",
                        "user": "Belmiro",
                        "text": "and in color there's"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-01T13:05:25.550000",
                        "user": "Belmiro",
                        "text": "None"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-01T13:05:41.783000",
                        "user": "Belmiro",
                        "text": "why can't I get the whole thing? why is everything so opaque?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-01T14:02:04.926000",
                        "user": "Belmiro",
                        "text": "yeah I get it encapsulation but it's so horribly annoying when I can't see what's inside and it just prints `(object:foo% ...)`"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-01T14:35:53.327000",
                        "user": "Belmiro",
                        "text": "no worries"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-01T14:36:06.652000",
                        "user": "Belmiro",
                        "text": "I\u2019m just expressing my frustration :D"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-01T14:37:01.646000",
                        "user": "Belmiro",
                        "text": "yeah I can make a helper but I\u2019m used to being able to just print the thing and see what\u2019s inside"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-01T14:37:59.591000",
                        "user": "Belmiro",
                        "text": "but the languages I\u2019m used to don\u2019t have classes  so yeah"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-01T14:47:18.432000",
                        "user": "Rahmel",
                        "text": "Can you give me a couple? I grew up in class world and I'm always on the lookout for new languages that are foreign to me"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-05-01T14:52:01.034000",
                        "user": "Angelus",
                        "text": "You can write printers for your objects."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-05-01T15:11:30.304000",
                        "user": "Belmiro",
                        "text": "oh maybe I could\u2019ve just called display on it :meow:"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-05-01T15:11:50.948000",
                        "user": "Belmiro",
                        "text": "@SlashDevSlashRandom rust has only structs for example"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-05-01T15:12:02.461000",
                        "user": "Belmiro",
                        "text": "erlang/elixir"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-05-01T15:12:24.109000",
                        "user": "Belmiro",
                        "text": "ocaml has objects but people don\u2019t really use them"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-05-01T15:12:26.013000",
                        "user": "Belmiro",
                        "text": "haskell"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-05-01T15:12:38.831000",
                        "user": "Rahmel",
                        "text": "thx"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-05-01T15:12:44.889000",
                        "user": "Belmiro",
                        "text": "in most of these you\u2019d just `derive show` or whatever and they\u2019d be printable"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-05-01T15:13:37.995000",
                        "user": "Belmiro",
                        "text": "racket has transparent structs but this object business is giving me the heebiejeebies"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-05-01T15:17:23.322000",
                        "user": "Angelus",
                        "text": "There's O'Haskell"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-05-01T15:31:06.361000",
                        "user": "Belmiro",
                        "text": "https://www.ohaskell.guide/"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-05-01T15:31:10.060000",
                        "user": "Belmiro",
                        "text": "lol it\u2019s russian"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-05-01T15:35:32.327000",
                        "user": "Belmiro",
                        "text": "https://wiki.haskell.org/O'Haskellokay no it\u2019s this one"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-05-01T16:52:54.367000",
                        "user": "Dejuan",
                        "text": "Is the opacity of objects is a __feature__ to stop you referencing and using state in unexpected ways"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-05-01T16:53:19.224000",
                        "user": "Dejuan",
                        "text": "__unsafe__ ways?"
                    }
                ]
            },
            {
                "conversation_id": "2",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-01T13:04:52.906000",
                        "user": "Belmiro",
                        "text": "eh I really hate how opaque the object system is"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-01T13:54:57.195000",
                        "user": "Rahmel",
                        "text": "just my opinion but I feel like that's sort of what object systems often tend toward  while not a prefect comparison I think of how that class would get written in a language that leans more heavily toward OO and I could see creating the red green blue and alpha members and then generating getters"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-01T14:27:50.310000",
                        "user": "Rahmel",
                        "text": "I agree  I apologize if I gave the impression I was advocating for it and also that I don't know enough to say if there's a good way to get around it  I imagine you could subclass color% and add a method that would give you what you want but that feels quite cumbersome  probably easier to just write a function that takes a color% instance and makes a list from the values"
                    }
                ]
            },
            {
                "conversation_id": "3",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-01T15:31:47.086000",
                        "user": "Belmiro",
                        "text": "or is this a book or something?"
                    }
                ]
            },
            {
                "conversation_id": "4",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-01T16:23:34.468000",
                        "user": "Gorka",
                        "text": "Classes need to implement `printable<%>` or `writable<%>`.https://docs.racketlang.org/reference/objectprinting.html"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-01T16:25:01.981000",
                        "user": "Gorka",
                        "text": "Just like `structs` have to implement the appropriate generic methods struct property or declared `#:transparent`"
                    }
                ]
            },
            {
                "conversation_id": "5",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-01T18:00:44.774000",
                        "user": "Belmiro",
                        "text": "how is printing it unsafe?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-01T18:00:50.418000",
                        "user": "Belmiro",
                        "text": "in a way that's humanreadable"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-01T18:01:20.208000",
                        "user": "Belmiro",
                        "text": "ha ha very funny mr racket"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-01T18:03:48.778000",
                        "user": "Gorka",
                        "text": "The perspective Racket takes is not out of the ordinary. To get a useful print string out of most OO languages requires implementing some conversion interface."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-01T18:07:44.867000",
                        "user": "Belmiro",
                        "text": "not saying it's uncommon for OO langs just saying I think it's annoying"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-01T18:16:10.675000",
                        "user": "Belmiro",
                        "text": "trying to debug this with the dr racket debugger the entire dr racket froze.. heck"
                    }
                ]
            },
            {
                "conversation_id": "6",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-01T18:28:09.984000",
                        "user": "Cavin",
                        "text": "colors probably shouldn't have been objects"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-01T18:28:27.336000",
                        "user": "Cavin",
                        "text": "they're just bags of data"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-01T18:28:43.132000",
                        "user": "Cavin",
                        "text": "(this does not mean objects are bad in general)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-01T18:29:41.801000",
                        "user": "Belmiro",
                        "text": "I mean yeah and if they are  why don\u2019t they have a method for displaying the entire color somehow?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-01T18:31:41.716000",
                        "user": "Belmiro",
                        "text": "oh my I played myself  I was trying to display a style delta not a color"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-01T18:31:48.510000",
                        "user": "Belmiro",
                        "text": "gonna try this with a color now :meow:"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-01T18:34:25.902000",
                        "user": "Belmiro",
                        "text": "`#(struct:object:color% ...)` :meow:"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-01T18:35:24.347000",
                        "user": "Gorka",
                        "text": "But what if you're underlying color model is not RGB ..."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-01T18:35:36.702000",
                        "user": "Dejuan",
                        "text": "> colors probably shouldn't have been objects@notjack I though this the multiple representations of colours: rgb colour name"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-01T18:35:46.053000",
                        "user": "Belmiro",
                        "text": "it\u2019s rgba you can get red green blue and alpha from it @oaktownsam"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-01T18:36:33.562000",
                        "user": "Gorka",
                        "text": "Yeah but you could have an HSV or CMYK underlying model and a response for `red` should make sense."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-01T18:36:39.290000",
                        "user": "Cavin",
                        "text": "I think trying to abstract over that is more complicated than picking a standard format and making it easy to convert between other well known models"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-01T18:37:03.386000",
                        "user": "Dejuan",
                        "text": "And extensibility is possible? r,g,b,ra,ga,ba"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-01T18:37:26.529000",
                        "user": "Belmiro",
                        "text": "but why not have a function to get everything? as a struct or a list even"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-01T18:37:54.770000",
                        "user": "Belmiro",
                        "text": "or just print it for humans.."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-05-01T18:38:06.121000",
                        "user": "Belmiro",
                        "text": "I don\u2019t want to `read` it back"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-05-01T18:38:08.341000",
                        "user": "Cavin",
                        "text": "Yeah there could have been a `color` struct and a `colorconvertible<%>` interface"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-05-01T18:38:13.444000",
                        "user": "Belmiro",
                        "text": "I want to read it"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-05-01T18:39:37.523000",
                        "user": "Belmiro",
                        "text": "it\u2019s really funny how the global list of styles has a `number` method so you don\u2019t have to call `length` on the list"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-05-01T18:39:54.481000",
                        "user": "Belmiro",
                        "text": "but you have to call four methods on a color to get a RGBA representation"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-05-01T18:39:56.395000",
                        "user": "Belmiro",
                        "text": ":meow:"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-05-01T18:41:13.350000",
                        "user": "Dejuan",
                        "text": "designed in the 90\u2019s  java hit and everything was about objects"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-05-01T18:41:22.283000",
                        "user": "Gorka",
                        "text": "Just a guess I think technically all of racket/draw is objects because it wraps cairo."
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-05-01T18:41:45.391000",
                        "user": "Belmiro",
                        "text": "wasn\u2019t the GUI system redesigned?"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-05-01T18:41:52.452000",
                        "user": "Belmiro",
                        "text": "I thought it was redesigned a couple years ago"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-05-01T18:41:54.519000",
                        "user": "Belmiro",
                        "text": "the racket one"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-05-01T18:41:55.215000",
                        "user": "Gorka",
                        "text": "<record scratch> actually it may have been from wxwidgets and then"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-05-01T18:42:06.930000",
                        "user": "Gorka",
                        "text": "when ported to cairo maintained"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-05-01T18:45:09.949000",
                        "user": "Belmiro",
                        "text": "is there a way to get more info in the debugger by the way?"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-05-01T18:45:15.774000",
                        "user": "Dejuan",
                        "text": "I don\u2019t want to be an apologist for other people\u2019s code but I don\u2019t want to implement a crossplatform gui toolkit. I use `racket/gui` too. I feel your pain."
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-05-01T18:45:16.575000",
                        "user": "Belmiro",
                        "text": "None"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-05-01T18:45:23.363000",
                        "user": "Belmiro",
                        "text": "everything\u2019s opaque (again)"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-05-01T18:45:42.258000",
                        "user": "Belmiro",
                        "text": "@StephenD yeah crossplatform GUI is hard"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-05-01T18:45:56.414000",
                        "user": "Angelus",
                        "text": "(understatement)"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-05-01T18:46:03.232000",
                        "user": "Belmiro",
                        "text": "very hard"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-05-02T13:05:49.917000",
                        "user": "Angelus",
                        "text": "@nixin72 Chez Scheme seems to be capable of syntax highlighting in the repl."
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-05-02T13:05:54.161000",
                        "user": "Angelus",
                        "text": "But I have no idea how to get it to work."
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-05-02T13:12:41.388000",
                        "user": "Angelus",
                        "text": "Ah never mind it's just Geiser."
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-05-03T11:10:43.881000",
                        "user": "Belmiro",
                        "text": "hehe I changed where I keep the state (it\u2019s in a toplevel struct now) and actually tried out the `debug` package"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-05-04T00:59:56.558000",
                        "user": "Neema",
                        "text": "Okay so I\\'ve messed around with Pollen and now have this working! ```scheme#lang pollenHello world!\u25ca(graphviz>xexpr v0 v1 v2 v0 > v0 v0 > v1 v1 > v2 v2 > v0\")```That Pollen code renders to"
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-05-04T01:00:33.955000",
                        "user": "Neema",
                        "text": "Not that this is remotely impressive but I think I have peaked."
                    }
                ]
            },
            {
                "conversation_id": "7",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-03T11:10:48.316000",
                        "user": "Belmiro",
                        "text": "now stuff is much smoother"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-03T11:11:01.246000",
                        "user": "Belmiro",
                        "text": "thanks @Alex Knauth awesome package :GWcmeisterPeepoLove:"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-04T04:03:44.851000",
                        "user": "Eloisa",
                        "text": "that's pretty cool! :)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-04T05:32:49.664000",
                        "user": "Belmiro",
                        "text": "that\u2019s very nice \ud83d\udc40"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-04T05:33:20.635000",
                        "user": "Belmiro",
                        "text": "I didn\u2019t know you could make graphs so easily"
                    }
                ]
            },
            {
                "conversation_id": "8",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-04T05:47:58.420000",
                        "user": "Kaelum",
                        "text": "morning"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-04T05:49:12.852000",
                        "user": "Kaelum",
                        "text": "do you consider that Racket's GUI is sufficientlyrich for writing (multiplatform) desktop apps similar to using gtk/qt bindings via some other language?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-04T05:55:56.536000",
                        "user": "Belmiro",
                        "text": "it\u2019s pretty capable Dr Racket uses it"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-04T05:56:37.062000",
                        "user": "Belmiro",
                        "text": "I think it has some limitations regarding finetuning the style/theme  not sure though I\u2019m fine with the defaults"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-04T05:59:21.847000",
                        "user": "Kaelum",
                        "text": "@sarna well i'm thinking about more complex type of apps....e.g. i've found the following list: https://news.ycombinator.com/item?id=18047967"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-04T06:01:16.768000",
                        "user": "Belmiro",
                        "text": "there\u2019s a pretty good summary of the current limitations in the comment"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-04T06:01:31.015000",
                        "user": "Belmiro",
                        "text": "idk how current though it\u2019s from 2018"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-04T06:01:52.821000",
                        "user": "Belmiro",
                        "text": ":GWseremePeepoThink:"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-04T06:02:09.506000",
                        "user": "Belmiro",
                        "text": "sorry I\u2019m just starting out basically"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-04T06:02:35.696000",
                        "user": "Kaelum",
                        "text": "ok fairenough \ud83d\ude09"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-04T09:29:52.316000",
                        "user": "Belmiro",
                        "text": "draganddrop seems to still be an issue https://github.com/racket/gui/issues/63"
                    }
                ]
            },
            {
                "conversation_id": "9",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-04T20:01:57.347000",
                        "user": "Zaxtyn",
                        "text": "Hi there!"
                    }
                ]
            },
            {
                "conversation_id": "10",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-04T22:03:43.956000",
                        "user": "Gorka",
                        "text": "This is an interesting change for Schemehttps://srfi.schemers.org/srfi195/srfi195.html"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-04T22:14:43.212000",
                        "user": "Cavin",
                        "text": "hmm"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-04T22:16:04.169000",
                        "user": "Cavin",
                        "text": "not sure what problem these are trying to solve"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-04T22:16:24.895000",
                        "user": "Ifra",
                        "text": "same"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-04T22:16:56.738000",
                        "user": "Ifra",
                        "text": "and it looks like `unbox` might be the only operation they describe that would even make use of multiplevalue return"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-04T22:17:35.917000",
                        "user": "Cavin",
                        "text": "also I'm skeptical that there's performance to be gained here"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-04T22:18:10.986000",
                        "user": "Ifra",
                        "text": "I don't think they mention performance as a motivation"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-04T22:18:47.033000",
                        "user": "Cavin",
                        "text": "not directly but that's the main motivation I see brought up when discussing why to bother using multiple values at all"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-04T22:19:15.487000",
                        "user": "Cavin",
                        "text": "so if it's _not_ more performant then.... why not just use a regular mutable list?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-04T22:32:06.460000",
                        "user": "Ifra",
                        "text": "their stated goal is to make the language more consistent by using this feature in more places where it makes sense to do so"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-04T22:32:44.101000",
                        "user": "Ifra",
                        "text": "in that spirit I'd be more optimistic about the vision I described in https://github.com/racket/rhombusbrainstorming/issues/78#issuecomment514025353"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-04T22:34:01.402000",
                        "user": "Ifra",
                        "text": "but I have trouble taking that vision seriously even if I do think it makes things more consistent"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-04T22:35:26.793000",
                        "user": "Cavin",
                        "text": "Yeah I'd much rather see standard libraries consistently _not_ use multiple values than consistently use them."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-04T22:35:50.384000",
                        "user": "Ifra",
                        "text": "^ this"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-04T22:36:56.867000",
                        "user": "Cavin",
                        "text": "Jay summed it up pretty well:> My personal taste is that multiple values are theoretically beautiful and elegantly expose the ability of an advanced compiler to use a custom calling convention but are extremely annoying to actually use in almost all circumstances in Scheme & Racket"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-05-04T22:39:48.968000",
                        "user": "Ifra",
                        "text": "I think that's exactly the annoyance that leads to proposals like this one trying to smooth out the experience a little better"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-05-04T22:41:13.559000",
                        "user": "Ifra",
                        "text": "there's a big bump in the middle of the rug and some of the crowd is conscientiously moving it to one side while some of the crowd is moving it to the other... and as long as it's there people are tripping on it"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-05-04T22:41:41.630000",
                        "user": "Cavin",
                        "text": "Yeah definitely"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-05-04T22:42:15.978000",
                        "user": "Cavin",
                        "text": "It's one of those language features that doesn't cooperate well with half measures"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-05-04T22:43:28.502000",
                        "user": "Cavin",
                        "text": "You gotta go all in on them and plan APIs around it from the ground up or not support them at all. The uncanny valley in between is unpleasant for everyone."
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-05-04T22:43:37.339000",
                        "user": "Ifra",
                        "text": "someday I think it'd be nifty to see a typed Scheme where the types compile down to `values` bundles"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-05-04T22:43:57.929000",
                        "user": "Cavin",
                        "text": "yes that could be super neat"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-05-04T23:28:59.118000",
                        "user": "Gorka",
                        "text": "From that srfi mailing list it almost reads like an implementation of vectors with a different name."
                    }
                ]
            },
            {
                "conversation_id": "11",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-04T23:15:51.602000",
                        "user": "Gorka",
                        "text": "I figured there would be some opinions here about that SRFI \ud83d\ude42"
                    }
                ]
            },
            {
                "conversation_id": "12",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-05T07:58:00.997000",
                        "user": "Cavin",
                        "text": "_finally_ got caught up on the last three months of Racket Users posts..."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-05T08:04:43.478000",
                        "user": "Cavin",
                        "text": "who knows maybe this week I'll get caught up on actual pull requests too"
                    }
                ]
            },
            {
                "conversation_id": "13",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-06T20:16:12.805000",
                        "user": "Dejuan",
                        "text": "Any other Catalina users seeing this ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-06T20:16:25.211000",
                        "user": "Dejuan",
                        "text": "(two title bars)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-07T11:16:06.421000",
                        "user": "Josafat",
                        "text": "no normal and cs drracket app seem to have normal menu bars"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-07T11:16:12.814000",
                        "user": "Josafat",
                        "text": "for 7.7"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-07T13:56:25.470000",
                        "user": "Dejuan",
                        "text": "is my  I triggered a macos issue that has affected a lot of other projects"
                    }
                ]
            },
            {
                "conversation_id": "14",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-07T13:56:50.426000",
                        "user": "Dejuan",
                        "text": "is there a way to capture the mouse position when a racket/gui window doesn\u2019t have focus?```scheme(class canvas% (inherit refresh) (define x 0) (define/override (onevent amouseevent) (set! x (/ (send amouseevent getx) 1)) (refresh))```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-07T13:57:11.246000",
                        "user": "Dejuan",
                        "text": "I suspect is it possible because I can get a negative mouse xposition by moving the moving the mouse quickly."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-08T09:39:41.559000",
                        "user": "Dejuan",
                        "text": "its awesome thank you!"
                    }
                ]
            },
            {
                "conversation_id": "15",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-08T00:45:42.079000",
                        "user": "Rahmel",
                        "text": "@StephenD I'm not sure if this is exactly what you're looking for but I did a little experiment and set up a timer repeatedly calling `getcurrentmousestate` from racket/gui and that gave me the (absolute) mouse position even when DrRacket was minimized and whatnot"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-08T00:46:51.773000",
                        "user": "Rahmel",
                        "text": "apologies for the ping if that's not quite what you were going for"
                    }
                ]
            },
            {
                "conversation_id": "16",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-09T01:13:35.560000",
                        "user": "Kendan",
                        "text": "any good packages for plotting graphs of functions and whatnot?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-09T01:15:53.089000",
                        "user": "Page",
                        "text": "The `plot` library is included in the main distribution"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-09T01:20:52.021000",
                        "user": "Kendan",
                        "text": "thanks somehow i overlooked it \ud83d\ude14"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-09T01:32:12.993000",
                        "user": "Cavin",
                        "text": "don't worry about it the main distribution is huge \ud83d\ude42 it's easy to overlook stuff in it"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-09T05:55:43.841000",
                        "user": "Cavin",
                        "text": "tonight I worked on a neat AI library and got to the point where it can solve this problem: I have 100 copper I can transmute 10 copper into 1 silver I can transmute 10 silver into 1 gold I want 1 gold"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-09T05:58:35.237000",
                        "user": "Cavin",
                        "text": "the code looks like this:```scheme(define transmutesilver (multisetaction #:requirements (hash copper (atleastrange 10)) #:deletions (multisetofcopies copper 10) #:additions (multiset silver)))(define transmutegold (multisetaction #:requirements (hash silver (atleastrange 10)) #:deletions (multisetofcopies silver 10) #:additions (multiset gold)))(define problem (multisetplanningproblem #:state (multisetofcopies copper 100) #:actions (set transmutesilver transmutegold) #:goal (multisetgoal (hash gold (singletonrange 1)))))(multisetplanningproblemsolve problem)```"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-09T20:06:53.155000",
                        "user": "Kendan",
                        "text": "yo plot makes a %snip \ud83d\ude0dplot draw gui are all so nicely fit together"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-09T21:10:09.506000",
                        "user": "Gorka",
                        "text": "Unfortunately I haven't used it in a while there was a problem with getting the plot frames to stay static."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-09T21:18:05.593000",
                        "user": "Kendan",
                        "text": "sweet"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-09T21:18:34.841000",
                        "user": "Kendan",
                        "text": "i want to make zoomable user interfaces"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-09T21:19:27.106000",
                        "user": "Kendan",
                        "text": "i have a plan but i'm still pretty new."
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-09T21:20:53.603000",
                        "user": "Kendan",
                        "text": "if i don't make any progress by a week from now then punish me"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-09T23:14:01.981000",
                        "user": "Dejuan",
                        "text": "FYI there is a great animated plot lib in planet that I've been meaning to port to the package repository."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-09T23:22:27.679000",
                        "user": "Dejuan",
                        "text": "https://github.com/spdegabrielle/animatedcanvas my copy"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-10T16:19:56.212000",
                        "user": "Dejuan",
                        "text": "https://blog.racketlang.org/2020/05/racketis25.html"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-05-10T18:15:41.512000",
                        "user": "Dejuan",
                        "text": "Quickscriptextra is a bunch of useful scripts for DrRacket scripts (menu) functionality;\u2014Major update: putfunction is much faster by triggering checksyntax as early as possible and avoiding its recomputation. More warnings and error reporting (in particular regarding mutated variables). Added more information at the top of the script file in particular some caveats.Please report bugs here:https://github.com/Metaxal/quickscriptextra/issuesIf you have already installed this: `raco pkg update quickscriptextra`and if DrRacket is open click on Scripts | Manage scripts | Unload persistent scripts to restart the script."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-05-11T12:21:10.202000",
                        "user": "Dejuan",
                        "text": "Continuations in Racket's Web Serverhttps://defn.io/2020/05/11/racketwebserverinternals/"
                    }
                ]
            },
            {
                "conversation_id": "17",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-09T10:33:10.635000",
                        "user": "Dejuan",
                        "text": "https://github.com/racket/gui/issues/184 See also https://racket.slack.com/archives/C06V96CKX/p1589015478233100"
                    }
                ]
            },
            {
                "conversation_id": "18",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-09T21:06:38.783000",
                        "user": "Gorka",
                        "text": "Monitoring systems (over ssh) plotting the data using plot and refreshing as new data arrives."
                    }
                ]
            },
            {
                "conversation_id": "19",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-10T16:40:58.411000",
                        "user": "Kendan",
                        "text": "today!?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-10T16:41:05.968000",
                        "user": "Kendan",
                        "text": "happy bd racket ily"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-12T20:16:58.627000",
                        "user": "Cavin",
                        "text": "It\\'s a way of representing the rest of the program"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-12T20:18:44.155000",
                        "user": "Cavin",
                        "text": "If you pause any running program you can chop up its code into three distinct pieces: The code that's already been run The next step The code to run after the next step"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-12T20:22:11.863000",
                        "user": "Cavin",
                        "text": "For example say this code is running and the program has reached the part indicated by the ^ symbol:```javavar x = readNumber();var y = readNumber();var result = (x + y);// ^print(result);```Then the code that's already been run is the first two lines the next step is to compute `x + y` and the code to run afterwards is this:```var result = _;print(result);```...where the underscore represents a hole for the result we're going to compute in the next step."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-12T20:23:59.112000",
                        "user": "Cavin",
                        "text": "The code to run next is called the program\\'s current continuation."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-12T20:24:14.293000",
                        "user": "Cavin",
                        "text": "Some languages let you _capture_ continuations meaning you can insert code that says take the rest of the program and save it in a function I can call. This lets you call that function _multiple_ times or decide not to call it at all giving you the ability to restart chunks of code or skip them."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-12T20:25:07.882000",
                        "user": "Cavin",
                        "text": "In normal code there's not much point to this it's just a complicated `goto`. But you can combine it with macros to implement your own control systems like for loops exception systems threads etc."
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-12T20:25:36.556000",
                        "user": "Cavin",
                        "text": "I have a gist with several examples of how to do that here: https://gist.github.com/jackfirth/027411d567385dadb3202bee75a847b4"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-12T20:27:25.719000",
                        "user": "Cavin",
                        "text": "See also this wonderful stackoverflow answer about continuation prompts as it explains the difference between _full_ continuations and _delimited_ continuations: https://stackoverflow.com/questions/29838344/whatexactlyisacontinuationpromptSummary: delimited continuations are the ones you should use. Full continuations are full of complex nonsensical behavior that\\'s not useful in real programs."
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-13T04:03:44.341000",
                        "user": "Cavin",
                        "text": "unrelated to continuations I'm making a thing! https://twitter.com/doitwithalambda/status/1260419874381156352"
                    }
                ]
            },
            {
                "conversation_id": "20",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-12T19:43:32.273000",
                        "user": "Eloisa",
                        "text": "what's a continutation? i hear about it a fair bit in dicussions related to scheme"
                    }
                ]
            },
            {
                "conversation_id": "21",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-13T04:19:40.746000",
                        "user": "Angelus",
                        "text": "Ooh"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-13T04:19:42.872000",
                        "user": "Angelus",
                        "text": "Neat!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-13T20:41:02.997000",
                        "user": "Dejuan",
                        "text": "https://pkgs.racketlang.org/package/rs"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-13T20:41:51.580000",
                        "user": "Dejuan",
                        "text": "https://github.com/mcdejonge/rs"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-13T20:57:36.238000",
                        "user": "Kendan",
                        "text": "ouch i was worried about this"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-13T20:58:24.740000",
                        "user": "Dejuan",
                        "text": "That\u2019s why I asked what sound engine you would use?"
                    }
                ]
            },
            {
                "conversation_id": "22",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-13T20:57:28.842000",
                        "user": "Kendan",
                        "text": "> Racket is not built for real time computing and I am not a systems programmer so the timing of rs is a bit ... wobbly."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-13T20:58:50.166000",
                        "user": "Dejuan",
                        "text": "I think his package is great!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-13T20:59:36.508000",
                        "user": "Kendan",
                        "text": "rsound is the only one right"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-13T20:59:40.790000",
                        "user": "Kendan",
                        "text": "idk how its timing is"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-13T20:59:52.113000",
                        "user": "Kendan",
                        "text": "ive experienced this issue with other languages"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-13T21:00:10.631000",
                        "user": "Kendan",
                        "text": "i don\u2019t want to use C or C++ but for real audio work it often seems like thats the only choice"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-13T21:00:29.183000",
                        "user": "Kendan",
                        "text": "but idk about bindings maybe theyre safe and provide the same kinds of performance \ud83e\udd37\\u200d\u2640\ufe0f"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-13T21:01:41.573000",
                        "user": "Dejuan",
                        "text": "How about a supercollider client"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-13T21:02:02.373000",
                        "user": "Dejuan",
                        "text": "https://github.com/quakehead/racketsc?files=1"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-13T21:03:45.762000",
                        "user": "Dejuan",
                        "text": "https://github.com/quakehead/rsc3"
                    }
                ]
            },
            {
                "conversation_id": "23",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-13T22:22:44.362000",
                        "user": "Kendan",
                        "text": "ye supercollider is fast it would do the trick"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-13T22:22:46.259000",
                        "user": "Kendan",
                        "text": "or csound"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-13T22:22:49.220000",
                        "user": "Kendan",
                        "text": "or anything like that"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-13T22:22:58.353000",
                        "user": "Kendan",
                        "text": "well i guess those are the only two stable fast ones"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-13T22:23:04.755000",
                        "user": "Kendan",
                        "text": "that i can think of at least"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-13T22:37:33.290000",
                        "user": "Kendan",
                        "text": "o i forgot supercollider works as a server that communicates through OSC"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-13T22:37:40.216000",
                        "user": "Kendan",
                        "text": "literally the best way they could have done that"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-13T22:37:48.789000",
                        "user": "Kendan",
                        "text": "that will definitely be my go to"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-14T00:02:15.364000",
                        "user": "Cavin",
                        "text": "@giftfromgod try Rust instead of C/C++ if you're making something realtime and Racket is too wobbly"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-14T00:02:42.990000",
                        "user": "Cavin",
                        "text": "Rust is basically what if c/c++ but actually done well"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-14T02:56:47.448000",
                        "user": "Cavin",
                        "text": "oh don't mind me then"
                    }
                ]
            },
            {
                "conversation_id": "24",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-14T01:23:22.975000",
                        "user": "Kendan",
                        "text": "i did"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-14T01:23:27.223000",
                        "user": "Kendan",
                        "text": "i didn\u2019t enjoy it"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-14T03:41:15.852000",
                        "user": "Kendan",
                        "text": "nah its a great recommendation; i should try it again in the future but i\u2019d also love to make racket work as much as i can. racket makes me happy"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-14T03:42:42.656000",
                        "user": "Kendan",
                        "text": "i think supercollider can get me far enough but any way i\u2019m just focused on plotting data for now. audio stuff is way down the line"
                    }
                ]
            },
            {
                "conversation_id": "25",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-15T20:58:31.247000",
                        "user": "Eloisa",
                        "text": "can we have a #resouces channel?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-15T20:58:41.403000",
                        "user": "Eloisa",
                        "text": "i'd like to add this to it: https://www.cs.uni.edu/~wallingf/teaching/cs3540/"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-15T21:03:14.253000",
                        "user": "Dejuan",
                        "text": "Added to https://github.com/racket/racket/wiki/CoursesusingRacket"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-15T21:03:45.609000",
                        "user": "Dejuan",
                        "text": "Please check out https://github.com/racket/racket/wiki"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-15T21:04:18.593000",
                        "user": "Dejuan",
                        "text": "Can add channel if you still want to?"
                    }
                ]
            },
            {
                "conversation_id": "26",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-15T22:22:21.401000",
                        "user": "Leslye",
                        "text": "Yes. Make it easy to discover."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-15T22:25:37.024000",
                        "user": "Ifra",
                        "text": "seems like it\\'d be nice to have a closed resources or links channel right next to #rules just for general orientation"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-15T22:25:50.710000",
                        "user": "Eloisa",
                        "text": "yea that's what i was asking about"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-15T22:25:51.887000",
                        "user": "Ifra",
                        "text": "like pinned messages but across the whole server"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-15T22:26:26.799000",
                        "user": "Eloisa",
                        "text": "like can we have a #resources channel in this server like there's a #general channel?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-15T22:27:10.115000",
                        "user": "Dejuan",
                        "text": "I just made #resources"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-15T22:27:28.588000",
                        "user": "Dejuan",
                        "text": "Please try it out as I just did it on my phone"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-15T22:28:02.011000",
                        "user": "Ifra",
                        "text": "I don't see it"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-15T22:28:56.701000",
                        "user": "Ifra",
                        "text": "I see it now :)"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-15T22:29:13.632000",
                        "user": "Dejuan",
                        "text": "Forgot to sync"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-15T22:29:28.057000",
                        "user": "Dejuan",
                        "text": "\ud83d\ude2d"
                    }
                ]
            },
            {
                "conversation_id": "27",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-16T17:26:25.967000",
                        "user": "Gorka",
                        "text": "Four lines to make your computer talk (on Windows):```#lang racket/base(require ffi/com)(define voice (comcreateinstance SAPI.SPVoice\"))(cominvoke voice Speak hello world\")```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-16T17:27:44.957000",
                        "user": "Dejuan",
                        "text": "I wonder what the MacOS and Linux equivalents are"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-16T17:30:23.826000",
                        "user": "Gorka",
                        "text": "I've done a little research on it. There is a python tts package that could be cribbed from. https://github.com/nateshmbhat/pyttsx3/tree/master/pyttsx3/drivers"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-16T17:33:57.351000",
                        "user": "Gorka",
                        "text": "Also on Linux is Flite (festival lite) api which I got about five minutes into ffi and then something came up."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-16T17:35:07.297000",
                        "user": "Gorka",
                        "text": "That windows code is from about ten minutes of work. Mostly Googleing the correct Racket and Windows apis"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-16T17:36:51.452000",
                        "user": "Dejuan",
                        "text": "nice. The macos looks like it will be NSSpeechSynthesizer"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-16T17:38:48.672000",
                        "user": "Dejuan",
                        "text": "post https://discordapp.com/channels/571040468092321801/618895179343986688/711268335739863091 on slack/reddit/twitter"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-16T17:59:41.423000",
                        "user": "Gorka",
                        "text": "posting now"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-16T17:59:48.100000",
                        "user": "Gorka",
                        "text": "reddit at least \ud83d\ude42"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-16T18:00:08.860000",
                        "user": "Dejuan",
                        "text": "is it wrong to use `(begin ...)` just to indent?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-16T18:01:26.745000",
                        "user": "Dejuan",
                        "text": "racketusers too. Can I convince you to post it as a challenge for linux and osx racketeers to do the same in as few lines as possible?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-16T18:03:08.140000",
                        "user": "Gorka",
                        "text": "> is it wrong to use (begin ...) just to indent?Probably not it has not much other use and it should not be performance impacting"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-20T01:23:13.125000",
                        "user": "Gorka",
                        "text": "There are three bit(string|vector) implementations for Racket."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-20T04:25:43.349000",
                        "user": "Gorka",
                        "text": "bitsyntax"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-20T16:37:37.989000",
                        "user": "Gorka",
                        "text": "Yeah"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-05-20T16:39:19.344000",
                        "user": "Gorka",
                        "text": "Today I found there is a Racket process that has been running for a very long time on this laptop that is using 100% cpu"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-05-20T16:39:22.510000",
                        "user": "Gorka",
                        "text": "\ud83d\ude26"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-05-20T17:17:18.001000",
                        "user": "Gorka",
                        "text": "This was something running `raco setup` (I think) and it got stuck somehow"
                    }
                ]
            },
            {
                "conversation_id": "28",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-20T01:37:43.855000",
                        "user": "Cavin",
                        "text": "I know of the bitvector package and the rebellion bitstring one what's the third?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-20T04:53:42.058000",
                        "user": "Cavin",
                        "text": "ah that's tonyg's pattern matching one right?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-20T17:13:05.387000",
                        "user": "Dejuan",
                        "text": "I always start a gui processes and forget them behind all the other windows"
                    }
                ]
            },
            {
                "conversation_id": "29",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-20T22:36:50.395000",
                        "user": "Zaniah",
                        "text": "Is there a Racket package (maybe even a #lang) for editing video clips like choosing video segments arranging them looping them etc?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-21T00:56:54.586000",
                        "user": "Zaniah",
                        "text": "@rocketnia Thanks! That is exactly what I was looking for. For some reason it doesn't come up when searching the main Racket docs site even though the docs are hosted there."
                    }
                ]
            },
            {
                "conversation_id": "30",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-21T00:18:57.776000",
                        "user": "Ifra",
                        "text": "sounds like you're describing `#lang video`: https://lang.video/"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-21T01:47:26.595000",
                        "user": "Ifra",
                        "text": "Yeah I wonder why that's the case... I looked at the project's info.rkt and I don't see it doing anything on purpose to make it not show up like that. Is this a bug? Is there another configuration somewhere?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-21T01:48:22.287000",
                        "user": "Ifra",
                        "text": "there are a few modules I might like to document except that I'm afraid they'll distract people from other things that have the same name so I might like to use this configuration for myself if it exists \ud83d\ude04"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-21T01:49:07.472000",
                        "user": "Ifra",
                        "text": "(ideally people would still be able to search those docs perhaps using the set context feature in the docs search interface)"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-21T09:04:04.685000",
                        "user": "Ifra",
                        "text": "(Deleted what I wrote 1.5h ago because I think I let my emotions get the best of me.)"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-21T09:45:50.832000",
                        "user": "Ifra",
                        "text": "Having collected my thoughts better: I've been hoping to understand that perspective on quasiquotation. I've been keeping an eye out for an example file that would show quasiquotation's strengths and this file is pretty close to what I would have picked. Jack if this file makes you feel that way I'm feeling some despair about finding that common ground anytime soon.(In my original message I mentioned something else about the file that I found frustrating. I waa hoping it would demonstrate that I understood the feeling but I think it would've just been distracting.)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-21T10:57:47.347000",
                        "user": "Ifra",
                        "text": "that is a pretty funny spec wording issue"
                    }
                ]
            },
            {
                "conversation_id": "31",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-21T05:43:31.488000",
                        "user": "Cavin",
                        "text": "this file has made me hate quasiquotation with a burning passion https://github.com/racket/scribble/blob/master/scribblelib/scribble/htmlrender.rkt"
                    }
                ]
            },
            {
                "conversation_id": "32",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-21T09:05:54.603000",
                        "user": "Dejuan",
                        "text": "I know the feeling."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-21T09:49:27.593000",
                        "user": "Dejuan",
                        "text": "I came across this link on quasiquote recently but I haven\u2019t read it yet https://weinholt.se/articles/quasiquoteliteralmagic/"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-21T09:49:48.194000",
                        "user": "Dejuan",
                        "text": "I don't know if it is any good"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-21T14:47:29.829000",
                        "user": "Dejuan",
                        "text": "now I have to read it"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-21T14:51:55.832000",
                        "user": "Dejuan",
                        "text": "oh it is scheme. lists created with quasiquote are immutable. OK."
                    }
                ]
            },
            {
                "conversation_id": "33",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-21T16:52:07.610000",
                        "user": "Page",
                        "text": "I\\'m working on a version of `dict/c` with chaperones but I\\'m running into a surprising problem that only comes up because of the `failureresult` optionalargument to `dictref`.When the `failureresult` is used I don\\'t want the value contract to apply to that result. But when the failureresult isn\\'t used and the value result happens to be exactly equal to the failureresult I do want the value contract to apply to it. How do I distinguish those though?I tried to take inspiration from Carl Eastlund\\'s `dict/c` implemented in `mischief/contract` but it doesn\\'t use chaperones so it is free to both add an escape continuation and change the `failureresult` input to always be a new synthesized procedure. That way the new synthesized failureresult procedure can call the escape continuation. If I\\'m constrained to chaperones I don\\'t know how to do either of those things.How can I detect whether the `failureresult` is usedornot by the dict\\'s implementation of `dictref` while keeping the `failureresult` a chaperone of the original failureresult?I have also asked on the Racket Users list: https://groups.google.com/d/msg/racketusers/kHQmJh63mU/8SXYlmZzAAAJ"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-21T19:04:13.056000",
                        "user": "Cavin",
                        "text": "@rocketnia I'm not bothered by _all_ quasiquotation in that file. Just stuff like this:````(,@xs @ys @zs)```That's just `(append xs ys zs)` with extra steps."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-21T19:05:23.939000",
                        "user": "Cavin",
                        "text": "I've even found a few cases of this:````(,x)```...because apparently `(list x)` wasn't arcane enough."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-21T19:08:54.960000",
                        "user": "Cavin",
                        "text": "I can see the usefulness of stuff like````(script ([type text/javascript\"] [src scriptsrc]))````"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-21T19:10:14.464000",
                        "user": "Angelus",
                        "text": "``,x`"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-21T19:22:15.647000",
                        "user": "Gorka",
                        "text": "Some of those I only expect to see in test suites for quasiquotation"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-21T19:25:58.651000",
                        "user": "Gorka",
                        "text": "The only time I heavily have used quasiquote is in implementing macros in pretty barebones scheme systems."
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-21T19:29:58.893000",
                        "user": "Cavin",
                        "text": "I\\'d mind it less if the template variables were always just variables not nested expressions. I\\'d much rather read this:```scheme(define scriptsrc (... some complex expression ...))`(script ([type text/javascript\"] [src scriptsrc]))` ```Than this:```scheme`(script ([type text/javascript\"] [src (... some complex expression ...)]))````"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-21T19:32:07.861000",
                        "user": "Gorka",
                        "text": "I have a similar problem with large nested expressions"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-21T19:38:05.171000",
                        "user": "Cavin",
                        "text": "That file also contained instances of this:```scheme(cond [(let ([x ...]) (and something? x)) => (lambda (x) body ...)])```which should just be:```scheme(define x ...)(cond [something? body ...])```"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-21T19:40:55.196000",
                        "user": "Gorka",
                        "text": "!!"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-21T19:53:29.055000",
                        "user": "Cavin",
                        "text": "I don't think the `=>` form of `cond` clauses is a good idea"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-22T07:55:31.873000",
                        "user": "Cavin",
                        "text": "@rocketnia I think my hangup here is that I don't want to use quasiquotation _or_ list manipulation functions. I want actual data structures. If I make a typo I want to find out fast."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-22T23:06:20.884000",
                        "user": "Cavin",
                        "text": "It would help if syntax highlighting colored the quoted parts different like string literals"
                    }
                ]
            },
            {
                "conversation_id": "34",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-21T23:59:26.424000",
                        "user": "Ifra",
                        "text": "There are places I've seen quasiquotation be overused in Racket but when I looked through that file I didn't find any overuse.In particular you mention things like `` `(,@xs @ys @zs)`` and `` `(,x)`` but all six occurrences of `` `(,`` in that file are generating code in an sexpression DSL.It conveys the intent better for refactoring purposes. If someday the sexpression DSL becomes a syntax object DSL for the sake of tracking source locations then all those places that generate code with `` ` `` can be refactored to use ``#` `` but any places that generate code with `list` or `append` will be harder to track down.It allows the quoted code to be edited with the same syntax it would have had if it were in a file by itself. If an expression looks like `` `(,@xs @ys @zs)`` today that's mostly a coincidence. Yesterday it might have looked like `` `(,@xs #:with (foo) (begin @ys) @zs)`` and tomorrow it might look like something else. Spotting patterns in the sexpressions and replacing them with `append` `cons` or `list` can be a clever way to abbreviate but it doesn't last.In general manipulating sexpression code as though it's made of cons cells is a subtle type error. When those cons cells become syntax objects or when the code's lists have little quirky notations in the middle of them the type error springs out. It's better to build up the code using verbatim parentheses under a quasiquotation than to build it up using cons cell operations."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-22T02:14:22.562000",
                        "user": "Ifra",
                        "text": "That does seem pretty weird especially if the function gets wrapped multiple times that way (calling it 2^n times) or if the function has side effects that get duplicated."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-22T02:16:16.344000",
                        "user": "Ifra",
                        "text": "meanwhile @notjack I wrote up an example of something I like about compound unquoted expressions: <https://gist.github.com/rocketnia/ea4eb48897239f9c80bbcc13dd5b2f61> (edited to remove a pretty boring preview)"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-22T08:45:17.076000",
                        "user": "Ifra",
                        "text": "In that case suppose you define individual operations for making various HTML elements so that when you misspell one of their names you can catch it right away.That's practically what Scribble is already. This is the backend of that layer and the dream of being able to use this kind of thing in its own implementation poses a bootstrapping issue."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-23T03:38:50.853000",
                        "user": "Ifra",
                        "text": "Agreed!"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-23T04:28:09.661000",
                        "user": "Ifra",
                        "text": "None"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-23T04:29:09.935000",
                        "user": "Ifra",
                        "text": "I've been thinking lately that a second dimension of indentation could help with this stuff so there's a mockup."
                    }
                ]
            },
            {
                "conversation_id": "35",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-22T01:26:47.333000",
                        "user": "Page",
                        "text": "Is it wrong in a procedure chaperone to call the function I'm supposed to be chaperoning during the chaperone's wrapperproc? It feels kinda evil to me but I'm not sure why"
                    }
                ]
            },
            {
                "conversation_id": "36",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-23T17:33:53.951000",
                        "user": "Zaniah",
                        "text": "I haven't used quasiquote that much but I would love something similar for quasisyntax. I was wondering if it would be generalizable  could code in each phase level get highlighted differently? But I don't think this is possible because I've written macros that expand a single piece of code into two separate phase levels."
                    }
                ]
            },
            {
                "conversation_id": "37",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-24T04:51:53.021000",
                        "user": "Eloisa",
                        "text": "we should all have a voice chat sometime! :)"
                    }
                ]
            },
            {
                "conversation_id": "38",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-24T16:19:02.971000",
                        "user": "Bradley",
                        "text": "Hi anyone here can clarify to me what the executable for the regular variant of racket is? (see: https://download.racketlang.org/license.html)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-24T16:19:21.748000",
                        "user": "Dejuan",
                        "text": "there is a #voice channel"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-24T16:19:36.262000",
                        "user": "Dejuan",
                        "text": "`racket`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-24T16:20:42.342000",
                        "user": "Dejuan",
                        "text": "specifically `bin/racket`"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-24T16:21:04.013000",
                        "user": "Dejuan",
                        "text": "or `gracket` if you need gui stuff"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-24T16:21:16.892000",
                        "user": "Bradley",
                        "text": "ok but regarding this sentence: Any program written in Racket that does not distribute the Regular variant racket binary itself is not affected by the license of that binary. If I build an application and bundle the runtime with raco exe ... is that the binary itself ?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-24T16:21:46.305000",
                        "user": "Bradley",
                        "text": "is my code then lgpl licensed ? this is really confusing sorry"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-24T16:21:58.185000",
                        "user": "Dejuan",
                        "text": "no racket moved to mit/apache"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-24T16:22:11.339000",
                        "user": "Dejuan",
                        "text": "and it confuses everyone"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-24T16:22:13.016000",
                        "user": "Bradley",
                        "text": "yea but this clause made me insecure here"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-24T16:22:54.613000",
                        "user": "Dejuan",
                        "text": "but the thing to remember is your code is your code"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-24T16:23:10.637000",
                        "user": "Dejuan",
                        "text": "Where is that sentence? I'll see if it can be removed"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-24T16:24:17.734000",
                        "user": "Bradley",
                        "text": "https://download.racketlang.org/license.html the sentence is: Any program written in Racket that does not distribute the Regular variant racket binary itself is not affected by the license of that binary. in conjunction with regular version of racket. my guess is this is needed but i did not understand it really"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-24T16:24:40.842000",
                        "user": "Eloisa",
                        "text": "Hey @StephenD ! Sorry about the house"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-24T16:24:43.359000",
                        "user": "Eloisa",
                        "text": "noise"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-05-24T16:24:51.672000",
                        "user": "Dejuan",
                        "text": "what noise?"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-05-24T16:25:09.099000",
                        "user": "Eloisa",
                        "text": "I muted but I'm hosting a small group at my house"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-05-24T16:25:46.269000",
                        "user": "Eloisa",
                        "text": "What are you working on?"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-05-24T16:26:05.135000",
                        "user": "Dejuan",
                        "text": "can you see my screen?"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-05-24T16:26:13.696000",
                        "user": "Eloisa",
                        "text": "Nope"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-05-24T16:26:14.229000",
                        "user": "Dejuan",
                        "text": "I was wonderign if that was working"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-05-24T16:26:29.013000",
                        "user": "Eloisa",
                        "text": "I just see two streams of your face"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-05-24T16:26:37.504000",
                        "user": "Dejuan",
                        "text": "rofl!"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-05-24T16:26:48.635000",
                        "user": "Eloisa",
                        "text": "Try showing your entire screen and not just one app :)"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-05-24T16:27:33.503000",
                        "user": "Dejuan",
                        "text": "sorry about that  my face once is enough. Twice is too much"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-05-24T16:27:41.072000",
                        "user": "Eloisa",
                        "text": "Hehe no worries"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-05-24T16:27:48.634000",
                        "user": "Eloisa",
                        "text": "I'll check out what's going on elsewhere"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-05-24T17:13:45.641000",
                        "user": "Dejuan",
                        "text": "@NeroLXIV https://docs.racketlang.org/license/index.html"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-05-24T17:28:40.418000",
                        "user": "Dejuan",
                        "text": "@NeroLXIV use CS variant if you are uncomfortable with LGPL"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-05-24T17:29:09.110000",
                        "user": "Dejuan",
                        "text": "None"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-05-24T17:29:31.915000",
                        "user": "Dejuan",
                        "text": "racket has two variants"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-05-24T17:29:34.149000",
                        "user": "Dejuan",
                        "text": "The traditional Racket runtime system includes code distributed under the GNU Lesser General Public License version 3.The Racket on Chez Scheme runtime system embeds Chez Scheme which is distributed under the Apache version 2.0 license."
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-05-24T17:30:37.193000",
                        "user": "Dejuan",
                        "text": "the Chez Scheme (CS) variant is newer and faster and has has a cool nanopass compiler"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-05-24T20:03:05.530000",
                        "user": "Dejuan",
                        "text": "> Hm does this new runtime (with chez) have problems with racket gui? Seems like every racket program with gui spams errors to my terminal but does not start (e.g. drracket or a simple gui example i wrote). See: https://pastebin.com/N57znEYc etc... it never stops.@NeroLXIV that does not look good"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-05-24T20:04:42.251000",
                        "user": "Dejuan",
                        "text": "What version Racket ?What OS? Architecture?"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-05-24T20:05:51.295000",
                        "user": "Bradley",
                        "text": "7.7 ubuntu 20.04 64bit"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-05-24T20:07:52.388000",
                        "user": "Dejuan",
                        "text": "Do you have a sample program that triggers those errors ?"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-05-24T20:09:16.405000",
                        "user": "Bradley",
                        "text": "just starting drracket triggers it. i also have a small program but i am currently on another machine"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-05-24T20:12:39.811000",
                        "user": "Dejuan",
                        "text": "Ok can you log those details on https://github.com/racket/drracket/issues/new and @StephenD so I get a notification: I\u2019m on MacOS but I\u2019ll try DrRacket from the command line to see if I can reproduce the issue"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-05-24T20:13:40.113000",
                        "user": "Bradley",
                        "text": "Ok I will create an issue then probably tomorrow."
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-05-25T09:49:52.646000",
                        "user": "Bradley",
                        "text": "I just tried this on a ubuntu 18.04 vm at work and the same result. this is btw not a drracket issue but a gracket one. every start of gracket ends up like this"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-05-25T09:52:25.503000",
                        "user": "Dejuan",
                        "text": "Thanks that helps narrow things a little."
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-05-25T09:56:18.957000",
                        "user": "Dejuan",
                        "text": "Can I just check you are using 7.7 CS variant from https://download.racketlang.org ?"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-05-25T09:58:08.060000",
                        "user": "Dejuan",
                        "text": "If you have time can you check using a nightly snapshot? https://snapshot.racketlang.org"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-05-25T11:15:23.687000",
                        "user": "Dejuan",
                        "text": "https://www.cs.utah.edu/plt/snapshots/current/installers/racket7.7.0.6x86_64linuxcsxenial.sh"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-05-25T18:03:53.157000",
                        "user": "Dejuan",
                        "text": "https://docs.racketlang.org/raco/exe.html"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-05-25T18:04:11.519000",
                        "user": "Dejuan",
                        "text": "I don\u2019t use raco exe so I don\u2019t know."
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-05-25T18:05:36.044000",
                        "user": "Dejuan",
                        "text": "It would be good to work out what is causing the errors for newer versions of Ubuntu"
                    },
                    {
                        "message_number": "49",
                        "ts": "2020-05-25T18:06:01.485000",
                        "user": "Bradley",
                        "text": "If I can help with something feel free to ask"
                    },
                    {
                        "message_number": "50",
                        "ts": "2020-05-25T18:06:39.954000",
                        "user": "Dejuan",
                        "text": "The racket slack is much larger  someone there might know. Did you log the issue?"
                    },
                    {
                        "message_number": "51",
                        "ts": "2020-05-25T18:07:34.076000",
                        "user": "Bradley",
                        "text": "not yet . in which repo should I report it? I guess drracket was the wrong repo"
                    },
                    {
                        "message_number": "52",
                        "ts": "2020-05-25T18:07:58.749000",
                        "user": "Bradley",
                        "text": "oh slack also exists.. i was in the irc channel first \ud83d\ude42"
                    },
                    {
                        "message_number": "53",
                        "ts": "2020-05-25T18:26:51.594000",
                        "user": "Dejuan",
                        "text": "> not yet . in which repo should I report it? I guess drracket was the wrong repo@NeroLXIV good point  probably log against https://github.com/racket/racket/issues/new"
                    },
                    {
                        "message_number": "54",
                        "ts": "2020-05-25T18:29:07.797000",
                        "user": "Bradley",
                        "text": "Ok I will file the issue today. I also joined the slack."
                    },
                    {
                        "message_number": "55",
                        "ts": "2020-05-28T19:54:40.407000",
                        "user": "Eloisa",
                        "text": "Racket seems to be closer to Python than Lisp in it's approach to REPLs"
                    },
                    {
                        "message_number": "56",
                        "ts": "2020-05-28T19:56:24.392000",
                        "user": "Dejuan",
                        "text": "How so?"
                    }
                ]
            },
            {
                "conversation_id": "39",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-24T19:16:56.504000",
                        "user": "Aulii",
                        "text": "@StephenD @NeroLXIV the regular racket binary is included in programs created by `raco exe` and `raco distribute` if you use the Regular variant (as listed on the download page)."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-24T19:26:39.133000",
                        "user": "Bradley",
                        "text": "@StephenD @samth Thanks good thing I asked. I am still far away from distribution but I will give the chez variant a shot anyways. Heard a lot of good things about it. Thanks for the help! Licensing is complicated \ud83d\ude42"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-24T19:40:22.565000",
                        "user": "Bradley",
                        "text": "Hm does this new runtime (with chez) have problems with racket gui? Seems like every racket program with gui spams errors to my terminal but does not start (e.g. drracket or a simple gui example i wrote). See: https://pastebin.com/N57znEYc etc... it never stops."
                    }
                ]
            },
            {
                "conversation_id": "40",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-24T21:05:13.278000",
                        "user": "Aulii",
                        "text": "@NeroLXIV I do not see those errors"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-24T21:08:02.080000",
                        "user": "Bradley",
                        "text": "Same system/arch?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-25T10:33:30.111000",
                        "user": "Bradley",
                        "text": "Yes I used the download. link. I will try the snapshot in a few mins."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-25T11:12:19.025000",
                        "user": "Bradley",
                        "text": "Seems like I don't have permission to download the file from the snapshot server: https://www.cs.utah.edu/plt/snapshots/current/installers/racket7.7.0.6x86_64linuxcsxenial.sh is 403 forbidden for me"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-25T11:22:11.129000",
                        "user": "Bradley",
                        "text": "maybe it's because of my company vpn.. will try again without it in a sec"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-25T11:49:58.446000",
                        "user": "Bradley",
                        "text": "same result with the snapshot"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-25T12:45:13.446000",
                        "user": "Bradley",
                        "text": "i will also try this this evening with a new ubuntu 16.04 vm since it seems like racket(cs) was built on this system"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-25T17:45:37.639000",
                        "user": "Bradley",
                        "text": "OK @StephenD  1) I installed an ubuntu 16.04 VM and there it works so seems to be a problem with newer ubuntu versions (x64). 2) Thanks for updating that license text. It\\'s way more informative now. I just wonder if you use `raco exe` on linux does it not also statically link the runtime?"
                    }
                ]
            },
            {
                "conversation_id": "41",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-28T18:17:40.392000",
                        "user": "Neema",
                        "text": "Man I've been using Common Lisp a bit lately cause I wanted more performance and I've really been enjoying the interactive development and debugging via Slime... Does Racket have anything similar? It's been a great experience so far"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-28T18:53:12.024000",
                        "user": "Neema",
                        "text": "Yea I use Racketmode"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-28T20:38:15.909000",
                        "user": "Cavin",
                        "text": "the way the repl isn't mutable / live"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-05-28T20:38:22.840000",
                        "user": "Neema",
                        "text": "Well consider what happens when you get an error in a racket vs Lisp REPL. When you hit an error Racket just gives you the error and aborts back to the top level  which is exactly what Python does. Common Lisp lets you substitute values change the function definition and rewind to before the error lets you provide an expression to evaluate instead all sorts of potential options depending on what the error is. Racket also doesn't let you compile individual functions and have them autoloaded back into the REPL like Python. Common Lisp I can treat individual functions as compilation units and recompile individual function on the fly."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-05-28T20:39:53.173000",
                        "user": "Dejuan",
                        "text": "is that better or worse?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-05-28T20:41:06.628000",
                        "user": "Dejuan",
                        "text": "(sorry I know that is a loaded question)"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-05-28T20:41:29.345000",
                        "user": "Cavin",
                        "text": "It's great for building things that are expensive to restart like games and websites"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-05-28T20:42:32.405000",
                        "user": "Neema",
                        "text": "I mean I wouldn't say it's either. I'd say Racket just has more of a traditional development cycle more like Python or JavaScript than Common Lisp"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-05-28T20:42:42.073000",
                        "user": "Cavin",
                        "text": "but if starting a fresh repl doesn't take very long than there isn't much benefit relative to the very huge cost of needing to keep track of the repl state"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-05-28T20:43:10.410000",
                        "user": "Dejuan",
                        "text": "I'm assuming it takes discipline to get right"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-05-28T20:43:47.769000",
                        "user": "Neema",
                        "text": "Yea keeping track of repl state seems like a pain  what I'm doing is mostly stateless so the REPL just means a much quicker feedback loop for me"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-05-28T20:44:24.955000",
                        "user": "Cavin",
                        "text": "Yes and even if you do it has other tradeoffs. Whole module optimization becomes impossible and macros become way less useful (can't reload a macro expanded definition easily)"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-05-28T20:44:37.237000",
                        "user": "Cavin",
                        "text": "(correctly reload I mean)"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-05-28T20:45:30.732000",
                        "user": "Dejuan",
                        "text": "And there are other ways to deal with things that are expensive to restart."
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-05-28T20:45:56.399000",
                        "user": "Dejuan",
                        "text": "(though I admit I don't know how quickscript works)"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-05-28T20:45:57.641000",
                        "user": "Neema",
                        "text": "That's true but Common lisp (well SBCL) is really fast anyways so I'm pretty satisfied with the level of optimization I can do"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-05-28T20:47:02.389000",
                        "user": "Neema",
                        "text": "But I know you can also tell SBCL where focus it's optimizations so you can tell it to trade memory efficiency for speed"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-05-28T20:47:33.802000",
                        "user": "Dejuan",
                        "text": "thats nice."
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-05-28T20:47:43.203000",
                        "user": "Dejuan",
                        "text": "can always buy more ram."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-05-28T20:47:51.729000",
                        "user": "Dejuan",
                        "text": "(or the customer can :))"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-05-28T20:49:26.058000",
                        "user": "Neema",
                        "text": "Yea it seems pretty nice. As a programming language I much prefer Racket personally but using CL more the past few weeks I can definitely see the appeal over Racket"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-05-28T20:50:45.066000",
                        "user": "Dejuan",
                        "text": "lucky!"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-05-28T20:51:04.525000",
                        "user": "Dejuan",
                        "text": "to have choices"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-05-28T20:54:52.780000",
                        "user": "Neema",
                        "text": "Lots of Racket stuff I've been really missing though... I've got a whole directory filled with small functions I've needed that are part of Racket but I don't want to bring in a whole library for in CL"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-05-28T20:56:56.494000",
                        "user": "Dejuan",
                        "text": "I'm looking forward to the speed increases the chez nanopass compiler should bring to racket."
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-05-28T20:57:29.271000",
                        "user": "Neema",
                        "text": "Same"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-05-28T20:57:54.047000",
                        "user": "Dejuan",
                        "text": "I seem to remember you could trade compile time for speed but I might be misremembering."
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-05-28T20:59:03.846000",
                        "user": "Neema",
                        "text": "Oh nice you can do that in Rust too. It'll give you a quick compile with fewer optimizations but you can add a flag to tell it to run a production build"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-05-28T20:59:15.175000",
                        "user": "Dejuan",
                        "text": "(I just spent 53 minutes compiling racket)"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-05-28T20:59:32.546000",
                        "user": "Neema",
                        "text": "oof"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-05-28T20:59:36.834000",
                        "user": "Neema",
                        "text": "What are you working on?"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-05-28T21:00:40.588000",
                        "user": "Dejuan",
                        "text": "adding an error message overlay to drracket"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-05-28T21:01:18.843000",
                        "user": "Dejuan",
                        "text": "if I can get that going I'll move on to making urls in the comments work as links"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-05-28T21:02:36.283000",
                        "user": "Neema",
                        "text": "Ohh nice!"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-05-28T21:03:59.919000",
                        "user": "Dejuan",
                        "text": "\ud83e\udd1e wish me luck"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-05-28T21:04:58.472000",
                        "user": "Cavin",
                        "text": "that would be amazing"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-05-28T21:05:06.008000",
                        "user": "Neema",
                        "text": "Good luck!"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-05-29T11:33:06.281000",
                        "user": "Angelus",
                        "text": "> Racket seems to be closer to Python than Lisp in it's approach to REPLsI believe this is by design. It discourages REPLbased debugging and incremental development in favour of a compileandrun approach within DrRacket."
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-05-29T11:43:15.431000",
                        "user": "Angelus",
                        "text": "I think it's this one: https://blog.racketlang.org/2009/03/thedrschemereplisnttheoneinemacs.html"
                    }
                ]
            },
            {
                "conversation_id": "42",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-28T18:47:45.418000",
                        "user": "Cavin",
                        "text": "There's `racketmode` for emacs users."
                    }
                ]
            },
            {
                "conversation_id": "43",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-29T11:33:24.104000",
                        "user": "Angelus",
                        "text": "I remember reading something about it on the Racket Blog but I can't find it now"
                    }
                ]
            },
            {
                "conversation_id": "44",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-29T18:51:06.846000",
                        "user": "Neema",
                        "text": "Hmm I feel like it would be useful to have an easy way to check the state of the REPL like a function that allows you to see all variables currently in the REPL and then inspect their values"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-29T18:51:40.392000",
                        "user": "Neema",
                        "text": "Cause I can 100% see REPL state getting out of hand in a larger application that make it a little hard to manage"
                    }
                ]
            },
            {
                "conversation_id": "45",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-29T19:30:05.340000",
                        "user": "Dejuan",
                        "text": "Might be a nice script or plugin"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-01T05:54:18.859000",
                        "user": "Neema",
                        "text": "Do anyone happen to have any insights as to why the benchmarks game results show Racket 7.7 as being generally faster than Racket 7.7 CS? https://benchmarksgameteam.pages.debian.net/benchmarksgame/fastest/racketracketcs.html"
                    }
                ]
            },
            {
                "conversation_id": "46",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-29T20:45:37.470000",
                        "user": "Cavin",
                        "text": "there's `debugrepl` which isn't that but it's a similar idea https://docs.racketlang.org/debug/index.html?q=debugrepl#%28form._%28%28lib._debug%2Frepl..rkt%29._debugrepl%29%29"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-05-29T20:46:59.876000",
                        "user": "Cavin",
                        "text": "maybe a look at state of the repl API could use a similar implementation?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-05-29T20:47:57.748000",
                        "user": "Dejuan",
                        "text": "And the stepper"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-01T07:22:14.629000",
                        "user": "Cavin",
                        "text": "It might be because they're not compiling the benchmarks first"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-01T19:40:46.627000",
                        "user": "Gorka",
                        "text": "And now there is another bitvector library :("
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-01T19:51:47.753000",
                        "user": "Cavin",
                        "text": "@oaktownsam link?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-01T19:52:13.812000",
                        "user": "Gorka",
                        "text": "It was in Racket News. One tick"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-01T19:52:40.137000",
                        "user": "Gorka",
                        "text": "https://linki.tools/2020/05/announcingracketbitvectorsbv.html"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-01T19:53:28.777000",
                        "user": "Cavin",
                        "text": "ah that makes sense"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-06-01T19:55:01.029000",
                        "user": "Cavin",
                        "text": "time for a feature matrix comparison with Rebellion bitstrings?"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-06-01T19:56:03.374000",
                        "user": "Cavin",
                        "text": "although if I'm reading these docs right there's five bitvector libraries: there's one in Rosette"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-06-01T19:56:10.156000",
                        "user": "Gorka",
                        "text": "I\\'m weighing how much effort I would put into rolling all of the features of the others into Rebellion."
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-06-01T19:56:24.331000",
                        "user": "Gorka",
                        "text": "Yeah probably"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-06-01T19:58:34.955000",
                        "user": "Cavin",
                        "text": "lexicographic comparator for bitstrings could be worth adding"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-06-01T19:59:31.336000",
                        "user": "Cavin",
                        "text": "wish the `extract` function in that package was named `subbitvector`"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-06-01T19:59:55.423000",
                        "user": "Gorka",
                        "text": "I was doing a Genetic Algorithm so being able to parse the bitstring was valuable so I chose the TGJ package."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-06-01T20:00:33.133000",
                        "user": "Cavin",
                        "text": "with the pattern matching?"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-06-01T20:02:39.961000",
                        "user": "Gorka",
                        "text": "Yeah"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-06-01T20:03:30.405000",
                        "user": "Gorka",
                        "text": "It also implemented them as ropes which I liked"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-06-01T20:04:02.916000",
                        "user": "Cavin",
                        "text": "for concatenation reasons?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-06-01T20:05:25.328000",
                        "user": "Gorka",
                        "text": "No real reason. I just think Ropes are cool datastructures."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-06-01T20:10:35.894000",
                        "user": "Cavin",
                        "text": "lol gotcha :p"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-06-01T20:13:20.698000",
                        "user": "Cavin",
                        "text": "I've been thinking about what to do with Rebellion's collections"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-06-01T20:13:51.218000",
                        "user": "Cavin",
                        "text": "considering using more generics"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-06-01T20:14:17.802000",
                        "user": "Cavin",
                        "text": "also possibly mutable versions"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-06-01T20:17:35.526000",
                        "user": "Cavin",
                        "text": "get this: I'm considering using generics _for performance reasons_"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-06-01T20:19:42.512000",
                        "user": "Gorka",
                        "text": "Ugh. That reminds me that I need to send a PR to someone about a pretty bad performance effecting contract that I've been sitting on for 18 months \ud83d\ude26"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-06-01T20:20:29.132000",
                        "user": "Gorka",
                        "text": "(I\\'m saying it out loud to put more public pressure on myself)"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-06-01T20:21:42.803000",
                        "user": "Cavin",
                        "text": "\ud83d\ude2e details?"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-06-01T20:25:00.660000",
                        "user": "Gorka",
                        "text": "It's a contract in CLDR that some values are `json?`. It effects writing and reading date time values in gregor."
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-06-01T20:25:23.185000",
                        "user": "Gorka",
                        "text": "`json?` is not a recursive function and really not a contract check."
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-06-01T20:31:10.565000",
                        "user": "Gorka",
                        "text": "Here are some samples of generating 200,000 random time stamps with a variety of format strings (note non of these format strings actually write out the times.)```$ racket generate.rkt 200000  xx  : ::\"executing with cpu time: 4380 real time: 4467 gc time: 16executing with xx\"cpu time: 7690 real time: 7801 gc time: 16executing with \"cpu time: 5838 real time: 6659 gc time: 10executing with :\"cpu time: 21636 real time: 22739 gc time: 17executing with ::\"cpu time: 39928 real time: 43023 gc time: 22```"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-06-01T20:34:37.968000",
                        "user": "Cavin",
                        "text": "oh dear"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-06-02T00:12:33.234000",
                        "user": "Gorka",
                        "text": "Oops actually not true xx writes the timezone offset"
                    }
                ]
            },
            {
                "conversation_id": "47",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-05-30T03:10:01.671000",
                        "user": "Rahmel",
                        "text": "xrepl's apropos might be something vaguely in that neighborhood: <https://docs.racketlang.org/xrepl/index.html#%28xrepl._apropos%29> I played with it a little bit but didn't get too deep into exactly what it makes available"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-01T07:01:38.595000",
                        "user": "Dejuan",
                        "text": "You could probably look at the last racket cs update on the Racket blog and try work out the corresponding benchmarks."
                    }
                ]
            },
            {
                "conversation_id": "48",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-01T20:31:26.496000",
                        "user": "Gorka",
                        "text": "bbiam"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-02T18:36:28.955000",
                        "user": "Gorka",
                        "text": "FYI here is after I\\'ve made some improvements:```$ racket formatperf.rkt 200000  xx  : :: executing with cpu time: 2148 real time: 2147 gc time: 9executing with xx\"cpu time: 3847 real time: 3846 gc time: 9executing with \"cpu time: 2417 real time: 2416 gc time: 8executing with :\"cpu time: 2210 real time: 2209 gc time: 7executing with ::\"cpu time: 2260 real time: 2259 gc time: 7```"
                    }
                ]
            },
            {
                "conversation_id": "49",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-03T06:43:33.827000",
                        "user": "Indyah",
                        "text": "is there a way I can grab the code for any module Im requiring such that I could statically link my program and compile it from scratch without an internet connection?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-03T06:49:39.974000",
                        "user": "Cavin",
                        "text": "@thornAvery that should be how it works already you don't need an internet connection for `require` to work (unless you're doing something strange)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-03T06:51:19.056000",
                        "user": "Indyah",
                        "text": "I mean like if I do `(require somepackagenotinbase)` is there a way I can download it to have a local copy rather than requiring `raco pkg install somepackagenotinbase` on a new machine I wanna compile my thing on"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-03T06:51:48.714000",
                        "user": "Indyah",
                        "text": "say as proofing just in case he raco repos are down but I need to compile from scratch"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-03T06:53:14.503000",
                        "user": "Cavin",
                        "text": "I'm not sure I follow. Are you installing your program on lots of different machines?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-03T06:54:01.869000",
                        "user": "Indyah",
                        "text": "I have times where I dont have internet connection for a long time so Im trying to proof myself to not rely on the internet to build something"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-03T06:56:26.224000",
                        "user": "Cavin",
                        "text": "you need to install each package you use but only once. After you run `raco pkg install` you have a local copy on your machine. Or do you want a local copy of _every_ package so you're not screwed if by the time you realize you need package X you're on a plane or something and don't have internet?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-03T07:24:27.793000",
                        "user": "Indyah",
                        "text": "Yeah I basically wanna be able to raco pkg install from a local directory and be able to pre download a package so I have it in a local directory to be able to raco pkg install from"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-03T08:01:47.903000",
                        "user": "Cavin",
                        "text": "@Majestyxrd that works for one package but doing that for the whole catalog one package at a time would probably suck"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-06-03T08:02:14.577000",
                        "user": "Cavin",
                        "text": "I think there's a way to do it by stringing together some of the catalogrelated commands like `raco pkg catalogcopy` or something"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-06-04T08:54:32.919000",
                        "user": "Cavin",
                        "text": "@thornAvery yes provided you pass the `X` identifier to the macro as an an argument"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-06-04T08:54:53.584000",
                        "user": "Cavin",
                        "text": "(also in regards to your question about the local package stuff `raco pkg catalogarchive` does what you want)"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-06-05T02:25:22.646000",
                        "user": "Shalaya",
                        "text": "@Majestyxrd im using arch and racket yes. i dont think they know about racket cs yet lol going to have to wait until it gets fully integrated into racket or install racket cs on your own"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-06-05T02:37:18.255000",
                        "user": "Caleb",
                        "text": "yeah there's no cs package in the main repos nor in aur"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-06-05T02:37:37.636000",
                        "user": "Caleb",
                        "text": "so I thought I'd roll my own package but I don't know how just yet"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-06-05T17:14:36.646000",
                        "user": "Gorka",
                        "text": "Building Racket from source is not too bad. Also the Racket binary package for linux installs pretty easily."
                    }
                ]
            },
            {
                "conversation_id": "50",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-03T08:00:19.565000",
                        "user": "Caleb",
                        "text": "you can git clone it very likely and then you can install from the local directory"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-03T08:01:59.093000",
                        "user": "Caleb",
                        "text": "then setup?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-04T06:32:52.709000",
                        "user": "Caleb",
                        "text": "anybody using arch and racket cs? 5 days ago the racket package in [community] got upgraded to 7.7 but there's no package (neither in aur)"
                    }
                ]
            },
            {
                "conversation_id": "51",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-04T06:56:17.607000",
                        "user": "Indyah",
                        "text": "I know that things `define`d inside a macro will not be defined at the call site but are things at the call site able to be `set!` inside a macro?say I have `(define X 0)` and a macro that turns into `(set! X 5)` or something"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-04T08:55:00.567000",
                        "user": "Indyah",
                        "text": "oooh thank you"
                    }
                ]
            },
            {
                "conversation_id": "52",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-08T05:05:58.849000",
                        "user": "Greysi",
                        "text": "hey"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-08T05:06:07.764000",
                        "user": "Greysi",
                        "text": "so datum is just a container for code and that datum can be later transformed into syntax and used? D;"
                    }
                ]
            },
            {
                "conversation_id": "53",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-08T11:57:14.620000",
                        "user": "Dejuan",
                        "text": "sorry there are not many of us on here at this time. Try slack or racketuser there are more racketeers in both those spaces."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-08T12:33:26.145000",
                        "user": "Dejuan",
                        "text": "Welcome to the Racket Discord server!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-09T08:24:50.691000",
                        "user": "Dejuan",
                        "text": "WIP by Bogdan Popa: https://docs.racketlang.org/httpeasy/index.html"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-09T08:25:53.563000",
                        "user": "Dejuan",
                        "text": "and an unrelated thing"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-12T09:20:25.895000",
                        "user": "Dejuan",
                        "text": "Rackathon? Is there any interest in an online hackathonlike thing in a similar form to the Zurihack ? ( https://zfoh.ch/zurihac2020/ screenshot in thread) ( I\u2019d like to find a better term as hackathon has a bad reputation as being exclusionary to women and minority groups) \ud83d\udc4d for yes \ud83d\udc4e for no"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-12T12:11:57.503000",
                        "user": "Dejuan",
                        "text": "[ICYMI]RacketCon announcement on racketusers: https://groups.google.com/d/msg/racketusers/jS6UCqvEd7A/CAYe5iZfAgAJ"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-12T14:08:01.090000",
                        "user": "Dejuan",
                        "text": "Hi @Deleted User I've posted on racket slack  I don't know the impact but my instinct is `application/x.racket` if it is unregistered  can you hold off most of the core team are in the us?"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-12T14:13:42.941000",
                        "user": "Dejuan",
                        "text": "https://tools.ietf.org/html/rfc6838#section3.3"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-12T14:17:13.356000",
                        "user": "Angelus",
                        "text": "Sure I'll be surveying and asking around for a few days before sending the patch."
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-06-12T14:17:49.808000",
                        "user": "Dejuan",
                        "text": "np. fwiw the `x` prefix seems to be deprecated"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-06-12T14:18:08.281000",
                        "user": "Angelus",
                        "text": "Ah"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-06-12T14:18:30.067000",
                        "user": "Angelus",
                        "text": "The mimetype is totally optional btw"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-06-12T14:18:49.288000",
                        "user": "Angelus",
                        "text": "Right now I'm trying to understand the bytecode signature."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-06-12T14:21:09.635000",
                        "user": "Dejuan",
                        "text": "What is a bytecode signature'?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-06-12T14:23:53.617000",
                        "user": "Angelus",
                        "text": "The magic number of the bytecode files (`.zo`)."
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-06-12T14:25:22.158000",
                        "user": "Angelus",
                        "text": "I deduced that it begins with `#~` https://docs.racketlang.org/reference/printing.html?q=reader#%28part._printcompiled%29Then is followed by a version length byte and the version string (`37.7` on my end).Then a VM length byte and the VM string (`6racket` on my end)."
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-06-12T14:25:29.146000",
                        "user": "Angelus",
                        "text": "I'm trying to generalise it now."
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-06-12T14:36:57.541000",
                        "user": "Dejuan",
                        "text": "should just ask mflatt he developed that  and I'm pretty sure .zo goes away for racket cs. he is on slack not reddit though"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-06-12T14:40:39.534000",
                        "user": "Angelus",
                        "text": "Hmm yeah I was also wondering how it'd work for Racket CS."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-06-12T14:41:15.180000",
                        "user": "Angelus",
                        "text": "Presumably not like `#~37.711chezscheme`?"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-06-12T14:43:39.501000",
                        "user": "Dejuan",
                        "text": "maybe  might depend on if changes in the racketcs fork of Chez get merged back into the main Chez."
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-06-12T14:44:02.465000",
                        "user": "Dejuan",
                        "text": "if you cant get onto slack I'm happy to ask on your behalf?"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-06-12T14:44:59.769000",
                        "user": "Dejuan",
                        "text": "or you could just log it as a query on https://github.com/racket/racket/issues/new"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-06-12T14:47:43.582000",
                        "user": "Angelus",
                        "text": "Ah I'll try to get on the Slack."
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-06-14T21:21:21.923000",
                        "user": "Kasin",
                        "text": "I have little time for racket anymore \ud83d\ude22 but thats okay its only 7 more weeks and then ill be back at it"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-06-17T13:36:13.162000",
                        "user": "Dejuan",
                        "text": "[crosspost form racketusers]It was very nice to see Prof\\xa0Diomidis Spinellis\\xa0talk about how his students had good experiences working on open source projects for their coursework.\\xa0It made me wonder how the Racket community is performing and if there are any gaps we can fill?\\xa0Onboarding?Mentoring?Pull request Workflows?Code check bots?Use of [WIP] tag to allow incremental review of work in progress?Anything else? by \u2018we\u2019 I mean the community of racketeers not the core team who already do so much.https://twitter.com/CoolSWEng/status/1273010363198570496?s=20https://groups.google.com/g/racketusers/c/RZhF5jexKc/m/_Vefqh0EBgAJ"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-06-23T16:13:23.446000",
                        "user": "Eloisa",
                        "text": "None"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-06-23T16:13:27.229000",
                        "user": "Eloisa",
                        "text": "\ud83e\udd70"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-06-23T16:13:46.855000",
                        "user": "Eloisa",
                        "text": "Linux best boi :)"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-06-23T16:14:27.920000",
                        "user": "Eloisa",
                        "text": "I'd love to use BSD but it doesn't have a lot of the packages/software I need. Also battery and gaming wouldn't be good"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-06-23T16:14:35.821000",
                        "user": "Dejuan",
                        "text": "\ud83d\ude00"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-06-23T16:20:14.491000",
                        "user": "Neema",
                        "text": "Added my Linux vote \ud83d\udc4c I use Linux for everything except games lol"
                    }
                ]
            },
            {
                "conversation_id": "54",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-08T12:33:12.570000",
                        "user": "Mayu",
                        "text": "hello all!"
                    }
                ]
            },
            {
                "conversation_id": "55",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-09T11:36:43.587000",
                        "user": "Angelus",
                        "text": "I'll try to attend."
                    }
                ]
            },
            {
                "conversation_id": "56",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-12T12:52:13.755000",
                        "user": "Angelus",
                        "text": "I'm writing a patch for `file(1)` to add Scheme file types and I have a question"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-12T12:52:36.136000",
                        "user": "Angelus",
                        "text": "If a file begins with `#lang ` should it be treated as `application/xracket` `text/xracket` or `text/xscript.racket`?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-12T12:54:22.585000",
                        "user": "Angelus",
                        "text": "I can of course add additional constraints like `#lang typed` and `#lang racket`."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-12T13:24:30.101000",
                        "user": "Angelus",
                        "text": "How does this look?```# Racket #lang directive0\\tstring\\t#lang\\\\ \\tRacket source code!:mime\\ttext/xracket>6\\tstring\\tscheme\\t\\tMzScheme program text!:mime\\ttext/xscheme>6\\tstring\\tracket\\t\\tRacket program text!:mime\\ttext/xracket!:ext\\trkt>6\\tstring\\ttyped\\t\\tTyped Racket program text!:mime\\ttext/xracket!:ext\\trkt>6\\tstring\\tscribble\\tScribble document!:ext\\tscrbl```"
                    }
                ]
            },
            {
                "conversation_id": "57",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-14T22:10:02.599000",
                        "user": "Angelus",
                        "text": "Good luck!"
                    }
                ]
            },
            {
                "conversation_id": "58",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-23T16:40:40.358000",
                        "user": "Dejuan",
                        "text": "https://blog.racketlang.org/2020/06/racketsurvey2020.html"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-23T16:41:08.858000",
                        "user": "Dejuan",
                        "text": "official survey!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-24T00:06:38.576000",
                        "user": "Dejuan",
                        "text": "The orange site https://news.ycombinator.com/item?id=23620314"
                    }
                ]
            },
            {
                "conversation_id": "59",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-24T02:18:03.551000",
                        "user": "Eloisa",
                        "text": "hehe orange site"
                    }
                ]
            },
            {
                "conversation_id": "60",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-24T08:29:08.717000",
                        "user": "Caleb",
                        "text": "go vrrrrr"
                    }
                ]
            },
            {
                "conversation_id": "61",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-24T17:17:20.783000",
                        "user": "Leslye",
                        "text": "[Typed Racket] Is there a way to write unit tests that assert types are correct? E.g. I would like a test that shows that (min 5) does not typecheck but (min 5 7) does. I did see that turnstile has this capability. I also see there is an asserttypecheckfail which is basically what I wanted so maybe that's a reasonable way to do it... makes me nervous to touch a big codebase without knowing how to write decent checks."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-24T17:26:26.883000",
                        "user": "Gorka",
                        "text": "That may be a good Slack/mail list/irc question. I thought SamTH was here but maybe that was short lived. He's the primary dev of TR and I know he is in those places."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-24T17:28:03.317000",
                        "user": "Gorka",
                        "text": "A difficulty I see is that those checks would probably have to run in some sort of metatype checking phase."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-24T17:28:28.286000",
                        "user": "Gorka",
                        "text": "Or rather they would need to be interleaved at type checking."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-24T17:34:53.639000",
                        "user": "Gorka",
                        "text": "A trick that could be done is providing the function under test and require it in an untyped module and then at runtime the contract system would throw an exception."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-24T17:37:06.707000",
                        "user": "Gorka",
                        "text": "Not sure 100% sure why you want to test this. If a typecheck fails the module will fail to compile."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-24T17:48:42.488000",
                        "user": "Leslye",
                        "text": "Thanks will try there. Want to check on the principle that you shouldn't change stuff without a test. (The item that needs testing is a change in the TR baseenv. Small but being careless isn't a good way to start.)"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-24T17:56:45.403000",
                        "user": "Gorka",
                        "text": "Ohhhhh"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-24T17:57:43.908000",
                        "user": "Gorka",
                        "text": "I thought you were testing user level types not base types. Yeah ask SamTH he will know."
                    }
                ]
            },
            {
                "conversation_id": "62",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-25T00:41:10.250000",
                        "user": "Cavin",
                        "text": "> Not sure 100% sure why you want to test this. If a typecheck fails the module will fail to compile.@oaktownsam For user level types it's handy to test that the API you're designing catches the mistakes that you expect it to at compile time"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-25T00:42:09.484000",
                        "user": "Cavin",
                        "text": "but I would only bother with that for exceptional cases"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-25T00:42:28.373000",
                        "user": "Page",
                        "text": "Like for example if I'm designing a library to typecheck units of measure I want to make sure that adding two quantities in meters typechecks fine but adding meters and seconds should fail to typecheck"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-25T00:42:32.905000",
                        "user": "Gorka",
                        "text": "True but I don't think any mainstream types languages can do that."
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-25T00:42:42.574000",
                        "user": "Cavin",
                        "text": "like if I were designing a units librar yeah what @Alex Knauth"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-25T00:43:20.515000",
                        "user": "Cavin",
                        "text": "@oaktownsam I don't recall seeing it within languages either but I've seen it lots of times as an extralinguistic thing"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-25T00:43:28.050000",
                        "user": "Cavin",
                        "text": "like using the build system to check that some code compiles"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-25T00:43:52.738000",
                        "user": "Cavin",
                        "text": "(or doesn't compile)"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-25T00:45:27.909000",
                        "user": "Gorka",
                        "text": "Sure that's kind of what I was thinking of"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-06-25T00:46:31.269000",
                        "user": "Page",
                        "text": "`asserttypecheckfail`https://docs.racketlang.org/tsreference/Utilities.html#(form._((lib._typedracket%2Fbaseenv%2Fprims..rkt)._asserttypecheckfail))"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-06-25T12:07:17.390000",
                        "user": "Dejuan",
                        "text": "F# too I think"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-06-25T12:13:59.750000",
                        "user": "Dejuan",
                        "text": "isn't adding units of measure something you can do with a language that has a dependent type system?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-06-25T12:20:58.277000",
                        "user": "Dejuan",
                        "text": "or is that a refinement type system? I really need to find an Introduction to typesystems mooc course I can do."
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-06-25T18:56:39.511000",
                        "user": "Dejuan",
                        "text": "I\u2019m now wondering if there are any languages that can do measures to high school physics level. E.g. distance vector (m) / time(S) to give velocity"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-06-25T22:18:29.019000",
                        "user": "Dejuan",
                        "text": "Thank you @samth Frink looks amazing!"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-06-26T12:27:41.013000",
                        "user": "Dejuan",
                        "text": "Merge #deletedchannel and #offtopic ? \ud83d\udc4d \ud83d\udc4e"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-06-26T12:29:15.289000",
                        "user": "Dejuan",
                        "text": "Merge #help and #deletedchannel ? \ud83d\udc4d \ud83d\udc4e"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-06-26T18:54:29.183000",
                        "user": "Dejuan",
                        "text": "Sounds like something to ask the developer @samth  he is mostly on racket slack"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-06-27T07:19:50.296000",
                        "user": "Dejuan",
                        "text": "It\u2019s on the racket home page racketLang.org"
                    }
                ]
            },
            {
                "conversation_id": "63",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-25T04:05:04.958000",
                        "user": "Ifra",
                        "text": "That was mentioned already: I also see there is an asserttypecheckfail which is basically what I wanted so maybe that\\'s a reasonable way to do it..."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-25T10:55:55.821000",
                        "user": "Angelus",
                        "text": "You might be interested in how Kawa does it which has units out of the box."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-25T10:55:58.732000",
                        "user": "Angelus",
                        "text": "https://www.gnu.org/software/kawa/Quantities.html"
                    }
                ]
            },
            {
                "conversation_id": "64",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-25T18:28:28.706000",
                        "user": "Gorka",
                        "text": "You can add unit of measure to any language. What each typing flavor does is change how ergonomic they are to use and how efficient they are at runtime (and probably another thing that I cannot remember right now.)"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-25T21:24:21.547000",
                        "user": "Ifra",
                        "text": "that Kawa documentation suggests it supports the syntax 10m/s"
                    }
                ]
            },
            {
                "conversation_id": "65",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-25T20:29:28.358000",
                        "user": "Aulii",
                        "text": "@StephenD see Frink"
                    }
                ]
            },
            {
                "conversation_id": "66",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-26T18:40:44.624000",
                        "user": "Leslye",
                        "text": "Any tips on where I can find TR doing inferencing about the results? I'm curious about the difference between these two outputs:```> (= 0 0) : Boolean [more precisely: True]#t> (= 1 1) : Boolean#t```I know that in `baseenvnumeric.rkt` there are inferences about the inputs based on the output of a predicate but I didn't see figuring out the (sub)type of the result in there. I was expecting to see `(> Zero Zero True)` or something like that. Any clues?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-27T04:02:12.002000",
                        "user": "Leslye",
                        "text": "yes I think there's an invite link around here  or google for it"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-29T02:38:09.847000",
                        "user": "Leslye",
                        "text": "@thornAvery Something like this? `(andmap (inst identity Boolean) (#t #t #t))`"
                    }
                ]
            },
            {
                "conversation_id": "67",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-27T03:54:16.722000",
                        "user": "Caleb",
                        "text": "racket slack?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-29T03:28:50.694000",
                        "user": "Shalaya",
                        "text": "i didnt know you could run racket on android oo"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-29T03:28:55.414000",
                        "user": "Shalaya",
                        "text": "is there an apk or something?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-29T03:35:55.650000",
                        "user": "Caleb",
                        "text": "waht?"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-29T03:36:22.153000",
                        "user": "Caleb",
                        "text": "where did you find out?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-29T03:52:22.837000",
                        "user": "Cavin",
                        "text": "@thornAvery how did you end up with a list of bools?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-29T03:54:18.142000",
                        "user": "Indyah",
                        "text": "`(map (somepredicate?) listofthings)` or something like that"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-29T03:55:46.748000",
                        "user": "Cavin",
                        "text": "instead of doing `(andmap identity (map p xs))` you can do `(andmap p xs)`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-29T03:56:08.263000",
                        "user": "Cavin",
                        "text": "so instead of turning a list of things into a list of booleans and then figuring out if all the booleans are true you can skip the intermediate list of booleans"
                    }
                ]
            },
            {
                "conversation_id": "68",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-29T01:58:12.786000",
                        "user": "Indyah",
                        "text": "digging my toes into typed racket is there somothing like andmap for generalised functions? wanting to do `(foldr and #t (somelistofbools))`"
                    }
                ]
            },
            {
                "conversation_id": "69",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-30T13:08:47.676000",
                        "user": "Yamato",
                        "text": "hello i need help for exercice on scheme"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-06-30T13:08:51.004000",
                        "user": "Yamato",
                        "text": "please"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-06-30T13:17:46.138000",
                        "user": "Dejuan",
                        "text": "I\u2019ll try to helpWhich scheme are you using ?A racket teaching language ?"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-06-30T13:32:04.146000",
                        "user": "Yamato",
                        "text": "yes"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-06-30T13:32:31.460000",
                        "user": "Dejuan",
                        "text": "Which teaching language?"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-06-30T13:33:18.934000",
                        "user": "Yamato",
                        "text": "An association organized a stage race for its members. It is a question of establishing thisfinal classification of the race.The result of a participant in the race is represented by a list of 2 elements the first of which is a chainof characters corresponding to the name of the participant and the second a list of times achieved expressed in seconds at the different stages of the race that he has completed. In the rest of this exercise we call this type of dataresult.Define a result function? which takes any type parameter and returns true if and onlythis parameter is of the result type that is to say that it is indeed a list of 2 elements of which the first is astring and the second a list of strictly positive integers."
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-06-30T13:33:38.060000",
                        "user": "Yamato",
                        "text": "(define (re\u0301sultat? ch L)(if (string? ch) (if (number? L) #t)#f))(re\u0301sultat? Pierre 200)"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-06-30T13:33:54.748000",
                        "user": "Yamato",
                        "text": "I have make this but i dont know in list"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-06-30T13:34:05.441000",
                        "user": "Yamato",
                        "text": "make list"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-06-30T13:42:20.147000",
                        "user": "Dejuan",
                        "text": "so a \\'result is something like this; `((\"Stephen (2.34 2.20 2.22) (\"AZIZ (1.99 1.92 1.90) ...)`"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-06-30T13:42:55.391000",
                        "user": "Dejuan",
                        "text": "and you need to define `result?`"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-06-30T13:43:43.984000",
                        "user": "Dejuan",
                        "text": "`(define (result? aresult) (if ??? #t #f))` ?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-06-30T13:47:31.106000",
                        "user": "Dejuan",
                        "text": "Maybe work backwards? can you define a predicate for a single positive integer? (or is there one inbuilt?)"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-06-30T13:48:29.871000",
                        "user": "Dejuan",
                        "text": "(A function that checks something is called a predicate and traditionally ends with a \u2018?\u2019)"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-06-30T13:49:59.059000",
                        "user": "Dejuan",
                        "text": "Can you use that to define a function that will check if you have a list of positive integers ?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-06-30T13:54:50.382000",
                        "user": "Yamato",
                        "text": "its okay he works now"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-06-30T13:54:54.017000",
                        "user": "Yamato",
                        "text": "\ud83d\ude42"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-06-30T13:55:31.772000",
                        "user": "Dejuan",
                        "text": "I\u2019d say good luck but I don\u2019t think you need it. Well done !"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-06-30T13:55:35.505000",
                        "user": "Yamato",
                        "text": "Define a name function that takes a result as a parameter and returns the name of the participant concerned by thisresult. For example (name \\'(\"Gaspard (72 142 27))) returns Gaspard\"."
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-06-30T13:55:48.653000",
                        "user": "Yamato",
                        "text": "i have another problem sorry"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-06-30T13:57:30.854000",
                        "user": "Dejuan",
                        "text": "\u2018car\u2019 or \u2018first\u2019 ? Inbuilt functions"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-06-30T13:59:00.315000",
                        "user": "Yamato",
                        "text": "with car"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-06-30T13:59:07.687000",
                        "user": "Yamato",
                        "text": "non first"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-06-30T13:59:24.103000",
                        "user": "Yamato",
                        "text": "no first i try since one hours"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-06-30T14:04:07.217000",
                        "user": "Dejuan",
                        "text": "https://docs.racketlang.org/htdplangs/beginner.html#%28def._htdpbeginner._%28%28lib._lang%2Fhtdpbeginner..rkt%29._first%29%29"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-06-30T14:04:54.678000",
                        "user": "Dejuan",
                        "text": "```scheme(first x) \u2192 any/c x : cons?```Selects the first item of a nonempty list.>x(list 2 hello #true)>(first x)2"
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-06-30T14:05:41.015000",
                        "user": "Yamato",
                        "text": "(define (nom resul) (if (null? R) \\'() (car R)))(nom \\'(\"Gaspard (72 142 27)))"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-06-30T14:05:50.082000",
                        "user": "Yamato",
                        "text": "R is resulat"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-06-30T14:05:55.543000",
                        "user": "Yamato",
                        "text": "result"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-06-30T14:05:59.608000",
                        "user": "Yamato",
                        "text": "nom = name"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-06-30T14:07:18.318000",
                        "user": "Dejuan",
                        "text": "```schemedefine (nom resul) (if (null? resul) \\'() (first resul)))(nom \\'(\"Gaspard (72 142 27)))>\"Gaspard\"```"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-06-30T14:08:06.373000",
                        "user": "Dejuan",
                        "text": "None"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-06-30T14:08:24.161000",
                        "user": "Dejuan",
                        "text": "(how to format scheme in discord)"
                    },
                    {
                        "message_number": "34",
                        "ts": "2020-06-30T14:14:30.966000",
                        "user": "Yamato",
                        "text": "(define (nom resul) (if (null? resul) \\'() (car resul)))(nom \\'(\"Gaspard (72 142 27)))"
                    },
                    {
                        "message_number": "35",
                        "ts": "2020-06-30T14:14:48.550000",
                        "user": "Yamato",
                        "text": "yes he works"
                    },
                    {
                        "message_number": "36",
                        "ts": "2020-06-30T14:15:01.812000",
                        "user": "Yamato",
                        "text": "i try to make another exercices"
                    },
                    {
                        "message_number": "37",
                        "ts": "2020-06-30T14:15:20.523000",
                        "user": "Yamato",
                        "text": "thanks"
                    },
                    {
                        "message_number": "38",
                        "ts": "2020-06-30T14:16:23.922000",
                        "user": "Dejuan",
                        "text": "(nom Stephen\") also works. Do you need to check (second resul) = list of integers?"
                    },
                    {
                        "message_number": "39",
                        "ts": "2020-06-30T14:19:09.465000",
                        "user": "Yamato",
                        "text": "no"
                    },
                    {
                        "message_number": "40",
                        "ts": "2020-06-30T14:20:43.646000",
                        "user": "Yamato",
                        "text": "One result is less than another if fewer steps have been completed or if as many steps have been completedbut in a larger cumulative time. It is equivalent if so many steps have been completed at the same timeaccumulated. It is superior otherwise.Define the result <? result =? and result>? each taking parameters 2results and returning true if and only if the first result is respectively less equivalent or greater thansecond."
                    },
                    {
                        "message_number": "41",
                        "ts": "2020-06-30T14:21:09.383000",
                        "user": "Yamato",
                        "text": "I have found this exercicse yesterday but i dont undertand how i start"
                    },
                    {
                        "message_number": "42",
                        "ts": "2020-06-30T14:24:16.292000",
                        "user": "Dejuan",
                        "text": "`(result<? \\'(\"Gaspard (72 142 27)) \\'(\"Gaspard (80 152 27)))`is it total steps (+ 72 142 27)?"
                    },
                    {
                        "message_number": "43",
                        "ts": "2020-06-30T14:28:25.629000",
                        "user": "Yamato",
                        "text": "yes"
                    },
                    {
                        "message_number": "44",
                        "ts": "2020-06-30T14:30:41.171000",
                        "user": "Yamato",
                        "text": "i need three functions"
                    },
                    {
                        "message_number": "45",
                        "ts": "2020-06-30T14:42:37.085000",
                        "user": "Yamato",
                        "text": "(define (longueur l)(if (null? l) 0(+ 1 (longueur (cdr l)))))"
                    },
                    {
                        "message_number": "46",
                        "ts": "2020-06-30T14:42:41.517000",
                        "user": "Yamato",
                        "text": "i have juste this"
                    },
                    {
                        "message_number": "47",
                        "ts": "2020-06-30T15:04:26.319000",
                        "user": "Yamato",
                        "text": ";Question 3.5(define (longueur l); renvoie le nombre d\u2019\u00e9l\u00e9ments de l; liste > entier >= 0(if (null? l) 0(+ 1 (longueur (cdr l)))))(define (resultat=? A B)(and ((= (longueur A) (longueur B)) (= (tempsCumule A) (tempsCumule B)))));Exemple :(resultat=? \\'(\"Gaspard (72 142 27)) \\'(\"Gaspard (80 152 27)))(define (resultat<? A B)(and ((< (longueur A) (longueur B)) (< (tempsCumule A) (tempsCumule B)))));Exemple :(resultat<? \\'(\"Gaspard (72 142 27)) \\'(\"Gaspard (80 152 27)));Exemple : (define (resultat>? A B)(and ((> (longueur A) (longueur B)) (> (tempsCumule A) (tempsCumule B)))))(resultat>? \\'(\"Gaspard (72 142 27)) \\'(\"Gaspard (80 152 27)))"
                    },
                    {
                        "message_number": "48",
                        "ts": "2020-06-30T15:50:17.240000",
                        "user": "Yamato",
                        "text": "?"
                    }
                ]
            },
            {
                "conversation_id": "70",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-30T14:28:22.029000",
                        "user": "Yamato",
                        "text": "oui"
                    }
                ]
            },
            {
                "conversation_id": "71",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-06-30T18:46:10.965000",
                        "user": "Neema",
                        "text": "Si tu veu envoyer ton code @AZIZ peu tu le formatter avec les propre tag sur Discord? Tu peu regarder l'image que @StephenD a envoyer pour voir comment le faire. Mais c'est beacoup plus difficile a lire le code vous avez aulieu de la code en propre format code il a envoyer. Il faut simplement mettre des \\\\` autour de votre code code il a demonstre. (pardonez mon Francais je ne parle pas assez et jamais au sujet de programmation)"
                    }
                ]
            },
            {
                "conversation_id": "72",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-01T06:41:30.658000",
                        "user": "Caleb",
                        "text": "so i forgot was racketcon 2020 canceled?"
                    }
                ]
            },
            {
                "conversation_id": "73",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-01T08:50:00.189000",
                        "user": "Dejuan",
                        "text": "its going to be virtual"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-01T08:50:06.501000",
                        "user": "Dejuan",
                        "text": "wait here"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-01T08:52:01.290000",
                        "user": "Dejuan",
                        "text": "https://groups.google.com/g/racketusers/c/jS6UCqvEd7A/m/CAYe5iZfAgAJ"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-01T08:52:15.579000",
                        "user": "Dejuan",
                        "text": "that is a notice on racketusers"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-01T08:54:05.588000",
                        "user": "Dejuan",
                        "text": "> In October 2020 we'll be holding a virtual RacketCon rather than an > inperson meeting as usual. We hope to get back to normal in 2021. We > have not worked out the exact dates and details but have a few > parameters. > > We're thinking about following PLDI where the general model is to > have prerecorded talks which I would help presenters prepare > followed by live Q&A with an MC relaying questions from Slack. We'd > hope to have the usual State of Racket presentation from Matthew > which would lead into a town hall Q&A/comment session with members of > the Racket team. > > The main details we need to work out now are exactly which and how > many days to run it and in what time slots and in what time zones. I > would greatly appreciate any comments you have in response to this > form: > > https://forms.gle/cYNNY9XhmEoUBBe19 > > Thank you! > > Jay > >  > Jay McCarthy > Associate Professor @ CS @ UMass Lowell > http://jeapostrophe.github.io > Vincit qui se vincit."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-01T08:54:23.015000",
                        "user": "Dejuan",
                        "text": "@Majestyxrd"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-01T10:40:39.214000",
                        "user": "Dejuan",
                        "text": "Quickscript\\xa0Competition:Quickscript\\xa0is the scripting functionality behind the DrRacket\\xa0Scripts\\xa0menu: https://docs.racketlang.org/quickscriptFor the month of July we will be running a Quickscript\\xa0competition: Write your own script and win prizes! There will be weekly winners in categories to be determined by the judges and overall awards at the end of the month.\\xa0We follow Racket\u2019s and the ACM\u2019s\\xa0Code of Conduct. https://racketlang.org/friendly.htmlThere will be amazing prizes!An exclusive badge for your github profile recognising your efforts and\\xa0contribution to the community. Socks/Mugs/Hats/Stickers with the Racket logo  to be announced on Racket Users mailing list/google group. Scripts licensed appropriately will be included in a package for installation and universal fame.End date: 31JulyGetting startedGetting started for the impatient: https://docs.racketlang.org/quickscript/#%28part._.Make_your_own_script__.First_simple_example%29See quickscriptextra for a bunch of useful and example scripts:[readme] https://github.com/Metaxal/quickscriptextra/blob/master/README.md [scripts] https://github.com/Metaxal/quickscriptextra/tree/master/scriptsHelp and discussion will be available through the\\xa0#quickscriptcompetition\\xa0slack channel.Once your script is ready,\\xa0submit your entry! https://github.com/QuickscriptCompetiton/July2020entries/issues/new/chooseNeed some\\xa0ideas to get started? https://github.com/QuickscriptCompetiton/July2020entries/blob/master/IDEAS.mdhttps://groups.google.com/g/racketusers/c/FLy7hoLOBg/m/CftPSg9AAAJ"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-01T10:47:04.433000",
                        "user": "Dejuan",
                        "text": "Pinned a message."
                    }
                ]
            },
            {
                "conversation_id": "74",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-01T12:29:58.071000",
                        "user": "Iliya",
                        "text": "i thought i saw a question on stack overflow about making an alternating case function (\"hello => HeLlO\") but i can\\'t find it now. i ended up writing several versions for myself which was kind of fun"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-01T12:31:00.790000",
                        "user": "Iliya",
                        "text": "my first version was quite long and hard to read. my current version looks like this:"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-01T12:31:03.383000",
                        "user": "Iliya",
                        "text": "```Scheme#lang racket(require racket/generator)(require srfi/13) ; stringmap(require srfi/26) ; cut(define (stringalternatingcaps s) (define charaltcase (infinitegenerator (yield charupcase) (yield chardowncase))) (stringmap (cut (charaltcase) <>) s))(stringalternatingcaps hello there\") ; => HeLlO ThErE\"(stringalternatingcaps HELLO THERE\") ; => HeLlO ThErE\"```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-01T12:32:13.510000",
                        "user": "Iliya",
                        "text": "so that's me learning to use generators and trying out `cut`. yay!"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-01T12:33:06.143000",
                        "user": "Iliya",
                        "text": "it seemed to me like `(cut (charaltcase) <>)` was a little easier to read than `(\u03bb (c) ((charaltcase) c))`"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-01T20:31:24.992000",
                        "user": "Iliya",
                        "text": "i tried `(stringmap (curry (charaltcase)) s)` but i ended up with `\"HELLO THERE\"` as output"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-01T22:26:11.508000",
                        "user": "Iliya",
                        "text": "i like it thanks a lot (:"
                    }
                ]
            },
            {
                "conversation_id": "75",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-01T18:18:31.904000",
                        "user": "Angelus",
                        "text": "You can use `curry`."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-01T21:49:19.443000",
                        "user": "Cavin",
                        "text": "@Plane personally I like `fancyapp`"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-01T21:51:21.439000",
                        "user": "Cavin",
                        "text": "with it `(stringappend _ foo\")` is the same as `(lambda (x) (stringappend x foo\"))`"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-01T21:52:05.638000",
                        "user": "Iliya",
                        "text": "ooh that does sound fancy :D"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-01T21:59:23.851000",
                        "user": "Page",
                        "text": "So with `fancyapp` `((charaltcase) _)` is another way of writing `(cut (charaltcase) <>)`"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-01T22:26:28.236000",
                        "user": "Iliya",
                        "text": "that was actually my motivation for posting this i thought someone might suggest something i didn't know about (:"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-03T21:25:19.606000",
                        "user": "Page",
                        "text": "Well maybe another version of `cut` could be better but currently `cut` is just as onelevel as fancyapp:```> (procedurearity (cut + 3 ( 4 <>)))0> ((cut + 3 ( 4 <>))); <>: undefined```"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-03T21:30:37.220000",
                        "user": "Gorka",
                        "text": "I guess I remembered incorrectly"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-03T21:30:39.209000",
                        "user": "Gorka",
                        "text": "darn"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-03T21:31:09.803000",
                        "user": "Gorka",
                        "text": "`cut` apparently also has `<...>` for a rest var"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-03T21:31:15.520000",
                        "user": "Iliya",
                        "text": "with `cut` you can do this:"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-03T21:31:18.646000",
                        "user": "Iliya",
                        "text": "```scheme> ((cut <> <>)  3)3```"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-03T21:31:36.299000",
                        "user": "Iliya",
                        "text": "but i think fancyapp can't have `_` at the beginning"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-03T21:31:54.550000",
                        "user": "Iliya",
                        "text": "```scheme> ((_ _)  3). _: wildcard not allowed as an expression in: (_ _)```"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-03T21:43:18.463000",
                        "user": "Cavin",
                        "text": "I'd call that an unfortunately difficult to fix bug in fancyapp"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-03T21:43:59.804000",
                        "user": "Cavin",
                        "text": "I don't think I've ever needed rest args with `fancyapp`"
                    },
                    {
                        "message_number": "17",
                        "ts": "2020-07-03T22:31:58.243000",
                        "user": "Cavin",
                        "text": "especially with the Unicode lambda it's not like it's all that much longer"
                    },
                    {
                        "message_number": "18",
                        "ts": "2020-07-03T23:12:48.931000",
                        "user": "Cavin",
                        "text": "(and composition provided it's not backwards)"
                    },
                    {
                        "message_number": "19",
                        "ts": "2020-07-13T23:28:35.711000",
                        "user": "Cavin",
                        "text": "@Moinate I think API design decisions have historically not been made with wide participation in racket so there isn't much of a process for pushing them along"
                    },
                    {
                        "message_number": "20",
                        "ts": "2020-07-13T23:29:41.094000",
                        "user": "Cavin",
                        "text": "that's something we want to change"
                    },
                    {
                        "message_number": "21",
                        "ts": "2020-07-15T06:24:55.026000",
                        "user": "Cavin",
                        "text": "working on enum types! specifically this: https://github.com/jackfirth/rebellion/issues/431"
                    },
                    {
                        "message_number": "22",
                        "ts": "2020-07-15T09:22:22.261000",
                        "user": "Cavin",
                        "text": "progress! this works:```scheme;; The enumid syntax class extracts compiletime info about the;; enum.(definesimplemacro (enumconstants enum:enumid) (set enum.constant ...))(defineenumtype compassdirection (north south east west))> (enumconstants compassdirection)(set north south east west)```"
                    },
                    {
                        "message_number": "23",
                        "ts": "2020-07-15T11:06:32.523000",
                        "user": "Cavin",
                        "text": "`enumout` works \ud83d\ude01"
                    },
                    {
                        "message_number": "24",
                        "ts": "2020-07-15T11:06:55.524000",
                        "user": "Cavin",
                        "text": "and now bed"
                    },
                    {
                        "message_number": "25",
                        "ts": "2020-07-15T11:09:59.272000",
                        "user": "Angelus",
                        "text": "Good night!"
                    },
                    {
                        "message_number": "26",
                        "ts": "2020-07-15T11:11:34.771000",
                        "user": "Dejuan",
                        "text": "oh no 4am  he's worse than me."
                    },
                    {
                        "message_number": "27",
                        "ts": "2020-07-15T17:56:23.337000",
                        "user": "Cavin",
                        "text": "I just got into things okay \ud83d\ude05"
                    },
                    {
                        "message_number": "28",
                        "ts": "2020-07-15T17:56:57.004000",
                        "user": "Dejuan",
                        "text": "\ud83d\ude02"
                    },
                    {
                        "message_number": "29",
                        "ts": "2020-07-15T21:42:54.737000",
                        "user": "Angelus",
                        "text": "I made a silly thing https://erkin.party/blog/200715/evolution/"
                    },
                    {
                        "message_number": "30",
                        "ts": "2020-07-15T23:39:20.164000",
                        "user": "Dejuan",
                        "text": "Nice!"
                    },
                    {
                        "message_number": "31",
                        "ts": "2020-07-16T01:16:59.794000",
                        "user": "Cavin",
                        "text": "I love it"
                    },
                    {
                        "message_number": "32",
                        "ts": "2020-07-16T10:07:31.775000",
                        "user": "Iliya",
                        "text": "@Deleted User neat i saw that on lobsters (:"
                    },
                    {
                        "message_number": "33",
                        "ts": "2020-07-16T10:08:23.376000",
                        "user": "Iliya",
                        "text": "i like that your rainbow parens are literal rainbows"
                    }
                ]
            },
            {
                "conversation_id": "76",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-03T21:17:46.582000",
                        "user": "Gorka",
                        "text": "I think `cut` acts as a delimiter which is usefull in other cases.```(cut (+ 3 ( 4 <>))) > (lambda (x) (+ 3 ( 4 x))); fancyapp only does one level\"(+ 3 ( 4 _)) > (+ 3 (lambda (x) ( 4 x)))```"
                    }
                ]
            },
            {
                "conversation_id": "77",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-03T22:12:51.439000",
                        "user": "Gorka",
                        "text": "I haven't either. I have needed deeper nesting on occasion"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-03T22:31:21.668000",
                        "user": "Cavin",
                        "text": "I think with deeper nesting it's worth it to just make a lambda and name the parameter"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-03T22:39:46.367000",
                        "user": "Gorka",
                        "text": "Sry ASCII for LIFE"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-03T22:39:50.577000",
                        "user": "Gorka",
                        "text": "\ud83d\ude1b"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-03T22:56:03.621000",
                        "user": "Gorka",
                        "text": "I do tend to agree. Pointfree style can be tough to read several months later."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-03T23:12:18.893000",
                        "user": "Cavin",
                        "text": "I think eta reduction and `fancyapp` is the most pointfreedom I can read"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-03T23:58:25.164000",
                        "user": "Gorka",
                        "text": "This is why I can't have nice things.```==> testresults20200703_1616.txt <==241 success(es) 42 failure(s) 0 error(s) 283 test(s) run4242/283 test failures==> testresults20200703_1647.txt <==188 success(es) 95 failure(s) 0 error(s) 283 test(s) run9595/283 test failures==> testresults20200703_1649.txt <==186 success(es) 97 failure(s) 0 error(s) 283 test(s) run9797/283 test failures==> testresults20200703_1653.txt <==241 success(es) 42 failure(s) 0 error(s) 283 test(s) run4242/283 test failures```"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-13T22:31:33.315000",
                        "user": "Leslye",
                        "text": "I've been looking for a way to contribute to Racket. Sometimes I wonder if there's a time you sit down and actually make decisions? Issue 3104 https://github.com/racket/racket/issues/3104 got me wondering since it seemed like some good research and discussion when in and then ... the resolution as posted online is very hazy."
                    }
                ]
            },
            {
                "conversation_id": "78",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-06T12:58:13.160000",
                        "user": "Dejuan",
                        "text": "Calling package authors and language designers! Have you considered a quickscript for your language or package? Quickscript can access any package  there are scripts that post to twitter with `net` or display an interactive graph with `plot`  what could you do with your package?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-07T18:10:57.332000",
                        "user": "Dejuan",
                        "text": "https://github.com/QuickscriptCompetiton/July2020entries"
                    }
                ]
            },
            {
                "conversation_id": "79",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-16T02:02:57.591000",
                        "user": "Angelus",
                        "text": "Feedback and additions welcome btw :meow:"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-16T10:23:58.489000",
                        "user": "Angelus",
                        "text": "Thanks!"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-16T10:24:05.936000",
                        "user": "Angelus",
                        "text": "It's a simple trick: https://erkin.party/syntax/"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-16T10:45:40.236000",
                        "user": "Dejuan",
                        "text": "I've just cargocult'ed a couple of PR's to add racket to the languages for the icfp2020 competition  I have no idea if they are right so if anyone knows anything about docker I'd appreciate it if they took a look at my PR's! https://github.com/icfpcontest2020/dockerfiles/issues/63"
                    }
                ]
            },
            {
                "conversation_id": "80",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-16T19:44:18.481000",
                        "user": "Cavin",
                        "text": "Working on a library for converters (objects containing a pair of functions like `string>number` and `number>string`). Anyone else made/used something similar? Example:```scheme(define string<>number (makeconverter string>number number>string))(convertforward string<>number 42\") ;; returns 42(convertbackward string<>number 5) ;; returns 5\"```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-19T02:32:11.976000",
                        "user": "Cavin",
                        "text": "what's convolution and DSP?"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-19T02:32:36.363000",
                        "user": "Gorka",
                        "text": "digital signal processing"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-19T02:54:35.868000",
                        "user": "Cavin",
                        "text": "oh fascinating"
                    }
                ]
            },
            {
                "conversation_id": "81",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-18T18:04:12.952000",
                        "user": "Ramsie",
                        "text": "which book would be a good read after HTDP?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-18T18:04:43.461000",
                        "user": "Ramsie",
                        "text": "assuming I'm trying to learn functional programming"
                    }
                ]
            },
            {
                "conversation_id": "82",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-19T02:21:41.952000",
                        "user": "Jabari",
                        "text": "I'm glad I learned racket. In some roundabout way it helped me understand convolution. Just started learning DSP and convolution seemed really confusing until I thought about how I'd model the problem in racket"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-19T02:23:19.826000",
                        "user": "Jabari",
                        "text": "Or I guess a better way to phrase it the thinking in terms of functions helped me the most"
                    }
                ]
            },
            {
                "conversation_id": "83",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-19T06:23:12.878000",
                        "user": "Angelus",
                        "text": "@daniels SICP maybe?"
                    }
                ]
            },
            {
                "conversation_id": "84",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-19T11:35:10.319000",
                        "user": "Dejuan",
                        "text": "PLAI ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-19T11:35:47.667000",
                        "user": "Dejuan",
                        "text": "https://cs.brown.edu/~sk/Publications/Books/ProgLangs/20070426/"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-19T11:36:28.968000",
                        "user": "Dejuan",
                        "text": "Followed by https://redex.racketlang.org"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-20T18:29:45.055000",
                        "user": "Dejuan",
                        "text": "New week...new racket!What have you been up to?I\u2019ve been seeing some great entries in the Quickscript competition and I\u2019m looking forward to the Standardfish competition. What about you? Answer here or discuss on   https://racket.slack.com/ (Sign up at https://racketslack.herokuapp.com/ )   `#racket` IRC on freenode.net https://botbot.me/freenode/racket/ If you are on Twitter  follow @racketlang Don\u2019t forget to sign up for and contribute Racket News to Racket News at https://racketnews.com/ AND submit your links to Racket Stories https://racketstories.com/ Kind regards Stephen"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-21T02:48:32.074000",
                        "user": "Page",
                        "text": "I can think of 6 ways of handling this:  Duplicate the code of computation c (condition and thenbranch)  Duplicate the code of computation f (bfalse and dfalse)  Put computation c into a function duplicating execution without duplicating code  Put computation f into a function doesn't duplicate execution or code  Preserve the value of `c` using mutation  Preserve the value of `c` using return results"
                    }
                ]
            },
            {
                "conversation_id": "85",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-21T02:39:33.410000",
                        "user": "Page",
                        "text": "Is there a good way to write a conditional where the condition is an and of multiple things including a definition and I would like the thenbody of the conditional to have access to that definition?This is an instance of the idea in a simple example:```(lambda (a) (if (and (pair? a) (define c (car a)) (number? c)) (add1 c) #f))```A template for a class of examples:```(lambda (a) (if (and <condition b using a> (define c <computation c using a relying on b being true>) <condition d using a and c relying on b being true>) <computation e using a and c relying on b and d being true> <computation f using a relying on b or d being false>))```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-21T02:55:56.126000",
                        "user": "Page",
                        "text": "There is another relevant factor Typed Racket's inference and occurrence typing around this. Typed Racket would not be able to infer the correct types for the functions introduced in the 3rd and 4th strategies without annotations. And I don't know whether Typed Racket's occurrence typing would play well with the 5th strategy... occurrence typing and mutation don't mix very well."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-21T03:08:36.065000",
                        "user": "Cavin",
                        "text": "I'd just nest two `cond` expressions"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-21T03:09:30.121000",
                        "user": "Cavin",
                        "text": "I do think this is something that needs a better solution but that's the best I think can be done without building new features into internal definition contexts"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-21T03:09:58.869000",
                        "user": "Page",
                        "text": "The first 2 have the problems associated with duplicating code. The next 3 have problems with Typed Racket. That leaves the 6th and last one which I suppose I should elaborate on:```(lambda (a) (let ([c? (and <condition b using a> (define c <computation c using a relying on b being true>) <condition d using a and c relying on b being true> (list c))]) (if c? (let ([c (car c?)]) <computation e using a and c relying on b and d being true>) <computation f using a relying on b or d being false>)))```"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-21T03:18:20.022000",
                        "user": "Page",
                        "text": "I\\'m not sure what you mean by nest two `cond` expressions\". I have 2 conditionals an `and` and an `if`. In the initial example the `and` is nested in the conditionposition of the outer `if`.In the 2nd and 4th strategies the `and` is split to make a 2nd `if` in the thenposition of the outer `if`. Is that what you meant?"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-21T03:32:00.145000",
                        "user": "Page",
                        "text": "I suppose another way to do this would involve continuations but adding `let/cc` or `let/ec` anywhere would trigger the same typeinference problems as the 3rd and 4th strategies"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-21T03:39:26.038000",
                        "user": "Page",
                        "text": "The 5th strategy would be the most natural in an imperative language something like```(lambda (a) (declareuninitialized c) (if (and <condition b using a> (initialize! c <computation c using a relying on b being true>) <condition d using a and c relying on b being true>) <computation e using a and c relying on b and d being true> <computation f using a relying on b or d being false>))```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-21T03:43:21.095000",
                        "user": "Page",
                        "text": "Although for occurrencetyping purposes I would want `c` to be immutable after it's been initialized like a blank `final` in Java"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-21T05:19:44.698000",
                        "user": "Ifra",
                        "text": "This is a pretty vexing situation. I usually go with strategy 4 but it always feels like it should be possible without contorting the code so much."
                    }
                ]
            },
            {
                "conversation_id": "86",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-21T07:59:17.736000",
                        "user": "Cavin",
                        "text": "now that I'm not on mobile and can actually read closely I see what you mean"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-21T07:59:31.045000",
                        "user": "Cavin",
                        "text": "I'd just go with 4 or I'd extract a helper function somehow"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-21T08:00:01.864000",
                        "user": "Cavin",
                        "text": "if the computation of c isn't effectful I'd probably not worry about duplicating it and extract a helper"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-21T08:00:52.893000",
                        "user": "Cavin",
                        "text": "```scheme(lambda (a) (if (pairwithnumber? a) (add1 (car a)) #f))(define (pairwithnumber? a) (and (pair? a) (number? (car a))))```"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-21T08:03:00.386000",
                        "user": "Cavin",
                        "text": "you could contort patterns like this:```scheme(if querycomputingsomethingreusable computationreusingthatthing othercomputation)```to instead use an option value so that `querycomputingsomethingreusable` returns either `(present reusablething)` or `absent` instead of just true or false"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-21T08:03:47.711000",
                        "user": "Cavin",
                        "text": "...but I wouldn't do that unless there was a good reason I needed to avoid recomputing the thing like because it's an expensive thing or an effectful thing"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-21T08:13:05.902000",
                        "user": "Cavin",
                        "text": "(oh and since it's typed racket you'd need to make your own `present` and `absent` types)"
                    }
                ]
            },
            {
                "conversation_id": "87",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-21T13:12:35.692000",
                        "user": "Page",
                        "text": "I think strategy 4 is closer to what macros like `match` and `syntaxparse` do... something like:```(lambda (a) (define (computebcde) (if <condition b using a> (block (define c <computation c using a relying on b being true>) (if <condition d using a and c relying on b being true> <computation e using a and c relying on b and d being true> (computef))) (computef))) (define (computef) <computation f using a relying on b or d being false>) (computebcde))```This works fine for dynamic typing in normal Racket but Typed Racket's occurrence typing misses the information of `b` or `d` being false within computation `f`. Typed Racket should be able to see that with strategies 1 2 or 6 I think (5 only partially).However since strategy 4 seems good for normal Racket is it possible to change 4 to be more friendly with Typed Racket?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-21T13:31:13.011000",
                        "user": "Page",
                        "text": "(re: `present` and `absent` my strategy 6 used 1elementlist and false)"
                    }
                ]
            },
            {
                "conversation_id": "88",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-21T15:06:19.282000",
                        "user": "Zaniah",
                        "text": "If `(car a)` cannot be `#f` I would probably write your original example like```(lambda (a) (define c (and (pair? a) (car a))) (if (number? c) (add1 c) #f)))```"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-21T15:12:05.906000",
                        "user": "Zaniah",
                        "text": "Or use multiple values like"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-21T15:13:42.476000",
                        "user": "Zaniah",
                        "text": "```(lambda (a) (definevalues (matched? number) (if (pair? a) (values (number? (car a)) (car a)) (values #f #f))) ...)```"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-21T15:21:24.769000",
                        "user": "Page",
                        "text": "Oh thank you. You said it only works if the `(car a)` cannot be false and that isn't always true... however the real constraint is the `(number? c)` position can be a `<condition d using a and c relying on b being true>`. Based on that I think I can adjust your example slightly to account for this better:```(lambda (a) (define b (pair? a)) (define c (and b (car a))) (if (and b (number? c)) (add1 c) #f)))```Or with the template:```(lambda (a) (define b <condition b using a>) (define c (and b <computation c using a relying on b being true>)) (if (and b <condition d using a and c relying on b being true>) <computation e using a and c relying on b and d being true> <computation f using a relying on b or d being false>))```This looks much more promising"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-21T15:32:58.319000",
                        "user": "Zaniah",
                        "text": "Yeah that seems to generalize the best and IMO is more readable. Now I wonder if I ever had a real need to use that multiplevalues pattern..."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-21T15:36:39.340000",
                        "user": "Page",
                        "text": "Although getting Typed Racket to infer the right types might still be hard"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-21T15:38:50.096000",
                        "user": "Page",
                        "text": "The type of the variable `c` will be the union of `#f` with the type of the computation c and I don't know how to get Typed Racket to recognize that within an `(and b _)` or `(if b _ ...)` the type shouldn't have the `#f` added anymore"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-21T15:41:32.597000",
                        "user": "Page",
                        "text": "I guess the type of `c` would have to be dependent on the value of `b`"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-21T16:15:13.229000",
                        "user": "Page",
                        "text": "Is it possible to get a condition on `b` to refine the type of `c` to no longer include the extra `U False`?"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-21T19:38:33.705000",
                        "user": "Page",
                        "text": "Maybe? This use of `(ann #false (Refine [_ : False] (: b False)))` gives me some hope:```(: f (\u2200 (A B C D E F) (> (> (U A B D) Boolean : (U B D)) (> (U B D) C) (> (U B D) C Boolean : #:+ D #: (! D)) (> D C E) (> (U A B) F) (> (U A B D) (U E F)))))(define (f conditionb computationc conditiond computatione computationf) (lambda (a) (define b (conditionb a)) (define c (if b (computationc a) (ann #false (Refine [_ : False] (: b False))))) (if (and b (conditiond a c)) (computatione a c) (computationf a))))```"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-21T22:34:44.350000",
                        "user": "Page",
                        "text": "I have incorporated this pattern into a macro for pattern matching that's meant to use occurrence typing and `typecheckfail` to do exhaustiveness checking... and while it's working for the simplest cases typechecking is taking a lot longer on slightly more complex cases. Is there anything in this pattern that's an obvious timesink for Typed Racket?"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-22T14:54:59.473000",
                        "user": "Zaniah",
                        "text": "Wow those types are pretty intense! I admit I can't read most of that type signature so I hesitate to even suggest this but... would `cast` work? I know it's ideologically impure but if the runtime cost is minimal it might be OK?"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-22T16:00:39.061000",
                        "user": "Page",
                        "text": "I doubt that attaching the `Refine` type to `#false` is taking much time for the typechecker but maybe dealing with the uses of `c` later on while `c` has a type like `(U C (Refine [_ : False] (: b False)))` which must be reduced to just `C` in contexts where `b` is known to be true? Using the refinement there seems harder than checking the refinement at the initial `ann`."
                    }
                ]
            },
            {
                "conversation_id": "89",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-22T15:37:27.905000",
                        "user": "Zaniah",
                        "text": "I guess I was assuming that Refine was the time sink which was a weird assumption to make."
                    }
                ]
            },
            {
                "conversation_id": "90",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-23T01:04:16.991000",
                        "user": "Cavin",
                        "text": "just did a good thing \ud83c\udfb5 I don't regret this thing at all \ud83c\udfb5"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-23T03:57:41.760000",
                        "user": "Cavin",
                        "text": "```scheme(require pict planning/private/animation)(define tau ( pi 2))(animation #:framerate 20 (for/list ([offset (sequenceappend (inrange 0 1/32 1/256) (inrange 1/32 0 1/256))]) (standardcat 64 64 #:happy? #t #:leftearangle ( tau (+ 5/16 offset)) #:rightearangle ( tau ( 1/16 offset)))))```"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-23T03:57:53.954000",
                        "user": "Cavin",
                        "text": "no promises of stability"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-23T06:55:13.366000",
                        "user": "Cavin",
                        "text": "tau gang represent"
                    }
                ]
            },
            {
                "conversation_id": "91",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-23T03:43:00.353000",
                        "user": "Angelus",
                        "text": "omg"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-23T03:43:10.813000",
                        "user": "Angelus",
                        "text": "Source pls"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-23T06:17:27.328000",
                        "user": "Angelus",
                        "text": "Haha tau"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-24T05:50:53.554000",
                        "user": "Indyah",
                        "text": "made a thing using macros! I know its small but its a step haha"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-24T05:50:56.399000",
                        "user": "Indyah",
                        "text": "https://git.lain.church/tA/fizzbuzz"
                    }
                ]
            },
            {
                "conversation_id": "92",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-23T09:13:37.273000",
                        "user": "Dejuan",
                        "text": "so nice!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-23T12:10:36.802000",
                        "user": "Dejuan",
                        "text": "If you could have a wish granted what would you like to see next in Racket? https://www.reddit.com/r/Racket/comments/hwe49b/if_you_could_have_a_wish_granted_what_would_you/?utm_source=share&utm_medium=web2x (originally copied from twitter)"
                    }
                ]
            },
            {
                "conversation_id": "93",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-24T19:46:26.497000",
                        "user": "Dejuan",
                        "text": "Hey @Deleted User do you have a licence for your rainbow parens code? https://github.com/QuickscriptCompetiton/July2020entries/issues/14"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-24T19:49:40.877000",
                        "user": "Angelus",
                        "text": "I don't have one but I can add a CC0 indicator on the webpage."
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-24T19:57:36.548000",
                        "user": "Angelus",
                        "text": "Done! Added a comment there also."
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-24T19:57:55.474000",
                        "user": "Dejuan",
                        "text": "TYVM !"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-24T19:58:14.667000",
                        "user": "Dejuan",
                        "text": "Mr Robin thanks you"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-24T20:42:34.770000",
                        "user": "Angelus",
                        "text": "\ud83d\ude3a"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-24T20:42:38.812000",
                        "user": "Angelus",
                        "text": "No problem Mr Robin!"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-24T20:45:16.771000",
                        "user": "Dejuan",
                        "text": "I\u2019ve been thinking of a mascot  rust has crabs"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-24T20:45:30.834000",
                        "user": "Dejuan",
                        "text": "Maybe a robin or a racoon"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-24T20:45:38.330000",
                        "user": "Dejuan",
                        "text": "Unofficial"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-24T20:46:03.686000",
                        "user": "Dejuan",
                        "text": "None"
                    }
                ]
            },
            {
                "conversation_id": "94",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-24T22:02:39.346000",
                        "user": "Gorka",
                        "text": "+1 racoons"
                    }
                ]
            },
            {
                "conversation_id": "95",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-25T08:06:49.304000",
                        "user": "Angelus",
                        "text": "Sup bro's"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-25T08:07:00.112000",
                        "user": "Angelus",
                        "text": "Dang this inactive to??? qq"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-25T09:18:28.451000",
                        "user": "Angelus",
                        "text": "It's a small server. Activity comes and goes."
                    }
                ]
            },
            {
                "conversation_id": "96",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-25T10:11:06.439000",
                        "user": "Iliya",
                        "text": "I\u2019ve been enjoying lurking here (: The people are nice and I\u2019ve learned some stuff"
                    }
                ]
            },
            {
                "conversation_id": "97",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-25T18:28:29.383000",
                        "user": "Leslye",
                        "text": "Ummmm... some of this to #offtopic ?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-25T18:30:42.113000",
                        "user": "Earnest",
                        "text": "Relates somewhat to racket so I wouldn\u2019t say it is for off topic"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-25T18:43:59.573000",
                        "user": "Dejuan",
                        "text": "Sorry @Moinate I\u2019ll use off topic in future"
                    }
                ]
            },
            {
                "conversation_id": "98",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-25T19:05:18.528000",
                        "user": "Cavin",
                        "text": "I agree #offtopic would have been a better match. But I'd like to say that because it's a small server with low traffic I'm not interested in enforcing channel content very strictly and channel policing can be used as a tool to silence discussion."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-25T19:36:11.924000",
                        "user": "Cavin",
                        "text": "(also I myself am an extremely disorganized person who wanders from topic to topic with reckless abandon)"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-26T01:40:01.412000",
                        "user": "Porsha",
                        "text": "#relatable"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-26T01:40:24.942000",
                        "user": "Porsha",
                        "text": "Or perhaps #offtopic now ^^"
                    }
                ]
            },
            {
                "conversation_id": "99",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-26T02:38:58.591000",
                        "user": "Leslye",
                        "text": "i'm not trying to police hope nobody feels bad... if i don't see code or engineering i don't read much  maybe i should have i'll leave it at that."
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-26T02:39:53.289000",
                        "user": "Dejuan",
                        "text": "Don\u2019t worry it\u2019s all good.: \ud83d\ude06"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-27T14:45:35.352000",
                        "user": "Dejuan",
                        "text": "https://standardfish.github.io/racketsummerpicturecompetition2020.github.io/"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-27T14:50:16.991000",
                        "user": "Dejuan",
                        "text": "Quickscript\\xa0Competition UpdateWe are now in our final days  submit your scripts sooner rather than later! prizes still available.End date: 31July"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-27T16:10:12.035000",
                        "user": "Dejuan",
                        "text": "IntelliJ plugin for Racket: https://plugins.jetbrains.com/plugin/14752racket  added to the list at https://github.com/racket/racket/wiki/IDE'sandtexteditors"
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-28T15:32:45.987000",
                        "user": "Dejuan",
                        "text": "Have I missed any tools that should be listed for the standardfish competiton https://github.com/standardfish/racketsummerpicturecompetition2020/blob/master/TOOLS.md"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-29T07:11:54.337000",
                        "user": "Dejuan",
                        "text": "I\u2019m not aware of one"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-29T07:12:38.493000",
                        "user": "Dejuan",
                        "text": "https://github.com/tonyg/racketxmpp"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-29T07:13:08.572000",
                        "user": "Dejuan",
                        "text": "https://github.com/poi519/nanxmpp"
                    },
                    {
                        "message_number": "10",
                        "ts": "2020-07-29T07:13:16.011000",
                        "user": "Dejuan",
                        "text": "Just found"
                    },
                    {
                        "message_number": "11",
                        "ts": "2020-07-29T07:13:26.450000",
                        "user": "Dejuan",
                        "text": "Never used"
                    },
                    {
                        "message_number": "12",
                        "ts": "2020-07-29T07:14:54.423000",
                        "user": "Dejuan",
                        "text": "Tonyg does good code"
                    },
                    {
                        "message_number": "13",
                        "ts": "2020-07-29T07:51:45.505000",
                        "user": "Dejuan",
                        "text": "There is also https://gitlab.com/spritely/spritely but I don\u2019t know if it is relevant"
                    },
                    {
                        "message_number": "14",
                        "ts": "2020-07-29T07:58:37.149000",
                        "user": "Dejuan",
                        "text": "Can you run it from the command prompt to see any errors?"
                    },
                    {
                        "message_number": "15",
                        "ts": "2020-07-29T08:01:17.902000",
                        "user": "Dejuan",
                        "text": "Can you use ip ?"
                    },
                    {
                        "message_number": "16",
                        "ts": "2020-07-29T08:05:52.100000",
                        "user": "Indyah",
                        "text": "same deal"
                    }
                ]
            },
            {
                "conversation_id": "100",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-26T09:55:01.955000",
                        "user": "Angelus",
                        "text": "Emacs users are autobanned!!!!!!!!!!!!!!!!!!!!!!"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-26T09:55:17.401000",
                        "user": "Angelus",
                        "text": "Oops wrong one"
                    }
                ]
            },
            {
                "conversation_id": "101",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-26T10:49:47.452000",
                        "user": "Cavin",
                        "text": "@Moinate It's alright you were nowhere near policing \ud83d\ude42 It just seemed like a good time to get my policy written down since it's never come up before in the server. Politely asking if another channel would be better like you did is totally fine. I'm worried more about like members repeatedly harassing others over channel usage or moderators deleting offchannel messages without warning. (I've seen things like that happen in other communities and it created a very unwelcoming environment.)"
                    }
                ]
            },
            {
                "conversation_id": "102",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-29T07:09:43.049000",
                        "user": "Indyah",
                        "text": "is there a racket library for connecting to xmpp?"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-29T07:31:31.203000",
                        "user": "Indyah",
                        "text": "oh sweet thanks"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-29T07:55:51.427000",
                        "user": "Indyah",
                        "text": "hmm the tonyg one wont accept an account from my server ;0;"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-29T07:59:52.544000",
                        "user": "Indyah",
                        "text": "yeah its saying DNS Query: Error from server: Name Error"
                    },
                    {
                        "message_number": "5",
                        "ts": "2020-07-29T13:12:41.645000",
                        "user": "Angelus",
                        "text": "It probably needs some maintenance and polish."
                    },
                    {
                        "message_number": "6",
                        "ts": "2020-07-31T00:39:45.023000",
                        "user": "Angelus",
                        "text": "https://github.com/racket/drracket/blob/master/drracket/drracket/private/eb.rkt"
                    },
                    {
                        "message_number": "7",
                        "ts": "2020-07-31T00:44:52.014000",
                        "user": "Angelus",
                        "text": "https://github.com/racket/gui/blob/master/guilib/framework/private/bday.rkt"
                    },
                    {
                        "message_number": "8",
                        "ts": "2020-07-31T00:45:46.605000",
                        "user": "Angelus",
                        "text": "Decoded:```Scheme(provide mrfbday? mfbday? skbday? ebbday?)(define ((bday m d)) (let ([date (seconds>date  (let ([ssec (getenv PLTDREASTERSECONDS\")]) (if ssec (string>number ssec) (currentseconds))))]) (and (= (datemonth date) m) (= (dateday date) d))))(define ebbday? (bday 7 30))(define mfbday? (bday 10 29))(define mrfbday? (bday 11 1))(define skbday? (bday 4 8))```"
                    },
                    {
                        "message_number": "9",
                        "ts": "2020-07-31T09:48:13.492000",
                        "user": "Dejuan",
                        "text": "QuickScript is amazing btw \u2014 chapeau !  comment from participant in the DrRacket @racketlang Quickscript Competition (unofficial)"
                    }
                ]
            },
            {
                "conversation_id": "103",
                "List of text": [
                    {
                        "message_number": "1",
                        "ts": "2020-07-31T00:30:56.584000",
                        "user": "Donis",
                        "text": "why is drracket now showing a strange man"
                    },
                    {
                        "message_number": "2",
                        "ts": "2020-07-31T00:30:58.228000",
                        "user": "Donis",
                        "text": "None"
                    },
                    {
                        "message_number": "3",
                        "ts": "2020-07-31T00:33:49.917000",
                        "user": "Donis",
                        "text": "easter egg"
                    },
                    {
                        "message_number": "4",
                        "ts": "2020-07-31T00:39:41.626000",
                        "user": "Angelus",
                        "text": "That's Eli Barzilay!"
                    }
                ]
            }
        ]
    }
]